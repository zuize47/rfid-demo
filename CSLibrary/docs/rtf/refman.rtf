{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033
{\fonttbl {\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}
{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}
}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}
{\stylesheet
{\widctlpar\adjustright \fs20\cgrid \snext0 Normal;}
{\paperw11900\paperh16840\margl1800\margr1800\margt1440\margb1440\gutter0\ltrsect}
{\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid \sbasedon0 \snext0 heading 1;}
{\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid \sbasedon0 \snext0 heading 2;}
{\s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid \sbasedon0 \snext0 heading 3;}
{\s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 4;}{\*\cs10 \additive Default Paragraph Font;}
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 5;}{\*\cs10 \additive Default Paragraph Font;}
{\s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid \sbasedon0 \snext15 Title;}
{\s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid \sbasedon0 \snext16 Subtitle;}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid \sbasedon0 \snext17 BodyText;}
{\s18\widctlpar\fs22\cgrid \sbasedon0 \snext18 DenseText;}
{\s28\widctlpar\tqc\tx4320\tqr\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext28 header;}
{\s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid \sbasedon0 \snext29 footer;}
{\s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext30 GroupHeader;}
{\s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext41 Code Example 0;}
{\s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext42 Code Example 1;}
{\s42\li720\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext43 Code Example 2;}
{\s43\li1080\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext44 Code Example 3;}
{\s44\li1440\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext45 Code Example 4;}
{\s45\li1800\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext46 Code Example 5;}
{\s46\li2160\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext47 Code Example 6;}
{\s47\li2520\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext48 Code Example 7;}
{\s48\li2880\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext49 Code Example 8;}
{\s49\li3240\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext49 Code Example 9;}
{\s50\li0\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext51 List Continue 0;}
{\s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext52 List Continue 1;}
{\s52\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext53 List Continue 2;}
{\s53\li1080\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext54 List Continue 3;}
{\s54\li1440\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext55 List Continue 4;}
{\s55\li1800\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext56 List Continue 5;}
{\s56\li2160\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext57 List Continue 6;}
{\s57\li2520\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext58 List Continue 7;}
{\s58\li2880\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext59 List Continue 8;}
{\s59\li3240\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext59 List Continue 9;}
{\s60\li0\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext61 DescContinue 0;}
{\s61\li360\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext62 DescContinue 1;}
{\s62\li720\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext63 DescContinue 2;}
{\s63\li1080\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext64 DescContinue 3;}
{\s64\li1440\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext65 DescContinue 4;}
{\s65\li1800\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext66 DescContinue 5;}
{\s66\li2160\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext67 DescContinue 6;}
{\s67\li2520\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext68 DescContinue 7;}
{\s68\li2880\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext69 DescContinue 8;}
{\s69\li3240\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext69 DescContinue 9;}
{\s70\li0\sa30\sb30\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext81 LatexTOC 0;}
{\s71\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext82 LatexTOC 1;}
{\s72\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext83 LatexTOC 2;}
{\s73\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext84 LatexTOC 3;}
{\s74\li1440\sa18\sb18\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext85 LatexTOC 4;}
{\s75\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext86 LatexTOC 5;}
{\s76\li2160\sa12\sb12\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext87 LatexTOC 6;}
{\s77\li2520\sa9\sb9\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext88 LatexTOC 7;}
{\s78\li2880\sa6\sb6\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext89 LatexTOC 8;}
{\s79\li3240\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext89 LatexTOC 9;}
{\s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext81 \sautoupd List Bullet 0;}
{\s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid \sbasedon0 \snext82 \sautoupd List Bullet 1;}
{\s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid \sbasedon0 \snext83 \sautoupd List Bullet 2;}
{\s83\fi-360\li1440\widctlpar\jclisttab\tx1440{\*\pn \pnlvlbody\ilvl0\ls4\pnrnot0\pndec }\ls4\adjustright \fs20\cgrid \sbasedon0 \snext84 \sautoupd List Bullet 3;}
{\s84\fi-360\li1800\widctlpar\jclisttab\tx1800{\*\pn \pnlvlbody\ilvl0\ls5\pnrnot0\pndec }\ls5\adjustright \fs20\cgrid \sbasedon0 \snext85 \sautoupd List Bullet 4;}
{\s85\fi-360\li2160\widctlpar\jclisttab\tx2160{\*\pn \pnlvlbody\ilvl0\ls6\pnrnot0\pndec }\ls6\adjustright \fs20\cgrid \sbasedon0 \snext86 \sautoupd List Bullet 5;}
{\s86\fi-360\li2520\widctlpar\jclisttab\tx2520{\*\pn \pnlvlbody\ilvl0\ls7\pnrnot0\pndec }\ls7\adjustright \fs20\cgrid \sbasedon0 \snext87 \sautoupd List Bullet 6;}
{\s87\fi-360\li2880\widctlpar\jclisttab\tx2880{\*\pn \pnlvlbody\ilvl0\ls8\pnrnot0\pndec }\ls8\adjustright \fs20\cgrid \sbasedon0 \snext88 \sautoupd List Bullet 7;}
{\s88\fi-360\li3240\widctlpar\jclisttab\tx3240{\*\pn \pnlvlbody\ilvl0\ls9\pnrnot0\pndec }\ls9\adjustright \fs20\cgrid \sbasedon0 \snext89 \sautoupd List Bullet 8;}
{\s89\fi-360\li3600\widctlpar\jclisttab\tx3600{\*\pn \pnlvlbody\ilvl0\ls10\pnrnot0\pndec }\ls10\adjustright \fs20\cgrid \sbasedon0 \snext89 \sautoupd List Bullet 9;}
{\s90\fi-360\li360\widctlpar\fs20\cgrid \sbasedon0 \snext91 \sautoupd List Enum 0;}
{\s91\fi-360\li720\widctlpar\fs20\cgrid \sbasedon0 \snext92 \sautoupd List Enum 1;}
{\s92\fi-360\li1080\widctlpar\fs20\cgrid \sbasedon0 \snext93 \sautoupd List Enum 2;}
{\s93\fi-360\li1440\widctlpar\fs20\cgrid \sbasedon0 \snext94 \sautoupd List Enum 3;}
{\s94\fi-360\li1800\widctlpar\fs20\cgrid \sbasedon0 \snext95 \sautoupd List Enum 4;}
{\s95\fi-360\li2160\widctlpar\fs20\cgrid \sbasedon0 \snext96 \sautoupd List Enum 5;}
{\s96\fi-360\li2520\widctlpar\fs20\cgrid \sbasedon0 \snext96 \sautoupd List Enum 5;}
{\s97\fi-360\li2880\widctlpar\fs20\cgrid \sbasedon0 \snext98 \sautoupd List Enum 7;}
{\s98\fi-360\li3240\widctlpar\fs20\cgrid \sbasedon0 \snext99 \sautoupd List Enum 8;}
{\s99\fi-360\li3600\widctlpar\fs20\cgrid \sbasedon0 \snext99 \sautoupd List Enum 9;}
}
{\info 
{\title {\comment CS108 Xamarin Library  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
1.0.14 \par
}}CS108 Xamarin Library}
{\comment Generated byDoxgyen. }
{\creatim \yr2017\mo12\dy12\hr15\min15\sec2}
}\pard\plain 
\sectd\pgnlcrm
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\vertalc\qc\par\par\par\par\par\par\par
\pard\plain \s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid 
{\field\fldedit {\*\fldinst TITLE \\*MERGEFORMAT}{\fldrslt CS108 Xamarin Library}}\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\par
\par\par\par\par\par\par\par\par\par\par\par\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
{\field\fldedit {\*\fldinst AUTHOR \\*MERGEFORMAT}{\fldrslt AUTHOR}}\par
Version 1.0.14\par{\field\fldedit {\*\fldinst CREATEDATE \\*MERGEFORMAT}{\fldrslt Tue Dec 12 2017 }}\par
\page\page\vertalt
\pard\plain 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid Table of Contents\par
\pard\plain \par
{\field\fldedit {\*\fldinst TOC \\f \\*MERGEFORMAT}{\fldrslt Table of contents}}\par
\pard\plain 
\sect \sbkpage \pgndec \pgnrestart
\sect \sectd \sbknone
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Namespace Index\par \pard\plain 
{\tc \v Namespace Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Packages\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Here are the packages with brief descriptions (if available):}
{
\par
\pard\plain \s71\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b {\b CSLibrary} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CSLibrary.Barcode} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABKR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CSLibrary.Barcode.Constants} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABKS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CSLibrary.Barcode.Structures} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACGP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CSLibrary.Constants} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACIK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CSLibrary.Events} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADFP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CSLibrary.Net} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADGN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CSLibrary.Structures} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADHO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CSLibrary.Text} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEMY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CSLibrary.Tools} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEPS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Hierarchical Index\par \pard\plain 
{\tc \v Hierarchical Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Class Hierarchy\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This inheritance list is sorted roughly, but not completely, alphabetically:}
{
\par
\pard\plain \s71\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
CSLibrary.Structures.AntennaPortConfig\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADII \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CSLibrary.Structures.AntennaPortStatus\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADIS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CSLibrary.Barcode\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CSLibrary.BarcodeReader\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CSLibrary.BluetoothIC\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CSLibrary.Structures.CarrierWaveParms\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADJM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CSLibrary.Structures.CommonParms\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADJO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CSLibrary.Structures.ConfigBase\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADJT \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s72\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
CSLibrary.Structures.AllConfigParms\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADHX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CSLibrary.Structures.BeeperParms\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADJF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CSLibrary.Structures.DecoderParms\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADLC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CSLibrary.Structures.ImageAcquisitionParms\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADPT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CSLibrary.Structures.ImageTransferParms\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADRB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CSLibrary.Structures.PowerParms\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADUC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CSLibrary.Structures.SequenceModeParms\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEAW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CSLibrary.Structures.SymbologyParms\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEBY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CSLibrary.Structures.SymCodeOCR\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEDU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CSLibrary.Structures.SymFlagsOnly\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEED \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CSLibrary.Structures.SymFlagsRange\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEEH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CSLibrary.Structures.TriggerParms\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEMC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CSLibrary.Structures.VersionParms\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEMN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
CSLibrary.Barcode.Constants.Constants\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACFN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CSLibrary.SiliconLabIC.Constants\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABKF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CSLibrary.Structures.CSLibraryOperationParms\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADJX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CSLibrary.Structures.DEVICE_STATUS\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADLQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CSLibrary.Net.NetFinder.DeviceInfomation\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADHG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CSLibrary.SiliconLabIC.DOWNLINKCMD\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABKJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CSLibrary.BluetoothIC.DOWNLINKCMD\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAES \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CSLibrary.BarcodeReader.DOWNLINKCMD\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CSLibrary.HighLevelInterface.DOWNLINKCMD\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CSLibrary.Notification.DOWNLINKCMD\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CSLibrary.RFIDReader.DOWNLINKCMD\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABJU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CSLibrary.Structures.EngineInfoParms\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADMK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CSLibrary.SiliconLabIC.Events\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABKM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CSLibrary.Structures.FrequencyBandParms\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADNP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CSLibrary.GATT\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CSLibrary.Tools.HexEncoding\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEPU \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s72\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
CSLibrary.Tools.Hex\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEPT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CSLibrary.Tools.Hex\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEPT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
CSLibrary.Text.HexEncoding\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAENA \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s72\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
CSLibrary.Text.Hex\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEMZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
CSLibrary.HighLevelInterface\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
IComparable
{
\par
\pard\plain \s72\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
CSLibrary.Structures.IBANK\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADNZ \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s73\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
CSLibrary.Structures.S_DATA\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADWU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CSLibrary.Structures.S_EPC\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADXE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CSLibrary.Structures.S_MASK\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADXN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CSLibrary.Structures.S_PC\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADXZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CSLibrary.Structures.S_PWD\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADYL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CSLibrary.Structures.S_TID\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADYW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CSLibrary.Structures.S_XPC_W1\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADZH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CSLibrary.Structures.S_XPC_W2\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADZP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
}\par
CSLibrary.Structures.ImagerCapabilitiesParms\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADQV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CSLibrary.Structures.IntelligentImage\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADRS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CSLibrary.Structures.InternalCustCmdEASParms\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADSB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CSLibrary.Structures.InternalCustCmdTagReadProtectParms\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADSH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CSLibrary.Structures.InternalTagInventoryParms\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADSM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CSLibrary.Structures.InternalTagRangingParms\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADSR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CSLibrary.Structures.InternalTagReadProtectParms\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADSW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CSLibrary.Structures.InternalTagSearchOneParms\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADTB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CSLibrary.Structures.INVENTORY_PKT\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADTF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CSLibrary.Structures.MessageBase\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADTU \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s72\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
CSLibrary.Structures.DecodeMessage\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADKV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CSLibrary.Structures.ErrorMessage\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADNF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CSLibrary.Structures.ImageMessage\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADQI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CSLibrary.Structures.RawDecodeMessage\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADWN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
CSLibrary.Net.NetFinder\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADGO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CSLibrary.Structures.NonVolatileMemoryBlock\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADTW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CSLibrary.Notification\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CSLibrary.Text.oldHex\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEOK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CSLibrary.Structures.ProfileConfig\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADUS \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s72\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
CSLibrary.Structures.RadioLinkProfileConfig\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADVY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
CSLibrary.Structures.QueryParms\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADUW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CSLibrary.Tools.Queue\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAERN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CSLibrary.Structures.RadioInformation\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADVA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CSLibrary.Structures.RadioLinkProfile\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADVH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CSLibrary.Structures.RECT\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADWP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CSLibrary.RFIDReader\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CSLibrary.Structures.SelectAction\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADZW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CSLibrary.Structures.SelectCriteria\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEAC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CSLibrary.Structures.SelectCriterion\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEAG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CSLibrary.Structures.SelectMask\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEAK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CSLibrary.Structures.SequenceBarcodeParms\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEAS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CSLibrary.SiliconLabIC\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABJY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CSLibrary.Structures.SingulationAlgorithmParms\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEBC \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s72\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
CSLibrary.Structures.DynamicQParms\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADMD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CSLibrary.Structures.FixedQParms\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADNI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
CSLibrary.Structures.SingulationCriteria\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEBG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CSLibrary.Structures.SingulationCriterion\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEBK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CSLibrary.Structures.SingulationMask\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEBO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CSLibrary.Structures.SIZE\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEBV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CSLibrary.Structures.TAG_ACCESS_PKT\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEEN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CSLibrary.Structures.TagBlockPermalockParms\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEEX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CSLibrary.Structures.TagCallbackInfo\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEFH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CSLibrary.Structures.TagGeneralSelectedParms\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEGD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CSLibrary.Structures.TagGroup\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEGO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CSLibrary.Structures.TagInventoryParms\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEGU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CSLibrary.Structures.TagKillParms\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEHF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CSLibrary.Structures.TagLockParms\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEHM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CSLibrary.Structures.TagPerm\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEHX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CSLibrary.Structures.TagPostMachParms\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEID \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CSLibrary.Structures.TagRangingParms\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEIJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CSLibrary.Structures.TagReadEpcParms\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEIX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CSLibrary.Structures.TagReadPcParms\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEJE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CSLibrary.Structures.TagReadProtectParms\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEJJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CSLibrary.Structures.TagReadPwdParms\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEJN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CSLibrary.Structures.TagReadTidParms\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEJS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CSLibrary.Structures.TagReadUserParms\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEJZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CSLibrary.Structures.TagSearchingParms\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEKG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CSLibrary.Structures.TagSelectedParms\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEKI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CSLibrary.Structures.TagWriteEpcParms\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEKV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CSLibrary.Structures.TagWritePcParms\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAELB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CSLibrary.Structures.TagWritePwdParms\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAELF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CSLibrary.Structures.TagWriteUserParms\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAELJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CSLibrary.Structures.TemperatureParms\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAELP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CSLibrary.Structures.TextMessage\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAELT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CSLibrary.Structures.ThresholdTemperatureParms\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAELX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CSLibrary.HighLevelInterface.UPLINKCMD\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CSLibrary.Structures.Version\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEMH \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s72\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
CSLibrary.Structures.DriverVersion\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADMB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CSLibrary.Structures.LibraryVersion\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADTP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CSLibrary.Structures.MacVersion\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADTR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
EventArgs
{
\par
\pard\plain \s72\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
CSLibrary.Barcode.BarcodeEventArgs\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CSLibrary.Barcode.BarcodeStateEventArgs\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CSLibrary.Events.OnAccessCompletedEventArgs\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADFW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CSLibrary.Events.OnAsyncCallbackEventArgs\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADGC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CSLibrary.Events.OnReaderStateChangedEventArgs\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADGG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CSLibrary.Events.OnStateChangedEventArgs\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADGK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CSLibrary.Net.NetFinder.DeviceFinderArgs\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADHC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CSLibrary.Net.NetFinder.ResultArgs\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADHK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CSLibrary.Notification.HotKeyEventArgs\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CSLibrary.Notification.VoltageEventArgs\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CSLibrary.SiliconLabIC.Events.OnAccessCompletedEventArgs\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABKN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Class Index\par \pard\plain 
{\tc \v Class Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Class List\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Here are the classes, structs, unions and interfaces with brief descriptions:}
{
\par
\pard\plain \s71\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b {\b CSLibrary.Structures.AllConfigParms} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Big mother of them all configuration structure. /summary> })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADHX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CSLibrary.Structures.AntennaPortConfig} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
When configuring or retrieving the configuration for logical antenna ports, an application has several parameters that it can set/retrieve. })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADII \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CSLibrary.Structures.AntennaPortStatus} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The structure used to retrieve the status for a logical antenna port is defined as follows: })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADIS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CSLibrary.Barcode} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Barcode} library })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CSLibrary.Barcode.BarcodeEventArgs} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Barcode} Event Argument })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CSLibrary.BarcodeReader} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CSLibrary.Barcode.BarcodeStateEventArgs} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
})} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CSLibrary.Structures.BeeperParms} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Beeper structure /summary> })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADJF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CSLibrary.BluetoothIC} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CSLibrary.Structures.CarrierWaveParms} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Carrier wave parms })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADJM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CSLibrary.Structures.CommonParms} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
All tag-protocol operation functions share a common set of parameters. These parameters are gathered in one place for convenience. })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADJO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CSLibrary.Structures.ConfigBase} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Configuration base class })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADJT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CSLibrary.Barcode.Constants.Constants} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constant value })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACFN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CSLibrary.SiliconLabIC.Constants} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABKF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CSLibrary.Structures.CSLibraryOperationParms} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Operation Paramemter })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADJX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CSLibrary.Structures.DecodeMessage} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
decode structure })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADKV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CSLibrary.Structures.DecoderParms} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Decoder functionality settings. })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADLC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CSLibrary.Structures.DEVICE_STATUS} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RFID Device Status {\b Structures} })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADLQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CSLibrary.Net.NetFinder.DeviceFinderArgs} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
DeviceFinder Argument })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADHC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CSLibrary.Net.NetFinder.DeviceInfomation} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Netfinder information return from device })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADHG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CSLibrary.SiliconLabIC.DOWNLINKCMD} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABKJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CSLibrary.BluetoothIC.DOWNLINKCMD} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAES \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CSLibrary.BarcodeReader.DOWNLINKCMD} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CSLibrary.HighLevelInterface.DOWNLINKCMD} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CSLibrary.Notification.DOWNLINKCMD} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CSLibrary.RFIDReader.DOWNLINKCMD} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABJU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CSLibrary.Structures.DriverVersion} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Driver {\b Version} Structure })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADMB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CSLibrary.Structures.DynamicQParms} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The parameters for the dynamic-Q algorithm, MAC singulation algorithm 3, (i.e., RFID_18K6C_SINGULATION_ALGORITHM_DYNAMICQ) })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADMD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CSLibrary.Structures.EngineInfoParms} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Engine Information Structure (5000K engine with PSOC only) })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADMK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CSLibrary.Structures.ErrorMessage} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
error message structure })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADNF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CSLibrary.SiliconLabIC.Events} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABKM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CSLibrary.Structures.FixedQParms} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The parameters for the fixed-Q algorithm, MAC singulation algorithm 0, (i.e., RFID_18K6C_SINGULATION_ALGORITHM_FIXEDQ) })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADNI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CSLibrary.Structures.FrequencyBandParms} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Frequency Band Parms })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADNP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CSLibrary.GATT} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CSLibrary.Tools.Hex} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
For Backward Compatibility })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEPT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CSLibrary.Text.Hex} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
For Backward Compatibility })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEMZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CSLibrary.Tools.HexEncoding} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Summary description for {\b HexEncoding}. })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEPU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CSLibrary.Text.HexEncoding} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Summary description for {\b HexEncoding}. })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAENA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CSLibrary.HighLevelInterface} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CSLibrary.Notification.HotKeyEventArgs} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
HotKey Event Argument })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CSLibrary.Structures.IBANK} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
})} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADNZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CSLibrary.Structures.ImageAcquisitionParms} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Image Acquisition structure /summary> })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADPT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CSLibrary.Structures.ImageMessage} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Image information structure /summary> })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADQI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CSLibrary.Structures.ImagerCapabilitiesParms} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Imager capabilities structure })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADQV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CSLibrary.Structures.ImageTransferParms} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Image Transfer structure /summary> })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADRB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CSLibrary.Structures.IntelligentImage} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Intelligent Image Capture })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADRS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CSLibrary.Structures.InternalCustCmdEASParms} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADSB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CSLibrary.Structures.InternalCustCmdTagReadProtectParms} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADSH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CSLibrary.Structures.InternalTagInventoryParms} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADSM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CSLibrary.Structures.InternalTagRangingParms} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
})} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADSR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CSLibrary.Structures.InternalTagReadProtectParms} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADSW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CSLibrary.Structures.InternalTagSearchOneParms} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADTB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CSLibrary.Structures.INVENTORY_PKT} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tag Access Packet })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADTF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CSLibrary.Structures.LibraryVersion} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Library {\b Version} Structure })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADTP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CSLibrary.Structures.MacVersion} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mac {\b Version} Structure })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADTR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CSLibrary.Structures.MessageBase} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Barcode} Message base class })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADTU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CSLibrary.Net.NetFinder} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADGO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CSLibrary.Structures.NonVolatileMemoryBlock} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The ISO 18000-6C tag-lock operation lock specific command parameters. })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADTW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CSLibrary.Notification} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CSLibrary.Text.oldHex} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Summary description for {\b HexEncoding}. })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEOK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CSLibrary.SiliconLabIC.Events.OnAccessCompletedEventArgs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABKN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CSLibrary.Events.OnAccessCompletedEventArgs} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tag Access Completed Argument })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADFW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CSLibrary.Events.OnAsyncCallbackEventArgs} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inventory or tag search callback event argument })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADGC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CSLibrary.Events.OnReaderStateChangedEventArgs} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reader status callback event argument })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADGG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CSLibrary.Events.OnStateChangedEventArgs} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reader Operation changed EventArgs })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADGK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CSLibrary.Structures.PowerParms} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Matrix Products Power management structure })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADUC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CSLibrary.Structures.ProfileConfig} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Link Profile Configuration Structure })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADUS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CSLibrary.Structures.QueryParms} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Once the tag population has been partitioned into disjoint groups, a subsequent tag-protocol operation (i.e., an inventory operation or access command) is then applied to one of the tag groups. A tag group is specified using the following: })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADUW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CSLibrary.Tools.Queue} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAERN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CSLibrary.Structures.RadioInformation} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
When detecting the attached RFID radio modules, the structures for retrieving the information for the attached RFID radio modules are as follows: })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADVA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CSLibrary.Structures.RadioLinkProfile} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b RadioLinkProfile} Structure })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADVH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CSLibrary.Structures.RadioLinkProfileConfig} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
})} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADVY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CSLibrary.Structures.RawDecodeMessage} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Raw decode structure })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADWN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CSLibrary.Structures.RECT} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Image Size })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADWP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CSLibrary.Net.NetFinder.ResultArgs} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Result Argument })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADHK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CSLibrary.RFIDReader} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CSLibrary.Structures.S_DATA} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Custom Data Structure })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADWU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CSLibrary.Structures.S_EPC} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Electronic Product Code })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADXE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CSLibrary.Structures.S_MASK} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Custom Data Structure })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADXN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CSLibrary.Structures.S_PC} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Protocol Control(must be 2 Bytes) })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADXZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CSLibrary.Structures.S_PWD} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Custom Password Structure })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADYL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CSLibrary.Structures.S_TID} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
TID })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADYW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CSLibrary.Structures.S_XPC_W1} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
X Protocol Control W1 (must be 2 Bytes) })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADZH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CSLibrary.Structures.S_XPC_W2} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
X Protocol Control W2 (must be 2 Bytes) })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADZP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CSLibrary.Structures.SelectAction} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The partitioning of tags into disjoint groups is accomplished by applying actions to the tags that match and/or do not match the specified mask. })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADZW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CSLibrary.Structures.SelectCriteria} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tag-selection criteria })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEAC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CSLibrary.Structures.SelectCriterion} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Together, the selection mask and selection action form a single selection criterion. })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEAG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CSLibrary.Structures.SelectMask} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The tag mask is used to specify a bit pattern that is used to match against one of a tag's memory banks to determine if it is matching or non-matching. A mask is a combination of a memory bank and a sequence of bits that will be matched at the specified offset within the chosen memory bank. })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEAK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CSLibrary.Structures.SequenceBarcodeParms} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sequence mode barcode descriptor })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEAS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CSLibrary.Structures.SequenceModeParms} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sequence Mode control })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEAW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CSLibrary.SiliconLabIC} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABJY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CSLibrary.Structures.SingulationAlgorithmParms} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b SingulationAlgorithmParms} })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEBC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CSLibrary.Structures.SingulationCriteria} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Post-singulation match criteria can be grouped together using the following: })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEBG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CSLibrary.Structures.SingulationCriterion} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Together, the selection mask and an indication if the application is interested in matching or non-matching tags form a single post-singulation match criterion. })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEBK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CSLibrary.Structures.SingulationMask} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The post-singulation match mask is used to specify a bit pattern of up to 496 bits that is used to match against the EPC backscattered by a tag during singulation to determine if a tag is matching or non-matching. })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEBO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CSLibrary.Structures.SIZE} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Image Size })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEBV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CSLibrary.Structures.SymbologyParms} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure of structures, one for each symbology. /summary> })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEBY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CSLibrary.Structures.SymCodeOCR} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure for unusual OCR })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEDU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CSLibrary.Structures.SymFlagsOnly} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure for symbologies with no specified min or max length. })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEED \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CSLibrary.Structures.SymFlagsRange} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure for symbologies with min or max length. })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEEH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CSLibrary.Structures.TAG_ACCESS_PKT} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tag Access Packet })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEEN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CSLibrary.Structures.TagBlockPermalockParms} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
block lock structure, configure this before do block lock })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEEX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CSLibrary.Structures.TagCallbackInfo} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tag Callback Information })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEFH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CSLibrary.Structures.TagGeneralSelectedParms} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Selected tag parameters, configure this before any specific tag operation })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEGD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CSLibrary.Structures.TagGroup} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A class that specifies the tag group that will have a subsequent tag-protocol operation applied to it. This parameter must not be NULL. })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEGO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CSLibrary.Structures.TagInventoryParms} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The ISO 18000-6C tag-inventory operation parameters })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEGU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CSLibrary.Structures.TagKillParms} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tag Kill structure, configure this before do tag kill })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEHF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CSLibrary.Structures.TagLockParms} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tag lock structure, configure this before do tag lock })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEHM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CSLibrary.Structures.TagPerm} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A structure that contains the access permissions to be set for the tag. })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEHX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CSLibrary.Structures.TagPostMachParms} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Post match tag parameters, configure this before any specific tag operation })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEID \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CSLibrary.Structures.TagRangingParms} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
this parms is same as inventory parms })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEIJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CSLibrary.Structures.TagReadEpcParms} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Read EPC structures, configure this before read current EPC })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEIX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CSLibrary.Structures.TagReadPcParms} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Read PC structures, configure this before read current PC })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEJE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CSLibrary.Structures.TagReadProtectParms} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b TagReadProtectParms} })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEJJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CSLibrary.Structures.TagReadPwdParms} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Read password structures, configure this before read current password })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEJN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CSLibrary.Structures.TagReadTidParms} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Read TID structures, configure this before read current TID })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEJS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CSLibrary.Structures.TagReadUserParms} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Read User memory structures, configure this before read current User memory })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEJZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CSLibrary.Structures.TagSearchingParms} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
search one tag parms })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEKG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CSLibrary.Structures.TagSelectedParms} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Selected tag parameters, configure this before any specific tag operation })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEKI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CSLibrary.Structures.TagWriteEpcParms} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Write EPC structures, configure this before write new EPC value })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEKV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CSLibrary.Structures.TagWritePcParms} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Write PC structures, configure this before write new PC value })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAELB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CSLibrary.Structures.TagWritePwdParms} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Write password structures, configure this before write new password value })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAELF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CSLibrary.Structures.TagWriteUserParms} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Write User structures, configure this before write new user data })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAELJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CSLibrary.Structures.TemperatureParms} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Temperature Parms })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAELP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CSLibrary.Structures.TextMessage} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Text} message type })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAELT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CSLibrary.Structures.ThresholdTemperatureParms} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b ThresholdTemperatureParms} })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAELX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CSLibrary.Structures.TriggerParms} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Triggering control })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEMC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CSLibrary.HighLevelInterface.UPLINKCMD} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CSLibrary.Structures.Version} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Version} Structure })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEMH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CSLibrary.Structures.VersionParms} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Revision information })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEMN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CSLibrary.Notification.VoltageEventArgs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
File Index\par \pard\plain 
{\tc \v File Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
File List\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Here is a list of all files with brief descriptions:}
{
\par
\pard\plain \s71\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b CSLibrary/{\b BTConnect.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b CSLibrary/{\b BTReceive.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b CSLibrary/{\b BTSend.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b CSLibrary/{\b ClassNetfinder.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b CSLibrary/{\b CSLibrary.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b CSLibrary/{\b CSLibrary.Private.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b CSLibrary/{\b CSLibrary.Text.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b CSLibrary/{\b HexEncoding.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b CSLibrary/BarcodeReader/{\b ClassBarCode.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b CSLibrary/BarcodeReader/{\b CSLibrary.Barcode.Linkage.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b CSLibrary/BarcodeReader/Constants/{\b CSLibrary.Barcode.Constants.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b CSLibrary/BarcodeReader/Events/{\b CSLibrary.Barcode.EventArgs.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b CSLibrary/BarcodeReader/Structures/{\b CSLibrary.Barcode.Structures.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b CSLibrary/BluetoothIC/{\b ClassBluetoothIC.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b CSLibrary/Notification/{\b ClassNotification.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b CSLibrary/RFIDReader/{\b ClassRFID.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b CSLibrary/RFIDReader/{\b ClassRFID.Private.Country.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b CSLibrary/RFIDReader/{\b ClassRFID.Private.Country1.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b CSLibrary/RFIDReader/{\b ClassRFID.Private.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b CSLibrary/RFIDReader/{\b ClassRFID.Private.FrequencyChannel.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b CSLibrary/RFIDReader/{\b ClassRFID.Private.FrequencyChannel1.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b CSLibrary/RFIDReader/{\b ClassRFID.Private.Inventory.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b CSLibrary/RFIDReader/{\b ClassRFID.Private.OEM.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b CSLibrary/RFIDReader/{\b ClassRFID.Private.Read.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b CSLibrary/RFIDReader/{\b ClassRFID.Private.Select.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b CSLibrary/RFIDReader/{\b ClassRFID.Private.Write.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b CSLibrary/RFIDReader/{\b ClassRFID.Public.Algorithm.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b CSLibrary/RFIDReader/{\b ClassRFID.Public.Country.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b CSLibrary/RFIDReader/{\b ClassRFID.Public.FrequencyChannel.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b CSLibrary/RFIDReader/{\b ClassRFID.Public.Operation.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b CSLibrary/RFIDReader/{\b ClassRFID.Public.Power.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b CSLibrary/RFIDReader/{\b ClassRFID.Public.Profile.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b CSLibrary/RFIDReader/backup/{\b ClassRFID.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b CSLibrary/RFIDReader/backup/{\b CSLibrary.HighLevelInterface.Private.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b CSLibrary/RFIDReader/Constants/{\b CSLibrary.Constants.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b CSLibrary/RFIDReader/Constants/{\b CSLibrary.Constants.Packet.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b CSLibrary/RFIDReader/Constants/{\b CSLibrary.ConstantsNew.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b CSLibrary/RFIDReader/Constants/{\b Intel.Constants.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b CSLibrary/RFIDReader/Constants/{\b SelectFlags.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b CSLibrary/RFIDReader/Events/{\b CSLibrary.Events.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b CSLibrary/RFIDReader/Structures/{\b CSLibrary.Structures.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b CSLibrary/RFIDReader/Structures/{\b CSLibrary.Structures.TagKill.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b CSLibrary/RFIDReader/Structures/{\b CSLibrary.Structures.TagLock.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b CSLibrary/RFIDReader/Structures/{\b CSLibrary.Structures.TagRead.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b CSLibrary/RFIDReader/Structures/{\b CSLibrary.Structures.TagWrite.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b CSLibrary/RFIDReader/Structures/{\b Intel.Structures.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b CSLibrary/SiliconLabIC/{\b ClassEvent.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b CSLibrary/SiliconLabIC/{\b ClassSiliconLabIC.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b CSLibrary/Tools/{\b ClassCRC16.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b CSLibrary/Tools/{\b ClassFIFIQueue.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b CSLibrary/Tools/{\b ClassHex.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b CSLibrary/Tools/{\b ClassTimer.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b CSLibrary/Tools/{\b ClassTrace.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b CSLibrary/Tools/{\b HexEncoding.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Namespace Documentation\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary Namespace Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary}
{\xe \v CSLibrary}
{\bkmkstart AAAAAAAACC}
{\bkmkend AAAAAAAACC}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b Barcode}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b Constants}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b Events}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b Net}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b Structures}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b Text}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b Tools}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Barcode}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Barcode} library }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b BarcodeReader}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b BluetoothIC}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b GATT}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b HighLevelInterface}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Notification}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b RFIDReader}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b SiliconLabIC}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Timer}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary.Barcode Namespace Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary.Barcode}
{\xe \v CSLibrary.Barcode}
{\bkmkstart AAAAAAABKR}
{\bkmkend AAAAAAABKR}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b Constants}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b Structures}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary.Barcode.Constants Namespace Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary.Barcode.Constants}
{\xe \v CSLibrary.Barcode.Constants}
{\bkmkstart AAAAAAABKS}
{\bkmkend AAAAAAABKS}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Constants}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constant value }}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumerations\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b MessageType} \{ {\b MessageType.DEC_MSG}, 
{\b MessageType.ERR_MSG}
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Message type }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b BarcodeState} \{ {\b BarcodeState.IDLE}, 
{\b BarcodeState.BUSY}, 
{\b BarcodeState.STOPPING}
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Barcode operation mode }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b Result} \{ {\b Result.INITIALIZE} = -1, 
{\b Result.SUCCESS} = 0, 
{\b Result.ERR_BADFILENAME}, 
{\b Result.ERR_BADPORT}, 
{\b Result.ERR_BADREGION}, 
{\b Result.ERR_DRIVER}, 
{\b Result.ERR_ENGINEBUSY}, 
{\b Result.ERR_FILE}, 
{\b Result.ERR_FILEINCOMPATIBLE}, 
{\b Result.ERR_FILEINVALID}, 
{\b Result.ERR_MEMORY}, 
{\b Result.ERR_NODECODE}, 
{\b Result.ERR_NODRIVER}, 
{\b Result.ERR_NOIMAGE}, 
{\b Result.ERR_NORESPONSE}, 
{\b Result.ERR_NOTCONNECTED}, 
{\b Result.ERR_PARAMETER}, 
{\b Result.ERR_UNSUPPORTED}, 
{\b Result.ERR_UPGRADE}, 
{\b Result.ERR_MENUDECODE}, 
{\b Result.ERR_REFLASH}, 
{\b Result.ERR_NOTRIGGER}, 
{\b Result.ERR_BADSMARTIMAGE}, 
{\b Result.ERR_SMARTIMAGETOOLARGE}, 
{\b Result.ERR_BUFFER_TOO_SMALL}, 
{\b Result.EOT} = 256, 
{\b Result.ERR_READTHREAD_START}, 
{\b Result.ERR_READTHREAD_STOP}, 
{\b Result.ERR_POLLEVENT}, 
{\b Result.ERR_WRONGRESULTSTRUCT}, 
{\b Result.ERR_USER_CANCEL}, 
{\b Result.ERR_NAK}, 
{\b Result.ERR_COMPRESSION_FAILED}, 
{\b Result.ERR_DECOMPRESSION_FAILED}, 
{\b Result.ERR_CAPTURE_IMAGE_FAILED}, 
{\b Result.ERR_SHIP_IMAGE_FAILED}, 
{\b Result.ERR_CONNECT_BOOT_CODE}, 
{\b Result.ERR_BAUD_TO_HIGH}, 
{\b Result.ERR_INVALID_COMM_PARAMS}, 
{\b Result.ERR_UNICODE_UNSUPPORTED}, 
{\b Result.ERR_INTERNAL_ERROR}, 
{\b Result.ERR_NOINTELBARCODE}, 
{\b Result.ERR_BADINTELIMAGE}, 
{\b Result.ERR_NOINTELIMAGE}, 
{\b Result.ERR_DLL_FILE}, 
{\b Result.ERR_DECODER_INIT_FAILED}, 
{\b Result.ERR_IMAGE_PROCESSING_FAILED}, 
{\b Result.ERR_UNSUPPORTED_ENGINE}, 
{\b Result.ERR_SYMBOLOGY_HAS_NO_RANGE}, 
{\b Result.ERR_COMMUNICATIONS_ERROR}, 
{\b Result.ERR_INVALID_PARAMETER}
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
These are the possible return values for all API functions They indicate either success, or the type of error encountered. }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b SetupType} \{ {\b SetupType.DEFAULT} = 0, 
{\b SetupType.CURRENT}
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Setup type }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b BaudRate} \{ {\b BaudRate.SERIAL_BAUD_300} = 300, 
{\b BaudRate.SERIAL_BAUD_600} = 600, 
{\b BaudRate.SERIAL_BAUD_1200} = 1200, 
{\b BaudRate.SERIAL_BAUD_2400} = 2400, 
{\b BaudRate.SERIAL_BAUD_4800} = 4800, 
{\b BaudRate.SERIAL_BAUD_9600} = 9600, 
{\b BaudRate.SERIAL_BAUD_19200} = 19200, 
{\b BaudRate.SERIAL_BAUD_38400} = 38400, 
{\b BaudRate.SERIAL_BAUD_57600} = 57600, 
{\b BaudRate.SERIAL_BAUD_115200} = 115200, 
{\b BaudRate.SERIAL_BAUD_230400} = 230400, 
{\b BaudRate.SERIAL_BAUD_460800} = 460800, 
{\b BaudRate.SERIAL_BAUD_921600} = 921600
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Serial port baud rates }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b DataBit} \{ {\b DataBit.BITS_7} = 7, 
{\b DataBit.BITS_8}
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Data bit }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b Parity} \{ {\b Parity.NONE} = 'N', 
{\b Parity.ODD} = 'O', 
{\b Parity.EVEN} = 'E', 
{\b Parity.MARK} = 'M', 
{\b Parity.SPACE} = 'S'
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Parity }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b StopBit} \{ {\b StopBit.ONE} = 1, 
{\b StopBit.TWO}
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Stop bits. }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b DecoderType} \{ {\b DecoderType.SDK_1D_CODES_ONLY} =0, 
{\b DecoderType.SDK_1D_AND_PDF_CODES}, 
{\b DecoderType.SDK_1D_AND_2D_CODES}
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Decoder Symbology Support }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b ImagerType} \{ {\b ImagerType.UNKNOWN_IMAGER} = 0, 
{\b ImagerType.DECODED_IMAGER_4080} = (EngineType.IT4000 * 10), 
{\b ImagerType.DECODED_IMAGER_4080_USB} = (ImagerType.DECODED_IMAGER_4080 + 1), 
{\b ImagerType.NON_DECODED_IMAGER_4000} = (ImagerType.DECODED_IMAGER_4080 + 2), 
{\b ImagerType.DECODED_IMAGER_5080VGA} = (EngineType.IT5X00VGA * 10), 
{\b ImagerType.DECODED_IMAGER_5080VGA_USB} = (ImagerType.DECODED_IMAGER_5080VGA + 1), 
{\b ImagerType.NON_DECODED_IMAGER_5000VGA} = (ImagerType.DECODED_IMAGER_5080VGA + 2), 
{\b ImagerType.DECODED_IMAGER_5080VGA_PSOC} = (EngineType.IT5X00VGA_PSOC * 10), 
{\b ImagerType.DECODED_IMAGER_5080VGA_PSOC_USB} = (ImagerType.DECODED_IMAGER_5080VGA_PSOC + 1), 
{\b ImagerType.NON_DECODED_IMAGER_5000VGA_PSOC} = (ImagerType.DECODED_IMAGER_5080VGA_PSOC + 2), 
{\b ImagerType.DECODED_IMAGER_5080} = (EngineType.IT5X00 * 10), 
{\b ImagerType.DECODED_IMAGER_5080_USB} = (ImagerType.DECODED_IMAGER_5080 + 1), 
{\b ImagerType.NON_DECODED_IMAGER_5000} = (ImagerType.DECODED_IMAGER_5080 + 2), 
{\b ImagerType.DECODED_IMAGER_5080_PSOC} = (EngineType.IT5X00_PSOC * 10), 
{\b ImagerType.DECODED_IMAGER_5080_PSOC_USB} = (ImagerType.DECODED_IMAGER_5080_PSOC + 1), 
{\b ImagerType.NON_DECODED_IMAGER_5000_PSOC} = (ImagerType.DECODED_IMAGER_5080_PSOC + 2)
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Imager Type (Decoded Out or Non Decoded Out) }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b EventType} \{ {\b EventType.BARCODE_EVENT} =0, 
{\b EventType.IMAGE_EVENT}, 
{\b EventType.TEXT_MSG_EVENT}, 
{\b EventType.INTELIMG_BARCODE_EVENT}, 
{\b EventType.INTELIMG_IMAGE_EVENT}, 
{\b EventType.TRIGGER_EVENT}
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Event type enum }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b ComPort} \{ {\b ComPort.COM1} =0, 
{\b ComPort.COM2}, 
{\b ComPort.COM3}, 
{\b ComPort.COM4}, 
{\b ComPort.COM5}, 
{\b ComPort.COM6}, 
{\b ComPort.COM7}, 
{\b ComPort.COM8}, 
{\b ComPort.COM9}, 
{\b ComPort.COM10}, 
{\b ComPort.COM11}, 
{\b ComPort.COM12}, 
{\b ComPort.COM13}, 
{\b ComPort.COM14}, 
{\b ComPort.COM15}, 
{\b ComPort.COM16}, 
{\b ComPort.COM17}, 
{\b ComPort.COM18}, 
{\b ComPort.COM19}, 
{\b ComPort.LAST_COMM_PORT} = 255
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Connection types }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b Action} \{ {\b Action.AIMER_CMD} = 0, 
{\b Action.ILLUMINATION_CMD}, 
{\b Action.BEEP_CMD}
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Action Commands }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b OnOff} \{ {\b OnOff.OFF} =0, 
{\b OnOff.ON} =1
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
On/Off enum }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b Led} \{ {\b Led.OFF} = 0, 
{\b Led.ON} = 1
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Control of Led on/off }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b Beep} \{ {\b Beep.SINGLE_BEEP} = 0, 
{\b Beep.DOUBLE_BEEP} = 1
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Beep Execute enum }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b PlugAndPlay} \{ {\b PlugAndPlay.PNP_OCR_PASSPORT} =0
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Plug and Play Command Enum }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b ImgFormat} \{ {\b ImgFormat.FF_RAW_BINARY} = 0, 
{\b ImgFormat.FF_RAW_GRAY}, 
{\b ImgFormat.FF_TIFF_BINARY}, 
{\b ImgFormat.FF_TIFF_BINARY_PACKBITS}, 
{\b ImgFormat.FF_TIFF_GRAY}, 
{\b ImgFormat.FF_JPEG_GRAY}, 
{\b ImgFormat.FF_BMP_GRAY}
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Image formats /summary> }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b Compression} \{ {\b Compression.NONE} = 0, 
{\b Compression.LOSSLESS}, 
{\b Compression.LOSSY}
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compression mode formats /summary> }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b DutyCycle} \{ {\b DutyCycle.DUTY_CYCLE_OFF} = 0, 
{\b DutyCycle.DUTY_CYCLE_ON}
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Capture Illumination Duty Cycle /summary> }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b AutoExposure} \{ {\b AutoExposure.BARCODE} = 0, 
{\b AutoExposure.PHOTO}, 
{\b AutoExposure.MANUAL}
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Auto Exposure type /summary> }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b Gain} \{ {\b Gain.GAIN_1x} = 1, 
{\b Gain.GAIN_2x}, 
{\b Gain.GAIN_4x} = 4
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Min and Max manual exposure Gain Values /summary> }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b FrameRate} \{ {\b FrameRate.R_1_FRAMES_PER_SEC} = 1, 
{\b FrameRate.R_2_FRAMES_PER_SEC}, 
{\b FrameRate.R_3_FRAMES_PER_SEC}, 
{\b FrameRate.R_4_FRAMES_PER_SEC}, 
{\b FrameRate.R_5_FRAMES_PER_SEC}, 
{\b FrameRate.R_6_FRAMES_PER_SEC}, 
{\b FrameRate.R_10_FRAMES_PER_SEC} = 10, 
{\b FrameRate.R_12_FRAMES_PER_SEC} = 12, 
{\b FrameRate.R_15_FRAMES_PER_SEC} = 15, 
{\b FrameRate.R_20_FRAMES_PER_SEC} = 20, 
{\b FrameRate.R_30_FRAMES_PER_SEC} = 30
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Frame rate enum /summary> }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b BeeperVolume} \{ {\b BeeperVolume.OFF} = 0, 
{\b BeeperVolume.LOW} = 1, 
{\b BeeperVolume.MEDIUM} = 2, 
{\b BeeperVolume.HIGH} = 3
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Beeper Volume enum /summary> }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b TriggerMode} \{ {\b TriggerMode.MANUAL_SERIAL} = 0, 
{\b TriggerMode.UNUSED}, 
{\b TriggerMode.MANUAL_LOW_POWER}, 
{\b TriggerMode.PRESENTATION}, 
{\b TriggerMode.SCANSTAND}, 
{\b TriggerMode.HOST_NOTIFY}, 
{\b TriggerMode.SNAP_AND_SHIP}
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Trigger Modes type /summary> }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b SequenceMode} \{ {\b SequenceMode.DISABLED} = 0, 
{\b SequenceMode.ENABLED}, 
{\b SequenceMode.REQUIRED}
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sequence Modes type /summary> }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b DecoderMode} \{ {\b DecoderMode.STANDARD} = 0, 
{\b DecoderMode.QUICK_OMNI}, 
{\b DecoderMode.NONOMNI_ALD}, 
{\b DecoderMode.OMNI_LINEAR}
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Decoder mode enum /summary> }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b IllumLedColor} \{ {\b IllumLedColor.SECONDARY_LEDS} = 0, 
{\b IllumLedColor.PRIMARY_LEDS}
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Led Color /summary> }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b AimerModes} \{ {\b AimerModes.ALWAYS_OFF} = 0, 
{\b AimerModes.ILLUM_AND_AIM}, 
{\b AimerModes.ALWAYS_ON}
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Aimer Modes /summary> }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b SystemSpeed} \{ {\b SystemSpeed.SPEED_96MHZ} = 0, 
{\b SystemSpeed.SPEED_48MHZ} = 1, 
{\b SystemSpeed.SPEED_32MHZ} = 2
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
System (MPU) clock speeds enum /summary> }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b EngineType} \{ {\b EngineType.NONE} = 0, 
{\b EngineType.IT4200} = 1, 
{\b EngineType.IT4000} = 5, 
{\b EngineType.IT4100} = 6, 
{\b EngineType.IT4300} = 7, 
{\b EngineType.IT5X00VGA} = 10, 
{\b EngineType.IT5X00VGA_PSOC} = 11, 
{\b EngineType.IT5X00} = 12, 
{\b EngineType.IT5X00_PSOC} = 13
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Engine Id values from imager. /summary> }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b ConfigItems} \{ {\b ConfigItems.BEEPER_CONFIG} = 0, 
{\b ConfigItems.TRIGGER_CONFIG}, 
{\b ConfigItems.DECODER_CONFIG}, 
{\b ConfigItems.POWER_CONFIG}, 
{\b ConfigItems.VERSION_INFO}, 
{\b ConfigItems.SYMBOLOGY_CONFIG}, 
{\b ConfigItems.SERIAL_PORT_CONFIG}, 
{\b ConfigItems.IMAGE_ACQUISITION}, 
{\b ConfigItems.IMAGE_TRANSFER}, 
{\b ConfigItems.SEQUENCE_CONFIG}, 
{\b ConfigItems.ALL_CONFIG}
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CONFIG Read configuration item settings /summary> }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b CodePage} : uint \{ {\b CodePage.CP_ACP} = 0, 
{\b CodePage.CP_OEMCP} = 1, 
{\b CodePage.CP_MACCP} = 2, 
{\b CodePage.CP_THREAD_ACP} = 3, 
{\b CodePage.CP_SYMBOL} = 42, 
{\b CodePage.CP_UTF7} = 65000, 
{\b CodePage.CP_UTF8} = 65001
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CodePage for BarcodeData }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b Symbol} \{ {\b Symbol.AZTEC} = 0, 
{\b Symbol.MESA}, 
{\b Symbol.CODABAR}, 
{\b Symbol.CODE11}, 
{\b Symbol.CODE128}, 
{\b Symbol.CODE39}, 
{\b Symbol.CODE49}, 
{\b Symbol.CODE93}, 
{\b Symbol.COMPOSITE}, 
{\b Symbol.DATAMATRIX}, 
{\b Symbol.EAN8}, 
{\b Symbol.EAN13}, 
{\b Symbol.INT25}, 
{\b Symbol.MAXICODE}, 
{\b Symbol.MICROPDF}, 
{\b Symbol.OCR}, 
{\b Symbol.PDF417}, 
{\b Symbol.POSTNET}, 
{\b Symbol.QR}, 
{\b Symbol.RSS}, 
{\b Symbol.UPCA}, 
{\b Symbol.UPCE0}, 
{\b Symbol.UPCE1}, 
{\b Symbol.ISBT}, 
{\b Symbol.BPO}, 
{\b Symbol.CANPOST}, 
{\b Symbol.AUSPOST}, 
{\b Symbol.IATA25}, 
{\b Symbol.CODABLOCK}, 
{\b Symbol.JAPOST}, 
{\b Symbol.PLANET}, 
{\b Symbol.DUTCHPOST}, 
{\b Symbol.MSI}, 
{\b Symbol.TLCODE39}, 
{\b Symbol.MATRIX25}, 
{\b Symbol.KORPOST}, 
{\b Symbol.TRIOPTIC}, 
{\b Symbol.CODE32}, 
{\b Symbol.STRT25}, 
{\b Symbol.PLESSEY}, 
{\b Symbol.CHINAPOST}, 
{\b Symbol.TELEPEN}, 
{\b Symbol.CODE16K}, 
{\b Symbol.POSICODE}, 
{\b Symbol.COUPONCODE}, 
{\b Symbol.UPUIDTAG}, 
{\b Symbol.CODE4CB}, 
{\b Symbol.NUM_SYMBOLOGIES}, 
{\b Symbol.ALL} = 100
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Symbology selection constants }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b OCR} \{ {\b OCR.DISABLED} = 0, 
{\b OCR.A}, 
{\b OCR.B}, 
{\b OCR.MONEY}, 
{\b OCR.MICR_UNSUPPORTED}
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Supported OCR Fonts }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b OCRDirection} \{ {\b OCRDirection.LeftToRight} = 0, 
{\b OCRDirection.TopToBottom}, 
{\b OCRDirection.RightToLeft}, 
{\b OCRDirection.BottomToTop}
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OCR directions }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b ImgTransferMask} : uint \{ {\b ImgTransferMask.BITS_PER_PIXEL_MASK} = 0x00001, 
{\b ImgTransferMask.SUBSAMPLE_VALUE_MASK} = 0x00002, 
{\b ImgTransferMask.BOUNDING_RECTANGLE_MASK} = 0x00004, 
{\b ImgTransferMask.COMPRESSION_MODE_MASK} = 0x00008, 
{\b ImgTransferMask.HISTOGRAM_STRETCH_MASK} = 0x00010, 
{\b ImgTransferMask.COMPRESSION_FACTOR_MASK} = 0x00020, 
{\b ImgTransferMask.EDGE_ENHANCEMENT_MASK} = 0x00100, 
{\b ImgTransferMask.GAMMA_CORRECTION_MASK} = 0x00200, 
{\b ImgTransferMask.TEXT_ENHANCEMENT_MASK} = 0x00400, 
{\b ImgTransferMask.INFINITY_FILTER_MASK} = 0x00800, 
{\b ImgTransferMask.FLIP_IMAGE_MASK} = 0x01000, 
{\b ImgTransferMask.NOISE_FILTER_MASK} = 0x02000, 
{\b ImgTransferMask.TRANSFER_UPDATE_HWND} = 0x00040, 
{\b ImgTransferMask.TRANSFER_UPDATE_DWORD} = 0x00080, 
{\b ImgTransferMask.TRANSFER_MASK_ALL} = 0x03fff, 
{\b ImgTransferMask.TRANSFER_MASK_ALL_NO_NOTIFY} = 0x03f3f
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Image Transfer bit masks }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b ImgAcquisitionMask} : uint \{ {\b ImgAcquisitionMask.WHITE_VALUE_MASK} = 0x00001, 
{\b ImgAcquisitionMask.WHITE_WINDOW_MASK} = 0x00002, 
{\b ImgAcquisitionMask.MAX_CAPTURE_RETRIES_MASK} = 0x00004, 
{\b ImgAcquisitionMask.ILLUMINATION_DUTY_CYCLE_MASK} = 0x00008, 
{\b ImgAcquisitionMask.LIGHTS_DUTY_CYCLE_MASK} = 0x00008, 
{\b ImgAcquisitionMask.AIMER_DUTY_CYCLE_MASK} = 0x00010, 
{\b ImgAcquisitionMask.FIXED_GAIN_MASK} = 0x00020, 
{\b ImgAcquisitionMask.FIXED_EXPOSURE_MASK} = 0x00040, 
{\b ImgAcquisitionMask.FRAME_RATE_MASK} = 0x00080, 
{\b ImgAcquisitionMask.AUTOEXPOSURE_MODE_MASK} = 0x00100, 
{\b ImgAcquisitionMask.IMAGE_CAPTURE_MODE_MASK} = 0x00100, 
{\b ImgAcquisitionMask.WAIT_FOR_TRIGGER_MASK} = 0x00200, 
{\b ImgAcquisitionMask.PREVIEW_MODE_IMAGE_MASK} = 0x00400, 
{\b ImgAcquisitionMask.VGA_COMPATIBLE_IMAGE_MASK} = 0x00800, 
{\b ImgAcquisitionMask.CAPTURE_MASK_CONFIG_ALL} = 0x009ff, 
{\b ImgAcquisitionMask.CAPTURE_MASK_FIXED_AGC} = 0x00980, 
{\b ImgAcquisitionMask.CAPTURE_MASK_ALL} = 0x00fff
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Image Acquisition bit masks }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b BeeperMask} : uint \{ {\b BeeperMask.ON_DECODE} = 0x00001, 
{\b BeeperMask.SHORT_BEEP} = 0x00002, 
{\b BeeperMask.MENU_CMD_BEEP} = 0x00004, 
{\b BeeperMask.BEEP_VOLUME} = 0x00008, 
{\b BeeperMask.ALL} = 0x0000f
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Beeper bit masks }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b TriggerMask} : uint \{ {\b TriggerMask.TRIG_MODE} = 0x00001, 
{\b TriggerMask.TIMEOUT} = 0x00002, 
{\b TriggerMask.ALL} = 0x00003
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Trigger bit masks }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b SequenceMask} : uint \{ {\b SequenceMask.MODE} = 0x00001, 
{\b SequenceMask.BARCODES} = 0x00002, 
{\b SequenceMask.ALL} = 0x00003
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sequence bit masks }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b DecoderMask} : uint \{ {\b DecoderMask.MAX_MESSAGE_LENGTH} = 0x00001, 
{\b DecoderMask.DECODE_MULTIPLE} = 0x00002, 
{\b DecoderMask.USE_AIMERS} = 0x00004, 
{\b DecoderMask.PRINT_WEIGHT} = 0x00008, 
{\b DecoderMask.DECODE_METHOD} = 0x00010, 
{\b DecoderMask.CENTER_ENABLE} = 0x00020, 
{\b DecoderMask.CENTER_WINDOW} = 0x00040, 
{\b DecoderMask.ILLUMINAT_LED_COLOR} = 0x00080, 
{\b DecoderMask.UPC_ADDENDA_DELAY} = 0x00100, 
{\b DecoderMask.COMPOSITE_DELAY} = 0x00200, 
{\b DecoderMask.CONCATENATE_DELAY} = 0x00400, 
{\b DecoderMask.ALL} = 0x007ff
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Decoder bit masks }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b PowerMask} : uint \{ {\b PowerMask.TRIGGER_MODE} = 0x00001, 
{\b PowerMask.SERIAL_TRIGGER_TIMEOUT} = 0x00002, 
{\b PowerMask.STOP_MODE_TIMEOUT} = 0x00004, 
{\b PowerMask.ILLUM_LED_INTENSITY} = 0x00008, 
{\b PowerMask.SYS_SPEED} = 0x00010, 
{\b PowerMask.AIMER_MODE} = 0x00020, 
{\b PowerMask.AIMER_DURATION} = 0x00040, 
{\b PowerMask.AIMER_DELAY} = 0x00080, 
{\b PowerMask.IMAGER_IDLE_TIMEOUT} = 0x00100, 
{\b PowerMask.SLEEP_MODE_TIMEOUT} = 0x00200, 
{\b PowerMask.POWER_OFF_HANDLE} = 0x00400, 
{\b PowerMask.POWER_OFF_HWND} = 0x00800, 
{\b PowerMask.AUTO_AIMER_TIMEOUT} = 0x01000, 
{\b PowerMask.ALL} = 0x01FFF
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Power setting bit masks }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b VersionMask} : uint \{ {\b VersionMask.SDK_API} = 0x00001, 
{\b VersionMask.IMAGER_FIRMWARE} = 0x00002, 
{\b VersionMask.IMAGER_PART_NUM} = 0x00004, 
{\b VersionMask.IMAGER_BOOT_CODE} = 0x00008, 
{\b VersionMask.IMAGER_DEVICE_TYPE} = 0x00010, 
{\b VersionMask.MANUFACTURERS_ID} = 0x00020, 
{\b VersionMask.DECODER_REV} = 0x00040, 
{\b VersionMask.SCAN_DRIVER_REV} = 0x00080, 
{\b VersionMask.ALL} = 0x000ff
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Version information bit masks }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b SymbolMask} : uint \{ {\b SymbolMask.FLAGS} = 0x00000001, 
{\b SymbolMask.MIN_LEN} = 0x00000002, 
{\b SymbolMask.MAX_LEN} = 0x00000004, 
{\b SymbolMask.OCR_MODE} = 0x00000008, 
{\b SymbolMask.DIRECTION} = 0x00000010, 
{\b SymbolMask.TEMPLATE} = 0x00000020, 
{\b SymbolMask.GROUP_H} = 0x00000040, 
{\b SymbolMask.GROUP_G} = 0x00000080, 
{\b SymbolMask.CHECK_CHAR} = 0x00000100, 
{\b SymbolMask.ALL} = 0xffffffff
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Symbology bit masks }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b AimID} : ushort \{ {\b AimID.AZTEC} = (ushort)'z', 
{\b AimID.MESA} = (ushort)'z', 
{\b AimID.CODABAR} = (ushort)'F', 
{\b AimID.CODE11} = (ushort)'H', 
{\b AimID.CODE128} = (ushort)'C', 
{\b AimID.CODE39} = (ushort)'A', 
{\b AimID.CODE49} = (ushort)'T', 
{\b AimID.CODE93} = (ushort)'G', 
{\b AimID.COMPOSITE} = (ushort)'e', 
{\b AimID.DATAMATRIX} = (ushort)'d', 
{\b AimID.EAN} = (ushort)'E', 
{\b AimID.INT25} = (ushort)'I', 
{\b AimID.MAXICODE} = (ushort)'U', 
{\b AimID.MICROPDF} = (ushort)'L', 
{\b AimID.PDF417} = (ushort)'L', 
{\b AimID.OCR} = (ushort)'o', 
{\b AimID.QR} = (ushort)'Q', 
{\b AimID.RSS} = (ushort)'e', 
{\b AimID.UPC} = (ushort)'E', 
{\b AimID.POSTNET} = (ushort)'X', 
{\b AimID.ISBT} = (ushort)'C', 
{\b AimID.BPO} = (ushort)'X', 
{\b AimID.CANPOST} = (ushort)'X', 
{\b AimID.AUSPOST} = (ushort)'X', 
{\b AimID.IATA25} = (ushort)'R', 
{\b AimID.CODABLOCK} = (ushort)'O', 
{\b AimID.JAPOST} = (ushort)'X', 
{\b AimID.PLANET} = (ushort)'X', 
{\b AimID.DUTCHPOST} = (ushort)'X', 
{\b AimID.MSI} = (ushort)'M', 
{\b AimID.TLC39} = (ushort)'L', 
{\b AimID.MATRIX25} = (ushort)'X', 
{\b AimID.KORPOST} = (ushort)'X', 
{\b AimID.TRIOPTIC} = (ushort)'X', 
{\b AimID.CODE32} = (ushort)'X', 
{\b AimID.STRT25} = (ushort)'S', 
{\b AimID.PLESSEY} = (ushort)'P', 
{\b AimID.CHINAPOST} = (ushort)'X', 
{\b AimID.TELEPEN} = (ushort)'B', 
{\b AimID.CODE16K} = (ushort)'K', 
{\b AimID.POSICODE} = (ushort)'p', 
{\b AimID.COUPONCODE} = (ushort)'E', 
{\b AimID.UPUIDTAG} = (ushort)'X', 
{\b AimID.CODE4CB} = (ushort)'X'
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
AIM Symbology ID characters }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b SymID} : ushort \{ {\b SymID.AZTEC} = (ushort)'z', 
{\b SymID.MESA} = (ushort)'z', 
{\b SymID.CODABAR} = (ushort)'a', 
{\b SymID.CODE11} = (ushort)'h', 
{\b SymID.CODE128} = (ushort)'j', 
{\b SymID.CODE39} = (ushort)'b', 
{\b SymID.CODE49} = (ushort)'l', 
{\b SymID.CODE93} = (ushort)'i', 
{\b SymID.COMPOSITE} = (ushort)'y', 
{\b SymID.DATAMATRIX} = (ushort)'w', 
{\b SymID.EAN} = (ushort)'d', 
{\b SymID.INT25} = (ushort)'e', 
{\b SymID.MAXICODE} = (ushort)'x', 
{\b SymID.MICROPDF} = (ushort)'R', 
{\b SymID.PDF417} = (ushort)'r', 
{\b SymID.POSTNET} = (ushort)'P', 
{\b SymID.OCR} = (ushort)'O', 
{\b SymID.QR} = (ushort)'s', 
{\b SymID.RSS} = (ushort)'y', 
{\b SymID.UPC} = (ushort)'c', 
{\b SymID.ISBT} = (ushort)'j', 
{\b SymID.BPO} = (ushort)'B', 
{\b SymID.CANPOST} = (ushort)'C', 
{\b SymID.AUSPOST} = (ushort)'A', 
{\b SymID.IATA25} = (ushort)'f', 
{\b SymID.CODABLOCK} = (ushort)'q', 
{\b SymID.JAPOST} = (ushort)'J', 
{\b SymID.PLANET} = (ushort)'L', 
{\b SymID.DUTCHPOST} = (ushort)'K', 
{\b SymID.MSI} = (ushort)'g', 
{\b SymID.TLC39} = (ushort)'T', 
{\b SymID.MATRIX25} = (ushort)'m', 
{\b SymID.KORPOST} = (ushort)'?', 
{\b SymID.TRIOPTIC} = (ushort)'=', 
{\b SymID.CODE32} = (ushort)'<', 
{\b SymID.STRT25} = (ushort)'f', 
{\b SymID.PLESSEY} = (ushort)'n', 
{\b SymID.CHINAPOST} = (ushort)'Q', 
{\b SymID.TELEPEN} = (ushort)'t', 
{\b SymID.CODE16K} = (ushort)'o', 
{\b SymID.POSICODE} = (ushort)'W', 
{\b SymID.COUPONCODE} = (ushort)'c', 
{\b SymID.UPUIDTAG} = (ushort)'N', 
{\b SymID.CODE4CB} = (ushort)'M'
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
HHP Symbology ID characters }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b SymbolFlags} \{ {\b SymbolFlags.ENABLE} = 0x00000001, 
{\b SymbolFlags.CHECK_ENABLE} = 0x00000002, 
{\b SymbolFlags.CHECK_TRANSMIT} = 0x00000004, 
{\b SymbolFlags.START_STOP_XMIT} = 0x00000008, 
{\b SymbolFlags.ENABLE_APPEND_MODE} = 0x00000010, 
{\b SymbolFlags.ENABLE_FULLASCII} = 0x00000020, 
{\b SymbolFlags.NUM_SYS_TRANSMIT} = 0x00000040, 
{\b SymbolFlags.EN_2_DIGIT_ADDENDA} = 0x00000080, 
{\b SymbolFlags.EN_5_DIGIT_ADDENDA} = 0x00000100, 
{\b SymbolFlags.ADDENDA_REQUIRED} = 0x00000200, 
{\b SymbolFlags.ADDENDA_SEPARATOR} = 0x00000400, 
{\b SymbolFlags.EXPANDED_UPCE} = 0x00000800, 
{\b SymbolFlags.UPCE1_ENABLE} = 0x00001000, 
{\b SymbolFlags.COMPOSITE_UPC} = 0x00002000, 
{\b SymbolFlags.AZTEC_RUNE} = 0x00004000, 
{\b SymbolFlags.AUSTRALIAN_BAR_WIDTH} = 0x00010000, 
{\b SymbolFlags.AUS_CUST_FIELD_NUM} = 0x00020000, 
{\b SymbolFlags.AUS_CUST_FIELD_AlPHA} = 0x00040000, 
{\b SymbolFlags.ENABLE_MESA_IMS} = 0x00020000, 
{\b SymbolFlags.ENABLE_MESA_1MS} = 0x00040000, 
{\b SymbolFlags.ENABLE_MESA_3MS} = 0x00080000, 
{\b SymbolFlags.ENABLE_MESA_9MS} = 0x00100000, 
{\b SymbolFlags.ENABLE_MESA_UMS} = 0x00200000, 
{\b SymbolFlags.ENABLE_MESA_EMS} = 0x00400000, 
{\b SymbolFlags.ENABLE_MESA_MASK} = 0x007E0000, 
{\b SymbolFlags.RSE_ENABLE} = 0x00800000, 
{\b SymbolFlags.RSL_ENABLE} = 0x01000000, 
{\b SymbolFlags.RSS_ENABLE} = 0x02000000, 
{\b SymbolFlags.RSX_ENABLE_MASK} = 0x03800000, 
{\b SymbolFlags.TELEPEN_OLD_STYLE} = 0x04000000, 
{\b SymbolFlags.POSICODE_LIMITED_1} = 0x08000000, 
{\b SymbolFlags.POSICODE_LIMITED_2} = 0x10000000, 
{\b SymbolFlags.CODABAR_CONCATENATE} = 0x20000000
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Symbology flag }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b WM_ID} \{ {\b WM_ID.WM_USER} = 0x0400, 
{\b WM_ID.WM_SDK_EVENT_HWND_MSG} = (WM_USER + 14534), 
{\b WM_ID.WM_SDK_PROGRESS_HWND_MSG} = (WM_USER + 14535), 
{\b WM_ID.WM_SDK_IMAGER_FLASHING} = (WM_USER + 14536), 
{\b WM_ID.WM_SDK_POWER_EVENT} = (WM_USER + 14537), 
{\b WM_ID.WM_SDK_SEQ_BARCODE_READ} = (WM_USER + 14538)
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Windows message IDs }}}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumeration Type Documentation\par
\pard\plain 
{\xe \v Action\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:Action}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum CSLibrary.Barcode.Constants.Action{\f2 [strong]}}}
\par
{\bkmkstart AAAAAAABKT}
{\bkmkend AAAAAAABKT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Action Commands }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v AIMER_CMD\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:AIMER_CMD}
{\qr AIMER_CMD{\bkmkstart AAAAAAABKU}
{\bkmkend AAAAAAABKU}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Aimer command (turn aimers on/off). \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ILLUMINATION_CMD\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:ILLUMINATION_CMD}
{\qr ILLUMINATION_CMD{\bkmkstart AAAAAAABKV}
{\bkmkend AAAAAAABKV}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
No longer supported by imagers. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v BEEP_CMD\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:BEEP_CMD}
{\qr BEEP_CMD{\bkmkstart AAAAAAABKW}
{\bkmkend AAAAAAABKW}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Beeper command (sound a single or double beep). \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
}
}
{\xe \v AimerModes\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:AimerModes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum CSLibrary.Barcode.Constants.AimerModes{\f2 [strong]}}}
\par
{\bkmkstart AAAAAAABKX}
{\bkmkend AAAAAAABKX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Aimer Modes /summary> }}\par
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v ALWAYS_OFF\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:ALWAYS_OFF}
{\qr ALWAYS_OFF{\bkmkstart AAAAAAABKY}
{\bkmkend AAAAAAABKY}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
summary> No aimer LED's. /summary> summary> Aimer LED's and Illumination LED's on simultaneously. /summary> \par
}\cell }{\row }
{\xe \v ILLUM_AND_AIM\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:ILLUM_AND_AIM}
{\qr ILLUM_AND_AIM{\bkmkstart AAAAAAABKZ}
{\bkmkend AAAAAAABKZ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
summary> Aimer LED's always on. /summary> \par
}\cell }{\row }
{\xe \v ALWAYS_ON\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:ALWAYS_ON}
{\qr ALWAYS_ON{\bkmkstart AAAAAAABLA}
{\bkmkend AAAAAAABLA}
\cell }{\cell }{\row }
}
}
{\xe \v AimID\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:AimID}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum CSLibrary.Barcode.Constants.AimID : ushort{\f2 [strong]}}}
\par
{\bkmkstart AAAAAAABLB}
{\bkmkend AAAAAAABLB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
AIM Symbology ID characters }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v AZTEC\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:AZTEC}
{\qr AZTEC{\bkmkstart AAAAAAABLC}
{\bkmkend AAAAAAABLC}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Aztec Code \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v MESA\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:MESA}
{\qr MESA{\bkmkstart AAAAAAABLD}
{\bkmkend AAAAAAABLD}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Aztec Mesa \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CODABAR\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:CODABAR}
{\qr CODABAR{\bkmkstart AAAAAAABLE}
{\bkmkend AAAAAAABLE}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Codabar \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CODE11\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:CODE11}
{\qr CODE11{\bkmkstart AAAAAAABLF}
{\bkmkend AAAAAAABLF}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Code 11 \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CODE128\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:CODE128}
{\qr CODE128{\bkmkstart AAAAAAABLG}
{\bkmkend AAAAAAABLG}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Code 128 \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CODE39\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:CODE39}
{\qr CODE39{\bkmkstart AAAAAAABLH}
{\bkmkend AAAAAAABLH}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Code 39 \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CODE49\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:CODE49}
{\qr CODE49{\bkmkstart AAAAAAABLI}
{\bkmkend AAAAAAABLI}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Code 49 \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CODE93\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:CODE93}
{\qr CODE93{\bkmkstart AAAAAAABLJ}
{\bkmkend AAAAAAABLJ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Code 93 \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v COMPOSITE\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:COMPOSITE}
{\qr COMPOSITE{\bkmkstart AAAAAAABLK}
{\bkmkend AAAAAAABLK}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EAN\'95UCC Composite \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v DATAMATRIX\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:DATAMATRIX}
{\qr DATAMATRIX{\bkmkstart AAAAAAABLL}
{\bkmkend AAAAAAABLL}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Data Matrix \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v EAN\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:EAN}
{\qr EAN{\bkmkstart AAAAAAABLM}
{\bkmkend AAAAAAABLM}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EAN-8 \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v INT25\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:INT25}
{\qr INT25{\bkmkstart AAAAAAABLN}
{\bkmkend AAAAAAABLN}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Interleaved 2 of 5 \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v MAXICODE\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:MAXICODE}
{\qr MAXICODE{\bkmkstart AAAAAAABLO}
{\bkmkend AAAAAAABLO}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
MaxiCode \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v MICROPDF\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:MICROPDF}
{\qr MICROPDF{\bkmkstart AAAAAAABLP}
{\bkmkend AAAAAAABLP}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
MicroPDF417 \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v PDF417\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:PDF417}
{\qr PDF417{\bkmkstart AAAAAAABLQ}
{\bkmkend AAAAAAABLQ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PDF417 \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v OCR\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:OCR}
{\qr OCR{\bkmkstart AAAAAAABLR}
{\bkmkend AAAAAAABLR}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OCR US Money Font \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v QR\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:QR}
{\qr QR{\bkmkstart AAAAAAABLS}
{\bkmkend AAAAAAABLS}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
QR Code \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v RSS\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:RSS}
{\qr RSS{\bkmkstart AAAAAAABLT}
{\bkmkend AAAAAAABLT}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reduced Space Symbology \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v UPC\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:UPC}
{\qr UPC{\bkmkstart AAAAAAABLU}
{\bkmkend AAAAAAABLU}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
UPC-A \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v POSTNET\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:POSTNET}
{\qr POSTNET{\bkmkstart AAAAAAABLV}
{\bkmkend AAAAAAABLV}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Postnet \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ISBT\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:ISBT}
{\qr ISBT{\bkmkstart AAAAAAABLW}
{\bkmkend AAAAAAABLW}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ISBT 128 \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v BPO\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:BPO}
{\qr BPO{\bkmkstart AAAAAAABLX}
{\bkmkend AAAAAAABLX}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
British Post \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CANPOST\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:CANPOST}
{\qr CANPOST{\bkmkstart AAAAAAABLY}
{\bkmkend AAAAAAABLY}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Canadian Post \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v AUSPOST\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:AUSPOST}
{\qr AUSPOST{\bkmkstart AAAAAAABLZ}
{\bkmkend AAAAAAABLZ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Australian Post \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v IATA25\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:IATA25}
{\qr IATA25{\bkmkstart AAAAAAABMA}
{\bkmkend AAAAAAABMA}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Straight 2 of 5 IATA \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CODABLOCK\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:CODABLOCK}
{\qr CODABLOCK{\bkmkstart AAAAAAABMB}
{\bkmkend AAAAAAABMB}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Codablock F \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v JAPOST\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:JAPOST}
{\qr JAPOST{\bkmkstart AAAAAAABMC}
{\bkmkend AAAAAAABMC}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Japanese Post \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v PLANET\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:PLANET}
{\qr PLANET{\bkmkstart AAAAAAABMD}
{\bkmkend AAAAAAABMD}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Planet Code \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v DUTCHPOST\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:DUTCHPOST}
{\qr DUTCHPOST{\bkmkstart AAAAAAABME}
{\bkmkend AAAAAAABME}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
KIX (Netherlands) Post \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v MSI\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:MSI}
{\qr MSI{\bkmkstart AAAAAAABMF}
{\bkmkend AAAAAAABMF}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
MSI \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v TLC39\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:TLC39}
{\qr TLC39{\bkmkstart AAAAAAABMG}
{\bkmkend AAAAAAABMG}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
TCIF Linked Code 39 (TLC39) \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v MATRIX25\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:MATRIX25}
{\qr MATRIX25{\bkmkstart AAAAAAABMH}
{\bkmkend AAAAAAABMH}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Matrix 2 of 5 \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v KORPOST\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:KORPOST}
{\qr KORPOST{\bkmkstart AAAAAAABMI}
{\bkmkend AAAAAAABMI}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Korea Post \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v TRIOPTIC\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:TRIOPTIC}
{\qr TRIOPTIC{\bkmkstart AAAAAAABMJ}
{\bkmkend AAAAAAABMJ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Trioptic Code \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CODE32\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:CODE32}
{\qr CODE32{\bkmkstart AAAAAAABMK}
{\bkmkend AAAAAAABMK}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Code 32 Pharmaceutical (PARAF) \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v STRT25\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:STRT25}
{\qr STRT25{\bkmkstart AAAAAAABML}
{\bkmkend AAAAAAABML}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Straight 2 of 5 Industrial \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v PLESSEY\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:PLESSEY}
{\qr PLESSEY{\bkmkstart AAAAAAABMM}
{\bkmkend AAAAAAABMM}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Plessey Code \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CHINAPOST\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:CHINAPOST}
{\qr CHINAPOST{\bkmkstart AAAAAAABMN}
{\bkmkend AAAAAAABMN}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
China Post \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v TELEPEN\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:TELEPEN}
{\qr TELEPEN{\bkmkstart AAAAAAABMO}
{\bkmkend AAAAAAABMO}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Telepen \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CODE16K\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:CODE16K}
{\qr CODE16K{\bkmkstart AAAAAAABMP}
{\bkmkend AAAAAAABMP}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Code 16K \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v POSICODE\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:POSICODE}
{\qr POSICODE{\bkmkstart AAAAAAABMQ}
{\bkmkend AAAAAAABMQ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PosiCode \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v COUPONCODE\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:COUPONCODE}
{\qr COUPONCODE{\bkmkstart AAAAAAABMR}
{\bkmkend AAAAAAABMR}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
UPC-A with Extended Coupon Code \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v UPUIDTAG\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:UPUIDTAG}
{\qr UPUIDTAG{\bkmkstart AAAAAAABMS}
{\bkmkend AAAAAAABMS}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
UPU 4 State ID Tag \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CODE4CB\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:CODE4CB}
{\qr CODE4CB{\bkmkstart AAAAAAABMT}
{\bkmkend AAAAAAABMT}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Code 4CB (4 State Customer {\b Barcode}) \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
}
}
{\xe \v AutoExposure\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:AutoExposure}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum CSLibrary.Barcode.Constants.AutoExposure{\f2 [strong]}}}
\par
{\bkmkstart AAAAAAABMU}
{\bkmkend AAAAAAABMU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Auto Exposure type /summary> }}\par
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v BARCODE\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:BARCODE}
{\qr BARCODE{\bkmkstart AAAAAAABMV}
{\bkmkend AAAAAAABMV}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
summary> Autoexposure for decode image (darker with less noise). /summary> summary> Autoexposure for pictures. (lighter, more pleasing image). /summary> \par
}\cell }{\row }
{\xe \v PHOTO\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:PHOTO}
{\qr PHOTO{\bkmkstart AAAAAAABMW}
{\bkmkend AAAAAAABMW}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
summary> No Autoexposure. User should supply Exposure, Gain, and Frame Rate Values. /summary> \par
}\cell }{\row }
{\xe \v MANUAL\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:MANUAL}
{\qr MANUAL{\bkmkstart AAAAAAABMX}
{\bkmkend AAAAAAABMX}
\cell }{\cell }{\row }
}
}
{\xe \v BarcodeState\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:BarcodeState}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum CSLibrary.Barcode.Constants.BarcodeState{\f2 [strong]}}}
\par
{\bkmkstart AAAAAAABMY}
{\bkmkend AAAAAAABMY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Barcode} operation mode }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v IDLE\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:IDLE}
{\qr IDLE{\bkmkstart AAAAAAABMZ}
{\bkmkend AAAAAAABMZ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Device ready to use \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v BUSY\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:BUSY}
{\qr BUSY{\bkmkstart AAAAAAABNA}
{\bkmkend AAAAAAABNA}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Device is busy now \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v STOPPING\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:STOPPING}
{\qr STOPPING{\bkmkstart AAAAAAABNB}
{\bkmkend AAAAAAABNB}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Device is stopping \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
}
}
{\xe \v BaudRate\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:BaudRate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum CSLibrary.Barcode.Constants.BaudRate{\f2 [strong]}}}
\par
{\bkmkstart AAAAAAABNC}
{\bkmkend AAAAAAABNC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Serial port baud rates }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v SERIAL_BAUD_300\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:SERIAL_BAUD_300}
{\qr SERIAL_BAUD_300{\bkmkstart AAAAAAABND}
{\bkmkend AAAAAAABND}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
300 BPS \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v SERIAL_BAUD_600\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:SERIAL_BAUD_600}
{\qr SERIAL_BAUD_600{\bkmkstart AAAAAAABNE}
{\bkmkend AAAAAAABNE}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
600 BPS \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v SERIAL_BAUD_1200\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:SERIAL_BAUD_1200}
{\qr SERIAL_BAUD_1200{\bkmkstart AAAAAAABNF}
{\bkmkend AAAAAAABNF}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
1200 BPS \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v SERIAL_BAUD_2400\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:SERIAL_BAUD_2400}
{\qr SERIAL_BAUD_2400{\bkmkstart AAAAAAABNG}
{\bkmkend AAAAAAABNG}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
2400 BPS \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v SERIAL_BAUD_4800\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:SERIAL_BAUD_4800}
{\qr SERIAL_BAUD_4800{\bkmkstart AAAAAAABNH}
{\bkmkend AAAAAAABNH}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
4800 BPS \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v SERIAL_BAUD_9600\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:SERIAL_BAUD_9600}
{\qr SERIAL_BAUD_9600{\bkmkstart AAAAAAABNI}
{\bkmkend AAAAAAABNI}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
9600 BPS \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v SERIAL_BAUD_19200\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:SERIAL_BAUD_19200}
{\qr SERIAL_BAUD_19200{\bkmkstart AAAAAAABNJ}
{\bkmkend AAAAAAABNJ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
19200 BPS \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v SERIAL_BAUD_38400\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:SERIAL_BAUD_38400}
{\qr SERIAL_BAUD_38400{\bkmkstart AAAAAAABNK}
{\bkmkend AAAAAAABNK}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
38400 BPS \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v SERIAL_BAUD_57600\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:SERIAL_BAUD_57600}
{\qr SERIAL_BAUD_57600{\bkmkstart AAAAAAABNL}
{\bkmkend AAAAAAABNL}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
57600 BPS \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v SERIAL_BAUD_115200\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:SERIAL_BAUD_115200}
{\qr SERIAL_BAUD_115200{\bkmkstart AAAAAAABNM}
{\bkmkend AAAAAAABNM}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
115200 BPS \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v SERIAL_BAUD_230400\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:SERIAL_BAUD_230400}
{\qr SERIAL_BAUD_230400{\bkmkstart AAAAAAABNN}
{\bkmkend AAAAAAABNN}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
230400 BPS \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v SERIAL_BAUD_460800\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:SERIAL_BAUD_460800}
{\qr SERIAL_BAUD_460800{\bkmkstart AAAAAAABNO}
{\bkmkend AAAAAAABNO}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
460800 BPS \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v SERIAL_BAUD_921600\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:SERIAL_BAUD_921600}
{\qr SERIAL_BAUD_921600{\bkmkstart AAAAAAABNP}
{\bkmkend AAAAAAABNP}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
921600 BPS \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
}
}
{\xe \v Beep\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:Beep}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum CSLibrary.Barcode.Constants.Beep{\f2 [strong]}}}
\par
{\bkmkstart AAAAAAABNQ}
{\bkmkend AAAAAAABNQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Beep Execute enum }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v SINGLE_BEEP\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:SINGLE_BEEP}
{\qr SINGLE_BEEP{\bkmkstart AAAAAAABNR}
{\bkmkend AAAAAAABNR}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Single Beep \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v DOUBLE_BEEP\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:DOUBLE_BEEP}
{\qr DOUBLE_BEEP{\bkmkstart AAAAAAABNS}
{\bkmkend AAAAAAABNS}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Double Beep \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
}
}
{\xe \v BeeperMask\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:BeeperMask}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum CSLibrary.Barcode.Constants.BeeperMask : uint{\f2 [strong]}}}
\par
{\bkmkstart AAAAAAABNT}
{\bkmkend AAAAAAABNT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Beeper bit masks }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v ON_DECODE\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:ON_DECODE}
{\qr ON_DECODE{\bkmkstart AAAAAAABNU}
{\bkmkend AAAAAAABNU}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Beep on successful decode. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v SHORT_BEEP\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:SHORT_BEEP}
{\qr SHORT_BEEP{\bkmkstart AAAAAAABNV}
{\bkmkend AAAAAAABNV}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Beep on imager reset. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v MENU_CMD_BEEP\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:MENU_CMD_BEEP}
{\qr MENU_CMD_BEEP{\bkmkstart AAAAAAABNW}
{\bkmkend AAAAAAABNW}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Beep on receive menu command. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v BEEP_VOLUME\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:BEEP_VOLUME}
{\qr BEEP_VOLUME{\bkmkstart AAAAAAABNX}
{\bkmkend AAAAAAABNX}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the beeper volume. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ALL\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:ALL}
{\qr ALL{\bkmkstart AAAAAAABNY}
{\bkmkend AAAAAAABNY}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mask for all members valid. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
}
}
{\xe \v BeeperVolume\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:BeeperVolume}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum CSLibrary.Barcode.Constants.BeeperVolume{\f2 [strong]}}}
\par
{\bkmkstart AAAAAAABNZ}
{\bkmkend AAAAAAABNZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Beeper Volume enum /summary> }}\par
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v OFF\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:OFF}
{\qr OFF{\bkmkstart AAAAAAABOA}
{\bkmkend AAAAAAABOA}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
summary> Don't sound beeper \'96 no volume. /summary> summary> Low volume. /summary> \par
}\cell }{\row }
{\xe \v LOW\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:LOW}
{\qr LOW{\bkmkstart AAAAAAABOB}
{\bkmkend AAAAAAABOB}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
summary> Medium volume. /summary> \par
}\cell }{\row }
{\xe \v MEDIUM\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:MEDIUM}
{\qr MEDIUM{\bkmkstart AAAAAAABOC}
{\bkmkend AAAAAAABOC}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
summary> Loudest volume. /summary> \par
}\cell }{\row }
{\xe \v HIGH\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:HIGH}
{\qr HIGH{\bkmkstart AAAAAAABOD}
{\bkmkend AAAAAAABOD}
\cell }{\cell }{\row }
}
}
{\xe \v CodePage\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:CodePage}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum CSLibrary.Barcode.Constants.CodePage : uint{\f2 [strong]}}}
\par
{\bkmkstart AAAAAAABOE}
{\bkmkend AAAAAAABOE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CodePage for BarcodeData }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v CP_ACP\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:CP_ACP}
{\qr CP_ACP{\bkmkstart AAAAAAABOF}
{\bkmkend AAAAAAABOF}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
default to ANSI code page \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CP_OEMCP\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:CP_OEMCP}
{\qr CP_OEMCP{\bkmkstart AAAAAAABOG}
{\bkmkend AAAAAAABOG}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
default to OEM code page \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CP_MACCP\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:CP_MACCP}
{\qr CP_MACCP{\bkmkstart AAAAAAABOH}
{\bkmkend AAAAAAABOH}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
default to MAC code page \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CP_THREAD_ACP\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:CP_THREAD_ACP}
{\qr CP_THREAD_ACP{\bkmkstart AAAAAAABOI}
{\bkmkend AAAAAAABOI}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
current thread's ANSI code page \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CP_SYMBOL\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:CP_SYMBOL}
{\qr CP_SYMBOL{\bkmkstart AAAAAAABOJ}
{\bkmkend AAAAAAABOJ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SYMBOL translations \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CP_UTF7\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:CP_UTF7}
{\qr CP_UTF7{\bkmkstart AAAAAAABOK}
{\bkmkend AAAAAAABOK}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
UTF-7 translation \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CP_UTF8\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:CP_UTF8}
{\qr CP_UTF8{\bkmkstart AAAAAAABOL}
{\bkmkend AAAAAAABOL}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
UTF-8 translation \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
}
}
{\xe \v ComPort\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:ComPort}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum CSLibrary.Barcode.Constants.ComPort{\f2 [strong]}}}
\par
{\bkmkstart AAAAAAABOM}
{\bkmkend AAAAAAABOM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Connection types }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v COM1\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:COM1}
{\qr COM1{\bkmkstart AAAAAAABON}
{\bkmkend AAAAAAABON}
\cell }{\cell }{\row }
{\xe \v COM2\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:COM2}
{\qr COM2{\bkmkstart AAAAAAABOO}
{\bkmkend AAAAAAABOO}
\cell }{\cell }{\row }
{\xe \v COM3\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:COM3}
{\qr COM3{\bkmkstart AAAAAAABOP}
{\bkmkend AAAAAAABOP}
\cell }{\cell }{\row }
{\xe \v COM4\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:COM4}
{\qr COM4{\bkmkstart AAAAAAABOQ}
{\bkmkend AAAAAAABOQ}
\cell }{\cell }{\row }
{\xe \v COM5\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:COM5}
{\qr COM5{\bkmkstart AAAAAAABOR}
{\bkmkend AAAAAAABOR}
\cell }{\cell }{\row }
{\xe \v COM6\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:COM6}
{\qr COM6{\bkmkstart AAAAAAABOS}
{\bkmkend AAAAAAABOS}
\cell }{\cell }{\row }
{\xe \v COM7\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:COM7}
{\qr COM7{\bkmkstart AAAAAAABOT}
{\bkmkend AAAAAAABOT}
\cell }{\cell }{\row }
{\xe \v COM8\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:COM8}
{\qr COM8{\bkmkstart AAAAAAABOU}
{\bkmkend AAAAAAABOU}
\cell }{\cell }{\row }
{\xe \v COM9\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:COM9}
{\qr COM9{\bkmkstart AAAAAAABOV}
{\bkmkend AAAAAAABOV}
\cell }{\cell }{\row }
{\xe \v COM10\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:COM10}
{\qr COM10{\bkmkstart AAAAAAABOW}
{\bkmkend AAAAAAABOW}
\cell }{\cell }{\row }
{\xe \v COM11\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:COM11}
{\qr COM11{\bkmkstart AAAAAAABOX}
{\bkmkend AAAAAAABOX}
\cell }{\cell }{\row }
{\xe \v COM12\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:COM12}
{\qr COM12{\bkmkstart AAAAAAABOY}
{\bkmkend AAAAAAABOY}
\cell }{\cell }{\row }
{\xe \v COM13\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:COM13}
{\qr COM13{\bkmkstart AAAAAAABOZ}
{\bkmkend AAAAAAABOZ}
\cell }{\cell }{\row }
{\xe \v COM14\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:COM14}
{\qr COM14{\bkmkstart AAAAAAABPA}
{\bkmkend AAAAAAABPA}
\cell }{\cell }{\row }
{\xe \v COM15\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:COM15}
{\qr COM15{\bkmkstart AAAAAAABPB}
{\bkmkend AAAAAAABPB}
\cell }{\cell }{\row }
{\xe \v COM16\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:COM16}
{\qr COM16{\bkmkstart AAAAAAABPC}
{\bkmkend AAAAAAABPC}
\cell }{\cell }{\row }
{\xe \v COM17\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:COM17}
{\qr COM17{\bkmkstart AAAAAAABPD}
{\bkmkend AAAAAAABPD}
\cell }{\cell }{\row }
{\xe \v COM18\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:COM18}
{\qr COM18{\bkmkstart AAAAAAABPE}
{\bkmkend AAAAAAABPE}
\cell }{\cell }{\row }
{\xe \v COM19\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:COM19}
{\qr COM19{\bkmkstart AAAAAAABPF}
{\bkmkend AAAAAAABPF}
\cell }{\cell }{\row }
{\xe \v LAST_COMM_PORT\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:LAST_COMM_PORT}
{\qr LAST_COMM_PORT{\bkmkstart AAAAAAABPG}
{\bkmkend AAAAAAABPG}
\cell }{\cell }{\row }
}
}
{\xe \v Compression\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:Compression}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum CSLibrary.Barcode.Constants.Compression{\f2 [strong]}}}
\par
{\bkmkstart AAAAAAABPH}
{\bkmkend AAAAAAABPH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compression mode formats /summary> }}\par
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v NONE\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:NONE}
{\qr NONE{\bkmkstart AAAAAAABPI}
{\bkmkend AAAAAAABPI}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
No compression. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v LOSSLESS\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:LOSSLESS}
{\qr LOSSLESS{\bkmkstart AAAAAAABPJ}
{\bkmkend AAAAAAABPJ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Huffman lossless compression. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v LOSSY\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:LOSSY}
{\qr LOSSY{\bkmkstart AAAAAAABPK}
{\bkmkend AAAAAAABPK}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
JPEG lossy compression. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
}
}
{\xe \v ConfigItems\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:ConfigItems}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum CSLibrary.Barcode.Constants.ConfigItems{\f2 [strong]}}}
\par
{\bkmkstart AAAAAAABPL}
{\bkmkend AAAAAAABPL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CONFIG Read configuration item settings /summary> }}\par
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v BEEPER_CONFIG\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:BEEPER_CONFIG}
{\qr BEEPER_CONFIG{\bkmkstart AAAAAAABPM}
{\bkmkend AAAAAAABPM}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
summary> Beeper config /summary> summary> Trigger config /summary> \par
}\cell }{\row }
{\xe \v TRIGGER_CONFIG\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:TRIGGER_CONFIG}
{\qr TRIGGER_CONFIG{\bkmkstart AAAAAAABPN}
{\bkmkend AAAAAAABPN}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
summary> Image decoder config /summary> \par
}\cell }{\row }
{\xe \v DECODER_CONFIG\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:DECODER_CONFIG}
{\qr DECODER_CONFIG{\bkmkstart AAAAAAABPO}
{\bkmkend AAAAAAABPO}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
summary> Power config /summary> \par
}\cell }{\row }
{\xe \v POWER_CONFIG\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:POWER_CONFIG}
{\qr POWER_CONFIG{\bkmkstart AAAAAAABPP}
{\bkmkend AAAAAAABPP}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
summary> Version information /summary> \par
}\cell }{\row }
{\xe \v VERSION_INFO\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:VERSION_INFO}
{\qr VERSION_INFO{\bkmkstart AAAAAAABPQ}
{\bkmkend AAAAAAABPQ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
summary> Symbology config /summary> \par
}\cell }{\row }
{\xe \v SYMBOLOGY_CONFIG\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:SYMBOLOGY_CONFIG}
{\qr SYMBOLOGY_CONFIG{\bkmkstart AAAAAAABPR}
{\bkmkend AAAAAAABPR}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
summary> Serial port config /summary> \par
}\cell }{\row }
{\xe \v SERIAL_PORT_CONFIG\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:SERIAL_PORT_CONFIG}
{\qr SERIAL_PORT_CONFIG{\bkmkstart AAAAAAABPS}
{\bkmkend AAAAAAABPS}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
summary> Image acquisition /summary> \par
}\cell }{\row }
{\xe \v IMAGE_ACQUISITION\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:IMAGE_ACQUISITION}
{\qr IMAGE_ACQUISITION{\bkmkstart AAAAAAABPT}
{\bkmkend AAAAAAABPT}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
summary> Image transfer /summary> \par
}\cell }{\row }
{\xe \v IMAGE_TRANSFER\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:IMAGE_TRANSFER}
{\qr IMAGE_TRANSFER{\bkmkstart AAAAAAABPU}
{\bkmkend AAAAAAABPU}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
summary> Sequence config /summary> \par
}\cell }{\row }
{\xe \v SEQUENCE_CONFIG\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:SEQUENCE_CONFIG}
{\qr SEQUENCE_CONFIG{\bkmkstart AAAAAAABPV}
{\bkmkend AAAAAAABPV}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
summary> All item config /summary> \par
}\cell }{\row }
{\xe \v ALL_CONFIG\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:ALL_CONFIG}
{\qr ALL_CONFIG{\bkmkstart AAAAAAABPW}
{\bkmkend AAAAAAABPW}
\cell }{\cell }{\row }
}
}
{\xe \v DataBit\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:DataBit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum CSLibrary.Barcode.Constants.DataBit{\f2 [strong]}}}
\par
{\bkmkstart AAAAAAABPX}
{\bkmkend AAAAAAABPX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Data bit }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v BITS_7\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:BITS_7}
{\qr BITS_7{\bkmkstart AAAAAAABPY}
{\bkmkend AAAAAAABPY}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
7 bit data \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v BITS_8\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:BITS_8}
{\qr BITS_8{\bkmkstart AAAAAAABPZ}
{\bkmkend AAAAAAABPZ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
8 bit data \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
}
}
{\xe \v DecoderMask\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:DecoderMask}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum CSLibrary.Barcode.Constants.DecoderMask : uint{\f2 [strong]}}}
\par
{\bkmkstart AAAAAAABQA}
{\bkmkend AAAAAAABQA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Decoder bit masks }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v MAX_MESSAGE_LENGTH\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:MAX_MESSAGE_LENGTH}
{\qr MAX_MESSAGE_LENGTH{\bkmkstart AAAAAAABQB}
{\bkmkend AAAAAAABQB}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Maximum length of decoded string. This item is Read Only. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v DECODE_MULTIPLE\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:DECODE_MULTIPLE}
{\qr DECODE_MULTIPLE{\bkmkstart AAAAAAABQC}
{\bkmkend AAAAAAABQC}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Look for and report all barcodes in captured frame. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v USE_AIMERS\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:USE_AIMERS}
{\qr USE_AIMERS{\bkmkstart AAAAAAABQD}
{\bkmkend AAAAAAABQD}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Use aimers when capturing barcodes. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v PRINT_WEIGHT\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:PRINT_WEIGHT}
{\qr PRINT_WEIGHT{\bkmkstart AAAAAAABQE}
{\bkmkend AAAAAAABQE}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Relative contrast between barcode and background (0-9). \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v DECODE_METHOD\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:DECODE_METHOD}
{\qr DECODE_METHOD{\bkmkstart AAAAAAABQF}
{\bkmkend AAAAAAABQF}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Normal, linear codes only. Fastest (may miss codes at edges of image). \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CENTER_ENABLE\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:CENTER_ENABLE}
{\qr CENTER_ENABLE{\bkmkstart AAAAAAABQG}
{\bkmkend AAAAAAABQG}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Only accept barcodes whose boundaries intersect center window. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CENTER_WINDOW\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:CENTER_WINDOW}
{\qr CENTER_WINDOW{\bkmkstart AAAAAAABQH}
{\bkmkend AAAAAAABQH}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Rectangle about center of image for previous mask. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ILLUMINAT_LED_COLOR\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:ILLUMINAT_LED_COLOR}
{\qr ILLUMINAT_LED_COLOR{\bkmkstart AAAAAAABQI}
{\bkmkend AAAAAAABQI}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Illumination LED color to use. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v UPC_ADDENDA_DELAY\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:UPC_ADDENDA_DELAY}
{\qr UPC_ADDENDA_DELAY{\bkmkstart AAAAAAABQJ}
{\bkmkend AAAAAAABQJ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v COMPOSITE_DELAY\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:COMPOSITE_DELAY}
{\qr COMPOSITE_DELAY{\bkmkstart AAAAAAABQK}
{\bkmkend AAAAAAABQK}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CONCATENATE_DELAY\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:CONCATENATE_DELAY}
{\qr CONCATENATE_DELAY{\bkmkstart AAAAAAABQL}
{\bkmkend AAAAAAABQL}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ALL\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:ALL}
{\qr ALL{\bkmkstart AAAAAAABQM}
{\bkmkend AAAAAAABQM}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
All structure members are active. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
}
}
{\xe \v DecoderMode\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:DecoderMode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum CSLibrary.Barcode.Constants.DecoderMode{\f2 [strong]}}}
\par
{\bkmkstart AAAAAAABQN}
{\bkmkend AAAAAAABQN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Decoder mode enum /summary> }}\par
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v STANDARD\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:STANDARD}
{\qr STANDARD{\bkmkstart AAAAAAABQO}
{\bkmkend AAAAAAABQO}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
summary> Normal decode mode (default) /summary> summary> Fast omni directional decoder /summary> \par
}\cell }{\row }
{\xe \v QUICK_OMNI\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:QUICK_OMNI}
{\qr QUICK_OMNI{\bkmkstart AAAAAAABQP}
{\bkmkend AAAAAAABQP}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
summary> Non omni Advanced Linear Decoder /summary> \par
}\cell }{\row }
{\xe \v NONOMNI_ALD\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:NONOMNI_ALD}
{\qr NONOMNI_ALD{\bkmkstart AAAAAAABQQ}
{\bkmkend AAAAAAABQQ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
summary> Omni directional linear decoder /summary> \par
}\cell }{\row }
{\xe \v OMNI_LINEAR\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:OMNI_LINEAR}
{\qr OMNI_LINEAR{\bkmkstart AAAAAAABQR}
{\bkmkend AAAAAAABQR}
\cell }{\cell }{\row }
}
}
{\xe \v DecoderType\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:DecoderType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum CSLibrary.Barcode.Constants.DecoderType{\f2 [strong]}}}
\par
{\bkmkstart AAAAAAABQS}
{\bkmkend AAAAAAABQS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Decoder Symbology Support }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v SDK_1D_CODES_ONLY\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:SDK_1D_CODES_ONLY}
{\qr SDK_1D_CODES_ONLY{\bkmkstart AAAAAAABQT}
{\bkmkend AAAAAAABQT}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
1D Linear and stacked linear codes only. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v SDK_1D_AND_PDF_CODES\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:SDK_1D_AND_PDF_CODES}
{\qr SDK_1D_AND_PDF_CODES{\bkmkstart AAAAAAABQU}
{\bkmkend AAAAAAABQU}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Same as above plus PDF417 and MicroPDF417. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v SDK_1D_AND_2D_CODES\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:SDK_1D_AND_2D_CODES}
{\qr SDK_1D_AND_2D_CODES{\bkmkstart AAAAAAABQV}
{\bkmkend AAAAAAABQV}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
All symbologies. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
}
}
{\xe \v DutyCycle\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:DutyCycle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum CSLibrary.Barcode.Constants.DutyCycle{\f2 [strong]}}}
\par
{\bkmkstart AAAAAAABQW}
{\bkmkend AAAAAAABQW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Capture Illumination Duty Cycle /summary> }}\par
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v DUTY_CYCLE_OFF\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:DUTY_CYCLE_OFF}
{\qr DUTY_CYCLE_OFF{\bkmkstart AAAAAAABQX}
{\bkmkend AAAAAAABQX}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
summary> Keep off during image capture. /summary> summary> Turn on for image capture. /summary> \par
}\cell }{\row }
{\xe \v DUTY_CYCLE_ON\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:DUTY_CYCLE_ON}
{\qr DUTY_CYCLE_ON{\bkmkstart AAAAAAABQY}
{\bkmkend AAAAAAABQY}
\cell }{\cell }{\row }
}
}
{\xe \v EngineType\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:EngineType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum CSLibrary.Barcode.Constants.EngineType{\f2 [strong]}}}
\par
{\bkmkstart AAAAAAABQZ}
{\bkmkend AAAAAAABQZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Engine Id values from imager. /summary> }}\par
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v NONE\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:NONE}
{\qr NONE{\bkmkstart AAAAAAABRA}
{\bkmkend AAAAAAABRA}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
summary> Engine Id values from imager. /summary> summary> Engine Id values from imager. /summary> \par
}\cell }{\row }
{\xe \v IT4200\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:IT4200}
{\qr IT4200{\bkmkstart AAAAAAABRB}
{\bkmkend AAAAAAABRB}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
summary> Engine Id values from imager. /summary> \par
}\cell }{\row }
{\xe \v IT4000\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:IT4000}
{\qr IT4000{\bkmkstart AAAAAAABRC}
{\bkmkend AAAAAAABRC}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
summary> Engine Id values from imager. /summary> \par
}\cell }{\row }
{\xe \v IT4100\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:IT4100}
{\qr IT4100{\bkmkstart AAAAAAABRD}
{\bkmkend AAAAAAABRD}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
summary> Engine Id values from imager. /summary> \par
}\cell }{\row }
{\xe \v IT4300\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:IT4300}
{\qr IT4300{\bkmkstart AAAAAAABRE}
{\bkmkend AAAAAAABRE}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
summary> Engine Id values from imager. /summary> \par
}\cell }{\row }
{\xe \v IT5X00VGA\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:IT5X00VGA}
{\qr IT5X00VGA{\bkmkstart AAAAAAABRF}
{\bkmkend AAAAAAABRF}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
summary> Engine Id values from imager. /summary> \par
}\cell }{\row }
{\xe \v IT5X00VGA_PSOC\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:IT5X00VGA_PSOC}
{\qr IT5X00VGA_PSOC{\bkmkstart AAAAAAABRG}
{\bkmkend AAAAAAABRG}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
summary> Engine Id values from imager. /summary> \par
}\cell }{\row }
{\xe \v IT5X00\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:IT5X00}
{\qr IT5X00{\bkmkstart AAAAAAABRH}
{\bkmkend AAAAAAABRH}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
summary> Engine Id values from imager. /summary> \par
}\cell }{\row }
{\xe \v IT5X00_PSOC\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:IT5X00_PSOC}
{\qr IT5X00_PSOC{\bkmkstart AAAAAAABRI}
{\bkmkend AAAAAAABRI}
\cell }{\cell }{\row }
}
}
{\xe \v EventType\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:EventType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum CSLibrary.Barcode.Constants.EventType{\f2 [strong]}}}
\par
{\bkmkstart AAAAAAABRJ}
{\bkmkend AAAAAAABRJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Event type enum }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v BARCODE_EVENT\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:BARCODE_EVENT}
{\qr BARCODE_EVENT{\bkmkstart AAAAAAABRK}
{\bkmkend AAAAAAABRK}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Barcode} event \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v IMAGE_EVENT\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:IMAGE_EVENT}
{\qr IMAGE_EVENT{\bkmkstart AAAAAAABRL}
{\bkmkend AAAAAAABRL}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Image event \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v TEXT_MSG_EVENT\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:TEXT_MSG_EVENT}
{\qr TEXT_MSG_EVENT{\bkmkstart AAAAAAABRM}
{\bkmkend AAAAAAABRM}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Text} message event \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v INTELIMG_BARCODE_EVENT\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:INTELIMG_BARCODE_EVENT}
{\qr INTELIMG_BARCODE_EVENT{\bkmkstart AAAAAAABRN}
{\bkmkend AAAAAAABRN}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Intelligent barcode event \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v INTELIMG_IMAGE_EVENT\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:INTELIMG_IMAGE_EVENT}
{\qr INTELIMG_IMAGE_EVENT{\bkmkstart AAAAAAABRO}
{\bkmkend AAAAAAABRO}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Intelligent image event \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v TRIGGER_EVENT\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:TRIGGER_EVENT}
{\qr TRIGGER_EVENT{\bkmkstart AAAAAAABRP}
{\bkmkend AAAAAAABRP}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Not fully implemented. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
}
}
{\xe \v FrameRate\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:FrameRate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum CSLibrary.Barcode.Constants.FrameRate{\f2 [strong]}}}
\par
{\bkmkstart AAAAAAABRQ}
{\bkmkend AAAAAAABRQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Frame rate enum /summary> }}\par
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v R_1_FRAMES_PER_SEC\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:R_1_FRAMES_PER_SEC}
{\qr R_1_FRAMES_PER_SEC{\bkmkstart AAAAAAABRR}
{\bkmkend AAAAAAABRR}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
summary> Frame rate enum /summary> summary> Frame rate enum /summary> \par
}\cell }{\row }
{\xe \v R_2_FRAMES_PER_SEC\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:R_2_FRAMES_PER_SEC}
{\qr R_2_FRAMES_PER_SEC{\bkmkstart AAAAAAABRS}
{\bkmkend AAAAAAABRS}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
summary> Frame rate enum /summary> \par
}\cell }{\row }
{\xe \v R_3_FRAMES_PER_SEC\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:R_3_FRAMES_PER_SEC}
{\qr R_3_FRAMES_PER_SEC{\bkmkstart AAAAAAABRT}
{\bkmkend AAAAAAABRT}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
summary> Frame rate enum /summary> \par
}\cell }{\row }
{\xe \v R_4_FRAMES_PER_SEC\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:R_4_FRAMES_PER_SEC}
{\qr R_4_FRAMES_PER_SEC{\bkmkstart AAAAAAABRU}
{\bkmkend AAAAAAABRU}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
summary> Frame rate enum /summary> \par
}\cell }{\row }
{\xe \v R_5_FRAMES_PER_SEC\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:R_5_FRAMES_PER_SEC}
{\qr R_5_FRAMES_PER_SEC{\bkmkstart AAAAAAABRV}
{\bkmkend AAAAAAABRV}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
summary> Frame rate enum /summary> \par
}\cell }{\row }
{\xe \v R_6_FRAMES_PER_SEC\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:R_6_FRAMES_PER_SEC}
{\qr R_6_FRAMES_PER_SEC{\bkmkstart AAAAAAABRW}
{\bkmkend AAAAAAABRW}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
summary> Frame rate enum /summary> \par
}\cell }{\row }
{\xe \v R_10_FRAMES_PER_SEC\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:R_10_FRAMES_PER_SEC}
{\qr R_10_FRAMES_PER_SEC{\bkmkstart AAAAAAABRX}
{\bkmkend AAAAAAABRX}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
summary> Frame rate enum /summary> \par
}\cell }{\row }
{\xe \v R_12_FRAMES_PER_SEC\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:R_12_FRAMES_PER_SEC}
{\qr R_12_FRAMES_PER_SEC{\bkmkstart AAAAAAABRY}
{\bkmkend AAAAAAABRY}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
summary> Frame rate enum /summary> \par
}\cell }{\row }
{\xe \v R_15_FRAMES_PER_SEC\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:R_15_FRAMES_PER_SEC}
{\qr R_15_FRAMES_PER_SEC{\bkmkstart AAAAAAABRZ}
{\bkmkend AAAAAAABRZ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
summary> Frame rate enum /summary> \par
}\cell }{\row }
{\xe \v R_20_FRAMES_PER_SEC\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:R_20_FRAMES_PER_SEC}
{\qr R_20_FRAMES_PER_SEC{\bkmkstart AAAAAAABSA}
{\bkmkend AAAAAAABSA}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
summary> Frame rate enum /summary> \par
}\cell }{\row }
{\xe \v R_30_FRAMES_PER_SEC\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:R_30_FRAMES_PER_SEC}
{\qr R_30_FRAMES_PER_SEC{\bkmkstart AAAAAAABSB}
{\bkmkend AAAAAAABSB}
\cell }{\cell }{\row }
}
}
{\xe \v Gain\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:Gain}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum CSLibrary.Barcode.Constants.Gain{\f2 [strong]}}}
\par
{\bkmkstart AAAAAAABSC}
{\bkmkend AAAAAAABSC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Min and Max manual exposure Gain Values /summary> }}\par
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v GAIN_1x\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:GAIN_1x}
{\qr GAIN_1x{\bkmkstart AAAAAAABSD}
{\bkmkend AAAAAAABSD}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
summary> Min and Max manual exposure Gain Values /summary> summary> Min and Max manual exposure Gain Values /summary> \par
}\cell }{\row }
{\xe \v GAIN_2x\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:GAIN_2x}
{\qr GAIN_2x{\bkmkstart AAAAAAABSE}
{\bkmkend AAAAAAABSE}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
summary> Min and Max manual exposure Gain Values /summary> \par
}\cell }{\row }
{\xe \v GAIN_4x\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:GAIN_4x}
{\qr GAIN_4x{\bkmkstart AAAAAAABSF}
{\bkmkend AAAAAAABSF}
\cell }{\cell }{\row }
}
}
{\xe \v IllumLedColor\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:IllumLedColor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum CSLibrary.Barcode.Constants.IllumLedColor{\f2 [strong]}}}
\par
{\bkmkstart AAAAAAABSG}
{\bkmkend AAAAAAABSG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Led Color /summary> }}\par
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v SECONDARY_LEDS\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:SECONDARY_LEDS}
{\qr SECONDARY_LEDS{\bkmkstart AAAAAAABSH}
{\bkmkend AAAAAAABSH}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
summary> Secondary Color (Green/White/whatever) if supported /summary> summary> Default/Primary Illumination color (usually red) /summary> \par
}\cell }{\row }
{\xe \v PRIMARY_LEDS\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:PRIMARY_LEDS}
{\qr PRIMARY_LEDS{\bkmkstart AAAAAAABSI}
{\bkmkend AAAAAAABSI}
\cell }{\cell }{\row }
}
}
{\xe \v ImagerType\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:ImagerType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum CSLibrary.Barcode.Constants.ImagerType{\f2 [strong]}}}
\par
{\bkmkstart AAAAAAABSJ}
{\bkmkend AAAAAAABSJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Imager Type (Decoded Out or Non Decoded Out) }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v UNKNOWN_IMAGER\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:UNKNOWN_IMAGER}
{\qr UNKNOWN_IMAGER{\bkmkstart AAAAAAABSK}
{\bkmkend AAAAAAABSK}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Unable to determine engine type. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v DECODED_IMAGER_4080\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:DECODED_IMAGER_4080}
{\qr DECODED_IMAGER_4080{\bkmkstart AAAAAAABSL}
{\bkmkend AAAAAAABSL}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Serial (RS-232) 4080 imager with internal decoder. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v DECODED_IMAGER_4080_USB\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:DECODED_IMAGER_4080_USB}
{\qr DECODED_IMAGER_4080_USB{\bkmkstart AAAAAAABSM}
{\bkmkend AAAAAAABSM}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
USB serial 4080 imager with internal decoder. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v NON_DECODED_IMAGER_4000\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:NON_DECODED_IMAGER_4000}
{\qr NON_DECODED_IMAGER_4000{\bkmkstart AAAAAAABSN}
{\bkmkend AAAAAAABSN}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Serial (RS-232) 4000 imager with internal decoder. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v DECODED_IMAGER_5080VGA\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:DECODED_IMAGER_5080VGA}
{\qr DECODED_IMAGER_5080VGA{\bkmkstart AAAAAAABSO}
{\bkmkend AAAAAAABSO}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Serial (RS-232) 5080 VGA imager with internal decoder. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v DECODED_IMAGER_5080VGA_USB\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:DECODED_IMAGER_5080VGA_USB}
{\qr DECODED_IMAGER_5080VGA_USB{\bkmkstart AAAAAAABSP}
{\bkmkend AAAAAAABSP}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
USB serial 5080 VGA imager with internal decoder. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v NON_DECODED_IMAGER_5000VGA\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:NON_DECODED_IMAGER_5000VGA}
{\qr NON_DECODED_IMAGER_5000VGA{\bkmkstart AAAAAAABSQ}
{\bkmkend AAAAAAABSQ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Serial (RS-232) 5000 VGA imager with internal decoder. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v DECODED_IMAGER_5080VGA_PSOC\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:DECODED_IMAGER_5080VGA_PSOC}
{\qr DECODED_IMAGER_5080VGA_PSOC{\bkmkstart AAAAAAABSR}
{\bkmkend AAAAAAABSR}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Serial (RS-232) 5080 VGA imager with internal decoder and PSOC. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v DECODED_IMAGER_5080VGA_PSOC_USB\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:DECODED_IMAGER_5080VGA_PSOC_USB}
{\qr DECODED_IMAGER_5080VGA_PSOC_USB{\bkmkstart AAAAAAABSS}
{\bkmkend AAAAAAABSS}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
USB serial 5080 VGA imager with internal decoder and PSOC. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v NON_DECODED_IMAGER_5000VGA_PSOC\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:NON_DECODED_IMAGER_5000VGA_PSOC}
{\qr NON_DECODED_IMAGER_5000VGA_PSOC{\bkmkstart AAAAAAABST}
{\bkmkend AAAAAAABST}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Serial (RS-232) 5000 VGA imager with internal decoder and PSOC. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v DECODED_IMAGER_5080\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:DECODED_IMAGER_5080}
{\qr DECODED_IMAGER_5080{\bkmkstart AAAAAAABSU}
{\bkmkend AAAAAAABSU}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Serial (RS-232) 5080 imager with internal decoder. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v DECODED_IMAGER_5080_USB\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:DECODED_IMAGER_5080_USB}
{\qr DECODED_IMAGER_5080_USB{\bkmkstart AAAAAAABSV}
{\bkmkend AAAAAAABSV}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
USB serial 5080 imager with internal decoder. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v NON_DECODED_IMAGER_5000\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:NON_DECODED_IMAGER_5000}
{\qr NON_DECODED_IMAGER_5000{\bkmkstart AAAAAAABSW}
{\bkmkend AAAAAAABSW}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Serial (RS-232) 5000 imager with internal decoder. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v DECODED_IMAGER_5080_PSOC\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:DECODED_IMAGER_5080_PSOC}
{\qr DECODED_IMAGER_5080_PSOC{\bkmkstart AAAAAAABSX}
{\bkmkend AAAAAAABSX}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Serial (RS-232) 5080 imager with internal decoder and PSOC. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v DECODED_IMAGER_5080_PSOC_USB\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:DECODED_IMAGER_5080_PSOC_USB}
{\qr DECODED_IMAGER_5080_PSOC_USB{\bkmkstart AAAAAAABSY}
{\bkmkend AAAAAAABSY}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
USB serial 5080 imager with internal decoder and PSOC. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v NON_DECODED_IMAGER_5000_PSOC\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:NON_DECODED_IMAGER_5000_PSOC}
{\qr NON_DECODED_IMAGER_5000_PSOC{\bkmkstart AAAAAAABSZ}
{\bkmkend AAAAAAABSZ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Serial (RS-232) 5000 imager with internal decoder and PSOC. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
}
}
{\xe \v ImgAcquisitionMask\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:ImgAcquisitionMask}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum CSLibrary.Barcode.Constants.ImgAcquisitionMask : uint{\f2 [strong]}}}
\par
{\bkmkstart AAAAAAABTA}
{\bkmkend AAAAAAABTA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Image Acquisition bit masks }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v WHITE_VALUE_MASK\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:WHITE_VALUE_MASK}
{\qr WHITE_VALUE_MASK{\bkmkstart AAAAAAABTB}
{\bkmkend AAAAAAABTB}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Target value (0-255) for the \'93white\'94 pixel. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v WHITE_WINDOW_MASK\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:WHITE_WINDOW_MASK}
{\qr WHITE_WINDOW_MASK{\bkmkstart AAAAAAABTC}
{\bkmkend AAAAAAABTC}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Acceptable delta from target white. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v MAX_CAPTURE_RETRIES_MASK\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:MAX_CAPTURE_RETRIES_MASK}
{\qr MAX_CAPTURE_RETRIES_MASK{\bkmkstart AAAAAAABTD}
{\bkmkend AAAAAAABTD}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Max # of frames to try to get white value. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ILLUMINATION_DUTY_CYCLE_MASK\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:ILLUMINATION_DUTY_CYCLE_MASK}
{\qr ILLUMINATION_DUTY_CYCLE_MASK{\bkmkstart AAAAAAABTE}
{\bkmkend AAAAAAABTE}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
How LEDs behave during image capture. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v LIGHTS_DUTY_CYCLE_MASK\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:LIGHTS_DUTY_CYCLE_MASK}
{\qr LIGHTS_DUTY_CYCLE_MASK{\bkmkstart AAAAAAABTF}
{\bkmkend AAAAAAABTF}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Duplicate of above mask. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v AIMER_DUTY_CYCLE_MASK\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:AIMER_DUTY_CYCLE_MASK}
{\qr AIMER_DUTY_CYCLE_MASK{\bkmkstart AAAAAAABTG}
{\bkmkend AAAAAAABTG}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
How aimers behave during image capture. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v FIXED_GAIN_MASK\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:FIXED_GAIN_MASK}
{\qr FIXED_GAIN_MASK{\bkmkstart AAAAAAABTH}
{\bkmkend AAAAAAABTH}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
If manual mode, gain value to use. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v FIXED_EXPOSURE_MASK\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:FIXED_EXPOSURE_MASK}
{\qr FIXED_EXPOSURE_MASK{\bkmkstart AAAAAAABTI}
{\bkmkend AAAAAAABTI}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
If manual mode, exposure value to use. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v FRAME_RATE_MASK\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:FRAME_RATE_MASK}
{\qr FRAME_RATE_MASK{\bkmkstart AAAAAAABTJ}
{\bkmkend AAAAAAABTJ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
If manual mode, frame rate to use. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v AUTOEXPOSURE_MODE_MASK\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:AUTOEXPOSURE_MODE_MASK}
{\qr AUTOEXPOSURE_MODE_MASK{\bkmkstart AAAAAAABTK}
{\bkmkend AAAAAAABTK}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Barcode}, Photo, or manual AGC mode. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v IMAGE_CAPTURE_MODE_MASK\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:IMAGE_CAPTURE_MODE_MASK}
{\qr IMAGE_CAPTURE_MODE_MASK{\bkmkstart AAAAAAABTL}
{\bkmkend AAAAAAABTL}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Same as above mask. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v WAIT_FOR_TRIGGER_MASK\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:WAIT_FOR_TRIGGER_MASK}
{\qr WAIT_FOR_TRIGGER_MASK{\bkmkstart AAAAAAABTM}
{\bkmkend AAAAAAABTM}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Wait for trigger before capture. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v PREVIEW_MODE_IMAGE_MASK\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:PREVIEW_MODE_IMAGE_MASK}
{\qr PREVIEW_MODE_IMAGE_MASK{\bkmkstart AAAAAAABTN}
{\bkmkend AAAAAAABTN}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Capture a preview image (214x160x8 JPEG). \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v VGA_COMPATIBLE_IMAGE_MASK\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:VGA_COMPATIBLE_IMAGE_MASK}
{\qr VGA_COMPATIBLE_IMAGE_MASK{\bkmkstart AAAAAAABTO}
{\bkmkend AAAAAAABTO}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
VGA Compatible image mode \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CAPTURE_MASK_CONFIG_ALL\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:CAPTURE_MASK_CONFIG_ALL}
{\qr CAPTURE_MASK_CONFIG_ALL{\bkmkstart AAAAAAABTP}
{\bkmkend AAAAAAABTP}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mask for all configuration items. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CAPTURE_MASK_FIXED_AGC\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:CAPTURE_MASK_FIXED_AGC}
{\qr CAPTURE_MASK_FIXED_AGC{\bkmkstart AAAAAAABTQ}
{\bkmkend AAAAAAABTQ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mask for all manual exposure mode items. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CAPTURE_MASK_ALL\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:CAPTURE_MASK_ALL}
{\qr CAPTURE_MASK_ALL{\bkmkstart AAAAAAABTR}
{\bkmkend AAAAAAABTR}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mask for all structure members. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
}
}
{\xe \v ImgFormat\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:ImgFormat}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum CSLibrary.Barcode.Constants.ImgFormat{\f2 [strong]}}}
\par
{\bkmkstart AAAAAAABTS}
{\bkmkend AAAAAAABTS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Image formats /summary> }}\par
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v FF_RAW_BINARY\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:FF_RAW_BINARY}
{\qr FF_RAW_BINARY{\bkmkstart AAAAAAABTT}
{\bkmkend AAAAAAABTT}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
1 bit per pixel \'96 Each row padded out to byte boundary. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v FF_RAW_GRAY\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:FF_RAW_GRAY}
{\qr FF_RAW_GRAY{\bkmkstart AAAAAAABTU}
{\bkmkend AAAAAAABTU}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
8 bits per pixel. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v FF_TIFF_BINARY\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:FF_TIFF_BINARY}
{\qr FF_TIFF_BINARY{\bkmkstart AAAAAAABTV}
{\bkmkend AAAAAAABTV}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
TIFF bilevel uncompressed. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v FF_TIFF_BINARY_PACKBITS\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:FF_TIFF_BINARY_PACKBITS}
{\qr FF_TIFF_BINARY_PACKBITS{\bkmkstart AAAAAAABTW}
{\bkmkend AAAAAAABTW}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
TIFF bilevel packbits compressed. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v FF_TIFF_GRAY\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:FF_TIFF_GRAY}
{\qr FF_TIFF_GRAY{\bkmkstart AAAAAAABTX}
{\bkmkend AAAAAAABTX}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
TIFF 8 bits per pixel uncompressed. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v FF_JPEG_GRAY\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:FF_JPEG_GRAY}
{\qr FF_JPEG_GRAY{\bkmkstart AAAAAAABTY}
{\bkmkend AAAAAAABTY}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
JPEG lossy compression. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v FF_BMP_GRAY\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:FF_BMP_GRAY}
{\qr FF_BMP_GRAY{\bkmkstart AAAAAAABTZ}
{\bkmkend AAAAAAABTZ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Windows BMP file uncompressed. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
}
}
{\xe \v ImgTransferMask\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:ImgTransferMask}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum CSLibrary.Barcode.Constants.ImgTransferMask : uint{\f2 [strong]}}}
\par
{\bkmkstart AAAAAAABUA}
{\bkmkend AAAAAAABUA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Image Transfer bit masks }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v BITS_PER_PIXEL_MASK\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:BITS_PER_PIXEL_MASK}
{\qr BITS_PER_PIXEL_MASK{\bkmkstart AAAAAAABUB}
{\bkmkend AAAAAAABUB}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Number of bits per pixel transferred (1 or 8). \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v SUBSAMPLE_VALUE_MASK\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:SUBSAMPLE_VALUE_MASK}
{\qr SUBSAMPLE_VALUE_MASK{\bkmkstart AAAAAAABUC}
{\bkmkend AAAAAAABUC}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Subsample value (1-10). \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v BOUNDING_RECTANGLE_MASK\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:BOUNDING_RECTANGLE_MASK}
{\qr BOUNDING_RECTANGLE_MASK{\bkmkstart AAAAAAABUD}
{\bkmkend AAAAAAABUD}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Rectangular region within image to send. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v COMPRESSION_MODE_MASK\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:COMPRESSION_MODE_MASK}
{\qr COMPRESSION_MODE_MASK{\bkmkstart AAAAAAABUE}
{\bkmkend AAAAAAABUE}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
No Compression, Lossless or Lossy. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v HISTOGRAM_STRETCH_MASK\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:HISTOGRAM_STRETCH_MASK}
{\qr HISTOGRAM_STRETCH_MASK{\bkmkstart AAAAAAABUF}
{\bkmkend AAAAAAABUF}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Range -> 0 - 255. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v COMPRESSION_FACTOR_MASK\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:COMPRESSION_FACTOR_MASK}
{\qr COMPRESSION_FACTOR_MASK{\bkmkstart AAAAAAABUG}
{\bkmkend AAAAAAABUG}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
If lossy compression, image quality percent. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v EDGE_ENHANCEMENT_MASK\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:EDGE_ENHANCEMENT_MASK}
{\qr EDGE_ENHANCEMENT_MASK{\bkmkstart AAAAAAABUH}
{\bkmkend AAAAAAABUH}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Edge sharpening filter. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v GAMMA_CORRECTION_MASK\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:GAMMA_CORRECTION_MASK}
{\qr GAMMA_CORRECTION_MASK{\bkmkstart AAAAAAABUI}
{\bkmkend AAAAAAABUI}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gamma correction. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v TEXT_ENHANCEMENT_MASK\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:TEXT_ENHANCEMENT_MASK}
{\qr TEXT_ENHANCEMENT_MASK{\bkmkstart AAAAAAABUJ}
{\bkmkend AAAAAAABUJ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Text} sharpening filter. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v INFINITY_FILTER_MASK\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:INFINITY_FILTER_MASK}
{\qr INFINITY_FILTER_MASK{\bkmkstart AAAAAAABUK}
{\bkmkend AAAAAAABUK}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sharpening for image beyond normal focus. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v FLIP_IMAGE_MASK\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:FLIP_IMAGE_MASK}
{\qr FLIP_IMAGE_MASK{\bkmkstart AAAAAAABUL}
{\bkmkend AAAAAAABUL}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Rotate the image 180 degrees. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v NOISE_FILTER_MASK\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:NOISE_FILTER_MASK}
{\qr NOISE_FILTER_MASK{\bkmkstart AAAAAAABUM}
{\bkmkend AAAAAAABUM}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Smoothing (fly spec) filter. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v TRANSFER_UPDATE_HWND\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:TRANSFER_UPDATE_HWND}
{\qr TRANSFER_UPDATE_HWND{\bkmkstart AAAAAAABUN}
{\bkmkend AAAAAAABUN}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Transfer progress message window. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v TRANSFER_UPDATE_DWORD\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:TRANSFER_UPDATE_DWORD}
{\qr TRANSFER_UPDATE_DWORD{\bkmkstart AAAAAAABUO}
{\bkmkend AAAAAAABUO}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pointer to DWORD for percent of transfer complete. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v TRANSFER_MASK_ALL\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:TRANSFER_MASK_ALL}
{\qr TRANSFER_MASK_ALL{\bkmkstart AAAAAAABUP}
{\bkmkend AAAAAAABUP}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mask to select all configuration items in structure. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v TRANSFER_MASK_ALL_NO_NOTIFY\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:TRANSFER_MASK_ALL_NO_NOTIFY}
{\qr TRANSFER_MASK_ALL_NO_NOTIFY{\bkmkstart AAAAAAABUQ}
{\bkmkend AAAAAAABUQ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mask to select all structure members. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
}
}
{\xe \v Led\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:Led}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum CSLibrary.Barcode.Constants.Led{\f2 [strong]}}}
\par
{\bkmkstart AAAAAAABUR}
{\bkmkend AAAAAAABUR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Control of Led on/off }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v OFF\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:OFF}
{\qr OFF{\bkmkstart AAAAAAABUS}
{\bkmkend AAAAAAABUS}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OFF \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ON\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:ON}
{\qr ON{\bkmkstart AAAAAAABUT}
{\bkmkend AAAAAAABUT}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ON \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
}
}
{\xe \v MessageType\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:MessageType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum CSLibrary.Barcode.Constants.MessageType{\f2 [strong]}}}
\par
{\bkmkstart AAAAAAABUU}
{\bkmkend AAAAAAABUU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Message type }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v DEC_MSG\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:DEC_MSG}
{\qr DEC_MSG{\bkmkstart AAAAAAABUV}
{\bkmkend AAAAAAABUV}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Deocded barcode message \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ERR_MSG\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:ERR_MSG}
{\qr ERR_MSG{\bkmkstart AAAAAAABUW}
{\bkmkend AAAAAAABUW}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Error occur during capturing \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
}
}
{\xe \v OCR\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:OCR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum CSLibrary.Barcode.Constants.OCR{\f2 [strong]}}}
\par
{\bkmkstart AAAAAAABUX}
{\bkmkend AAAAAAABUX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Supported OCR Fonts }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v DISABLED\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:DISABLED}
{\qr DISABLED{\bkmkstart AAAAAAABUY}
{\bkmkend AAAAAAABUY}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Disable OCR Codes. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v A\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:A}
{\qr A{\bkmkstart AAAAAAABUZ}
{\bkmkend AAAAAAABUZ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enable OCR-A Font Decoding. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v B\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:B}
{\qr B{\bkmkstart AAAAAAABVA}
{\bkmkend AAAAAAABVA}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enable OCR-B Font Decoding. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v MONEY\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:MONEY}
{\qr MONEY{\bkmkstart AAAAAAABVB}
{\bkmkend AAAAAAABVB}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enable Money Font Decoding. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v MICR_UNSUPPORTED\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:MICR_UNSUPPORTED}
{\qr MICR_UNSUPPORTED{\bkmkstart AAAAAAABVC}
{\bkmkend AAAAAAABVC}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Not supported. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
}
}
{\xe \v OCRDirection\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:OCRDirection}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum CSLibrary.Barcode.Constants.OCRDirection{\f2 [strong]}}}
\par
{\bkmkstart AAAAAAABVD}
{\bkmkend AAAAAAABVD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OCR directions }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v LeftToRight\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:LeftToRight}
{\qr LeftToRight{\bkmkstart AAAAAAABVE}
{\bkmkend AAAAAAABVE}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
LeftToRight \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v TopToBottom\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:TopToBottom}
{\qr TopToBottom{\bkmkstart AAAAAAABVF}
{\bkmkend AAAAAAABVF}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
TopToBottom \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v RightToLeft\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:RightToLeft}
{\qr RightToLeft{\bkmkstart AAAAAAABVG}
{\bkmkend AAAAAAABVG}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RightToLeft \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v BottomToTop\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:BottomToTop}
{\qr BottomToTop{\bkmkstart AAAAAAABVH}
{\bkmkend AAAAAAABVH}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
BottomToTop \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
}
}
{\xe \v OnOff\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:OnOff}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum CSLibrary.Barcode.Constants.OnOff{\f2 [strong]}}}
\par
{\bkmkstart AAAAAAABVI}
{\bkmkend AAAAAAABVI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
On/Off enum }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v OFF\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:OFF}
{\qr OFF{\bkmkstart AAAAAAABVJ}
{\bkmkend AAAAAAABVJ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OFF \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ON\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:ON}
{\qr ON{\bkmkstart AAAAAAABVK}
{\bkmkend AAAAAAABVK}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ON \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
}
}
{\xe \v Parity\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:Parity}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum CSLibrary.Barcode.Constants.Parity{\f2 [strong]}}}
\par
{\bkmkstart AAAAAAABVL}
{\bkmkend AAAAAAABVL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Parity }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v NONE\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:NONE}
{\qr NONE{\bkmkstart AAAAAAABVM}
{\bkmkend AAAAAAABVM}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
No parity \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ODD\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:ODD}
{\qr ODD{\bkmkstart AAAAAAABVN}
{\bkmkend AAAAAAABVN}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Odd parity \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v EVEN\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:EVEN}
{\qr EVEN{\bkmkstart AAAAAAABVO}
{\bkmkend AAAAAAABVO}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Even parity \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v MARK\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:MARK}
{\qr MARK{\bkmkstart AAAAAAABVP}
{\bkmkend AAAAAAABVP}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mark parity \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v SPACE\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:SPACE}
{\qr SPACE{\bkmkstart AAAAAAABVQ}
{\bkmkend AAAAAAABVQ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Space parity \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
}
}
{\xe \v PlugAndPlay\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:PlugAndPlay}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum CSLibrary.Barcode.Constants.PlugAndPlay{\f2 [strong]}}}
\par
{\bkmkstart AAAAAAABVR}
{\bkmkend AAAAAAABVR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Plug and Play Command Enum }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v PNP_OCR_PASSPORT\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:PNP_OCR_PASSPORT}
{\qr PNP_OCR_PASSPORT{\bkmkstart AAAAAAABVS}
{\bkmkend AAAAAAABVS}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Plug and play \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
}
}
{\xe \v PowerMask\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:PowerMask}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum CSLibrary.Barcode.Constants.PowerMask : uint{\f2 [strong]}}}
\par
{\bkmkstart AAAAAAABVT}
{\bkmkend AAAAAAABVT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Power setting bit masks }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v TRIGGER_MODE\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:TRIGGER_MODE}
{\qr TRIGGER_MODE{\bkmkstart AAAAAAABVU}
{\bkmkend AAAAAAABVU}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v SERIAL_TRIGGER_TIMEOUT\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:SERIAL_TRIGGER_TIMEOUT}
{\qr SERIAL_TRIGGER_TIMEOUT{\bkmkstart AAAAAAABVV}
{\bkmkend AAAAAAABVV}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v STOP_MODE_TIMEOUT\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:STOP_MODE_TIMEOUT}
{\qr STOP_MODE_TIMEOUT{\bkmkstart AAAAAAABVW}
{\bkmkend AAAAAAABVW}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ILLUM_LED_INTENSITY\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:ILLUM_LED_INTENSITY}
{\qr ILLUM_LED_INTENSITY{\bkmkstart AAAAAAABVX}
{\bkmkend AAAAAAABVX}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v SYS_SPEED\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:SYS_SPEED}
{\qr SYS_SPEED{\bkmkstart AAAAAAABVY}
{\bkmkend AAAAAAABVY}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v AIMER_MODE\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:AIMER_MODE}
{\qr AIMER_MODE{\bkmkstart AAAAAAABVZ}
{\bkmkend AAAAAAABVZ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v AIMER_DURATION\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:AIMER_DURATION}
{\qr AIMER_DURATION{\bkmkstart AAAAAAABWA}
{\bkmkend AAAAAAABWA}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v AIMER_DELAY\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:AIMER_DELAY}
{\qr AIMER_DELAY{\bkmkstart AAAAAAABWB}
{\bkmkend AAAAAAABWB}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v IMAGER_IDLE_TIMEOUT\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:IMAGER_IDLE_TIMEOUT}
{\qr IMAGER_IDLE_TIMEOUT{\bkmkstart AAAAAAABWC}
{\bkmkend AAAAAAABWC}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v SLEEP_MODE_TIMEOUT\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:SLEEP_MODE_TIMEOUT}
{\qr SLEEP_MODE_TIMEOUT{\bkmkstart AAAAAAABWD}
{\bkmkend AAAAAAABWD}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v POWER_OFF_HANDLE\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:POWER_OFF_HANDLE}
{\qr POWER_OFF_HANDLE{\bkmkstart AAAAAAABWE}
{\bkmkend AAAAAAABWE}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v POWER_OFF_HWND\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:POWER_OFF_HWND}
{\qr POWER_OFF_HWND{\bkmkstart AAAAAAABWF}
{\bkmkend AAAAAAABWF}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v AUTO_AIMER_TIMEOUT\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:AUTO_AIMER_TIMEOUT}
{\qr AUTO_AIMER_TIMEOUT{\bkmkstart AAAAAAABWG}
{\bkmkend AAAAAAABWG}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ALL\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:ALL}
{\qr ALL{\bkmkstart AAAAAAABWH}
{\bkmkend AAAAAAABWH}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
All structure members are active. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
}
}
{\xe \v Result\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:Result}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum CSLibrary.Barcode.Constants.Result{\f2 [strong]}}}
\par
{\bkmkstart AAAAAAABWI}
{\bkmkend AAAAAAABWI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
These are the possible return values for all API functions They indicate either success, or the type of error encountered. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v INITIALIZE\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:INITIALIZE}
{\qr INITIALIZE{\bkmkstart AAAAAAABWJ}
{\bkmkend AAAAAAABWJ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initial error code value. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v SUCCESS\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:SUCCESS}
{\qr SUCCESS{\bkmkstart AAAAAAABWK}
{\bkmkend AAAAAAABWK}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Operation was successful. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ERR_BADFILENAME\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:ERR_BADFILENAME}
{\qr ERR_BADFILENAME{\bkmkstart AAAAAAABWL}
{\bkmkend AAAAAAABWL}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Bad file name. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ERR_BADPORT\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:ERR_BADPORT}
{\qr ERR_BADPORT{\bkmkstart AAAAAAABWM}
{\bkmkend AAAAAAABWM}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Invalid connection specified. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ERR_BADREGION\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:ERR_BADREGION}
{\qr ERR_BADREGION{\bkmkstart AAAAAAABWN}
{\bkmkend AAAAAAABWN}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Invalid image window. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ERR_DRIVER\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:ERR_DRIVER}
{\qr ERR_DRIVER{\bkmkstart AAAAAAABWO}
{\bkmkend AAAAAAABWO}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Communication error/no response. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ERR_ENGINEBUSY\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:ERR_ENGINEBUSY}
{\qr ERR_ENGINEBUSY{\bkmkstart AAAAAAABWP}
{\bkmkend AAAAAAABWP}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The scan engine temporarily busy. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ERR_FILE\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:ERR_FILE}
{\qr ERR_FILE{\bkmkstart AAAAAAABWQ}
{\bkmkend AAAAAAABWQ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Error occurred during a file operation. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ERR_FILEINCOMPATIBLE\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:ERR_FILEINCOMPATIBLE}
{\qr ERR_FILEINCOMPATIBLE{\bkmkstart AAAAAAABWR}
{\bkmkend AAAAAAABWR}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The selected file is incompatible with the imager. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ERR_FILEINVALID\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:ERR_FILEINVALID}
{\qr ERR_FILEINVALID{\bkmkstart AAAAAAABWS}
{\bkmkend AAAAAAABWS}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The selected file is invalid or corrupt. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ERR_MEMORY\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:ERR_MEMORY}
{\qr ERR_MEMORY{\bkmkstart AAAAAAABWT}
{\bkmkend AAAAAAABWT}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Out of memory/memory allocation failed. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ERR_NODECODE\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:ERR_NODECODE}
{\qr ERR_NODECODE{\bkmkstart AAAAAAABWU}
{\bkmkend AAAAAAABWU}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
No decode: timed out or no more trigger. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ERR_NODRIVER\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:ERR_NODRIVER}
{\qr ERR_NODRIVER{\bkmkstart AAAAAAABWV}
{\bkmkend AAAAAAABWV}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Communication initialization failed. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ERR_NOIMAGE\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:ERR_NOIMAGE}
{\qr ERR_NOIMAGE{\bkmkstart AAAAAAABWW}
{\bkmkend AAAAAAABWW}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
hhpGetLastImage called but no image available. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ERR_NORESPONSE\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:ERR_NORESPONSE}
{\qr ERR_NORESPONSE{\bkmkstart AAAAAAABWX}
{\bkmkend AAAAAAABWX}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Imager did not acknowledge request. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ERR_NOTCONNECTED\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:ERR_NOTCONNECTED}
{\qr ERR_NOTCONNECTED{\bkmkstart AAAAAAABWY}
{\bkmkend AAAAAAABWY}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Imager not yet connected. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ERR_PARAMETER\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:ERR_PARAMETER}
{\qr ERR_PARAMETER{\bkmkstart AAAAAAABWZ}
{\bkmkend AAAAAAABWZ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
One of the function parameters was invalid. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ERR_UNSUPPORTED\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:ERR_UNSUPPORTED}
{\qr ERR_UNSUPPORTED{\bkmkstart AAAAAAABXA}
{\bkmkend AAAAAAABXA}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The operation was not supported by the engine. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ERR_UPGRADE\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:ERR_UPGRADE}
{\qr ERR_UPGRADE{\bkmkstart AAAAAAABXB}
{\bkmkend AAAAAAABXB}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Upgrade of imager firmware failed. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ERR_MENUDECODE\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:ERR_MENUDECODE}
{\qr ERR_MENUDECODE{\bkmkstart AAAAAAABXC}
{\bkmkend AAAAAAABXC}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Symbol decoded is a menu symbol. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ERR_REFLASH\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:ERR_REFLASH}
{\qr ERR_REFLASH{\bkmkstart AAAAAAABXD}
{\bkmkend AAAAAAABXD}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Engine firmware is corrupt. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ERR_NOTRIGGER\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:ERR_NOTRIGGER}
{\qr ERR_NOTRIGGER{\bkmkstart AAAAAAABXE}
{\bkmkend AAAAAAABXE}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
During wait for decode the function we call to check a trigger return that it was released \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ERR_BADSMARTIMAGE\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:ERR_BADSMARTIMAGE}
{\qr ERR_BADSMARTIMAGE{\bkmkstart AAAAAAABXF}
{\bkmkend AAAAAAABXF}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The device did not capture a valid image for intelligent imaging. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ERR_SMARTIMAGETOOLARGE\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:ERR_SMARTIMAGETOOLARGE}
{\qr ERR_SMARTIMAGETOOLARGE{\bkmkstart AAAAAAABXG}
{\bkmkend AAAAAAABXG}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The captured image is too large to perform intelligent imaging. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ERR_BUFFER_TOO_SMALL\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:ERR_BUFFER_TOO_SMALL}
{\qr ERR_BUFFER_TOO_SMALL{\bkmkstart AAAAAAABXH}
{\bkmkend AAAAAAABXH}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Buffer passed in to small for output. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v EOT\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:EOT}
{\qr EOT{\bkmkstart AAAAAAABXI}
{\bkmkend AAAAAAABXI}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Undefined error. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ERR_READTHREAD_START\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:ERR_READTHREAD_START}
{\qr ERR_READTHREAD_START{\bkmkstart AAAAAAABXJ}
{\bkmkend AAAAAAABXJ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Error starting asynchronous transfer thread. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ERR_READTHREAD_STOP\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:ERR_READTHREAD_STOP}
{\qr ERR_READTHREAD_STOP{\bkmkstart AAAAAAABXK}
{\bkmkend AAAAAAABXK}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Error stopping asynchronous transfer thread. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ERR_POLLEVENT\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:ERR_POLLEVENT}
{\qr ERR_POLLEVENT{\bkmkstart AAAAAAABXL}
{\bkmkend AAAAAAABXL}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Error configuring transfer thread. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ERR_WRONGRESULTSTRUCT\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:ERR_WRONGRESULTSTRUCT}
{\qr ERR_WRONGRESULTSTRUCT{\bkmkstart AAAAAAABXM}
{\bkmkend AAAAAAABXM}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Wrong structure passed in for the type specified. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ERR_USER_CANCEL\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:ERR_USER_CANCEL}
{\qr ERR_USER_CANCEL{\bkmkstart AAAAAAABXN}
{\bkmkend AAAAAAABXN}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
User called hhpCancelIo to abort operation. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ERR_NAK\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:ERR_NAK}
{\qr ERR_NAK{\bkmkstart AAAAAAABXO}
{\bkmkend AAAAAAABXO}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Received a NAK on response. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ERR_COMPRESSION_FAILED\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:ERR_COMPRESSION_FAILED}
{\qr ERR_COMPRESSION_FAILED{\bkmkstart AAAAAAABXP}
{\bkmkend AAAAAAABXP}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Error compressing image data. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ERR_DECOMPRESSION_FAILED\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:ERR_DECOMPRESSION_FAILED}
{\qr ERR_DECOMPRESSION_FAILED{\bkmkstart AAAAAAABXQ}
{\bkmkend AAAAAAABXQ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Error decompressing image data. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ERR_CAPTURE_IMAGE_FAILED\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:ERR_CAPTURE_IMAGE_FAILED}
{\qr ERR_CAPTURE_IMAGE_FAILED{\bkmkstart AAAAAAABXR}
{\bkmkend AAAAAAABXR}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Imager failed to capture the image. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ERR_SHIP_IMAGE_FAILED\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:ERR_SHIP_IMAGE_FAILED}
{\qr ERR_SHIP_IMAGE_FAILED{\bkmkstart AAAAAAABXS}
{\bkmkend AAAAAAABXS}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Imager failed to ship captured image. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ERR_CONNECT_BOOT_CODE\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:ERR_CONNECT_BOOT_CODE}
{\qr ERR_CONNECT_BOOT_CODE{\bkmkstart AAAAAAABXT}
{\bkmkend AAAAAAABXT}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Imager connected but is running in boot code. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ERR_BAUD_TO_HIGH\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:ERR_BAUD_TO_HIGH}
{\qr ERR_BAUD_TO_HIGH{\bkmkstart AAAAAAABXU}
{\bkmkend AAAAAAABXU}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Requested baud rate not supported by host port. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ERR_INVALID_COMM_PARAMS\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:ERR_INVALID_COMM_PARAMS}
{\qr ERR_INVALID_COMM_PARAMS{\bkmkstart AAAAAAABXV}
{\bkmkend AAAAAAABXV}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Invalid RS-232 parameters specified. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ERR_UNICODE_UNSUPPORTED\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:ERR_UNICODE_UNSUPPORTED}
{\qr ERR_UNICODE_UNSUPPORTED{\bkmkstart AAAAAAABXW}
{\bkmkend AAAAAAABXW}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Attempted to set Code Page, but SDK is not UNICODE. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ERR_INTERNAL_ERROR\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:ERR_INTERNAL_ERROR}
{\qr ERR_INTERNAL_ERROR{\bkmkstart AAAAAAABXX}
{\bkmkend AAAAAAABXX}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Generic internal failure. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ERR_NOINTELBARCODE\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:ERR_NOINTELBARCODE}
{\qr ERR_NOINTELBARCODE{\bkmkstart AAAAAAABXY}
{\bkmkend AAAAAAABXY}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
No decode during intelligent image capture. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ERR_BADINTELIMAGE\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:ERR_BADINTELIMAGE}
{\qr ERR_BADINTELIMAGE{\bkmkstart AAAAAAABXZ}
{\bkmkend AAAAAAABXZ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Part of image window outside barcode image boundaries. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ERR_NOINTELIMAGE\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:ERR_NOINTELIMAGE}
{\qr ERR_NOINTELIMAGE{\bkmkstart AAAAAAABYA}
{\bkmkend AAAAAAABYA}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Error on retrieve intelligent image from imager. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ERR_DLL_FILE\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:ERR_DLL_FILE}
{\qr ERR_DLL_FILE{\bkmkstart AAAAAAABYB}
{\bkmkend AAAAAAABYB}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Dll file specified to SetHardwareDllFileName not found. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ERR_DECODER_INIT_FAILED\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:ERR_DECODER_INIT_FAILED}
{\qr ERR_DECODER_INIT_FAILED{\bkmkstart AAAAAAABYC}
{\bkmkend AAAAAAABYC}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Decoder inital failed \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ERR_IMAGE_PROCESSING_FAILED\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:ERR_IMAGE_PROCESSING_FAILED}
{\qr ERR_IMAGE_PROCESSING_FAILED{\bkmkstart AAAAAAABYD}
{\bkmkend AAAAAAABYD}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Image decode failed \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ERR_UNSUPPORTED_ENGINE\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:ERR_UNSUPPORTED_ENGINE}
{\qr ERR_UNSUPPORTED_ENGINE{\bkmkstart AAAAAAABYE}
{\bkmkend AAAAAAABYE}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Unsupported engine \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ERR_SYMBOLOGY_HAS_NO_RANGE\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:ERR_SYMBOLOGY_HAS_NO_RANGE}
{\qr ERR_SYMBOLOGY_HAS_NO_RANGE{\bkmkstart AAAAAAABYF}
{\bkmkend AAAAAAABYF}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The symbology has no range maximum/minimum values. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ERR_COMMUNICATIONS_ERROR\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:ERR_COMMUNICATIONS_ERROR}
{\qr ERR_COMMUNICATIONS_ERROR{\bkmkstart AAAAAAABYG}
{\bkmkend AAAAAAABYG}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Communcation error \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ERR_INVALID_PARAMETER\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:ERR_INVALID_PARAMETER}
{\qr ERR_INVALID_PARAMETER{\bkmkstart AAAAAAABYH}
{\bkmkend AAAAAAABYH}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Invalid parameter \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
}
}
{\xe \v SequenceMask\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:SequenceMask}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum CSLibrary.Barcode.Constants.SequenceMask : uint{\f2 [strong]}}}
\par
{\bkmkstart AAAAAAABYI}
{\bkmkend AAAAAAABYI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sequence bit masks }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v MODE\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:MODE}
{\qr MODE{\bkmkstart AAAAAAABYJ}
{\bkmkend AAAAAAABYJ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
sequenceMode \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v BARCODES\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:BARCODES}
{\qr BARCODES{\bkmkstart AAAAAAABYK}
{\bkmkend AAAAAAABYK}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
dwNumBarCodes and seqBarCodes[] \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ALL\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:ALL}
{\qr ALL{\bkmkstart AAAAAAABYL}
{\bkmkend AAAAAAABYL}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Everything \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
}
}
{\xe \v SequenceMode\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:SequenceMode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum CSLibrary.Barcode.Constants.SequenceMode{\f2 [strong]}}}
\par
{\bkmkstart AAAAAAABYM}
{\bkmkend AAAAAAABYM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sequence Modes type /summary> }}\par
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v DISABLED\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:DISABLED}
{\qr DISABLED{\bkmkstart AAAAAAABYN}
{\bkmkend AAAAAAABYN}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
summary> Disable Sequence Modes /summary> summary> Enable Sequence Modes /summary> \par
}\cell }{\row }
{\xe \v ENABLED\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:ENABLED}
{\qr ENABLED{\bkmkstart AAAAAAABYO}
{\bkmkend AAAAAAABYO}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
summary> Required Sequence Modes /summary> \par
}\cell }{\row }
{\xe \v REQUIRED\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:REQUIRED}
{\qr REQUIRED{\bkmkstart AAAAAAABYP}
{\bkmkend AAAAAAABYP}
\cell }{\cell }{\row }
}
}
{\xe \v SetupType\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:SetupType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum CSLibrary.Barcode.Constants.SetupType{\f2 [strong]}}}
\par
{\bkmkstart AAAAAAABYQ}
{\bkmkend AAAAAAABYQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Setup type }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v DEFAULT\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:DEFAULT}
{\qr DEFAULT{\bkmkstart AAAAAAABYR}
{\bkmkend AAAAAAABYR}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Hard coded Value. Set to current when imager "Reset To Defaults." \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CURRENT\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:CURRENT}
{\qr CURRENT{\bkmkstart AAAAAAABYS}
{\bkmkend AAAAAAABYS}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The current value in flash. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
}
}
{\xe \v StopBit\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:StopBit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum CSLibrary.Barcode.Constants.StopBit{\f2 [strong]}}}
\par
{\bkmkstart AAAAAAABYT}
{\bkmkend AAAAAAABYT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Stop bits. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v ONE\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:ONE}
{\qr ONE{\bkmkstart AAAAAAABYU}
{\bkmkend AAAAAAABYU}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
1 stop bit \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v TWO\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:TWO}
{\qr TWO{\bkmkstart AAAAAAABYV}
{\bkmkend AAAAAAABYV}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
2 stop bit \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
}
}
{\xe \v Symbol\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:Symbol}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum CSLibrary.Barcode.Constants.Symbol{\f2 [strong]}}}
\par
{\bkmkstart AAAAAAABYW}
{\bkmkend AAAAAAABYW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Symbology selection constants }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v AZTEC\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:AZTEC}
{\qr AZTEC{\bkmkstart AAAAAAABYX}
{\bkmkend AAAAAAABYX}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Aztec Code \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v MESA\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:MESA}
{\qr MESA{\bkmkstart AAAAAAABYY}
{\bkmkend AAAAAAABYY}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Aztec Mesas \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CODABAR\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:CODABAR}
{\qr CODABAR{\bkmkstart AAAAAAABYZ}
{\bkmkend AAAAAAABYZ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Codabar \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CODE11\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:CODE11}
{\qr CODE11{\bkmkstart AAAAAAABZA}
{\bkmkend AAAAAAABZA}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Code 11 \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CODE128\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:CODE128}
{\qr CODE128{\bkmkstart AAAAAAABZB}
{\bkmkend AAAAAAABZB}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Code 128 \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CODE39\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:CODE39}
{\qr CODE39{\bkmkstart AAAAAAABZC}
{\bkmkend AAAAAAABZC}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Code 39 \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CODE49\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:CODE49}
{\qr CODE49{\bkmkstart AAAAAAABZD}
{\bkmkend AAAAAAABZD}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Code 49 \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CODE93\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:CODE93}
{\qr CODE93{\bkmkstart AAAAAAABZE}
{\bkmkend AAAAAAABZE}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Code 93 \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v COMPOSITE\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:COMPOSITE}
{\qr COMPOSITE{\bkmkstart AAAAAAABZF}
{\bkmkend AAAAAAABZF}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Composite Code \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v DATAMATRIX\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:DATAMATRIX}
{\qr DATAMATRIX{\bkmkstart AAAAAAABZG}
{\bkmkend AAAAAAABZG}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Data Matrix \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v EAN8\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:EAN8}
{\qr EAN8{\bkmkstart AAAAAAABZH}
{\bkmkend AAAAAAABZH}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EAN-8 \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v EAN13\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:EAN13}
{\qr EAN13{\bkmkstart AAAAAAABZI}
{\bkmkend AAAAAAABZI}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EAN-13 \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v INT25\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:INT25}
{\qr INT25{\bkmkstart AAAAAAABZJ}
{\bkmkend AAAAAAABZJ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Interleaved 2 of 5 \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v MAXICODE\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:MAXICODE}
{\qr MAXICODE{\bkmkstart AAAAAAABZK}
{\bkmkend AAAAAAABZK}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
MaxiCode \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v MICROPDF\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:MICROPDF}
{\qr MICROPDF{\bkmkstart AAAAAAABZL}
{\bkmkend AAAAAAABZL}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
MicroPDF417 \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v OCR\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:OCR}
{\qr OCR{\bkmkstart AAAAAAABZM}
{\bkmkend AAAAAAABZM}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OCR (OCR-A, OCR-B, OCR US Money Font, MICR) \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v PDF417\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:PDF417}
{\qr PDF417{\bkmkstart AAAAAAABZN}
{\bkmkend AAAAAAABZN}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PDF417 \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v POSTNET\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:POSTNET}
{\qr POSTNET{\bkmkstart AAAAAAABZO}
{\bkmkend AAAAAAABZO}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Planet Code \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v QR\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:QR}
{\qr QR{\bkmkstart AAAAAAABZP}
{\bkmkend AAAAAAABZP}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
QR Code \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v RSS\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:RSS}
{\qr RSS{\bkmkstart AAAAAAABZQ}
{\bkmkend AAAAAAABZQ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reduced Space Symbology (RSS) \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v UPCA\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:UPCA}
{\qr UPCA{\bkmkstart AAAAAAABZR}
{\bkmkend AAAAAAABZR}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
UPC-A \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v UPCE0\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:UPCE0}
{\qr UPCE0{\bkmkstart AAAAAAABZS}
{\bkmkend AAAAAAABZS}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
UPC-E \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v UPCE1\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:UPCE1}
{\qr UPCE1{\bkmkstart AAAAAAABZT}
{\bkmkend AAAAAAABZT}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
UPC-E1 (not truly standard) \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ISBT\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:ISBT}
{\qr ISBT{\bkmkstart AAAAAAABZU}
{\bkmkend AAAAAAABZU}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ISBT \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v BPO\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:BPO}
{\qr BPO{\bkmkstart AAAAAAABZV}
{\bkmkend AAAAAAABZV}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
British Post \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CANPOST\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:CANPOST}
{\qr CANPOST{\bkmkstart AAAAAAABZW}
{\bkmkend AAAAAAABZW}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Canadian Post \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v AUSPOST\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:AUSPOST}
{\qr AUSPOST{\bkmkstart AAAAAAABZX}
{\bkmkend AAAAAAABZX}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Australian Post \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v IATA25\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:IATA25}
{\qr IATA25{\bkmkstart AAAAAAABZY}
{\bkmkend AAAAAAABZY}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Straight 2 of 5 IATA \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CODABLOCK\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:CODABLOCK}
{\qr CODABLOCK{\bkmkstart AAAAAAABZZ}
{\bkmkend AAAAAAABZZ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Codablock \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v JAPOST\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:JAPOST}
{\qr JAPOST{\bkmkstart AAAAAAACAA}
{\bkmkend AAAAAAACAA}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Japanese Post \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v PLANET\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:PLANET}
{\qr PLANET{\bkmkstart AAAAAAACAB}
{\bkmkend AAAAAAACAB}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Planet Code \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v DUTCHPOST\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:DUTCHPOST}
{\qr DUTCHPOST{\bkmkstart AAAAAAACAC}
{\bkmkend AAAAAAACAC}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
KIX (Netherlands) Post \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v MSI\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:MSI}
{\qr MSI{\bkmkstart AAAAAAACAD}
{\bkmkend AAAAAAACAD}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
MSI Code \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v TLCODE39\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:TLCODE39}
{\qr TLCODE39{\bkmkstart AAAAAAACAE}
{\bkmkend AAAAAAACAE}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
TCIF Linked Code 39 (TLC39) \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v MATRIX25\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:MATRIX25}
{\qr MATRIX25{\bkmkstart AAAAAAACAF}
{\bkmkend AAAAAAACAF}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Matrix 2 of 5 \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v KORPOST\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:KORPOST}
{\qr KORPOST{\bkmkstart AAAAAAACAG}
{\bkmkend AAAAAAACAG}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Korean Post \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v TRIOPTIC\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:TRIOPTIC}
{\qr TRIOPTIC{\bkmkstart AAAAAAACAH}
{\bkmkend AAAAAAACAH}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Trioptic Code \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CODE32\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:CODE32}
{\qr CODE32{\bkmkstart AAAAAAACAI}
{\bkmkend AAAAAAACAI}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Code 32 Pharmaceutical (PARAF) \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v STRT25\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:STRT25}
{\qr STRT25{\bkmkstart AAAAAAACAJ}
{\bkmkend AAAAAAACAJ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Straight 2 of 5 Industrial \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v PLESSEY\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:PLESSEY}
{\qr PLESSEY{\bkmkstart AAAAAAACAK}
{\bkmkend AAAAAAACAK}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Plessey Code \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CHINAPOST\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:CHINAPOST}
{\qr CHINAPOST{\bkmkstart AAAAAAACAL}
{\bkmkend AAAAAAACAL}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
China Post \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v TELEPEN\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:TELEPEN}
{\qr TELEPEN{\bkmkstart AAAAAAACAM}
{\bkmkend AAAAAAACAM}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Telepen \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CODE16K\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:CODE16K}
{\qr CODE16K{\bkmkstart AAAAAAACAN}
{\bkmkend AAAAAAACAN}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Code 16K \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v POSICODE\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:POSICODE}
{\qr POSICODE{\bkmkstart AAAAAAACAO}
{\bkmkend AAAAAAACAO}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PosiCode \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v COUPONCODE\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:COUPONCODE}
{\qr COUPONCODE{\bkmkstart AAAAAAACAP}
{\bkmkend AAAAAAACAP}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
UPC-A with Extended Coupon Code \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v UPUIDTAG\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:UPUIDTAG}
{\qr UPUIDTAG{\bkmkstart AAAAAAACAQ}
{\bkmkend AAAAAAACAQ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ID tag (UPU 4-State) \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CODE4CB\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:CODE4CB}
{\qr CODE4CB{\bkmkstart AAAAAAACAR}
{\bkmkend AAAAAAACAR}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
4 State Customer {\b Barcode} \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v NUM_SYMBOLOGIES\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:NUM_SYMBOLOGIES}
{\qr NUM_SYMBOLOGIES{\bkmkstart AAAAAAACAS}
{\bkmkend AAAAAAACAS}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get number of symbologies \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ALL\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:ALL}
{\qr ALL{\bkmkstart AAAAAAACAT}
{\bkmkend AAAAAAACAT}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
All Symbologies \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
}
}
{\xe \v SymbolFlags\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:SymbolFlags}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum CSLibrary.Barcode.Constants.SymbolFlags{\f2 [strong]}}}
\par
{\bkmkstart AAAAAAACAU}
{\bkmkend AAAAAAACAU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Symbology flag }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v ENABLE\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:ENABLE}
{\qr ENABLE{\bkmkstart AAAAAAACAV}
{\bkmkend AAAAAAACAV}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enable Symbology bit \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CHECK_ENABLE\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:CHECK_ENABLE}
{\qr CHECK_ENABLE{\bkmkstart AAAAAAACAW}
{\bkmkend AAAAAAACAW}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enable usage of check character \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CHECK_TRANSMIT\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:CHECK_TRANSMIT}
{\qr CHECK_TRANSMIT{\bkmkstart AAAAAAACAX}
{\bkmkend AAAAAAACAX}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Send check character \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v START_STOP_XMIT\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:START_STOP_XMIT}
{\qr START_STOP_XMIT{\bkmkstart AAAAAAACAY}
{\bkmkend AAAAAAACAY}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Include the start and stop characters in the decoded result string \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ENABLE_APPEND_MODE\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:ENABLE_APPEND_MODE}
{\qr ENABLE_APPEND_MODE{\bkmkstart AAAAAAACAZ}
{\bkmkend AAAAAAACAZ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Code39 append mode \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ENABLE_FULLASCII\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:ENABLE_FULLASCII}
{\qr ENABLE_FULLASCII{\bkmkstart AAAAAAACBA}
{\bkmkend AAAAAAACBA}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enable Code39 Full ASCII \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v NUM_SYS_TRANSMIT\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:NUM_SYS_TRANSMIT}
{\qr NUM_SYS_TRANSMIT{\bkmkstart AAAAAAACBB}
{\bkmkend AAAAAAACBB}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
UPC-A/UPC-e Send Num Sys \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v EN_2_DIGIT_ADDENDA\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:EN_2_DIGIT_ADDENDA}
{\qr EN_2_DIGIT_ADDENDA{\bkmkstart AAAAAAACBC}
{\bkmkend AAAAAAACBC}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enable 2 digit Addenda (UPC and EAN) \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v EN_5_DIGIT_ADDENDA\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:EN_5_DIGIT_ADDENDA}
{\qr EN_5_DIGIT_ADDENDA{\bkmkstart AAAAAAACBD}
{\bkmkend AAAAAAACBD}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enable 5 digit Addenda (UPC and EAN) \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ADDENDA_REQUIRED\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:ADDENDA_REQUIRED}
{\qr ADDENDA_REQUIRED{\bkmkstart AAAAAAACBE}
{\bkmkend AAAAAAACBE}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Only allow codes with addenda (UPC and EAN) \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ADDENDA_SEPARATOR\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:ADDENDA_SEPARATOR}
{\qr ADDENDA_SEPARATOR{\bkmkstart AAAAAAACBF}
{\bkmkend AAAAAAACBF}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Include Addenda separator space in returned string. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v EXPANDED_UPCE\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:EXPANDED_UPCE}
{\qr EXPANDED_UPCE{\bkmkstart AAAAAAACBG}
{\bkmkend AAAAAAACBG}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Extended UPC-E \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v UPCE1_ENABLE\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:UPCE1_ENABLE}
{\qr UPCE1_ENABLE{\bkmkstart AAAAAAACBH}
{\bkmkend AAAAAAACBH}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
UPC-E1 enable (use SYMBOLOGY_ENABLE for UPC-E0) \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v COMPOSITE_UPC\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:COMPOSITE_UPC}
{\qr COMPOSITE_UPC{\bkmkstart AAAAAAACBI}
{\bkmkend AAAAAAACBI}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enable UPC composite codes \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v AZTEC_RUNE\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:AZTEC_RUNE}
{\qr AZTEC_RUNE{\bkmkstart AAAAAAACBJ}
{\bkmkend AAAAAAACBJ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enable Aztec Run \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v AUSTRALIAN_BAR_WIDTH\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:AUSTRALIAN_BAR_WIDTH}
{\qr AUSTRALIAN_BAR_WIDTH{\bkmkstart AAAAAAACBK}
{\bkmkend AAAAAAACBK}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Include australian postal bar data in string \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v AUS_CUST_FIELD_NUM\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:AUS_CUST_FIELD_NUM}
{\qr AUS_CUST_FIELD_NUM{\bkmkstart AAAAAAACBL}
{\bkmkend AAAAAAACBL}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Customer fields as numeric data using the N Table. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v AUS_CUST_FIELD_AlPHA\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:AUS_CUST_FIELD_AlPHA}
{\qr AUS_CUST_FIELD_AlPHA{\bkmkstart AAAAAAACBM}
{\bkmkend AAAAAAACBM}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Customer fields as alphanumeric data using the C Table. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ENABLE_MESA_IMS\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:ENABLE_MESA_IMS}
{\qr ENABLE_MESA_IMS{\bkmkstart AAAAAAACBN}
{\bkmkend AAAAAAACBN}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mesa IMS enable \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ENABLE_MESA_1MS\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:ENABLE_MESA_1MS}
{\qr ENABLE_MESA_1MS{\bkmkstart AAAAAAACBO}
{\bkmkend AAAAAAACBO}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mesa 1MS enable \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ENABLE_MESA_3MS\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:ENABLE_MESA_3MS}
{\qr ENABLE_MESA_3MS{\bkmkstart AAAAAAACBP}
{\bkmkend AAAAAAACBP}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mesa 3MS enable \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ENABLE_MESA_9MS\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:ENABLE_MESA_9MS}
{\qr ENABLE_MESA_9MS{\bkmkstart AAAAAAACBQ}
{\bkmkend AAAAAAACBQ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mesa 9MS enable \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ENABLE_MESA_UMS\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:ENABLE_MESA_UMS}
{\qr ENABLE_MESA_UMS{\bkmkstart AAAAAAACBR}
{\bkmkend AAAAAAACBR}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mesa UMS enable \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ENABLE_MESA_EMS\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:ENABLE_MESA_EMS}
{\qr ENABLE_MESA_EMS{\bkmkstart AAAAAAACBS}
{\bkmkend AAAAAAACBS}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mesa EMS enable \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ENABLE_MESA_MASK\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:ENABLE_MESA_MASK}
{\qr ENABLE_MESA_MASK{\bkmkstart AAAAAAACBT}
{\bkmkend AAAAAAACBT}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mesa EMS Mask \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v RSE_ENABLE\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:RSE_ENABLE}
{\qr RSE_ENABLE{\bkmkstart AAAAAAACBU}
{\bkmkend AAAAAAACBU}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enable RSE Symbology bit \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v RSL_ENABLE\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:RSL_ENABLE}
{\qr RSL_ENABLE{\bkmkstart AAAAAAACBV}
{\bkmkend AAAAAAACBV}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enable RSL Symbology bit \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v RSS_ENABLE\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:RSS_ENABLE}
{\qr RSS_ENABLE{\bkmkstart AAAAAAACBW}
{\bkmkend AAAAAAACBW}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enable RSS Symbology bit \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v RSX_ENABLE_MASK\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:RSX_ENABLE_MASK}
{\qr RSX_ENABLE_MASK{\bkmkstart AAAAAAACBX}
{\bkmkend AAAAAAACBX}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enable RSS Mask \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v TELEPEN_OLD_STYLE\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:TELEPEN_OLD_STYLE}
{\qr TELEPEN_OLD_STYLE{\bkmkstart AAAAAAACBY}
{\bkmkend AAAAAAACBY}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Telepen Old Style mode. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v POSICODE_LIMITED_1\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:POSICODE_LIMITED_1}
{\qr POSICODE_LIMITED_1{\bkmkstart AAAAAAACBZ}
{\bkmkend AAAAAAACBZ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PosiCode Limited of 1 \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v POSICODE_LIMITED_2\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:POSICODE_LIMITED_2}
{\qr POSICODE_LIMITED_2{\bkmkstart AAAAAAACCA}
{\bkmkend AAAAAAACCA}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PosiCode Limited of 2 \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CODABAR_CONCATENATE\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:CODABAR_CONCATENATE}
{\qr CODABAR_CONCATENATE{\bkmkstart AAAAAAACCB}
{\bkmkend AAAAAAACCB}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Codabar concatenate. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
}
}
{\xe \v SymbolMask\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:SymbolMask}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum CSLibrary.Barcode.Constants.SymbolMask : uint{\f2 [strong]}}}
\par
{\bkmkstart AAAAAAACCC}
{\bkmkend AAAAAAACCC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Symbology bit masks }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v FLAGS\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:FLAGS}
{\qr FLAGS{\bkmkstart AAAAAAACCD}
{\bkmkend AAAAAAACCD}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Flags are valid. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v MIN_LEN\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:MIN_LEN}
{\qr MIN_LEN{\bkmkstart AAAAAAACCE}
{\bkmkend AAAAAAACCE}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Min Length valid. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v MAX_LEN\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:MAX_LEN}
{\qr MAX_LEN{\bkmkstart AAAAAAACCF}
{\bkmkend AAAAAAACCF}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Max Length valid. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v OCR_MODE\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:OCR_MODE}
{\qr OCR_MODE{\bkmkstart AAAAAAACCG}
{\bkmkend AAAAAAACCG}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OCR mode valid. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v DIRECTION\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:DIRECTION}
{\qr DIRECTION{\bkmkstart AAAAAAACCH}
{\bkmkend AAAAAAACCH}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OCR direction valid. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v TEMPLATE\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:TEMPLATE}
{\qr TEMPLATE{\bkmkstart AAAAAAACCI}
{\bkmkend AAAAAAACCI}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OCR template valid. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v GROUP_H\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:GROUP_H}
{\qr GROUP_H{\bkmkstart AAAAAAACCJ}
{\bkmkend AAAAAAACCJ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OCR group H valid. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v GROUP_G\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:GROUP_G}
{\qr GROUP_G{\bkmkstart AAAAAAACCK}
{\bkmkend AAAAAAACCK}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OCR group H valid. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CHECK_CHAR\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:CHECK_CHAR}
{\qr CHECK_CHAR{\bkmkstart AAAAAAACCL}
{\bkmkend AAAAAAACCL}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OCR check char valid. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ALL\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:ALL}
{\qr ALL{\bkmkstart AAAAAAACCM}
{\bkmkend AAAAAAACCM}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Generic all mask. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
}
}
{\xe \v SymID\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:SymID}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum CSLibrary.Barcode.Constants.SymID : ushort{\f2 [strong]}}}
\par
{\bkmkstart AAAAAAACCN}
{\bkmkend AAAAAAACCN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
HHP Symbology ID characters }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v AZTEC\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:AZTEC}
{\qr AZTEC{\bkmkstart AAAAAAACCO}
{\bkmkend AAAAAAACCO}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Aztec Code \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v MESA\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:MESA}
{\qr MESA{\bkmkstart AAAAAAACCP}
{\bkmkend AAAAAAACCP}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Aztec Mesa \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CODABAR\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:CODABAR}
{\qr CODABAR{\bkmkstart AAAAAAACCQ}
{\bkmkend AAAAAAACCQ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Codabar \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CODE11\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:CODE11}
{\qr CODE11{\bkmkstart AAAAAAACCR}
{\bkmkend AAAAAAACCR}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Code 11 \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CODE128\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:CODE128}
{\qr CODE128{\bkmkstart AAAAAAACCS}
{\bkmkend AAAAAAACCS}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Code 128 \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CODE39\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:CODE39}
{\qr CODE39{\bkmkstart AAAAAAACCT}
{\bkmkend AAAAAAACCT}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Code 39 \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CODE49\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:CODE49}
{\qr CODE49{\bkmkstart AAAAAAACCU}
{\bkmkend AAAAAAACCU}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Code 49 \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CODE93\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:CODE93}
{\qr CODE93{\bkmkstart AAAAAAACCV}
{\bkmkend AAAAAAACCV}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Code 93 \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v COMPOSITE\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:COMPOSITE}
{\qr COMPOSITE{\bkmkstart AAAAAAACCW}
{\bkmkend AAAAAAACCW}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EAN\'95UCC Composite \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v DATAMATRIX\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:DATAMATRIX}
{\qr DATAMATRIX{\bkmkstart AAAAAAACCX}
{\bkmkend AAAAAAACCX}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Data Matrix \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v EAN\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:EAN}
{\qr EAN{\bkmkstart AAAAAAACCY}
{\bkmkend AAAAAAACCY}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EAN-8 \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v INT25\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:INT25}
{\qr INT25{\bkmkstart AAAAAAACCZ}
{\bkmkend AAAAAAACCZ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Interleaved 2 of 5 \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v MAXICODE\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:MAXICODE}
{\qr MAXICODE{\bkmkstart AAAAAAACDA}
{\bkmkend AAAAAAACDA}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
MaxiCode \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v MICROPDF\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:MICROPDF}
{\qr MICROPDF{\bkmkstart AAAAAAACDB}
{\bkmkend AAAAAAACDB}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
MicroPDF417 \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v PDF417\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:PDF417}
{\qr PDF417{\bkmkstart AAAAAAACDC}
{\bkmkend AAAAAAACDC}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PDF417 \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v POSTNET\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:POSTNET}
{\qr POSTNET{\bkmkstart AAAAAAACDD}
{\bkmkend AAAAAAACDD}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Postnet \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v OCR\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:OCR}
{\qr OCR{\bkmkstart AAAAAAACDE}
{\bkmkend AAAAAAACDE}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OCR US Money Font \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v QR\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:QR}
{\qr QR{\bkmkstart AAAAAAACDF}
{\bkmkend AAAAAAACDF}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
QR Code \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v RSS\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:RSS}
{\qr RSS{\bkmkstart AAAAAAACDG}
{\bkmkend AAAAAAACDG}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reduced Space Symbology \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v UPC\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:UPC}
{\qr UPC{\bkmkstart AAAAAAACDH}
{\bkmkend AAAAAAACDH}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
UPC-A \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ISBT\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:ISBT}
{\qr ISBT{\bkmkstart AAAAAAACDI}
{\bkmkend AAAAAAACDI}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ISBT 128 \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v BPO\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:BPO}
{\qr BPO{\bkmkstart AAAAAAACDJ}
{\bkmkend AAAAAAACDJ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
British Post \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CANPOST\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:CANPOST}
{\qr CANPOST{\bkmkstart AAAAAAACDK}
{\bkmkend AAAAAAACDK}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Canadian Post \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v AUSPOST\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:AUSPOST}
{\qr AUSPOST{\bkmkstart AAAAAAACDL}
{\bkmkend AAAAAAACDL}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Australian Post \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v IATA25\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:IATA25}
{\qr IATA25{\bkmkstart AAAAAAACDM}
{\bkmkend AAAAAAACDM}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Straight 2 of 5 IATA \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CODABLOCK\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:CODABLOCK}
{\qr CODABLOCK{\bkmkstart AAAAAAACDN}
{\bkmkend AAAAAAACDN}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Codablock F \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v JAPOST\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:JAPOST}
{\qr JAPOST{\bkmkstart AAAAAAACDO}
{\bkmkend AAAAAAACDO}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Japanese Post \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v PLANET\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:PLANET}
{\qr PLANET{\bkmkstart AAAAAAACDP}
{\bkmkend AAAAAAACDP}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Planet Code \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v DUTCHPOST\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:DUTCHPOST}
{\qr DUTCHPOST{\bkmkstart AAAAAAACDQ}
{\bkmkend AAAAAAACDQ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
KIX (Netherlands) Post \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v MSI\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:MSI}
{\qr MSI{\bkmkstart AAAAAAACDR}
{\bkmkend AAAAAAACDR}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
MSI \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v TLC39\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:TLC39}
{\qr TLC39{\bkmkstart AAAAAAACDS}
{\bkmkend AAAAAAACDS}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
TCIF Linked Code 39 (TLC39) \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v MATRIX25\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:MATRIX25}
{\qr MATRIX25{\bkmkstart AAAAAAACDT}
{\bkmkend AAAAAAACDT}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Matrix 2 of 5 \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v KORPOST\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:KORPOST}
{\qr KORPOST{\bkmkstart AAAAAAACDU}
{\bkmkend AAAAAAACDU}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Korea Post \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v TRIOPTIC\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:TRIOPTIC}
{\qr TRIOPTIC{\bkmkstart AAAAAAACDV}
{\bkmkend AAAAAAACDV}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Trioptic Code \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CODE32\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:CODE32}
{\qr CODE32{\bkmkstart AAAAAAACDW}
{\bkmkend AAAAAAACDW}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Code 32 Pharmaceutical (PARAF) \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v STRT25\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:STRT25}
{\qr STRT25{\bkmkstart AAAAAAACDX}
{\bkmkend AAAAAAACDX}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Straight 2 of 5 Industrial \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v PLESSEY\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:PLESSEY}
{\qr PLESSEY{\bkmkstart AAAAAAACDY}
{\bkmkend AAAAAAACDY}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Plessey Code \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CHINAPOST\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:CHINAPOST}
{\qr CHINAPOST{\bkmkstart AAAAAAACDZ}
{\bkmkend AAAAAAACDZ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
China Post \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v TELEPEN\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:TELEPEN}
{\qr TELEPEN{\bkmkstart AAAAAAACEA}
{\bkmkend AAAAAAACEA}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Telepen \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CODE16K\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:CODE16K}
{\qr CODE16K{\bkmkstart AAAAAAACEB}
{\bkmkend AAAAAAACEB}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Code 16K \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v POSICODE\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:POSICODE}
{\qr POSICODE{\bkmkstart AAAAAAACEC}
{\bkmkend AAAAAAACEC}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PosiCode \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v COUPONCODE\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:COUPONCODE}
{\qr COUPONCODE{\bkmkstart AAAAAAACED}
{\bkmkend AAAAAAACED}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
UPC-A with Extended Coupon Code \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v UPUIDTAG\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:UPUIDTAG}
{\qr UPUIDTAG{\bkmkstart AAAAAAACEE}
{\bkmkend AAAAAAACEE}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
UPU 4 State ID Tag \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CODE4CB\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:CODE4CB}
{\qr CODE4CB{\bkmkstart AAAAAAACEF}
{\bkmkend AAAAAAACEF}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Code 4CB (4 State Customer {\b Barcode}) \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
}
}
{\xe \v SystemSpeed\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:SystemSpeed}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum CSLibrary.Barcode.Constants.SystemSpeed{\f2 [strong]}}}
\par
{\bkmkstart AAAAAAACEG}
{\bkmkend AAAAAAACEG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
System (MPU) clock speeds enum /summary> }}\par
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v SPEED_96MHZ\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:SPEED_96MHZ}
{\qr SPEED_96MHZ{\bkmkstart AAAAAAACEH}
{\bkmkend AAAAAAACEH}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
96 MHz System (MPU) clock speeds \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v SPEED_48MHZ\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:SPEED_48MHZ}
{\qr SPEED_48MHZ{\bkmkstart AAAAAAACEI}
{\bkmkend AAAAAAACEI}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
48 MHz System (MPU) clock speeds \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v SPEED_32MHZ\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:SPEED_32MHZ}
{\qr SPEED_32MHZ{\bkmkstart AAAAAAACEJ}
{\bkmkend AAAAAAACEJ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
32 MHz System (MPU) clock speeds \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
}
}
{\xe \v TriggerMask\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:TriggerMask}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum CSLibrary.Barcode.Constants.TriggerMask : uint{\f2 [strong]}}}
\par
{\bkmkstart AAAAAAACEK}
{\bkmkend AAAAAAACEK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Trigger bit masks }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v TRIG_MODE\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:TRIG_MODE}
{\qr TRIG_MODE{\bkmkstart AAAAAAACEL}
{\bkmkend AAAAAAACEL}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enable/disable manual trigger mode. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v TIMEOUT\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:TIMEOUT}
{\qr TIMEOUT{\bkmkstart AAAAAAACEM}
{\bkmkend AAAAAAACEM}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sanity timeout on trigger event. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ALL\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:ALL}
{\qr ALL{\bkmkstart AAAAAAACEN}
{\bkmkend AAAAAAACEN}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
All members valid mask. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
}
}
{\xe \v TriggerMode\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:TriggerMode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum CSLibrary.Barcode.Constants.TriggerMode{\f2 [strong]}}}
\par
{\bkmkstart AAAAAAACEO}
{\bkmkend AAAAAAACEO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Trigger Modes type /summary> }}\par
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v MANUAL_SERIAL\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:MANUAL_SERIAL}
{\qr MANUAL_SERIAL{\bkmkstart AAAAAAACEP}
{\bkmkend AAAAAAACEP}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
summary> Manual trigger no low power mode. /summary> summary> Unused /summary> \par
}\cell }{\row }
{\xe \v UNUSED\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:UNUSED}
{\qr UNUSED{\bkmkstart AAAAAAACEQ}
{\bkmkend AAAAAAACEQ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
summary> Manual trigger with low power mode on timeouts /summary> \par
}\cell }{\row }
{\xe \v MANUAL_LOW_POWER\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:MANUAL_LOW_POWER}
{\qr MANUAL_LOW_POWER{\bkmkstart AAAAAAACER}
{\bkmkend AAAAAAACER}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
summary> Looks for objects which can be barcodes and triggers if found /summary> \par
}\cell }{\row }
{\xe \v PRESENTATION\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:PRESENTATION}
{\qr PRESENTATION{\bkmkstart AAAAAAACES}
{\bkmkend AAAAAAACES}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
summary> Triggers if scanstand barcode not detected /summary> \par
}\cell }{\row }
{\xe \v SCANSTAND\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:SCANSTAND}
{\qr SCANSTAND{\bkmkstart AAAAAAACET}
{\bkmkend AAAAAAACET}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
summary> Unused /summary> \par
}\cell }{\row }
{\xe \v HOST_NOTIFY\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:HOST_NOTIFY}
{\qr HOST_NOTIFY{\bkmkstart AAAAAAACEU}
{\bkmkend AAAAAAACEU}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
summary> Imager Ships image on trigger. /summary> \par
}\cell }{\row }
{\xe \v SNAP_AND_SHIP\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:SNAP_AND_SHIP}
{\qr SNAP_AND_SHIP{\bkmkstart AAAAAAACEV}
{\bkmkend AAAAAAACEV}
\cell }{\cell }{\row }
}
}
{\xe \v VersionMask\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:VersionMask}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum CSLibrary.Barcode.Constants.VersionMask : uint{\f2 [strong]}}}
\par
{\bkmkstart AAAAAAACEW}
{\bkmkend AAAAAAACEW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Version information bit masks }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v SDK_API\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:SDK_API}
{\qr SDK_API{\bkmkstart AAAAAAACEX}
{\bkmkend AAAAAAACEX}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SDK version number. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v IMAGER_FIRMWARE\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:IMAGER_FIRMWARE}
{\qr IMAGER_FIRMWARE{\bkmkstart AAAAAAACEY}
{\bkmkend AAAAAAACEY}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Imager firmware version. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v IMAGER_PART_NUM\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:IMAGER_PART_NUM}
{\qr IMAGER_PART_NUM{\bkmkstart AAAAAAACEZ}
{\bkmkend AAAAAAACEZ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Imager part number. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v IMAGER_BOOT_CODE\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:IMAGER_BOOT_CODE}
{\qr IMAGER_BOOT_CODE{\bkmkstart AAAAAAACFA}
{\bkmkend AAAAAAACFA}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Imager boot code version. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v IMAGER_DEVICE_TYPE\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:IMAGER_DEVICE_TYPE}
{\qr IMAGER_DEVICE_TYPE{\bkmkstart AAAAAAACFB}
{\bkmkend AAAAAAACFB}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Device type of which imager is part. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v MANUFACTURERS_ID\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:MANUFACTURERS_ID}
{\qr MANUFACTURERS_ID{\bkmkstart AAAAAAACFC}
{\bkmkend AAAAAAACFC}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Manufactures ID \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v DECODER_REV\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:DECODER_REV}
{\qr DECODER_REV{\bkmkstart AAAAAAACFD}
{\bkmkend AAAAAAACFD}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Decoder Revision \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v SCAN_DRIVER_REV\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:SCAN_DRIVER_REV}
{\qr SCAN_DRIVER_REV{\bkmkstart AAAAAAACFE}
{\bkmkend AAAAAAACFE}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Scan driver revision \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ALL\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:ALL}
{\qr ALL{\bkmkstart AAAAAAACFF}
{\bkmkend AAAAAAACFF}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
All version info mask. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
}
}
{\xe \v WM_ID\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:WM_ID}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum CSLibrary.Barcode.Constants.WM_ID{\f2 [strong]}}}
\par
{\bkmkstart AAAAAAACFG}
{\bkmkend AAAAAAACFG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Windows message IDs }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v WM_USER\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:WM_USER}
{\qr WM_USER{\bkmkstart AAAAAAACFH}
{\bkmkend AAAAAAACFH}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
User Define Message Starting Point \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v WM_SDK_EVENT_HWND_MSG\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:WM_SDK_EVENT_HWND_MSG}
{\qr WM_SDK_EVENT_HWND_MSG{\bkmkstart AAAAAAACFI}
{\bkmkend AAAAAAACFI}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Barcode} Event \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v WM_SDK_PROGRESS_HWND_MSG\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:WM_SDK_PROGRESS_HWND_MSG}
{\qr WM_SDK_PROGRESS_HWND_MSG{\bkmkstart AAAAAAACFJ}
{\bkmkend AAAAAAACFJ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Image progress event \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v WM_SDK_IMAGER_FLASHING\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:WM_SDK_IMAGER_FLASHING}
{\qr WM_SDK_IMAGER_FLASHING{\bkmkstart AAAAAAACFK}
{\bkmkend AAAAAAACFK}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Imager firmware flashing event \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v WM_SDK_POWER_EVENT\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:WM_SDK_POWER_EVENT}
{\qr WM_SDK_POWER_EVENT{\bkmkstart AAAAAAACFL}
{\bkmkend AAAAAAACFL}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Barcode} Power event \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v WM_SDK_SEQ_BARCODE_READ\:CSLibrary::Barcode::Constants}
{\xe \v CSLibrary::Barcode::Constants\:WM_SDK_SEQ_BARCODE_READ}
{\qr WM_SDK_SEQ_BARCODE_READ{\bkmkstart AAAAAAACFM}
{\bkmkend AAAAAAACFM}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Barcode} Sequential read event \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary.Barcode.Structures Namespace Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary.Barcode.Structures}
{\xe \v CSLibrary.Barcode.Structures}
{\bkmkstart AAAAAAACGP}
{\bkmkend AAAAAAACGP}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedefs\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
using {\b OCR_T} = SymCodeOCR\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
using {\b AZTEC_T} = SymFlagsRange\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
using {\b CODABAR_T} = SymFlagsRange\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
using {\b CODE11_T} = SymFlagsRange\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
using {\b CODE128_T} = SymFlagsRange\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
using {\b CODE39_T} = SymFlagsRange\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
using {\b CODE49_T} = SymFlagsRange\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
using {\b CODE93_T} = SymFlagsRange\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
using {\b COMPOSITE_T} = SymFlagsRange\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
using {\b DATAMATRIX_T} = SymFlagsRange\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
using {\b INT25_T} = SymFlagsRange\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
using {\b MAXICODE_T} = SymFlagsRange\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
using {\b MICROPDF_T} = SymFlagsRange\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
using {\b PDF417_T} = SymFlagsRange\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
using {\b QR_T} = SymFlagsRange\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
using {\b RSS_T} = SymFlagsRange\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
using {\b IATA25_T} = SymFlagsRange\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
using {\b CODABLOCK_T} = SymFlagsRange\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
using {\b MSI_T} = SymFlagsRange\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
using {\b MATRIX25_T} = SymFlagsRange\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
using {\b KORPOST_T} = SymFlagsRange\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
using {\b CODE25_T} = SymFlagsRange\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
using {\b PLESSEY_T} = SymFlagsRange\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
using {\b CHINAPOST_T} = SymFlagsRange\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
using {\b TELEPEN_T} = SymFlagsRange\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
using {\b CODE16K_T} = SymFlagsRange\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
using {\b POSICODE_T} = SymFlagsRange\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
using {\b MESA_T} = SymFlagsOnly\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
using {\b EAN8_T} = SymFlagsOnly\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
using {\b EAN13_T} = SymFlagsOnly\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
using {\b POSTNET_T} = SymFlagsOnly\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
using {\b UPCA_T} = SymFlagsOnly\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
using {\b UPCE_T} = SymFlagsOnly\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
using {\b ISBT_T} = SymFlagsOnly\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
using {\b BPO_T} = SymFlagsOnly\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
using {\b CANPOST_T} = SymFlagsOnly\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
using {\b AUSPOST_T} = SymFlagsOnly\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
using {\b JAPOST_T} = SymFlagsOnly\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
using {\b PLANET_T} = SymFlagsOnly\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
using {\b DUTCHPOST_T} = SymFlagsOnly\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
using {\b TLCODE39_T} = SymFlagsOnly\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
using {\b TRIOPTIC_T} = SymFlagsOnly\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
using {\b CODE32_T} = SymFlagsOnly\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
using {\b COUPONCODE_T} = SymFlagsOnly\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
using {\b UPUIDTAG_T} = SymFlagsOnly\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
using {\b CODE4CB_T} = SymFlagsOnly\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedef Documentation\par
\pard\plain 
{\xe \v AUSPOST_T\:CSLibrary::Barcode::Structures}
{\xe \v CSLibrary::Barcode::Structures\:AUSPOST_T}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
using CSLibrary.Barcode.Structures.AUSPOST_T = typedef SymFlagsOnly}}
\par
{\bkmkstart AAAAAAACGQ}
{\bkmkend AAAAAAACGQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v AZTEC_T\:CSLibrary::Barcode::Structures}
{\xe \v CSLibrary::Barcode::Structures\:AZTEC_T}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
using CSLibrary.Barcode.Structures.AZTEC_T = typedef SymFlagsRange}}
\par
{\bkmkstart AAAAAAACGR}
{\bkmkend AAAAAAACGR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v BPO_T\:CSLibrary::Barcode::Structures}
{\xe \v CSLibrary::Barcode::Structures\:BPO_T}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
using CSLibrary.Barcode.Structures.BPO_T = typedef SymFlagsOnly}}
\par
{\bkmkstart AAAAAAACGS}
{\bkmkend AAAAAAACGS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v CANPOST_T\:CSLibrary::Barcode::Structures}
{\xe \v CSLibrary::Barcode::Structures\:CANPOST_T}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
using CSLibrary.Barcode.Structures.CANPOST_T = typedef SymFlagsOnly}}
\par
{\bkmkstart AAAAAAACGT}
{\bkmkend AAAAAAACGT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v CHINAPOST_T\:CSLibrary::Barcode::Structures}
{\xe \v CSLibrary::Barcode::Structures\:CHINAPOST_T}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
using CSLibrary.Barcode.Structures.CHINAPOST_T = typedef SymFlagsRange}}
\par
{\bkmkstart AAAAAAACGU}
{\bkmkend AAAAAAACGU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v CODABAR_T\:CSLibrary::Barcode::Structures}
{\xe \v CSLibrary::Barcode::Structures\:CODABAR_T}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
using CSLibrary.Barcode.Structures.CODABAR_T = typedef SymFlagsRange}}
\par
{\bkmkstart AAAAAAACGV}
{\bkmkend AAAAAAACGV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v CODABLOCK_T\:CSLibrary::Barcode::Structures}
{\xe \v CSLibrary::Barcode::Structures\:CODABLOCK_T}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
using CSLibrary.Barcode.Structures.CODABLOCK_T = typedef SymFlagsRange}}
\par
{\bkmkstart AAAAAAACGW}
{\bkmkend AAAAAAACGW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v CODE11_T\:CSLibrary::Barcode::Structures}
{\xe \v CSLibrary::Barcode::Structures\:CODE11_T}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
using CSLibrary.Barcode.Structures.CODE11_T = typedef SymFlagsRange}}
\par
{\bkmkstart AAAAAAACGX}
{\bkmkend AAAAAAACGX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v CODE128_T\:CSLibrary::Barcode::Structures}
{\xe \v CSLibrary::Barcode::Structures\:CODE128_T}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
using CSLibrary.Barcode.Structures.CODE128_T = typedef SymFlagsRange}}
\par
{\bkmkstart AAAAAAACGY}
{\bkmkend AAAAAAACGY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v CODE16K_T\:CSLibrary::Barcode::Structures}
{\xe \v CSLibrary::Barcode::Structures\:CODE16K_T}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
using CSLibrary.Barcode.Structures.CODE16K_T = typedef SymFlagsRange}}
\par
{\bkmkstart AAAAAAACGZ}
{\bkmkend AAAAAAACGZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v CODE25_T\:CSLibrary::Barcode::Structures}
{\xe \v CSLibrary::Barcode::Structures\:CODE25_T}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
using CSLibrary.Barcode.Structures.CODE25_T = typedef SymFlagsRange}}
\par
{\bkmkstart AAAAAAACHA}
{\bkmkend AAAAAAACHA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v CODE32_T\:CSLibrary::Barcode::Structures}
{\xe \v CSLibrary::Barcode::Structures\:CODE32_T}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
using CSLibrary.Barcode.Structures.CODE32_T = typedef SymFlagsOnly}}
\par
{\bkmkstart AAAAAAACHB}
{\bkmkend AAAAAAACHB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v CODE39_T\:CSLibrary::Barcode::Structures}
{\xe \v CSLibrary::Barcode::Structures\:CODE39_T}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
using CSLibrary.Barcode.Structures.CODE39_T = typedef SymFlagsRange}}
\par
{\bkmkstart AAAAAAACHC}
{\bkmkend AAAAAAACHC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v CODE49_T\:CSLibrary::Barcode::Structures}
{\xe \v CSLibrary::Barcode::Structures\:CODE49_T}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
using CSLibrary.Barcode.Structures.CODE49_T = typedef SymFlagsRange}}
\par
{\bkmkstart AAAAAAACHD}
{\bkmkend AAAAAAACHD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v CODE4CB_T\:CSLibrary::Barcode::Structures}
{\xe \v CSLibrary::Barcode::Structures\:CODE4CB_T}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
using CSLibrary.Barcode.Structures.CODE4CB_T = typedef SymFlagsOnly}}
\par
{\bkmkstart AAAAAAACHE}
{\bkmkend AAAAAAACHE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v CODE93_T\:CSLibrary::Barcode::Structures}
{\xe \v CSLibrary::Barcode::Structures\:CODE93_T}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
using CSLibrary.Barcode.Structures.CODE93_T = typedef SymFlagsRange}}
\par
{\bkmkstart AAAAAAACHF}
{\bkmkend AAAAAAACHF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v COMPOSITE_T\:CSLibrary::Barcode::Structures}
{\xe \v CSLibrary::Barcode::Structures\:COMPOSITE_T}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
using CSLibrary.Barcode.Structures.COMPOSITE_T = typedef SymFlagsRange}}
\par
{\bkmkstart AAAAAAACHG}
{\bkmkend AAAAAAACHG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v COUPONCODE_T\:CSLibrary::Barcode::Structures}
{\xe \v CSLibrary::Barcode::Structures\:COUPONCODE_T}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
using CSLibrary.Barcode.Structures.COUPONCODE_T = typedef SymFlagsOnly}}
\par
{\bkmkstart AAAAAAACHH}
{\bkmkend AAAAAAACHH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DATAMATRIX_T\:CSLibrary::Barcode::Structures}
{\xe \v CSLibrary::Barcode::Structures\:DATAMATRIX_T}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
using CSLibrary.Barcode.Structures.DATAMATRIX_T = typedef SymFlagsRange}}
\par
{\bkmkstart AAAAAAACHI}
{\bkmkend AAAAAAACHI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DUTCHPOST_T\:CSLibrary::Barcode::Structures}
{\xe \v CSLibrary::Barcode::Structures\:DUTCHPOST_T}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
using CSLibrary.Barcode.Structures.DUTCHPOST_T = typedef SymFlagsOnly}}
\par
{\bkmkstart AAAAAAACHJ}
{\bkmkend AAAAAAACHJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v EAN13_T\:CSLibrary::Barcode::Structures}
{\xe \v CSLibrary::Barcode::Structures\:EAN13_T}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
using CSLibrary.Barcode.Structures.EAN13_T = typedef SymFlagsOnly}}
\par
{\bkmkstart AAAAAAACHK}
{\bkmkend AAAAAAACHK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v EAN8_T\:CSLibrary::Barcode::Structures}
{\xe \v CSLibrary::Barcode::Structures\:EAN8_T}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
using CSLibrary.Barcode.Structures.EAN8_T = typedef SymFlagsOnly}}
\par
{\bkmkstart AAAAAAACHL}
{\bkmkend AAAAAAACHL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v IATA25_T\:CSLibrary::Barcode::Structures}
{\xe \v CSLibrary::Barcode::Structures\:IATA25_T}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
using CSLibrary.Barcode.Structures.IATA25_T = typedef SymFlagsRange}}
\par
{\bkmkstart AAAAAAACHM}
{\bkmkend AAAAAAACHM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v INT25_T\:CSLibrary::Barcode::Structures}
{\xe \v CSLibrary::Barcode::Structures\:INT25_T}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
using CSLibrary.Barcode.Structures.INT25_T = typedef SymFlagsRange}}
\par
{\bkmkstart AAAAAAACHN}
{\bkmkend AAAAAAACHN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ISBT_T\:CSLibrary::Barcode::Structures}
{\xe \v CSLibrary::Barcode::Structures\:ISBT_T}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
using CSLibrary.Barcode.Structures.ISBT_T = typedef SymFlagsOnly}}
\par
{\bkmkstart AAAAAAACHO}
{\bkmkend AAAAAAACHO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v JAPOST_T\:CSLibrary::Barcode::Structures}
{\xe \v CSLibrary::Barcode::Structures\:JAPOST_T}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
using CSLibrary.Barcode.Structures.JAPOST_T = typedef SymFlagsOnly}}
\par
{\bkmkstart AAAAAAACHP}
{\bkmkend AAAAAAACHP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v KORPOST_T\:CSLibrary::Barcode::Structures}
{\xe \v CSLibrary::Barcode::Structures\:KORPOST_T}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
using CSLibrary.Barcode.Structures.KORPOST_T = typedef SymFlagsRange}}
\par
{\bkmkstart AAAAAAACHQ}
{\bkmkend AAAAAAACHQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v MATRIX25_T\:CSLibrary::Barcode::Structures}
{\xe \v CSLibrary::Barcode::Structures\:MATRIX25_T}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
using CSLibrary.Barcode.Structures.MATRIX25_T = typedef SymFlagsRange}}
\par
{\bkmkstart AAAAAAACHR}
{\bkmkend AAAAAAACHR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v MAXICODE_T\:CSLibrary::Barcode::Structures}
{\xe \v CSLibrary::Barcode::Structures\:MAXICODE_T}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
using CSLibrary.Barcode.Structures.MAXICODE_T = typedef SymFlagsRange}}
\par
{\bkmkstart AAAAAAACHS}
{\bkmkend AAAAAAACHS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v MESA_T\:CSLibrary::Barcode::Structures}
{\xe \v CSLibrary::Barcode::Structures\:MESA_T}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
using CSLibrary.Barcode.Structures.MESA_T = typedef SymFlagsOnly}}
\par
{\bkmkstart AAAAAAACHT}
{\bkmkend AAAAAAACHT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v MICROPDF_T\:CSLibrary::Barcode::Structures}
{\xe \v CSLibrary::Barcode::Structures\:MICROPDF_T}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
using CSLibrary.Barcode.Structures.MICROPDF_T = typedef SymFlagsRange}}
\par
{\bkmkstart AAAAAAACHU}
{\bkmkend AAAAAAACHU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v MSI_T\:CSLibrary::Barcode::Structures}
{\xe \v CSLibrary::Barcode::Structures\:MSI_T}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
using CSLibrary.Barcode.Structures.MSI_T = typedef SymFlagsRange}}
\par
{\bkmkstart AAAAAAACHV}
{\bkmkend AAAAAAACHV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v OCR_T\:CSLibrary::Barcode::Structures}
{\xe \v CSLibrary::Barcode::Structures\:OCR_T}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
using CSLibrary.Barcode.Structures.OCR_T = typedef SymCodeOCR}}
\par
{\bkmkstart AAAAAAACHW}
{\bkmkend AAAAAAACHW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v PDF417_T\:CSLibrary::Barcode::Structures}
{\xe \v CSLibrary::Barcode::Structures\:PDF417_T}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
using CSLibrary.Barcode.Structures.PDF417_T = typedef SymFlagsRange}}
\par
{\bkmkstart AAAAAAACHX}
{\bkmkend AAAAAAACHX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v PLANET_T\:CSLibrary::Barcode::Structures}
{\xe \v CSLibrary::Barcode::Structures\:PLANET_T}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
using CSLibrary.Barcode.Structures.PLANET_T = typedef SymFlagsOnly}}
\par
{\bkmkstart AAAAAAACHY}
{\bkmkend AAAAAAACHY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v PLESSEY_T\:CSLibrary::Barcode::Structures}
{\xe \v CSLibrary::Barcode::Structures\:PLESSEY_T}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
using CSLibrary.Barcode.Structures.PLESSEY_T = typedef SymFlagsRange}}
\par
{\bkmkstart AAAAAAACHZ}
{\bkmkend AAAAAAACHZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v POSICODE_T\:CSLibrary::Barcode::Structures}
{\xe \v CSLibrary::Barcode::Structures\:POSICODE_T}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
using CSLibrary.Barcode.Structures.POSICODE_T = typedef SymFlagsRange}}
\par
{\bkmkstart AAAAAAACIA}
{\bkmkend AAAAAAACIA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v POSTNET_T\:CSLibrary::Barcode::Structures}
{\xe \v CSLibrary::Barcode::Structures\:POSTNET_T}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
using CSLibrary.Barcode.Structures.POSTNET_T = typedef SymFlagsOnly}}
\par
{\bkmkstart AAAAAAACIB}
{\bkmkend AAAAAAACIB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v QR_T\:CSLibrary::Barcode::Structures}
{\xe \v CSLibrary::Barcode::Structures\:QR_T}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
using CSLibrary.Barcode.Structures.QR_T = typedef SymFlagsRange}}
\par
{\bkmkstart AAAAAAACIC}
{\bkmkend AAAAAAACIC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v RSS_T\:CSLibrary::Barcode::Structures}
{\xe \v CSLibrary::Barcode::Structures\:RSS_T}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
using CSLibrary.Barcode.Structures.RSS_T = typedef SymFlagsRange}}
\par
{\bkmkstart AAAAAAACID}
{\bkmkend AAAAAAACID}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v TELEPEN_T\:CSLibrary::Barcode::Structures}
{\xe \v CSLibrary::Barcode::Structures\:TELEPEN_T}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
using CSLibrary.Barcode.Structures.TELEPEN_T = typedef SymFlagsRange}}
\par
{\bkmkstart AAAAAAACIE}
{\bkmkend AAAAAAACIE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v TLCODE39_T\:CSLibrary::Barcode::Structures}
{\xe \v CSLibrary::Barcode::Structures\:TLCODE39_T}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
using CSLibrary.Barcode.Structures.TLCODE39_T = typedef SymFlagsOnly}}
\par
{\bkmkstart AAAAAAACIF}
{\bkmkend AAAAAAACIF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v TRIOPTIC_T\:CSLibrary::Barcode::Structures}
{\xe \v CSLibrary::Barcode::Structures\:TRIOPTIC_T}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
using CSLibrary.Barcode.Structures.TRIOPTIC_T = typedef SymFlagsOnly}}
\par
{\bkmkstart AAAAAAACIG}
{\bkmkend AAAAAAACIG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v UPCA_T\:CSLibrary::Barcode::Structures}
{\xe \v CSLibrary::Barcode::Structures\:UPCA_T}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
using CSLibrary.Barcode.Structures.UPCA_T = typedef SymFlagsOnly}}
\par
{\bkmkstart AAAAAAACIH}
{\bkmkend AAAAAAACIH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v UPCE_T\:CSLibrary::Barcode::Structures}
{\xe \v CSLibrary::Barcode::Structures\:UPCE_T}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
using CSLibrary.Barcode.Structures.UPCE_T = typedef SymFlagsOnly}}
\par
{\bkmkstart AAAAAAACII}
{\bkmkend AAAAAAACII}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v UPUIDTAG_T\:CSLibrary::Barcode::Structures}
{\xe \v CSLibrary::Barcode::Structures\:UPUIDTAG_T}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
using CSLibrary.Barcode.Structures.UPUIDTAG_T = typedef SymFlagsOnly}}
\par
{\bkmkstart AAAAAAACIJ}
{\bkmkend AAAAAAACIJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary.Constants Namespace Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary.Constants}
{\xe \v CSLibrary.Constants}
{\bkmkstart AAAAAAACIK}
{\bkmkend AAAAAAACIK}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumerations\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b ReaderCallbackType} \{ {\b ReaderCallbackType.CONNECT_SUCESS}, 
{\b ReaderCallbackType.COMMUNICATION_ERROR}, 
{\b ReaderCallbackType.CONNECTION_LOST}, 
{\b ReaderCallbackType.UNKNOWN}
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
reader Callback Type }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b CallbackType} \{ {\b CallbackType.TAG_INVENTORY}, 
{\b CallbackType.TAG_SEARCHING}, 
{\b CallbackType.TAG_RANGING}, 
{\b CallbackType.UNKNOWN}, 
{\b CallbackType.TAG_INVENTORY}, 
{\b CallbackType.TAG_SEARCHING}, 
{\b CallbackType.TAG_RANGING}, 
{\b CallbackType.UNKNOWN}
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Callback Type }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b RFState} \{ {\b RFState.IDLE}, 
{\b RFState.BUSY}, 
{\b RFState.ABORT}, 
{\b RFState.RESET}, 
{\b RFState.SHUTDOWN}, 
{\b RFState.ERROR}, 
{\b RFState.ANT_CYCLE_END}, 
{\b RFState.CH_BUSY}, 
{\b RFState.CH_CLEAR}, 
{\b RFState.EAS_ALARM}, 
{\b RFState.BUFFER_FULL}, 
{\b RFState.INVENTORY_MAC_ERROR}, 
{\b RFState.CARRIER_INFO}, 
{\b RFState.INVENTORY_CYCLE_BEGIN}, 
{\b RFState.INITIALIZATION_COMPLETE}, 
{\b RFState.UNKNOWN}, 
{\b RFState.IDLE}, 
{\b RFState.BUSY}, 
{\b RFState.ABORT}, 
{\b RFState.RESET}, 
{\b RFState.SHUTDOWN}, 
{\b RFState.ERROR}, 
{\b RFState.ANT_CYCLE_END}, 
{\b RFState.CH_BUSY}, 
{\b RFState.CH_CLEAR}, 
{\b RFState.EAS_ALARM}, 
{\b RFState.BUFFER_FULL}, 
{\b RFState.INVENTORY_MAC_ERROR}, 
{\b RFState.CARRIER_INFO}, 
{\b RFState.INVENTORY_CYCLE_BEGIN}, 
{\b RFState.UNKNOWN}
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RFID device status }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b ErrorType} : int \{ {\b ErrorType.UNKNOWN} = -1, 
{\b ErrorType.COMMON} = 0, 
{\b ErrorType.INVENTORY}, 
{\b ErrorType.WRITE}, 
{\b ErrorType.READ}, 
{\b ErrorType.LOCK}, 
{\b ErrorType.KILL}, 
{\b ErrorType.MAC}, 
{\b ErrorType.UNKNOWN} = -1, 
{\b ErrorType.COMMON} = 0, 
{\b ErrorType.INVENTORY}, 
{\b ErrorType.WRITE}, 
{\b ErrorType.READ}, 
{\b ErrorType.LOCK}, 
{\b ErrorType.KILL}, 
{\b ErrorType.MAC}
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Error Type }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b ErrorCode} : int \{ {\b ErrorCode.UNKNOWN} = -1, 
{\b ErrorCode.MAC_ERROR} = 0, 
{\b ErrorCode.MAX_RETRY_OVER}, 
{\b ErrorCode.WRITTEN_DATA_INVALID}, 
{\b ErrorCode.FUNC_RETURN_FAILED}, 
{\b ErrorCode.CRC_INVALID}, 
{\b ErrorCode.PARSE_PKT_ERROR}, 
{\b ErrorCode.SYSTEM_ERROR}, 
{\b ErrorCode.INVALID_TAG}, 
{\b ErrorCode.TAG_NOT_FOUND}, 
{\b ErrorCode.UNKNOWN} = -1, 
{\b ErrorCode.MAC_ERROR} = 0, 
{\b ErrorCode.MAX_RETRY_OVER}, 
{\b ErrorCode.WRITTEN_DATA_INVALID}, 
{\b ErrorCode.FUNC_RETURN_FAILED}, 
{\b ErrorCode.CRC_INVALID}, 
{\b ErrorCode.PARSE_PKT_ERROR}, 
{\b ErrorCode.SYSTEM_ERROR}, 
{\b ErrorCode.INVALID_TAG}, 
{\b ErrorCode.TAG_NOT_FOUND}
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Operation Error Code }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b ExtendedKillCommand} \{ {\b ExtendedKillCommand.NORMAL} = 0, 
{\b ExtendedKillCommand.DISABLE_PERMALOCK} = 1, 
{\b ExtendedKillCommand.DISABLE_USER_MEMORY} = 2, 
{\b ExtendedKillCommand.UNLOCK_ALL_BANKS} = 4, 
{\b ExtendedKillCommand.UNKNOWN} = 0xff, 
{\b ExtendedKillCommand.NORMAL} = 0, 
{\b ExtendedKillCommand.DISABLE_PERMALOCK} = 1, 
{\b ExtendedKillCommand.DISABLE_USER_MEMORY} = 2, 
{\b ExtendedKillCommand.UNLOCK_ALL_BANKS} = 4, 
{\b ExtendedKillCommand.UNKNOWN} = 0xff
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Extended Kill command for UHF class 1 gen-2 version 1.2 }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b BandState} \{ {\b BandState.DISABLE} = 0, 
{\b BandState.ENABLE} = 1, 
{\b BandState.UNKNOWN} = 2, 
{\b BandState.DISABLE} = 0, 
{\b BandState.ENABLE} = 1, 
{\b BandState.UNKNOWN} = 2
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Frequency Band State }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b LBT} : uint \{ {\b LBT.OFF} = 0, 
{\b LBT.ON} = 1, 
{\b LBT.SCAN} = 3, 
{\b LBT.OFF} = 0, 
{\b LBT.ON} = 1, 
{\b LBT.SCAN} = 3
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
LBT Config }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b RegionCode} \{ {\b RegionCode.FCC} = 1, 
{\b RegionCode.ETSI}, 
{\b RegionCode.CN}, 
{\b RegionCode.TW}, 
{\b RegionCode.KR}, 
{\b RegionCode.HK}, 
{\b RegionCode.JP}, 
{\b RegionCode.AU}, 
{\b RegionCode.MY}, 
{\b RegionCode.SG}, 
{\b RegionCode.IN}, 
{\b RegionCode.G800}, 
{\b RegionCode.ZA}, 
{\b RegionCode.BR1}, 
{\b RegionCode.BR2}, 
{\b RegionCode.BR3}, 
{\b RegionCode.BR4}, 
{\b RegionCode.BR5}, 
{\b RegionCode.ID}, 
{\b RegionCode.TH}, 
{\b RegionCode.JE}, 
{\b RegionCode.PH}, 
{\b RegionCode.ETSIUPPERBAND}, 
{\b RegionCode.NZ}, 
{\b RegionCode.UH1}, 
{\b RegionCode.UH2}, 
{\b RegionCode.LH}, 
{\b RegionCode.LH1}, 
{\b RegionCode.LH2}, 
{\b RegionCode.VE}, 
{\b RegionCode.AR}, 
{\b RegionCode.CL}, 
{\b RegionCode.CO}, 
{\b RegionCode.CR}, 
{\b RegionCode.DO}, 
{\b RegionCode.PA}, 
{\b RegionCode.PE}, 
{\b RegionCode.UY}, 
{\b RegionCode.UNKNOWN} = 0, 
{\b RegionCode.CURRENT} = -1, 
{\b RegionCode.FCC} = 1, 
{\b RegionCode.ETSI}, 
{\b RegionCode.CN}, 
{\b RegionCode.CN1}, 
{\b RegionCode.CN2}, 
{\b RegionCode.CN3}, 
{\b RegionCode.CN4}, 
{\b RegionCode.CN5}, 
{\b RegionCode.CN6}, 
{\b RegionCode.CN7}, 
{\b RegionCode.CN8}, 
{\b RegionCode.CN9}, 
{\b RegionCode.CN10}, 
{\b RegionCode.CN11}, 
{\b RegionCode.CN12}, 
{\b RegionCode.TW}, 
{\b RegionCode.KR}, 
{\b RegionCode.HK}, 
{\b RegionCode.JP}, 
{\b RegionCode.AU}, 
{\b RegionCode.MY}, 
{\b RegionCode.SG}, 
{\b RegionCode.IN}, 
{\b RegionCode.G800}, 
{\b RegionCode.ZA}, 
{\b RegionCode.BR1}, 
{\b RegionCode.BR2}, 
{\b RegionCode.ID}, 
{\b RegionCode.TH}, 
{\b RegionCode.JP2012}, 
{\b RegionCode.UH1}, 
{\b RegionCode.UH2}, 
{\b RegionCode.LH}, 
{\b RegionCode.JE}, 
{\b RegionCode.PH}, 
{\b RegionCode.UNKNOWN} = 0
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Region Profile }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b ACID} \{ {\b ACID.APACS} = 0xE0, 
{\b ACID.NEN} = 0xE1, 
{\b ACID.GS1} = 0xE2, 
{\b ACID.APACSX} = 0xE3, 
{\b ACID.UNKNOWN} = 0xFF, 
{\b ACID.APACS} = 0xE0, 
{\b ACID.NEN} = 0xE1, 
{\b ACID.GS1} = 0xE2, 
{\b ACID.APACSX} = 0xE3, 
{\b ACID.UNKNOWN} = 0xFF
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Allocation Class Identifier }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b EpcMDID} \{ {\b EpcMDID.Impinj} = 0x1, 
{\b EpcMDID.Texas_Instruments} = 0x2, 
{\b EpcMDID.Alien_Technology} = 0x3, 
{\b EpcMDID.Intelleflex} = 0x4, 
{\b EpcMDID.Atmel} = 0x5, 
{\b EpcMDID.NXP} = 0x6, 
{\b EpcMDID.ST_Microelectronics} = 0x7, 
{\b EpcMDID.EP_Microelectronics} = 0x8, 
{\b EpcMDID.Motorola} = 0x9, 
{\b EpcMDID.Sentech_Snd_Bhd} = 0xA, 
{\b EpcMDID.EM_Microelectronics} = 0xB, 
{\b EpcMDID.Renesas_Technology_Corp} = 0xC, 
{\b EpcMDID.Mstar} = 0xD, 
{\b EpcMDID.Tyco_International} = 0xE, 
{\b EpcMDID.Quanray_Electronics} = 0xF, 
{\b EpcMDID.Fujitsu} = 0x10, 
{\b EpcMDID.LSIS} = 0x11, 
{\b EpcMDID.CAEN_RFID_srl} = 0x12, 
{\b EpcMDID.CAEN_Productivity_Engineering_Gesellschaft_fuer_IC_Design_mbH} = 0x13, 
{\b EpcMDID.Impinj_with_xTid} = 0x801, 
{\b EpcMDID.Texas_Instruments_with_xTid} = 0x802, 
{\b EpcMDID.Alien_Technology_with_xTid} = 0x803, 
{\b EpcMDID.Intelleflex_with_xTid} = 0x804, 
{\b EpcMDID.Atmel_with_xTid} = 0x805, 
{\b EpcMDID.NXP_with_xTid} = 0x806, 
{\b EpcMDID.ST_Microelectronics_with_xTid} = 0x807, 
{\b EpcMDID.EP_Microelectronics_with_xTid} = 0x808, 
{\b EpcMDID.Motorola_with_xTid} = 0x809, 
{\b EpcMDID.Sentech_Snd_Bhd_with_xTid} = 0x80A, 
{\b EpcMDID.EM_Microelectronics_with_xTid} = 0x80B, 
{\b EpcMDID.Renesas_Technology_Corp_with_xTid} = 0x80C, 
{\b EpcMDID.Mstar_with_xTid} = 0x80D, 
{\b EpcMDID.Tyco_International_with_xTid} = 0x80E, 
{\b EpcMDID.Quanray_Electronics_with_xTid} = 0x80F, 
{\b EpcMDID.Fujitsu_with_xTid} = 0x810, 
{\b EpcMDID.LSIS_with_xTid} = 0x811, 
{\b EpcMDID.CAEN_RFID_srl_with_xTid} = 0x812, 
{\b EpcMDID.CAEN_Productivity_Engineering_Gesellschaft_fuer_IC_Design_mbH_with_xTid} = 0x813, 
{\b EpcMDID.UNKNOWN} = 0xFFFF, 
{\b EpcMDID.Impinj} = 0x1, 
{\b EpcMDID.Texas_Instruments} = 0x2, 
{\b EpcMDID.Alien_Technology} = 0x3, 
{\b EpcMDID.Intelleflex} = 0x4, 
{\b EpcMDID.Atmel} = 0x5, 
{\b EpcMDID.NXP} = 0x6, 
{\b EpcMDID.ST_Microelectronics} = 0x7, 
{\b EpcMDID.EP_Microelectronics} = 0x8, 
{\b EpcMDID.Motorola} = 0x9, 
{\b EpcMDID.Sentech_Snd_Bhd} = 0xA, 
{\b EpcMDID.EM_Microelectronics} = 0xB, 
{\b EpcMDID.Renesas_Technology_Corp} = 0xC, 
{\b EpcMDID.Mstar} = 0xD, 
{\b EpcMDID.Tyco_International} = 0xE, 
{\b EpcMDID.Quanray_Electronics} = 0xF, 
{\b EpcMDID.Fujitsu} = 0x10, 
{\b EpcMDID.LSIS} = 0x11, 
{\b EpcMDID.CAEN_RFID_srl} = 0x12, 
{\b EpcMDID.CAEN_Productivity_Engineering_Gesellschaft_fuer_IC_Design_mbH} = 0x13, 
{\b EpcMDID.Impinj_with_xTid} = 0x801, 
{\b EpcMDID.Texas_Instruments_with_xTid} = 0x802, 
{\b EpcMDID.Alien_Technology_with_xTid} = 0x803, 
{\b EpcMDID.Intelleflex_with_xTid} = 0x804, 
{\b EpcMDID.Atmel_with_xTid} = 0x805, 
{\b EpcMDID.NXP_with_xTid} = 0x806, 
{\b EpcMDID.ST_Microelectronics_with_xTid} = 0x807, 
{\b EpcMDID.EP_Microelectronics_with_xTid} = 0x808, 
{\b EpcMDID.Motorola_with_xTid} = 0x809, 
{\b EpcMDID.Sentech_Snd_Bhd_with_xTid} = 0x80A, 
{\b EpcMDID.EM_Microelectronics_with_xTid} = 0x80B, 
{\b EpcMDID.Renesas_Technology_Corp_with_xTid} = 0x80C, 
{\b EpcMDID.Mstar_with_xTid} = 0x80D, 
{\b EpcMDID.Tyco_International_with_xTid} = 0x80E, 
{\b EpcMDID.Quanray_Electronics_with_xTid} = 0x80F, 
{\b EpcMDID.Fujitsu_with_xTid} = 0x810, 
{\b EpcMDID.LSIS_with_xTid} = 0x811, 
{\b EpcMDID.CAEN_RFID_srl_with_xTid} = 0x812, 
{\b EpcMDID.CAEN_Productivity_Engineering_Gesellschaft_fuer_IC_Design_mbH_with_xTid} = 0x813, 
{\b EpcMDID.UNKNOWN} = 0xFFFF
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EPCglobal Tag Mask Designer Identifier }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b IsoMDID} \{ {\b IsoMDID.Motorola} = 0x1, 
{\b IsoMDID.STM}, 
{\b IsoMDID.Hitachi}, 
{\b IsoMDID.Philips}, 
{\b IsoMDID.Infineon}, 
{\b IsoMDID.Cylink}, 
{\b IsoMDID.Texas}, 
{\b IsoMDID.Fujitsu}, 
{\b IsoMDID.Matsushita}, 
{\b IsoMDID.NEC}, 
{\b IsoMDID.Oki}, 
{\b IsoMDID.Toshiba}, 
{\b IsoMDID.Mitsubishi}, 
{\b IsoMDID.Samsung}, 
{\b IsoMDID.Hynix}, 
{\b IsoMDID.LG}, 
{\b IsoMDID.EmosynEM}, 
{\b IsoMDID.INSIDE}, 
{\b IsoMDID.ORGA}, 
{\b IsoMDID.SHARP}, 
{\b IsoMDID.ATMEL}, 
{\b IsoMDID.EM}, 
{\b IsoMDID.KSW}, 
{\b IsoMDID.ZMD}, 
{\b IsoMDID.XICOR}, 
{\b IsoMDID.Sony}, 
{\b IsoMDID.Malaysia}, 
{\b IsoMDID.Emosyn}, 
{\b IsoMDID.Fudan}, 
{\b IsoMDID.Magellan}, 
{\b IsoMDID.Melexis}, 
{\b IsoMDID.Renesas}, 
{\b IsoMDID.TAGSYS}, 
{\b IsoMDID.Transcore}, 
{\b IsoMDID.Belling}, 
{\b IsoMDID.Masktech}, 
{\b IsoMDID.Innovision}, 
{\b IsoMDID.HitachiULSI}, 
{\b IsoMDID.Cypak}, 
{\b IsoMDID.Ricoh}, 
{\b IsoMDID.ASK}, 
{\b IsoMDID.Unicore}, 
{\b IsoMDID.Dallas}, 
{\b IsoMDID.Impinj}, 
{\b IsoMDID.Alliance}, 
{\b IsoMDID.Broadcom}, 
{\b IsoMDID.MStar}, 
{\b IsoMDID.eeDar}, 
{\b IsoMDID.RFIDsec}, 
{\b IsoMDID.Schweizer}, 
{\b IsoMDID.AMIC}, 
{\b IsoMDID.UNKNOWN} = 0xFFFF, 
{\b IsoMDID.Motorola} = 0x1, 
{\b IsoMDID.STM}, 
{\b IsoMDID.Hitachi}, 
{\b IsoMDID.Philips}, 
{\b IsoMDID.Infineon}, 
{\b IsoMDID.Cylink}, 
{\b IsoMDID.Texas}, 
{\b IsoMDID.Fujitsu}, 
{\b IsoMDID.Matsushita}, 
{\b IsoMDID.NEC}, 
{\b IsoMDID.Oki}, 
{\b IsoMDID.Toshiba}, 
{\b IsoMDID.Mitsubishi}, 
{\b IsoMDID.Samsung}, 
{\b IsoMDID.Hynix}, 
{\b IsoMDID.LG}, 
{\b IsoMDID.EmosynEM}, 
{\b IsoMDID.INSIDE}, 
{\b IsoMDID.ORGA}, 
{\b IsoMDID.SHARP}, 
{\b IsoMDID.ATMEL}, 
{\b IsoMDID.EM}, 
{\b IsoMDID.KSW}, 
{\b IsoMDID.ZMD}, 
{\b IsoMDID.XICOR}, 
{\b IsoMDID.Sony}, 
{\b IsoMDID.Malaysia}, 
{\b IsoMDID.Emosyn}, 
{\b IsoMDID.Fudan}, 
{\b IsoMDID.Magellan}, 
{\b IsoMDID.Melexis}, 
{\b IsoMDID.Renesas}, 
{\b IsoMDID.TAGSYS}, 
{\b IsoMDID.Transcore}, 
{\b IsoMDID.Belling}, 
{\b IsoMDID.Masktech}, 
{\b IsoMDID.Innovision}, 
{\b IsoMDID.HitachiULSI}, 
{\b IsoMDID.Cypak}, 
{\b IsoMDID.Ricoh}, 
{\b IsoMDID.ASK}, 
{\b IsoMDID.Unicore}, 
{\b IsoMDID.Dallas}, 
{\b IsoMDID.Impinj}, 
{\b IsoMDID.Alliance}, 
{\b IsoMDID.Broadcom}, 
{\b IsoMDID.MStar}, 
{\b IsoMDID.eeDar}, 
{\b IsoMDID.RFIDsec}, 
{\b IsoMDID.Schweizer}, 
{\b IsoMDID.AMIC}, 
{\b IsoMDID.UNKNOWN} = 0xFFFF
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ISO/IEC 7816-6 registration authority }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b Operation} : int \{ {\b Operation.UNKNOWN} = -1, 
{\b Operation.TAG_BLOCK_PERMALOCK}, 
{\b Operation.TAG_LOCK}, 
{\b Operation.TAG_KILL}, 
{\b Operation.TAG_READ_KILL_PWD}, 
{\b Operation.TAG_READ_ACC_PWD}, 
{\b Operation.TAG_READ_PC}, 
{\b Operation.TAG_READ_EPC}, 
{\b Operation.TAG_READ_TID}, 
{\b Operation.TAG_READ_USER}, 
{\b Operation.TAG_WRITE_KILL_PWD}, 
{\b Operation.TAG_WRITE_ACC_PWD}, 
{\b Operation.TAG_WRITE_PC}, 
{\b Operation.TAG_WRITE_EPC}, 
{\b Operation.TAG_WRITE_USER}, 
{\b Operation.TAG_INVENTORY}, 
{\b Operation.TAG_RANGING}, 
{\b Operation.TAG_PRERANGING}, 
{\b Operation.TAG_EXERANGING}, 
{\b Operation.TAG_SEARCHING}, 
{\b Operation.TAG_SELECTED}, 
{\b Operation.TAG_READ_PROTECT}, 
{\b Operation.TAG_RESET_READ_PROTECT}, 
{\b Operation.EAS_CONFIG}, 
{\b Operation.EAS_ALARM}, 
{\b Operation.CL_SET_PASSWORD}, 
{\b Operation.CL_SET_LOG_MODE}, 
{\b Operation.CL_SET_LOG_LIMITS}, 
{\b Operation.CL_GET_MEASUREMENT_SETUP}, 
{\b Operation.CL_SET_SFE_PARA}, 
{\b Operation.CL_SET_CAL_DATA}, 
{\b Operation.CL_END_LOG}, 
{\b Operation.CL_START_LOG}, 
{\b Operation.CL_GET_LOG_STATE}, 
{\b Operation.CL_GET_CAL_DATA}, 
{\b Operation.CL_GET_BAT_LV}, 
{\b Operation.CL_SET_SHELF_LIFE}, 
{\b Operation.CL_INIT}, 
{\b Operation.CL_GET_SENSOR_VALUE}, 
{\b Operation.CL_OPEN_AREA}, 
{\b Operation.CL_ACCESS_FIFO}, 
{\b Operation.G2_READ_PROTECT}, 
{\b Operation.G2_RESET_READ_PROTECT}, 
{\b Operation.G2_CHANGE_EAS}, 
{\b Operation.G2_EAS_ALARM}, 
{\b Operation.G2_CHANGE_CONFIG}, 
{\b Operation.QT_COMMAND}, 
{\b Operation.EM4324_GetUid}, 
{\b Operation.EM4325_GetUid}, 
{\b Operation.EM_GetSensorData}, 
{\b Operation.EM_ResetAlarms}, 
{\b Operation.EM_SPI}, 
{\b Operation.EM_SPIRequestStatus}, 
{\b Operation.EM_SPIBoot}, 
{\b Operation.EM_SPITransponder}, 
{\b Operation.EM_SPIGetSensorData}, 
{\b Operation.EM_SPISetFlags}, 
{\b Operation.EM_SPIReadWord}, 
{\b Operation.EM_SPIWriteWord}, 
{\b Operation.EM_SPIReadPage}, 
{\b Operation.EM_SPIWritePage}, 
{\b Operation.EM_SPISetClock}, 
{\b Operation.EM_SPIAlarm}, 
{\b Operation.EM_SPIReadRegisterFileWord}, 
{\b Operation.EM_SPIWriteRegisterFileWord}, 
{\b Operation.EM_SPIReqRN}, 
{\b Operation.TAG_GENERALSELECTED}, 
{\b Operation.TAG_PREFILTER}, 
{\b Operation.UNKNOWN} = -1, 
{\b Operation.TAG_BLOCK_PERMALOCK}, 
{\b Operation.TAG_LOCK}, 
{\b Operation.TAG_KILL}, 
{\b Operation.TAG_READ_KILL_PWD}, 
{\b Operation.TAG_READ_ACC_PWD}, 
{\b Operation.TAG_READ_PC}, 
{\b Operation.TAG_READ_EPC}, 
{\b Operation.TAG_READ_TID}, 
{\b Operation.TAG_READ_USER}, 
{\b Operation.TAG_WRITE_KILL_PWD}, 
{\b Operation.TAG_WRITE_ACC_PWD}, 
{\b Operation.TAG_WRITE_PC}, 
{\b Operation.TAG_WRITE_EPC}, 
{\b Operation.TAG_WRITE_USER}, 
{\b Operation.TAG_INVENTORY}, 
{\b Operation.TAG_RANGING}, 
{\b Operation.TAG_SEARCHING}, 
{\b Operation.TAG_SELECTED}, 
{\b Operation.TAG_READ_PROTECT}, 
{\b Operation.TAG_RESET_READ_PROTECT}, 
{\b Operation.EAS_CONFIG}, 
{\b Operation.EAS_ALARM}, 
{\b Operation.CL_SET_PASSWORD}, 
{\b Operation.CL_SET_LOG_MODE}, 
{\b Operation.CL_SET_LOG_LIMITS}, 
{\b Operation.CL_GET_MEASUREMENT_SETUP}, 
{\b Operation.CL_SET_SFE_PARA}, 
{\b Operation.CL_SET_CAL_DATA}, 
{\b Operation.CL_END_LOG}, 
{\b Operation.CL_START_LOG}, 
{\b Operation.CL_GET_LOG_STATE}, 
{\b Operation.CL_GET_CAL_DATA}, 
{\b Operation.CL_GET_BAT_LV}, 
{\b Operation.CL_SET_SHELF_LIFE}, 
{\b Operation.CL_INIT}, 
{\b Operation.CL_GET_SENSOR_VALUE}, 
{\b Operation.CL_OPEN_AREA}, 
{\b Operation.CL_ACCESS_FIFO}, 
{\b Operation.G2_READ_PROTECT}, 
{\b Operation.G2_RESET_READ_PROTECT}, 
{\b Operation.G2_CHANGE_EAS}, 
{\b Operation.G2_EAS_ALARM}, 
{\b Operation.G2_CHANGE_CONFIG}, 
{\b Operation.QT_COMMAND}, 
{\b Operation.EM4324_GetUid}, 
{\b Operation.EM4325_GetUid}, 
{\b Operation.EM_GetSensorData}, 
{\b Operation.EM_ResetAlarms}, 
{\b Operation.EM_SPI}, 
{\b Operation.EM_SPIRequestStatus}, 
{\b Operation.EM_SPIBoot}, 
{\b Operation.EM_SPITransponder}, 
{\b Operation.EM_SPIGetSensorData}, 
{\b Operation.EM_SPISetFlags}, 
{\b Operation.EM_SPIReadWord}, 
{\b Operation.EM_SPIWriteWord}, 
{\b Operation.EM_SPIReadPage}, 
{\b Operation.EM_SPIWritePage}, 
{\b Operation.EM_SPISetClock}, 
{\b Operation.EM_SPIAlarm}, 
{\b Operation.EM_SPIReadRegisterFileWord}, 
{\b Operation.EM_SPIWriteRegisterFileWord}, 
{\b Operation.EM_SPIReqRN}, 
{\b Operation.TAG_GENERALSELECTED}
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RFID Operation Mode }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b Bank} \{ {\b Bank.ACC_PWD}, 
{\b Bank.KILL_PWD}, 
{\b Bank.PC}, 
{\b Bank.EPC}, 
{\b Bank.TID}, 
{\b Bank.USER}, 
{\b Bank.UNKNOWN}, 
{\b Bank.ACC_PWD}, 
{\b Bank.KILL_PWD}, 
{\b Bank.PC}, 
{\b Bank.EPC}, 
{\b Bank.TID}, 
{\b Bank.USER}, 
{\b Bank.UNKNOWN}
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Memory bank }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b TagAccess} : byte \{ {\b TagAccess.READ} = 0xC2, 
{\b TagAccess.WRITE} = 0xC3, 
{\b TagAccess.KILL} = 0xC4, 
{\b TagAccess.LOCK} = 0xC5, 
{\b TagAccess.ERASE} = 0xC6, 
{\b TagAccess.UNKNOWN} = 0xff, 
{\b TagAccess.READ} = 0xC2, 
{\b TagAccess.WRITE} = 0xC3, 
{\b TagAccess.KILL} = 0xC4, 
{\b TagAccess.LOCK} = 0xC5, 
{\b TagAccess.ERASE} = 0xC6, 
{\b TagAccess.UNKNOWN} = 0xff
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The values that can be found in the command field for tag access packets }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b Machine} \{ {\b Machine.CS101} = 0, 
{\b Machine.CS203}, 
{\b Machine.CS333}, 
{\b Machine.CS468}, 
{\b Machine.CS206}, 
{\b Machine.CS468INT}, 
{\b Machine.CS463}, 
{\b Machine.CS469}, 
{\b Machine.CS208}, 
{\b Machine.CS209}, 
{\b Machine.CS103}, 
{\b Machine.CS108}, 
{\b Machine.MACHINE_CODE_END}, 
{\b Machine.UNKNOWN} = 0xff, 
{\b Machine.CS101} = 0, 
{\b Machine.CS203}, 
{\b Machine.CS333}, 
{\b Machine.CS468}, 
{\b Machine.CS206}, 
{\b Machine.CS468INT}, 
{\b Machine.CS463}, 
{\b Machine.CS469}, 
{\b Machine.CS208}, 
{\b Machine.CS209}, 
{\b Machine.CS103}, 
{\b Machine.CS108}, 
{\b Machine.MACHINE_CODE_END}, 
{\b Machine.UNKNOWN} = 0xff
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Machine Type }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b ChipSetID} \{ {\b ChipSetID.R1000} = 0, 
{\b ChipSetID.R2000}, 
{\b ChipSetID.UNKNOWN} = 0xff
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b ApiMode} \{ {\b ApiMode.HIGHLEVEL}, 
{\b ApiMode.LOWLEVEL}, 
{\b ApiMode.UNKNOWN}, 
{\b ApiMode.HIGHLEVEL}, 
{\b ApiMode.LOWLEVEL}, 
{\b ApiMode.UNKNOWN}
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b TAG_BACKSCATTERED_ERROR} : byte \{ {\b TAG_BACKSCATTERED_ERROR.OTHER_ERROR}, 
{\b TAG_BACKSCATTERED_ERROR.MEMORY_OVERRUN} = 0x3, 
{\b TAG_BACKSCATTERED_ERROR.MEMORY_LOCKED} = 0x4, 
{\b TAG_BACKSCATTERED_ERROR.INSUFFICIENT_POWER} = 0xB, 
{\b TAG_BACKSCATTERED_ERROR.NON_SPECIFIC_ERROR} = 0xF
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
If a Tag encounters an error when executing an access command that reads from or writes to memory, and if the command is a handle-based command(i.e. Read, Write, Kill, Lock, BlockWrite, BlockErase, or BlockPermalock), then the Tag shall backscatter an error code. }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b RFID_PACKET_TYPE} : ushort \{ {\b RFID_PACKET_TYPE.COMMAND_BEGIN} = 0, 
{\b RFID_PACKET_TYPE.COMMAND_END}, 
{\b RFID_PACKET_TYPE.ANTENNA_CYCLE_BEGIN}, 
{\b RFID_PACKET_TYPE.ANTENNA_BEGIN}, 
{\b RFID_PACKET_TYPE.ISO18K6C_INVENTORY_ROUND_BEGIN}, 
{\b RFID_PACKET_TYPE.ISO18K6C_INVENTORY}, 
{\b RFID_PACKET_TYPE.ISO18K6C_TAG_ACCESS}, 
{\b RFID_PACKET_TYPE.ANTENNA_CYCLE_END}, 
{\b RFID_PACKET_TYPE.ANTENNA_END}, 
{\b RFID_PACKET_TYPE.ISO18K6C_INVENTORY_ROUND_END}, 
{\b RFID_PACKET_TYPE.INVENTORY_CYCLE_BEGIN}, 
{\b RFID_PACKET_TYPE.INVENTORY_CYCLE_END}, 
{\b RFID_PACKET_TYPE.CARRIER_INFO}, 
{\b RFID_PACKET_TYPE.CYCCFG_EVT}, 
{\b RFID_PACKET_TYPE.RES0} = 4096, 
{\b RFID_PACKET_TYPE.RES1}, 
{\b RFID_PACKET_TYPE.RES2}, 
{\b RFID_PACKET_TYPE.RES3}, 
{\b RFID_PACKET_TYPE.ISO18K6C_INVENTORY_ROUND_BEGIN_DIAGS}, 
{\b RFID_PACKET_TYPE.ISO18K6C_INVENTORY_ROUND_END_DIAGS}, 
{\b RFID_PACKET_TYPE.ISO18K6C_INVENTORY_DIAGS}, 
{\b RFID_PACKET_TYPE.RES4}, 
{\b RFID_PACKET_TYPE.INVENTORY_CYCLE_END_DIAGS}, 
{\b RFID_PACKET_TYPE.NONCRITICAL_FAULT} = 8192
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The 16-bit packet types that will be found in the common packet header pkt_type field. }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b RFID_COMMAND_TYPE_18K6C} : uint \{ {\b RFID_COMMAND_TYPE_18K6C.INVENTORY} = 0x0000000F, 
{\b RFID_COMMAND_TYPE_18K6C.READ} = 0x00000010, 
{\b RFID_COMMAND_TYPE_18K6C.WRITE} = 0x00000011, 
{\b RFID_COMMAND_TYPE_18K6C.LOCK} = 0x00000012, 
{\b RFID_COMMAND_TYPE_18K6C.KILL} = 0x00000013
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constants for the command begin's cmd field }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b RFID_18K6C} : byte \{ {\b RFID_18K6C.QUERYREP} = 0x00, 
{\b RFID_18K6C.ACK} = 0x01, 
{\b RFID_18K6C.QUERY} = 0x08, 
{\b RFID_18K6C.QUERYADJ} = 0x09, 
{\b RFID_18K6C.SELECT} = 0x0A, 
{\b RFID_18K6C.NAK} = 0xC0, 
{\b RFID_18K6C.REQRN} = 0xC1, 
{\b RFID_18K6C.READ} = 0xC2, 
{\b RFID_18K6C.WRITE} = 0xC3, 
{\b RFID_18K6C.KILL} = 0xC4, 
{\b RFID_18K6C.LOCK} = 0xC5, 
{\b RFID_18K6C.ACCESS} = 0xC6, 
{\b RFID_18K6C.BLOCKWRITE} = 0xC7, 
{\b RFID_18K6C.BLOCKERASE} = 0xC8, 
{\b RFID_18K6C.QT} = 0xE0, 
{\b RFID_18K6C.UNKNOWN} = 0xff
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The values that can be found in the command field for tag access packets }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b RFID_ACCESS} : byte \{ {\b RFID_ACCESS.GENERAL_ERR} = 0x00, 
{\b RFID_ACCESS.MEMORY_LOCATION_NOT_EXIST} = 0x03, 
{\b RFID_ACCESS.PERMISSION_DENIED} = 0x04, 
{\b RFID_ACCESS.INSUFFICIENT_POWER_TO_WRITE} = 0x0B, 
{\b RFID_ACCESS.NOT_SUPPORTED} = 0x0F, 
{\b RFID_ACCESS.ACK_TIMEOUT} = 0x10, 
{\b RFID_ACCESS.CRC_INVALID}, 
{\b RFID_ACCESS.WRITE_VERIFY_FAILED} = 0xD1, 
{\b RFID_ACCESS.PROBLEM_TRANSMITTING_TAG_CMD} = 0xD2, 
{\b RFID_ACCESS.CRC_INVALID_ON_WRITE} = 0xD3, 
{\b RFID_ACCESS.CRC_INVALID_ON_READ} = 0xD4, 
{\b RFID_ACCESS.WRITE_RETRY_EXCEEDED} = 0xD5, 
{\b RFID_ACCESS.READ_TIMEOUT} = 0xD6, 
{\b RFID_ACCESS.REQ_TAG_HANDLE_FAILED} = 0xD7, 
{\b RFID_ACCESS.RESP_TIMEOUT} = 0xDA, 
{\b RFID_ACCESS.CRC_INVALID_ON_KILL} = 0xDB, 
{\b RFID_ACCESS.PROBLEM_TRANSMITTING_KILL_CMD} = 0xDC, 
{\b RFID_ACCESS.INVALID_HANDLE_ON_KILL_CMD} = 0xDD, 
{\b RFID_ACCESS.UNKNOWN}, 
{\b RFID_ACCESS.SUCCESS} = 0x1
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tag access enum Result }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b CallbackType} \{ {\b CallbackType.TAG_INVENTORY}, 
{\b CallbackType.TAG_SEARCHING}, 
{\b CallbackType.TAG_RANGING}, 
{\b CallbackType.UNKNOWN}, 
{\b CallbackType.TAG_INVENTORY}, 
{\b CallbackType.TAG_SEARCHING}, 
{\b CallbackType.TAG_RANGING}, 
{\b CallbackType.UNKNOWN}
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Callback Type }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b RFState} \{ {\b RFState.IDLE}, 
{\b RFState.BUSY}, 
{\b RFState.ABORT}, 
{\b RFState.RESET}, 
{\b RFState.SHUTDOWN}, 
{\b RFState.ERROR}, 
{\b RFState.ANT_CYCLE_END}, 
{\b RFState.CH_BUSY}, 
{\b RFState.CH_CLEAR}, 
{\b RFState.EAS_ALARM}, 
{\b RFState.BUFFER_FULL}, 
{\b RFState.INVENTORY_MAC_ERROR}, 
{\b RFState.CARRIER_INFO}, 
{\b RFState.INVENTORY_CYCLE_BEGIN}, 
{\b RFState.INITIALIZATION_COMPLETE}, 
{\b RFState.UNKNOWN}, 
{\b RFState.IDLE}, 
{\b RFState.BUSY}, 
{\b RFState.ABORT}, 
{\b RFState.RESET}, 
{\b RFState.SHUTDOWN}, 
{\b RFState.ERROR}, 
{\b RFState.ANT_CYCLE_END}, 
{\b RFState.CH_BUSY}, 
{\b RFState.CH_CLEAR}, 
{\b RFState.EAS_ALARM}, 
{\b RFState.BUFFER_FULL}, 
{\b RFState.INVENTORY_MAC_ERROR}, 
{\b RFState.CARRIER_INFO}, 
{\b RFState.INVENTORY_CYCLE_BEGIN}, 
{\b RFState.UNKNOWN}
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reader Operation State }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b ErrorType} : int \{ {\b ErrorType.UNKNOWN} = -1, 
{\b ErrorType.COMMON} = 0, 
{\b ErrorType.INVENTORY}, 
{\b ErrorType.WRITE}, 
{\b ErrorType.READ}, 
{\b ErrorType.LOCK}, 
{\b ErrorType.KILL}, 
{\b ErrorType.MAC}, 
{\b ErrorType.UNKNOWN} = -1, 
{\b ErrorType.COMMON} = 0, 
{\b ErrorType.INVENTORY}, 
{\b ErrorType.WRITE}, 
{\b ErrorType.READ}, 
{\b ErrorType.LOCK}, 
{\b ErrorType.KILL}, 
{\b ErrorType.MAC}
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Error Type }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b ErrorCode} : int \{ {\b ErrorCode.UNKNOWN} = -1, 
{\b ErrorCode.MAC_ERROR} = 0, 
{\b ErrorCode.MAX_RETRY_OVER}, 
{\b ErrorCode.WRITTEN_DATA_INVALID}, 
{\b ErrorCode.FUNC_RETURN_FAILED}, 
{\b ErrorCode.CRC_INVALID}, 
{\b ErrorCode.PARSE_PKT_ERROR}, 
{\b ErrorCode.SYSTEM_ERROR}, 
{\b ErrorCode.INVALID_TAG}, 
{\b ErrorCode.TAG_NOT_FOUND}, 
{\b ErrorCode.UNKNOWN} = -1, 
{\b ErrorCode.MAC_ERROR} = 0, 
{\b ErrorCode.MAX_RETRY_OVER}, 
{\b ErrorCode.WRITTEN_DATA_INVALID}, 
{\b ErrorCode.FUNC_RETURN_FAILED}, 
{\b ErrorCode.CRC_INVALID}, 
{\b ErrorCode.PARSE_PKT_ERROR}, 
{\b ErrorCode.SYSTEM_ERROR}, 
{\b ErrorCode.INVALID_TAG}, 
{\b ErrorCode.TAG_NOT_FOUND}
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Operation Error Code }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b ExtendedKillCommand} \{ {\b ExtendedKillCommand.NORMAL} = 0, 
{\b ExtendedKillCommand.DISABLE_PERMALOCK} = 1, 
{\b ExtendedKillCommand.DISABLE_USER_MEMORY} = 2, 
{\b ExtendedKillCommand.UNLOCK_ALL_BANKS} = 4, 
{\b ExtendedKillCommand.UNKNOWN} = 0xff, 
{\b ExtendedKillCommand.NORMAL} = 0, 
{\b ExtendedKillCommand.DISABLE_PERMALOCK} = 1, 
{\b ExtendedKillCommand.DISABLE_USER_MEMORY} = 2, 
{\b ExtendedKillCommand.UNLOCK_ALL_BANKS} = 4, 
{\b ExtendedKillCommand.UNKNOWN} = 0xff
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Extended Kill command for UHF class 1 gen-2 version 1.2 }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b BandState} \{ {\b BandState.DISABLE} = 0, 
{\b BandState.ENABLE} = 1, 
{\b BandState.UNKNOWN} = 2, 
{\b BandState.DISABLE} = 0, 
{\b BandState.ENABLE} = 1, 
{\b BandState.UNKNOWN} = 2
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Frequency Band State }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b LBT} : uint \{ {\b LBT.OFF} = 0, 
{\b LBT.ON} = 1, 
{\b LBT.SCAN} = 3, 
{\b LBT.OFF} = 0, 
{\b LBT.ON} = 1, 
{\b LBT.SCAN} = 3
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
LBT Config }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b RegionCode} \{ {\b RegionCode.FCC} = 1, 
{\b RegionCode.ETSI}, 
{\b RegionCode.CN}, 
{\b RegionCode.TW}, 
{\b RegionCode.KR}, 
{\b RegionCode.HK}, 
{\b RegionCode.JP}, 
{\b RegionCode.AU}, 
{\b RegionCode.MY}, 
{\b RegionCode.SG}, 
{\b RegionCode.IN}, 
{\b RegionCode.G800}, 
{\b RegionCode.ZA}, 
{\b RegionCode.BR1}, 
{\b RegionCode.BR2}, 
{\b RegionCode.BR3}, 
{\b RegionCode.BR4}, 
{\b RegionCode.BR5}, 
{\b RegionCode.ID}, 
{\b RegionCode.TH}, 
{\b RegionCode.JE}, 
{\b RegionCode.PH}, 
{\b RegionCode.ETSIUPPERBAND}, 
{\b RegionCode.NZ}, 
{\b RegionCode.UH1}, 
{\b RegionCode.UH2}, 
{\b RegionCode.LH}, 
{\b RegionCode.LH1}, 
{\b RegionCode.LH2}, 
{\b RegionCode.VE}, 
{\b RegionCode.AR}, 
{\b RegionCode.CL}, 
{\b RegionCode.CO}, 
{\b RegionCode.CR}, 
{\b RegionCode.DO}, 
{\b RegionCode.PA}, 
{\b RegionCode.PE}, 
{\b RegionCode.UY}, 
{\b RegionCode.UNKNOWN} = 0, 
{\b RegionCode.CURRENT} = -1, 
{\b RegionCode.FCC} = 1, 
{\b RegionCode.ETSI}, 
{\b RegionCode.CN}, 
{\b RegionCode.CN1}, 
{\b RegionCode.CN2}, 
{\b RegionCode.CN3}, 
{\b RegionCode.CN4}, 
{\b RegionCode.CN5}, 
{\b RegionCode.CN6}, 
{\b RegionCode.CN7}, 
{\b RegionCode.CN8}, 
{\b RegionCode.CN9}, 
{\b RegionCode.CN10}, 
{\b RegionCode.CN11}, 
{\b RegionCode.CN12}, 
{\b RegionCode.TW}, 
{\b RegionCode.KR}, 
{\b RegionCode.HK}, 
{\b RegionCode.JP}, 
{\b RegionCode.AU}, 
{\b RegionCode.MY}, 
{\b RegionCode.SG}, 
{\b RegionCode.IN}, 
{\b RegionCode.G800}, 
{\b RegionCode.ZA}, 
{\b RegionCode.BR1}, 
{\b RegionCode.BR2}, 
{\b RegionCode.ID}, 
{\b RegionCode.TH}, 
{\b RegionCode.JP2012}, 
{\b RegionCode.UH1}, 
{\b RegionCode.UH2}, 
{\b RegionCode.LH}, 
{\b RegionCode.JE}, 
{\b RegionCode.PH}, 
{\b RegionCode.UNKNOWN} = 0
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Region Profile }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b ACID} \{ {\b ACID.APACS} = 0xE0, 
{\b ACID.NEN} = 0xE1, 
{\b ACID.GS1} = 0xE2, 
{\b ACID.APACSX} = 0xE3, 
{\b ACID.UNKNOWN} = 0xFF, 
{\b ACID.APACS} = 0xE0, 
{\b ACID.NEN} = 0xE1, 
{\b ACID.GS1} = 0xE2, 
{\b ACID.APACSX} = 0xE3, 
{\b ACID.UNKNOWN} = 0xFF
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Allocation Class Identifier }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b EpcMDID} \{ {\b EpcMDID.Impinj} = 0x1, 
{\b EpcMDID.Texas_Instruments} = 0x2, 
{\b EpcMDID.Alien_Technology} = 0x3, 
{\b EpcMDID.Intelleflex} = 0x4, 
{\b EpcMDID.Atmel} = 0x5, 
{\b EpcMDID.NXP} = 0x6, 
{\b EpcMDID.ST_Microelectronics} = 0x7, 
{\b EpcMDID.EP_Microelectronics} = 0x8, 
{\b EpcMDID.Motorola} = 0x9, 
{\b EpcMDID.Sentech_Snd_Bhd} = 0xA, 
{\b EpcMDID.EM_Microelectronics} = 0xB, 
{\b EpcMDID.Renesas_Technology_Corp} = 0xC, 
{\b EpcMDID.Mstar} = 0xD, 
{\b EpcMDID.Tyco_International} = 0xE, 
{\b EpcMDID.Quanray_Electronics} = 0xF, 
{\b EpcMDID.Fujitsu} = 0x10, 
{\b EpcMDID.LSIS} = 0x11, 
{\b EpcMDID.CAEN_RFID_srl} = 0x12, 
{\b EpcMDID.CAEN_Productivity_Engineering_Gesellschaft_fuer_IC_Design_mbH} = 0x13, 
{\b EpcMDID.Impinj_with_xTid} = 0x801, 
{\b EpcMDID.Texas_Instruments_with_xTid} = 0x802, 
{\b EpcMDID.Alien_Technology_with_xTid} = 0x803, 
{\b EpcMDID.Intelleflex_with_xTid} = 0x804, 
{\b EpcMDID.Atmel_with_xTid} = 0x805, 
{\b EpcMDID.NXP_with_xTid} = 0x806, 
{\b EpcMDID.ST_Microelectronics_with_xTid} = 0x807, 
{\b EpcMDID.EP_Microelectronics_with_xTid} = 0x808, 
{\b EpcMDID.Motorola_with_xTid} = 0x809, 
{\b EpcMDID.Sentech_Snd_Bhd_with_xTid} = 0x80A, 
{\b EpcMDID.EM_Microelectronics_with_xTid} = 0x80B, 
{\b EpcMDID.Renesas_Technology_Corp_with_xTid} = 0x80C, 
{\b EpcMDID.Mstar_with_xTid} = 0x80D, 
{\b EpcMDID.Tyco_International_with_xTid} = 0x80E, 
{\b EpcMDID.Quanray_Electronics_with_xTid} = 0x80F, 
{\b EpcMDID.Fujitsu_with_xTid} = 0x810, 
{\b EpcMDID.LSIS_with_xTid} = 0x811, 
{\b EpcMDID.CAEN_RFID_srl_with_xTid} = 0x812, 
{\b EpcMDID.CAEN_Productivity_Engineering_Gesellschaft_fuer_IC_Design_mbH_with_xTid} = 0x813, 
{\b EpcMDID.UNKNOWN} = 0xFFFF, 
{\b EpcMDID.Impinj} = 0x1, 
{\b EpcMDID.Texas_Instruments} = 0x2, 
{\b EpcMDID.Alien_Technology} = 0x3, 
{\b EpcMDID.Intelleflex} = 0x4, 
{\b EpcMDID.Atmel} = 0x5, 
{\b EpcMDID.NXP} = 0x6, 
{\b EpcMDID.ST_Microelectronics} = 0x7, 
{\b EpcMDID.EP_Microelectronics} = 0x8, 
{\b EpcMDID.Motorola} = 0x9, 
{\b EpcMDID.Sentech_Snd_Bhd} = 0xA, 
{\b EpcMDID.EM_Microelectronics} = 0xB, 
{\b EpcMDID.Renesas_Technology_Corp} = 0xC, 
{\b EpcMDID.Mstar} = 0xD, 
{\b EpcMDID.Tyco_International} = 0xE, 
{\b EpcMDID.Quanray_Electronics} = 0xF, 
{\b EpcMDID.Fujitsu} = 0x10, 
{\b EpcMDID.LSIS} = 0x11, 
{\b EpcMDID.CAEN_RFID_srl} = 0x12, 
{\b EpcMDID.CAEN_Productivity_Engineering_Gesellschaft_fuer_IC_Design_mbH} = 0x13, 
{\b EpcMDID.Impinj_with_xTid} = 0x801, 
{\b EpcMDID.Texas_Instruments_with_xTid} = 0x802, 
{\b EpcMDID.Alien_Technology_with_xTid} = 0x803, 
{\b EpcMDID.Intelleflex_with_xTid} = 0x804, 
{\b EpcMDID.Atmel_with_xTid} = 0x805, 
{\b EpcMDID.NXP_with_xTid} = 0x806, 
{\b EpcMDID.ST_Microelectronics_with_xTid} = 0x807, 
{\b EpcMDID.EP_Microelectronics_with_xTid} = 0x808, 
{\b EpcMDID.Motorola_with_xTid} = 0x809, 
{\b EpcMDID.Sentech_Snd_Bhd_with_xTid} = 0x80A, 
{\b EpcMDID.EM_Microelectronics_with_xTid} = 0x80B, 
{\b EpcMDID.Renesas_Technology_Corp_with_xTid} = 0x80C, 
{\b EpcMDID.Mstar_with_xTid} = 0x80D, 
{\b EpcMDID.Tyco_International_with_xTid} = 0x80E, 
{\b EpcMDID.Quanray_Electronics_with_xTid} = 0x80F, 
{\b EpcMDID.Fujitsu_with_xTid} = 0x810, 
{\b EpcMDID.LSIS_with_xTid} = 0x811, 
{\b EpcMDID.CAEN_RFID_srl_with_xTid} = 0x812, 
{\b EpcMDID.CAEN_Productivity_Engineering_Gesellschaft_fuer_IC_Design_mbH_with_xTid} = 0x813, 
{\b EpcMDID.UNKNOWN} = 0xFFFF
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EPCglobal Tag Mask Designer Identifier }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b IsoMDID} \{ {\b IsoMDID.Motorola} = 0x1, 
{\b IsoMDID.STM}, 
{\b IsoMDID.Hitachi}, 
{\b IsoMDID.Philips}, 
{\b IsoMDID.Infineon}, 
{\b IsoMDID.Cylink}, 
{\b IsoMDID.Texas}, 
{\b IsoMDID.Fujitsu}, 
{\b IsoMDID.Matsushita}, 
{\b IsoMDID.NEC}, 
{\b IsoMDID.Oki}, 
{\b IsoMDID.Toshiba}, 
{\b IsoMDID.Mitsubishi}, 
{\b IsoMDID.Samsung}, 
{\b IsoMDID.Hynix}, 
{\b IsoMDID.LG}, 
{\b IsoMDID.EmosynEM}, 
{\b IsoMDID.INSIDE}, 
{\b IsoMDID.ORGA}, 
{\b IsoMDID.SHARP}, 
{\b IsoMDID.ATMEL}, 
{\b IsoMDID.EM}, 
{\b IsoMDID.KSW}, 
{\b IsoMDID.ZMD}, 
{\b IsoMDID.XICOR}, 
{\b IsoMDID.Sony}, 
{\b IsoMDID.Malaysia}, 
{\b IsoMDID.Emosyn}, 
{\b IsoMDID.Fudan}, 
{\b IsoMDID.Magellan}, 
{\b IsoMDID.Melexis}, 
{\b IsoMDID.Renesas}, 
{\b IsoMDID.TAGSYS}, 
{\b IsoMDID.Transcore}, 
{\b IsoMDID.Belling}, 
{\b IsoMDID.Masktech}, 
{\b IsoMDID.Innovision}, 
{\b IsoMDID.HitachiULSI}, 
{\b IsoMDID.Cypak}, 
{\b IsoMDID.Ricoh}, 
{\b IsoMDID.ASK}, 
{\b IsoMDID.Unicore}, 
{\b IsoMDID.Dallas}, 
{\b IsoMDID.Impinj}, 
{\b IsoMDID.Alliance}, 
{\b IsoMDID.Broadcom}, 
{\b IsoMDID.MStar}, 
{\b IsoMDID.eeDar}, 
{\b IsoMDID.RFIDsec}, 
{\b IsoMDID.Schweizer}, 
{\b IsoMDID.AMIC}, 
{\b IsoMDID.UNKNOWN} = 0xFFFF, 
{\b IsoMDID.Motorola} = 0x1, 
{\b IsoMDID.STM}, 
{\b IsoMDID.Hitachi}, 
{\b IsoMDID.Philips}, 
{\b IsoMDID.Infineon}, 
{\b IsoMDID.Cylink}, 
{\b IsoMDID.Texas}, 
{\b IsoMDID.Fujitsu}, 
{\b IsoMDID.Matsushita}, 
{\b IsoMDID.NEC}, 
{\b IsoMDID.Oki}, 
{\b IsoMDID.Toshiba}, 
{\b IsoMDID.Mitsubishi}, 
{\b IsoMDID.Samsung}, 
{\b IsoMDID.Hynix}, 
{\b IsoMDID.LG}, 
{\b IsoMDID.EmosynEM}, 
{\b IsoMDID.INSIDE}, 
{\b IsoMDID.ORGA}, 
{\b IsoMDID.SHARP}, 
{\b IsoMDID.ATMEL}, 
{\b IsoMDID.EM}, 
{\b IsoMDID.KSW}, 
{\b IsoMDID.ZMD}, 
{\b IsoMDID.XICOR}, 
{\b IsoMDID.Sony}, 
{\b IsoMDID.Malaysia}, 
{\b IsoMDID.Emosyn}, 
{\b IsoMDID.Fudan}, 
{\b IsoMDID.Magellan}, 
{\b IsoMDID.Melexis}, 
{\b IsoMDID.Renesas}, 
{\b IsoMDID.TAGSYS}, 
{\b IsoMDID.Transcore}, 
{\b IsoMDID.Belling}, 
{\b IsoMDID.Masktech}, 
{\b IsoMDID.Innovision}, 
{\b IsoMDID.HitachiULSI}, 
{\b IsoMDID.Cypak}, 
{\b IsoMDID.Ricoh}, 
{\b IsoMDID.ASK}, 
{\b IsoMDID.Unicore}, 
{\b IsoMDID.Dallas}, 
{\b IsoMDID.Impinj}, 
{\b IsoMDID.Alliance}, 
{\b IsoMDID.Broadcom}, 
{\b IsoMDID.MStar}, 
{\b IsoMDID.eeDar}, 
{\b IsoMDID.RFIDsec}, 
{\b IsoMDID.Schweizer}, 
{\b IsoMDID.AMIC}, 
{\b IsoMDID.UNKNOWN} = 0xFFFF
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ISO/IEC 7816-6 registration authority }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b Operation} : int \{ {\b Operation.UNKNOWN} = -1, 
{\b Operation.TAG_BLOCK_PERMALOCK}, 
{\b Operation.TAG_LOCK}, 
{\b Operation.TAG_KILL}, 
{\b Operation.TAG_READ_KILL_PWD}, 
{\b Operation.TAG_READ_ACC_PWD}, 
{\b Operation.TAG_READ_PC}, 
{\b Operation.TAG_READ_EPC}, 
{\b Operation.TAG_READ_TID}, 
{\b Operation.TAG_READ_USER}, 
{\b Operation.TAG_WRITE_KILL_PWD}, 
{\b Operation.TAG_WRITE_ACC_PWD}, 
{\b Operation.TAG_WRITE_PC}, 
{\b Operation.TAG_WRITE_EPC}, 
{\b Operation.TAG_WRITE_USER}, 
{\b Operation.TAG_INVENTORY}, 
{\b Operation.TAG_RANGING}, 
{\b Operation.TAG_PRERANGING}, 
{\b Operation.TAG_EXERANGING}, 
{\b Operation.TAG_SEARCHING}, 
{\b Operation.TAG_SELECTED}, 
{\b Operation.TAG_READ_PROTECT}, 
{\b Operation.TAG_RESET_READ_PROTECT}, 
{\b Operation.EAS_CONFIG}, 
{\b Operation.EAS_ALARM}, 
{\b Operation.CL_SET_PASSWORD}, 
{\b Operation.CL_SET_LOG_MODE}, 
{\b Operation.CL_SET_LOG_LIMITS}, 
{\b Operation.CL_GET_MEASUREMENT_SETUP}, 
{\b Operation.CL_SET_SFE_PARA}, 
{\b Operation.CL_SET_CAL_DATA}, 
{\b Operation.CL_END_LOG}, 
{\b Operation.CL_START_LOG}, 
{\b Operation.CL_GET_LOG_STATE}, 
{\b Operation.CL_GET_CAL_DATA}, 
{\b Operation.CL_GET_BAT_LV}, 
{\b Operation.CL_SET_SHELF_LIFE}, 
{\b Operation.CL_INIT}, 
{\b Operation.CL_GET_SENSOR_VALUE}, 
{\b Operation.CL_OPEN_AREA}, 
{\b Operation.CL_ACCESS_FIFO}, 
{\b Operation.G2_READ_PROTECT}, 
{\b Operation.G2_RESET_READ_PROTECT}, 
{\b Operation.G2_CHANGE_EAS}, 
{\b Operation.G2_EAS_ALARM}, 
{\b Operation.G2_CHANGE_CONFIG}, 
{\b Operation.QT_COMMAND}, 
{\b Operation.EM4324_GetUid}, 
{\b Operation.EM4325_GetUid}, 
{\b Operation.EM_GetSensorData}, 
{\b Operation.EM_ResetAlarms}, 
{\b Operation.EM_SPI}, 
{\b Operation.EM_SPIRequestStatus}, 
{\b Operation.EM_SPIBoot}, 
{\b Operation.EM_SPITransponder}, 
{\b Operation.EM_SPIGetSensorData}, 
{\b Operation.EM_SPISetFlags}, 
{\b Operation.EM_SPIReadWord}, 
{\b Operation.EM_SPIWriteWord}, 
{\b Operation.EM_SPIReadPage}, 
{\b Operation.EM_SPIWritePage}, 
{\b Operation.EM_SPISetClock}, 
{\b Operation.EM_SPIAlarm}, 
{\b Operation.EM_SPIReadRegisterFileWord}, 
{\b Operation.EM_SPIWriteRegisterFileWord}, 
{\b Operation.EM_SPIReqRN}, 
{\b Operation.TAG_GENERALSELECTED}, 
{\b Operation.TAG_PREFILTER}, 
{\b Operation.UNKNOWN} = -1, 
{\b Operation.TAG_BLOCK_PERMALOCK}, 
{\b Operation.TAG_LOCK}, 
{\b Operation.TAG_KILL}, 
{\b Operation.TAG_READ_KILL_PWD}, 
{\b Operation.TAG_READ_ACC_PWD}, 
{\b Operation.TAG_READ_PC}, 
{\b Operation.TAG_READ_EPC}, 
{\b Operation.TAG_READ_TID}, 
{\b Operation.TAG_READ_USER}, 
{\b Operation.TAG_WRITE_KILL_PWD}, 
{\b Operation.TAG_WRITE_ACC_PWD}, 
{\b Operation.TAG_WRITE_PC}, 
{\b Operation.TAG_WRITE_EPC}, 
{\b Operation.TAG_WRITE_USER}, 
{\b Operation.TAG_INVENTORY}, 
{\b Operation.TAG_RANGING}, 
{\b Operation.TAG_SEARCHING}, 
{\b Operation.TAG_SELECTED}, 
{\b Operation.TAG_READ_PROTECT}, 
{\b Operation.TAG_RESET_READ_PROTECT}, 
{\b Operation.EAS_CONFIG}, 
{\b Operation.EAS_ALARM}, 
{\b Operation.CL_SET_PASSWORD}, 
{\b Operation.CL_SET_LOG_MODE}, 
{\b Operation.CL_SET_LOG_LIMITS}, 
{\b Operation.CL_GET_MEASUREMENT_SETUP}, 
{\b Operation.CL_SET_SFE_PARA}, 
{\b Operation.CL_SET_CAL_DATA}, 
{\b Operation.CL_END_LOG}, 
{\b Operation.CL_START_LOG}, 
{\b Operation.CL_GET_LOG_STATE}, 
{\b Operation.CL_GET_CAL_DATA}, 
{\b Operation.CL_GET_BAT_LV}, 
{\b Operation.CL_SET_SHELF_LIFE}, 
{\b Operation.CL_INIT}, 
{\b Operation.CL_GET_SENSOR_VALUE}, 
{\b Operation.CL_OPEN_AREA}, 
{\b Operation.CL_ACCESS_FIFO}, 
{\b Operation.G2_READ_PROTECT}, 
{\b Operation.G2_RESET_READ_PROTECT}, 
{\b Operation.G2_CHANGE_EAS}, 
{\b Operation.G2_EAS_ALARM}, 
{\b Operation.G2_CHANGE_CONFIG}, 
{\b Operation.QT_COMMAND}, 
{\b Operation.EM4324_GetUid}, 
{\b Operation.EM4325_GetUid}, 
{\b Operation.EM_GetSensorData}, 
{\b Operation.EM_ResetAlarms}, 
{\b Operation.EM_SPI}, 
{\b Operation.EM_SPIRequestStatus}, 
{\b Operation.EM_SPIBoot}, 
{\b Operation.EM_SPITransponder}, 
{\b Operation.EM_SPIGetSensorData}, 
{\b Operation.EM_SPISetFlags}, 
{\b Operation.EM_SPIReadWord}, 
{\b Operation.EM_SPIWriteWord}, 
{\b Operation.EM_SPIReadPage}, 
{\b Operation.EM_SPIWritePage}, 
{\b Operation.EM_SPISetClock}, 
{\b Operation.EM_SPIAlarm}, 
{\b Operation.EM_SPIReadRegisterFileWord}, 
{\b Operation.EM_SPIWriteRegisterFileWord}, 
{\b Operation.EM_SPIReqRN}, 
{\b Operation.TAG_GENERALSELECTED}
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RFID Operation Mode }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b Bank} \{ {\b Bank.ACC_PWD}, 
{\b Bank.KILL_PWD}, 
{\b Bank.PC}, 
{\b Bank.EPC}, 
{\b Bank.TID}, 
{\b Bank.USER}, 
{\b Bank.UNKNOWN}, 
{\b Bank.ACC_PWD}, 
{\b Bank.KILL_PWD}, 
{\b Bank.PC}, 
{\b Bank.EPC}, 
{\b Bank.TID}, 
{\b Bank.USER}, 
{\b Bank.UNKNOWN}
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Memory bank }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b TagAccess} : byte \{ {\b TagAccess.READ} = 0xC2, 
{\b TagAccess.WRITE} = 0xC3, 
{\b TagAccess.KILL} = 0xC4, 
{\b TagAccess.LOCK} = 0xC5, 
{\b TagAccess.ERASE} = 0xC6, 
{\b TagAccess.UNKNOWN} = 0xff, 
{\b TagAccess.READ} = 0xC2, 
{\b TagAccess.WRITE} = 0xC3, 
{\b TagAccess.KILL} = 0xC4, 
{\b TagAccess.LOCK} = 0xC5, 
{\b TagAccess.ERASE} = 0xC6, 
{\b TagAccess.UNKNOWN} = 0xff
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The values that can be found in the command field for tag access packets }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b Machine} \{ {\b Machine.CS101} = 0, 
{\b Machine.CS203}, 
{\b Machine.CS333}, 
{\b Machine.CS468}, 
{\b Machine.CS206}, 
{\b Machine.CS468INT}, 
{\b Machine.CS463}, 
{\b Machine.CS469}, 
{\b Machine.CS208}, 
{\b Machine.CS209}, 
{\b Machine.CS103}, 
{\b Machine.CS108}, 
{\b Machine.MACHINE_CODE_END}, 
{\b Machine.UNKNOWN} = 0xff, 
{\b Machine.CS101} = 0, 
{\b Machine.CS203}, 
{\b Machine.CS333}, 
{\b Machine.CS468}, 
{\b Machine.CS206}, 
{\b Machine.CS468INT}, 
{\b Machine.CS463}, 
{\b Machine.CS469}, 
{\b Machine.CS208}, 
{\b Machine.CS209}, 
{\b Machine.CS103}, 
{\b Machine.CS108}, 
{\b Machine.MACHINE_CODE_END}, 
{\b Machine.UNKNOWN} = 0xff
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Machine Type }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b ApiMode} \{ {\b ApiMode.HIGHLEVEL}, 
{\b ApiMode.LOWLEVEL}, 
{\b ApiMode.UNKNOWN}, 
{\b ApiMode.HIGHLEVEL}, 
{\b ApiMode.LOWLEVEL}, 
{\b ApiMode.UNKNOWN}
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b SelectFlags} \{ {\b SelectFlags.ZERO} = 0x0000000, 
{\b SelectFlags.SELECT} = 0x00000001, 
{\b SelectFlags.POSTMATCH} = 0x00000002, 
{\b SelectFlags.POST_MATCH} = 0x2, 
{\b SelectFlags.DISABLE_INVENTORY} = 0x00000004, 
{\b SelectFlags.READ1BANK} = 0x00000008, 
{\b SelectFlags.READ2BANK} = 0x00000010, 
{\b SelectFlags.UNKNOWN} = 0xffff, 
{\b SelectFlags.ZERO} = 0x0000000, 
{\b SelectFlags.SELECT} = 0x00000001, 
{\b SelectFlags.POSTMATCH} = 0x00000002, 
{\b SelectFlags.POST_MATCH} = 0x2, 
{\b SelectFlags.DISABLE_INVENTORY} = 0x00000004, 
{\b SelectFlags.READ1BANK} = 0x00000008, 
{\b SelectFlags.READ2BANK} = 0x00000010, 
{\b SelectFlags.UNKNOWN} = 0xffff
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b RadioOperationMode} : uint \{ {\b RadioOperationMode.CONTINUOUS}, 
{\b RadioOperationMode.NONCONTINUOUS}, 
{\b RadioOperationMode.UNKNOWN} = 0xFFFF
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A radio module may operate either in continuous or non-continuous mode. In continuous mode, when a tag-protocol-operation cycle (i.e., one iteration through all enabled antenna ports) has completed, the radio module will begin a new tag- protocol-operation cycle with the first enabled antenna port and will continue to do so until the operation is explicitly cancelled by the application. In non- continuous mode, only a single tag-protocol-operation cycle is executed upon the radio module. }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b RadioPowerState} : uint \{ {\b RadioPowerState.FULL}, 
{\b RadioPowerState.STANDBY}, 
{\b RadioPowerState.UNKNOWN} = 0xFFFF
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Based upon the usage scenario, an application is given the flexibility to place the radio module into specific power states. A radio module that is in the low-power state will remain so until either a tag-protocol operation (e.g., TagInventory, etc.) is executed on the radio module or until it is explicitly instructed to leave low-power state. Note that if an RFID radio module is brought out of low-power state by the execution of a tag-protocol operation, it will not automatically return to low-power state. Note that the radio-module power state should not be confused with the per- antenna RF power-level }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b AntennaPortState} : uint \{ {\b AntennaPortState.DISABLED}, 
{\b AntennaPortState.ENABLED}, 
{\b AntennaPortState.UNKNOWN} = 0xFFFF
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Indicates the state of the logical antenna port. }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b ModulationType} : uint \{ {\b ModulationType.DSB_ASK}, 
{\b ModulationType.SSB_ASK}, 
{\b ModulationType.PR_ASK}, 
{\b ModulationType.UNKNOWN} = 0xFFFF
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The modulation type that is used by the profile. }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b DataDifference} : uint \{ {\b DataDifference.HALF_TARI}, 
{\b DataDifference.ONE_TARI}, 
{\b DataDifference.UNKNOWN} = 0xFFFF
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The difference, in Tari, between an data zero and a data one. }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b DivideRatio} : uint \{ {\b DivideRatio.RATIO_8}, 
{\b DivideRatio.RATIO_64DIV3}, 
{\b DivideRatio.UNKNOWN} = 0xFFFF
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The tag-to-interrogator divide ratio that is sent as part of the Query command. }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b MillerNumber} : uint \{ {\b MillerNumber.NUMBER_FM0}, 
{\b MillerNumber.NUMBER_2}, 
{\b MillerNumber.NUMBER_4}, 
{\b MillerNumber.NUMBER_8}, 
{\b MillerNumber.UNKNOWN} = 0xFFFF
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The miller number (i.e., cycles per symbol) that is sent as part of the Query command. }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b RadioProtocol} : uint \{ {\b RadioProtocol.ISO18K6C}, 
{\b RadioProtocol.UNKNOWN} = 0xFFFF
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The tag protocol for which this link profile has been configured. The value of this field determines which of the structures within the profileConfig contains the link profile configuration information. }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b MemoryBank} : uint \{ {\b MemoryBank.RESERVED}, 
{\b MemoryBank.EPC}, 
{\b MemoryBank.TID}, 
{\b MemoryBank.USER}, 
{\b MemoryBank.BANK0} = 0x00, 
{\b MemoryBank.BANK1} = 0x01, 
{\b MemoryBank.BANK2} = 0x02, 
{\b MemoryBank.BANK3} = 0x03, 
{\b MemoryBank.UNKNOWN} = 0xFFFF
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tag's memory bank }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b Target} : uint \{ {\b Target.S0}, 
{\b Target.S1}, 
{\b Target.S2}, 
{\b Target.S3}, 
{\b Target.SELECTED}, 
{\b Target.UNKNOWN} = 0xFFFF
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Specifies what flag, selected (i.e., SL) or one of the four inventory flags (i.e., S0, S1, S2, or S3), will be modified by the action. }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b Action} : uint \{ {\b Action.ASLINVA_DSLINVB}, 
{\b Action.ASLINVA_NOTHING}, 
{\b Action.NOTHING_DSLINVB}, 
{\b Action.NSLINVS_NOTHING}, 
{\b Action.DSLINVB_ASLINVA}, 
{\b Action.DSLINVB_NOTHING}, 
{\b Action.NOTHING_ASLINVA}, 
{\b Action.NOTHING_NSLINVS}, 
{\b Action.UNKNOWN} = 0xFFFF
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Specifies the action that will be applied to the tag populations (i.e, the }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b Selected} : uint \{ {\b Selected.ALL} = 0, 
{\b Selected.DEASSERTED} = 2, 
{\b Selected.ASSERTED} = 3, 
{\b Selected.UNKNOWN} = 0xFFFF
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Specifies the state of the selected (SL) flag for tags that will have the operation applied to them. }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b Session} : uint \{ {\b Session.S0}, 
{\b Session.S1}, 
{\b Session.S2}, 
{\b Session.S3}, 
{\b Session.UNKNOWN} = 0xFFFF
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Specifies which inventory session flag (i.e., S0, S1, S2, or S3) will be matched against the inventory state specified by target. }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b SessionTarget} : uint \{ {\b SessionTarget.A}, 
{\b SessionTarget.B}, 
{\b SessionTarget.UNKNOWN} = 0xFFFF
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Specifies the state of the inventory session flag (i.e., A or B), specified by session, for tags that will have the operation applied to them. }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b SingulationAlgorithm} : uint \{ {\b SingulationAlgorithm.FIXEDQ} = 0, 
{\b SingulationAlgorithm.DYNAMICQ} = 3, 
{\b SingulationAlgorithm.UNKNOWN} = 0xFFFF
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Based upon usage scenarios, different singulation algorithms (i.e., Q-adjustment, etc.) may be desired. This document simply documents the mechanisms by which an application can choose and configure singulation algorithms. This document does not provide specific information about the singulation algorithms. }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b WriteType} : uint \{ {\b WriteType.SEQUENTIAL}, 
{\b WriteType.RANDOM}, 
{\b WriteType.UNKNOWN} = 0xFFFF
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The type of write that will be performed \'96 i.e., sequential or random. The value of this field determines which of the structures within parameters contains the write parameters. }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b Permission} : uint \{ {\b Permission.UNLOCK} = 0x0, 
{\b Permission.PERM_UNLOCK} = 0x1, 
{\b Permission.LOCK} = 0x2, 
{\b Permission.PERM_LOCK} = 0x3, 
{\b Permission.UNCHANGED} = 0x4, 
{\b Permission.UNKNOWN} = 0xFFFF
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A tag-permission command (aka, tag lock) allows the application to set the access permissions of a tag. These include the following: \'95 Set whether or not an access password is required to write to the EPC, TID, or user memory banks. \'95 Set whether or not the above memory-write permission is permanently set. Once the memory-write permission has been permanently set, attempts to change the permission or turn off the permanent setting will fail. \'95 Set a memory bank to be read-only. \'95 Set whether or not the individual passwords (i.e., access and kill) may be accessed (i.e., read and written) and, if they are accessible, whether or not an access password is required to read the individual passwords (i.e., access and kill). \'95 Set whether or not the above password-access permission is permanently set. Once the password-access permission has been permanently set, attempts to change the permission or turn off the permanent setting will fail. \'95 Set the individual passwords to be inaccessible (i.e., unable to be read or written). }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b OptType} : uint \{ {\b OptType.OPT_NONE}, 
{\b OptType.OPT_READ}, 
{\b OptType.OPT_WRITE_TYPE_SEQUENTIAL}, 
{\b OptType.OPT_WRITE_TYPE_RANDOM}, 
{\b OptType.UNKNOWN} = 0xFFFF
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b QTCtrlType} : uint \{ {\b QTCtrlType.READ}, 
{\b QTCtrlType.WRITE}, 
{\b QTCtrlType.UNKNOWN} = 0xFFFF
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b QTPersistenceType} : uint \{ {\b QTPersistenceType.TEMPORARY}, 
{\b QTPersistenceType.PERMANENT}, 
{\b QTPersistenceType.UNKNOWN} = 0xFFFF
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b QTShortRangeType} : uint \{ {\b QTShortRangeType.DISABLE}, 
{\b QTShortRangeType.ENABLE}, 
{\b QTShortRangeType.UNKNOWN} = 0xFFFF
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b QTMemMapType} : uint \{ {\b QTMemMapType.PRIVATE}, 
{\b QTMemMapType.PUBLIC}, 
{\b QTMemMapType.UNKNOWN} = 0xFFFF
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b ResponseType} : uint \{ {\b ResponseType.DATA} = 0xFFFFFFFF, 
{\b ResponseType.UNKNOWN} = 0xFFFF
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The type of data that will have its mode set to the mode specified by responseMode. For version 1.1 of the RFID Reader Library, the only valid value is RFID_RESPONSE_TYPE_DATA. }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b ResponseMode} : uint \{ {\b ResponseMode.COMPACT} = 0x00000001, 
{\b ResponseMode.NORMAL} = 0x00000003, 
{\b ResponseMode.EXTENDED} = 0x00000007, 
{\b ResponseMode.UNKNOWN} = 0xFFFF
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The requested data-reporting mode for the data type specified by responseType. }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b MacResetType} : uint \{ {\b MacResetType.SOFT}, 
{\b MacResetType.UNKNOWN} = 0xFFFF
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The type of reset that the MAC should perform. }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b MacRegion} : uint \{ {\b MacRegion.FCC_GENERIC}, 
{\b MacRegion.ETSI_GENERIC}, 
{\b MacRegion.NEWETSI_GENERIC}, 
{\b MacRegion.JAPAN_GENERIC}, 
{\b MacRegion.KOREA_LBT}, 
{\b MacRegion.KOREA_FHSS}, 
{\b MacRegion.UNKNOWN} = 0xFFFF
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The new region of operation for the radio module. }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b GpioPin} : uint \{ {\b GpioPin.PIN_0} = ( uint ) 0x1 << 0, 
{\b GpioPin.PIN_1} = ( uint ) 0x1 << 1, 
{\b GpioPin.PIN_2} = ( uint ) 0x1 << 2, 
{\b GpioPin.PIN_3} = ( uint ) 0x1 << 3
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b Result} : int \{ {\b Result.OK} = 0, 
{\b Result.ALREADY_OPEN} = -9999, 
{\b Result.BUFFER_TOO_SMALL}, 
{\b Result.FAILURE}, 
{\b Result.DRIVER_LOAD}, 
{\b Result.DRIVER_MISMATCH}, 
{\b Result.EMULATION_MODE}, 
{\b Result.INVALID_ANTENNA}, 
{\b Result.INVALID_HANDLE}, 
{\b Result.INVALID_PARAMETER}, 
{\b Result.NO_SUCH_RADIO}, 
{\b Result.NOT_INITIALIZED}, 
{\b Result.NOT_SUPPORTED}, 
{\b Result.OPERATION_CANCELLED}, 
{\b Result.OUT_OF_MEMORY}, 
{\b Result.RADIO_BUSY}, 
{\b Result.RADIO_FAILURE}, 
{\b Result.RADIO_NOT_PRESENT}, 
{\b Result.CURRENTLY_NOT_ALLOWED}, 
{\b Result.RADIO_NOT_RESPONDING}, 
{\b Result.NONVOLATILE_INIT_FAILED}, 
{\b Result.NONVOLATILE_OUT_OF_BOUNDS}, 
{\b Result.NONVOLATILE_WRITE_FAILED}, 
{\b Result.RECEIVE_OVERFLOW}, 
{\b Result.SYSTEM_CATCH_EXCEPTION}, 
{\b Result.NO_TAG_FOUND}, 
{\b Result.MAX_RETRY_EXIT}, 
{\b Result.UNKNOWN_OPERATION}, 
{\b Result.PREALLOCATED_BUFFER_FULL}, 
{\b Result.POWER_UP_FAIL}, 
{\b Result.POWER_DOWN_FAIL}, 
{\b Result.NETWORK_RESET}, 
{\b Result.NETWORK_LOST}, 
{\b Result.INVALID_OEM_COUNTRY_CODE}, 
{\b Result.DEVICE_NOT_SUPPORT}, 
{\b Result.DEVICE_CONNECTED}, 
{\b Result.THREAD_ERROR}, 
{\b Result.MAC_ERROR}
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
function Result value definitions }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b SelectMaskFlags} \{ {\b SelectMaskFlags.DISABLE_ALL} = 0, 
{\b SelectMaskFlags.ENABLE_TOGGLE} = 1, 
{\b SelectMaskFlags.ENABLE_PC_MASK} = 2, 
{\b SelectMaskFlags.ENABLE_NON_MATCH} = 4, 
{\b SelectMaskFlags.ENABLE_ALL} = ENABLE_TOGGLE | ENABLE_PC_MASK | ENABLE_NON_MATCH
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tag Parameters Selected flags }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b FwUpdateFlags} \{ {\b FwUpdateFlags.NVMEM_UPDATE} = 0x00000000, 
{\b FwUpdateFlags.NVMEM_UPDATE_TEST}, 
{\b FwUpdateFlags.NVMEM_UPDATE_BL}, 
{\b FwUpdateFlags.NVMEM_UPDATE_BL_TEST}, 
{\b FwUpdateFlags.NVMEM_UPDATE_APP}, 
{\b FwUpdateFlags.NVMEM_UPDATE_APP_TEST}
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Firmware Update flags }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b GPIOTrigger} : byte \{ {\b GPIOTrigger.OFF}, 
{\b GPIOTrigger.RAISING_EDGE}, 
{\b GPIOTrigger.FALLING_EDGE}, 
{\b GPIOTrigger.ANY_TRIGGER}
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
GPIO Trigger flags }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b PermalockFlags} : int \{ {\b PermalockFlags.SET_VALUE} = 1, 
{\b PermalockFlags.GET_VALUE} = 0
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Permalock access flags }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b SelectFlags} \{ {\b SelectFlags.ZERO} = 0x0000000, 
{\b SelectFlags.SELECT} = 0x00000001, 
{\b SelectFlags.POSTMATCH} = 0x00000002, 
{\b SelectFlags.POST_MATCH} = 0x2, 
{\b SelectFlags.DISABLE_INVENTORY} = 0x00000004, 
{\b SelectFlags.READ1BANK} = 0x00000008, 
{\b SelectFlags.READ2BANK} = 0x00000010, 
{\b SelectFlags.UNKNOWN} = 0xffff, 
{\b SelectFlags.ZERO} = 0x0000000, 
{\b SelectFlags.SELECT} = 0x00000001, 
{\b SelectFlags.POSTMATCH} = 0x00000002, 
{\b SelectFlags.POST_MATCH} = 0x2, 
{\b SelectFlags.DISABLE_INVENTORY} = 0x00000004, 
{\b SelectFlags.READ1BANK} = 0x00000008, 
{\b SelectFlags.READ2BANK} = 0x00000010, 
{\b SelectFlags.UNKNOWN} = 0xffff
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Select Flags }}}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumeration Type Documentation\par
\pard\plain 
{\xe \v ACID\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:ACID}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b CSLibrary.Constants.ACID}{\f2 [strong]}}}
\par
{\bkmkstart AAAAAAACIL}
{\bkmkend AAAAAAACIL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Allocation Class Identifier }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v APACS\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:APACS}
{\qr APACS{\bkmkstart AAAAAAACIM}
{\bkmkend AAAAAAACIM}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ISO/IEC 7816-6 registration authority \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v NEN\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:NEN}
{\qr NEN{\bkmkstart AAAAAAACIN}
{\bkmkend AAAAAAACIN}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ISO/TS 14816 registration authority \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v GS1\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:GS1}
{\qr GS1{\bkmkstart AAAAAAACIO}
{\bkmkend AAAAAAACIO}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EPCglobal \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v APACSX\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:APACSX}
{\qr APACSX{\bkmkstart AAAAAAACIP}
{\bkmkend AAAAAAACIP}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ISO/IEC 7816-6 registration authority(includes memory size and XTID Header) \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v UNKNOWN\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:UNKNOWN}
{\qr UNKNOWN{\bkmkstart AAAAAAACIQ}
{\bkmkend AAAAAAACIQ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Unknown authority \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v APACS\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:APACS}
{\qr APACS{\bkmkstart AAAAAAACIM}
{\bkmkend AAAAAAACIM}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ISO/IEC 7816-6 registration authority \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v NEN\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:NEN}
{\qr NEN{\bkmkstart AAAAAAACIN}
{\bkmkend AAAAAAACIN}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ISO/TS 14816 registration authority \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v GS1\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:GS1}
{\qr GS1{\bkmkstart AAAAAAACIO}
{\bkmkend AAAAAAACIO}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EPCglobal \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v APACSX\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:APACSX}
{\qr APACSX{\bkmkstart AAAAAAACIP}
{\bkmkend AAAAAAACIP}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ISO/IEC 7816-6 registration authority(includes memory size and XTID Header) \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v UNKNOWN\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:UNKNOWN}
{\qr UNKNOWN{\bkmkstart AAAAAAACIQ}
{\bkmkend AAAAAAACIQ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Unknown authority \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
}
}
{\xe \v ACID\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:ACID}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b CSLibrary.Constants.ACID}{\f2 [strong]}}}
\par
{\bkmkstart AAAAAAACIL}
{\bkmkend AAAAAAACIL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Allocation Class Identifier }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v APACS\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:APACS}
{\qr APACS{\bkmkstart AAAAAAACIM}
{\bkmkend AAAAAAACIM}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ISO/IEC 7816-6 registration authority \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v NEN\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:NEN}
{\qr NEN{\bkmkstart AAAAAAACIN}
{\bkmkend AAAAAAACIN}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ISO/TS 14816 registration authority \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v GS1\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:GS1}
{\qr GS1{\bkmkstart AAAAAAACIO}
{\bkmkend AAAAAAACIO}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EPCglobal \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v APACSX\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:APACSX}
{\qr APACSX{\bkmkstart AAAAAAACIP}
{\bkmkend AAAAAAACIP}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ISO/IEC 7816-6 registration authority(includes memory size and XTID Header) \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v UNKNOWN\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:UNKNOWN}
{\qr UNKNOWN{\bkmkstart AAAAAAACIQ}
{\bkmkend AAAAAAACIQ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Unknown authority \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v APACS\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:APACS}
{\qr APACS{\bkmkstart AAAAAAACIM}
{\bkmkend AAAAAAACIM}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ISO/IEC 7816-6 registration authority \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v NEN\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:NEN}
{\qr NEN{\bkmkstart AAAAAAACIN}
{\bkmkend AAAAAAACIN}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ISO/TS 14816 registration authority \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v GS1\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:GS1}
{\qr GS1{\bkmkstart AAAAAAACIO}
{\bkmkend AAAAAAACIO}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EPCglobal \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v APACSX\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:APACSX}
{\qr APACSX{\bkmkstart AAAAAAACIP}
{\bkmkend AAAAAAACIP}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ISO/IEC 7816-6 registration authority(includes memory size and XTID Header) \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v UNKNOWN\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:UNKNOWN}
{\qr UNKNOWN{\bkmkstart AAAAAAACIQ}
{\bkmkend AAAAAAACIQ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Unknown authority \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
}
}
{\xe \v Action\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Action}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b CSLibrary.Constants.Action} : uint{\f2 [strong]}}}
\par
{\bkmkstart AAAAAAACIR}
{\bkmkend AAAAAAACIR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Specifies the action that will be applied to the tag populations (i.e, the }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
matching and non-matching tags). \par
}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v ASLINVA_DSLINVB\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:ASLINVA_DSLINVB}
{\qr ASLINVA_DSLINVB{\bkmkstart AAAAAAACIS}
{\bkmkend AAAAAAACIS}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Match : Assert SL or inventoried -> A Non-Match : Deassert SL or inventoried -> B \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ASLINVA_NOTHING\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:ASLINVA_NOTHING}
{\qr ASLINVA_NOTHING{\bkmkstart AAAAAAACIT}
{\bkmkend AAAAAAACIT}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Match : Assert SL or inventoried -> A Non-Match : Nothing \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v NOTHING_DSLINVB\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:NOTHING_DSLINVB}
{\qr NOTHING_DSLINVB{\bkmkstart AAAAAAACIU}
{\bkmkend AAAAAAACIU}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Match : Nothing Non-Match : Deassert SL or inventoried -> B \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v NSLINVS_NOTHING\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:NSLINVS_NOTHING}
{\qr NSLINVS_NOTHING{\bkmkstart AAAAAAACIV}
{\bkmkend AAAAAAACIV}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Match : Negate SL or (A -> B, B -> A) Non-Match : Nothing \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v DSLINVB_ASLINVA\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:DSLINVB_ASLINVA}
{\qr DSLINVB_ASLINVA{\bkmkstart AAAAAAACIW}
{\bkmkend AAAAAAACIW}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Match : Deassert SL or inventoried -> B Non-Match : Assert SL or inventoried -> A \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v DSLINVB_NOTHING\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:DSLINVB_NOTHING}
{\qr DSLINVB_NOTHING{\bkmkstart AAAAAAACIX}
{\bkmkend AAAAAAACIX}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Match : Deassert SL or inventoried -> B Non-Match : Nothing \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v NOTHING_ASLINVA\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:NOTHING_ASLINVA}
{\qr NOTHING_ASLINVA{\bkmkstart AAAAAAACIY}
{\bkmkend AAAAAAACIY}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Match : Nothing Non-Match : Assert SL or inventoried -> A \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v NOTHING_NSLINVS\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:NOTHING_NSLINVS}
{\qr NOTHING_NSLINVS{\bkmkstart AAAAAAACIZ}
{\bkmkend AAAAAAACIZ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Match : Nothing Non-Match : Negate SL or (A -> B, B -> A) \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v UNKNOWN\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:UNKNOWN}
{\qr UNKNOWN{\bkmkstart AAAAAAACJA}
{\bkmkend AAAAAAACJA}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Unknown action \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
}
}
{\xe \v AntennaPortState\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:AntennaPortState}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b CSLibrary.Constants.AntennaPortState} : uint{\f2 [strong]}}}
\par
{\bkmkstart AAAAAAACJB}
{\bkmkend AAAAAAACJB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Indicates the state of the logical antenna port. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v DISABLED\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:DISABLED}
{\qr DISABLED{\bkmkstart AAAAAAACJC}
{\bkmkend AAAAAAACJC}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Disable Port \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ENABLED\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:ENABLED}
{\qr ENABLED{\bkmkstart AAAAAAACJD}
{\bkmkend AAAAAAACJD}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enable Port \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v UNKNOWN\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:UNKNOWN}
{\qr UNKNOWN{\bkmkstart AAAAAAACJE}
{\bkmkend AAAAAAACJE}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Unknown action \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
}
}
{\xe \v ApiMode\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:ApiMode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b CSLibrary.Constants.ApiMode}{\f2 [strong]}}}
\par
{\bkmkstart AAAAAAACJF}
{\bkmkend AAAAAAACJF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v HIGHLEVEL\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:HIGHLEVEL}
{\qr HIGHLEVEL{\bkmkstart AAAAAAACJG}
{\bkmkend AAAAAAACJG}
\cell }{\cell }{\row }
{\xe \v LOWLEVEL\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:LOWLEVEL}
{\qr LOWLEVEL{\bkmkstart AAAAAAACJH}
{\bkmkend AAAAAAACJH}
\cell }{\cell }{\row }
{\xe \v UNKNOWN\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:UNKNOWN}
{\qr UNKNOWN{\bkmkstart AAAAAAACJI}
{\bkmkend AAAAAAACJI}
\cell }{\cell }{\row }
{\xe \v HIGHLEVEL\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:HIGHLEVEL}
{\qr HIGHLEVEL{\bkmkstart AAAAAAACJG}
{\bkmkend AAAAAAACJG}
\cell }{\cell }{\row }
{\xe \v LOWLEVEL\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:LOWLEVEL}
{\qr LOWLEVEL{\bkmkstart AAAAAAACJH}
{\bkmkend AAAAAAACJH}
\cell }{\cell }{\row }
{\xe \v UNKNOWN\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:UNKNOWN}
{\qr UNKNOWN{\bkmkstart AAAAAAACJI}
{\bkmkend AAAAAAACJI}
\cell }{\cell }{\row }
}
}
{\xe \v ApiMode\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:ApiMode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b CSLibrary.Constants.ApiMode}{\f2 [strong]}}}
\par
{\bkmkstart AAAAAAACJF}
{\bkmkend AAAAAAACJF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v HIGHLEVEL\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:HIGHLEVEL}
{\qr HIGHLEVEL{\bkmkstart AAAAAAACJG}
{\bkmkend AAAAAAACJG}
\cell }{\cell }{\row }
{\xe \v LOWLEVEL\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:LOWLEVEL}
{\qr LOWLEVEL{\bkmkstart AAAAAAACJH}
{\bkmkend AAAAAAACJH}
\cell }{\cell }{\row }
{\xe \v UNKNOWN\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:UNKNOWN}
{\qr UNKNOWN{\bkmkstart AAAAAAACJI}
{\bkmkend AAAAAAACJI}
\cell }{\cell }{\row }
{\xe \v HIGHLEVEL\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:HIGHLEVEL}
{\qr HIGHLEVEL{\bkmkstart AAAAAAACJG}
{\bkmkend AAAAAAACJG}
\cell }{\cell }{\row }
{\xe \v LOWLEVEL\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:LOWLEVEL}
{\qr LOWLEVEL{\bkmkstart AAAAAAACJH}
{\bkmkend AAAAAAACJH}
\cell }{\cell }{\row }
{\xe \v UNKNOWN\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:UNKNOWN}
{\qr UNKNOWN{\bkmkstart AAAAAAACJI}
{\bkmkend AAAAAAACJI}
\cell }{\cell }{\row }
}
}
{\xe \v BandState\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:BandState}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b CSLibrary.Constants.BandState}{\f2 [strong]}}}
\par
{\bkmkstart AAAAAAACJJ}
{\bkmkend AAAAAAACJJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Frequency Band State }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v DISABLE\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:DISABLE}
{\qr DISABLE{\bkmkstart AAAAAAACJK}
{\bkmkend AAAAAAACJK}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Disable \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ENABLE\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:ENABLE}
{\qr ENABLE{\bkmkstart AAAAAAACJL}
{\bkmkend AAAAAAACJL}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enable \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v UNKNOWN\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:UNKNOWN}
{\qr UNKNOWN{\bkmkstart AAAAAAACJM}
{\bkmkend AAAAAAACJM}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Unknow \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v DISABLE\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:DISABLE}
{\qr DISABLE{\bkmkstart AAAAAAACJK}
{\bkmkend AAAAAAACJK}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Disable \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ENABLE\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:ENABLE}
{\qr ENABLE{\bkmkstart AAAAAAACJL}
{\bkmkend AAAAAAACJL}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enable \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v UNKNOWN\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:UNKNOWN}
{\qr UNKNOWN{\bkmkstart AAAAAAACJM}
{\bkmkend AAAAAAACJM}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Unknow \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
}
}
{\xe \v BandState\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:BandState}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b CSLibrary.Constants.BandState}{\f2 [strong]}}}
\par
{\bkmkstart AAAAAAACJJ}
{\bkmkend AAAAAAACJJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Frequency Band State }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v DISABLE\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:DISABLE}
{\qr DISABLE{\bkmkstart AAAAAAACJK}
{\bkmkend AAAAAAACJK}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Disable \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ENABLE\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:ENABLE}
{\qr ENABLE{\bkmkstart AAAAAAACJL}
{\bkmkend AAAAAAACJL}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enable \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v UNKNOWN\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:UNKNOWN}
{\qr UNKNOWN{\bkmkstart AAAAAAACJM}
{\bkmkend AAAAAAACJM}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Unknow \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v DISABLE\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:DISABLE}
{\qr DISABLE{\bkmkstart AAAAAAACJK}
{\bkmkend AAAAAAACJK}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Disable \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ENABLE\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:ENABLE}
{\qr ENABLE{\bkmkstart AAAAAAACJL}
{\bkmkend AAAAAAACJL}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enable \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v UNKNOWN\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:UNKNOWN}
{\qr UNKNOWN{\bkmkstart AAAAAAACJM}
{\bkmkend AAAAAAACJM}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Unknow \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
}
}
{\xe \v Bank\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Bank}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b CSLibrary.Constants.Bank}{\f2 [strong]}}}
\par
{\bkmkstart AAAAAAACJN}
{\bkmkend AAAAAAACJN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Memory bank }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v ACC_PWD\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:ACC_PWD}
{\qr ACC_PWD{\bkmkstart AAAAAAACJO}
{\bkmkend AAAAAAACJO}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access password \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v KILL_PWD\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:KILL_PWD}
{\qr KILL_PWD{\bkmkstart AAAAAAACJP}
{\bkmkend AAAAAAACJP}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Kill password \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v PC\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:PC}
{\qr PC{\bkmkstart AAAAAAACJQ}
{\bkmkend AAAAAAACJQ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Protocol Control \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v EPC\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:EPC}
{\qr EPC{\bkmkstart AAAAAAACJR}
{\bkmkend AAAAAAACJR}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Electronic Product Code \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v TID\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:TID}
{\qr TID{\bkmkstart AAAAAAACJS}
{\bkmkend AAAAAAACJS}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Transponder ID \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v USER\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:USER}
{\qr USER{\bkmkstart AAAAAAACJT}
{\bkmkend AAAAAAACJT}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
User memory \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v UNKNOWN\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:UNKNOWN}
{\qr UNKNOWN{\bkmkstart AAAAAAACJU}
{\bkmkend AAAAAAACJU}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Unknown bank \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ACC_PWD\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:ACC_PWD}
{\qr ACC_PWD{\bkmkstart AAAAAAACJO}
{\bkmkend AAAAAAACJO}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access password \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v KILL_PWD\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:KILL_PWD}
{\qr KILL_PWD{\bkmkstart AAAAAAACJP}
{\bkmkend AAAAAAACJP}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Kill password \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v PC\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:PC}
{\qr PC{\bkmkstart AAAAAAACJQ}
{\bkmkend AAAAAAACJQ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Protocol Control \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v EPC\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:EPC}
{\qr EPC{\bkmkstart AAAAAAACJR}
{\bkmkend AAAAAAACJR}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Electronic Product Code \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v TID\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:TID}
{\qr TID{\bkmkstart AAAAAAACJS}
{\bkmkend AAAAAAACJS}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Transponder ID \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v USER\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:USER}
{\qr USER{\bkmkstart AAAAAAACJT}
{\bkmkend AAAAAAACJT}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
User memory \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v UNKNOWN\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:UNKNOWN}
{\qr UNKNOWN{\bkmkstart AAAAAAACJU}
{\bkmkend AAAAAAACJU}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Unknown bank \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
}
}
{\xe \v Bank\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Bank}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b CSLibrary.Constants.Bank}{\f2 [strong]}}}
\par
{\bkmkstart AAAAAAACJN}
{\bkmkend AAAAAAACJN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Memory bank }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v ACC_PWD\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:ACC_PWD}
{\qr ACC_PWD{\bkmkstart AAAAAAACJO}
{\bkmkend AAAAAAACJO}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access password \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v KILL_PWD\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:KILL_PWD}
{\qr KILL_PWD{\bkmkstart AAAAAAACJP}
{\bkmkend AAAAAAACJP}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Kill password \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v PC\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:PC}
{\qr PC{\bkmkstart AAAAAAACJQ}
{\bkmkend AAAAAAACJQ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Protocol Control \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v EPC\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:EPC}
{\qr EPC{\bkmkstart AAAAAAACJR}
{\bkmkend AAAAAAACJR}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Electronic Product Code \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v TID\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:TID}
{\qr TID{\bkmkstart AAAAAAACJS}
{\bkmkend AAAAAAACJS}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Transponder ID \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v USER\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:USER}
{\qr USER{\bkmkstart AAAAAAACJT}
{\bkmkend AAAAAAACJT}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
User memory \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v UNKNOWN\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:UNKNOWN}
{\qr UNKNOWN{\bkmkstart AAAAAAACJU}
{\bkmkend AAAAAAACJU}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Unknown bank \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ACC_PWD\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:ACC_PWD}
{\qr ACC_PWD{\bkmkstart AAAAAAACJO}
{\bkmkend AAAAAAACJO}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access password \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v KILL_PWD\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:KILL_PWD}
{\qr KILL_PWD{\bkmkstart AAAAAAACJP}
{\bkmkend AAAAAAACJP}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Kill password \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v PC\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:PC}
{\qr PC{\bkmkstart AAAAAAACJQ}
{\bkmkend AAAAAAACJQ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Protocol Control \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v EPC\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:EPC}
{\qr EPC{\bkmkstart AAAAAAACJR}
{\bkmkend AAAAAAACJR}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Electronic Product Code \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v TID\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:TID}
{\qr TID{\bkmkstart AAAAAAACJS}
{\bkmkend AAAAAAACJS}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Transponder ID \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v USER\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:USER}
{\qr USER{\bkmkstart AAAAAAACJT}
{\bkmkend AAAAAAACJT}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
User memory \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v UNKNOWN\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:UNKNOWN}
{\qr UNKNOWN{\bkmkstart AAAAAAACJU}
{\bkmkend AAAAAAACJU}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Unknown bank \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
}
}
{\xe \v CallbackType\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CallbackType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b CSLibrary.Constants.CallbackType}{\f2 [strong]}}}
\par
{\bkmkstart AAAAAAACJV}
{\bkmkend AAAAAAACJV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Callback Type }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v TAG_INVENTORY\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:TAG_INVENTORY}
{\qr TAG_INVENTORY{\bkmkstart AAAAAAACJW}
{\bkmkend AAAAAAACJW}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tag Inventory, Only PC and EPC will backscatter \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v TAG_SEARCHING\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:TAG_SEARCHING}
{\qr TAG_SEARCHING{\bkmkstart AAAAAAACJX}
{\bkmkend AAAAAAACJX}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Specific-Tag Searching, Only PC , EPC and RSSI will backscatter \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v TAG_RANGING\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:TAG_RANGING}
{\qr TAG_RANGING{\bkmkstart AAAAAAACJY}
{\bkmkend AAAAAAACJY}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ranging all tag, Only PC , EPC and RSSI will backscatter \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v UNKNOWN\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:UNKNOWN}
{\qr UNKNOWN{\bkmkstart AAAAAAACJZ}
{\bkmkend AAAAAAACJZ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Unknown Type will not happen \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v TAG_INVENTORY\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:TAG_INVENTORY}
{\qr TAG_INVENTORY{\bkmkstart AAAAAAACJW}
{\bkmkend AAAAAAACJW}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tag Inventory, Only PC and EPC will backscatter \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v TAG_SEARCHING\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:TAG_SEARCHING}
{\qr TAG_SEARCHING{\bkmkstart AAAAAAACJX}
{\bkmkend AAAAAAACJX}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Specific-Tag Searching, Only PC , EPC and RSSI will backscatter \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v TAG_RANGING\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:TAG_RANGING}
{\qr TAG_RANGING{\bkmkstart AAAAAAACJY}
{\bkmkend AAAAAAACJY}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ranging all tag, Only PC , EPC and RSSI will backscatter \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v UNKNOWN\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:UNKNOWN}
{\qr UNKNOWN{\bkmkstart AAAAAAACJZ}
{\bkmkend AAAAAAACJZ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Unknown Type will not happen \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
}
}
{\xe \v CallbackType\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CallbackType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b CSLibrary.Constants.CallbackType}{\f2 [strong]}}}
\par
{\bkmkstart AAAAAAACJV}
{\bkmkend AAAAAAACJV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Callback Type }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v TAG_INVENTORY\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:TAG_INVENTORY}
{\qr TAG_INVENTORY{\bkmkstart AAAAAAACJW}
{\bkmkend AAAAAAACJW}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tag Inventory, Only PC and EPC will backscatter \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v TAG_SEARCHING\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:TAG_SEARCHING}
{\qr TAG_SEARCHING{\bkmkstart AAAAAAACJX}
{\bkmkend AAAAAAACJX}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Specific-Tag Searching, Only PC , EPC and RSSI will backscatter \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v TAG_RANGING\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:TAG_RANGING}
{\qr TAG_RANGING{\bkmkstart AAAAAAACJY}
{\bkmkend AAAAAAACJY}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ranging all tag, Only PC , EPC and RSSI will backscatter \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v UNKNOWN\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:UNKNOWN}
{\qr UNKNOWN{\bkmkstart AAAAAAACJZ}
{\bkmkend AAAAAAACJZ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Unknown Type will not happen \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v TAG_INVENTORY\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:TAG_INVENTORY}
{\qr TAG_INVENTORY{\bkmkstart AAAAAAACJW}
{\bkmkend AAAAAAACJW}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tag Inventory, Only PC and EPC will backscatter \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v TAG_SEARCHING\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:TAG_SEARCHING}
{\qr TAG_SEARCHING{\bkmkstart AAAAAAACJX}
{\bkmkend AAAAAAACJX}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Specific-Tag Searching, Only PC , EPC and RSSI will backscatter \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v TAG_RANGING\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:TAG_RANGING}
{\qr TAG_RANGING{\bkmkstart AAAAAAACJY}
{\bkmkend AAAAAAACJY}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ranging all tag, Only PC , EPC and RSSI will backscatter \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v UNKNOWN\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:UNKNOWN}
{\qr UNKNOWN{\bkmkstart AAAAAAACJZ}
{\bkmkend AAAAAAACJZ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Unknown Type will not happen \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
}
}
{\xe \v ChipSetID\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:ChipSetID}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b CSLibrary.Constants.ChipSetID}{\f2 [strong]}}}
\par
{\bkmkstart AAAAAAACKA}
{\bkmkend AAAAAAACKA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v R1000\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:R1000}
{\qr R1000{\bkmkstart AAAAAAACKB}
{\bkmkend AAAAAAACKB}
\cell }{\cell }{\row }
{\xe \v R2000\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:R2000}
{\qr R2000{\bkmkstart AAAAAAACKC}
{\bkmkend AAAAAAACKC}
\cell }{\cell }{\row }
{\xe \v UNKNOWN\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:UNKNOWN}
{\qr UNKNOWN{\bkmkstart AAAAAAACKD}
{\bkmkend AAAAAAACKD}
\cell }{\cell }{\row }
}
}
{\xe \v DataDifference\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:DataDifference}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b CSLibrary.Constants.DataDifference} : uint{\f2 [strong]}}}
\par
{\bkmkstart AAAAAAACKE}
{\bkmkend AAAAAAACKE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The difference, in Tari, between an data zero and a data one. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v HALF_TARI\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:HALF_TARI}
{\qr HALF_TARI{\bkmkstart AAAAAAACKF}
{\bkmkend AAAAAAACKF}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
HALF_TARI \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ONE_TARI\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:ONE_TARI}
{\qr ONE_TARI{\bkmkstart AAAAAAACKG}
{\bkmkend AAAAAAACKG}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ONE_TARI \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v UNKNOWN\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:UNKNOWN}
{\qr UNKNOWN{\bkmkstart AAAAAAACKH}
{\bkmkend AAAAAAACKH}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Unknown \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
}
}
{\xe \v DivideRatio\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:DivideRatio}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b CSLibrary.Constants.DivideRatio} : uint{\f2 [strong]}}}
\par
{\bkmkstart AAAAAAACKI}
{\bkmkend AAAAAAACKI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The tag-to-interrogator divide ratio that is sent as part of the Query command. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v RATIO_8\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:RATIO_8}
{\qr RATIO_8{\bkmkstart AAAAAAACKJ}
{\bkmkend AAAAAAACKJ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v RATIO_64DIV3\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:RATIO_64DIV3}
{\qr RATIO_64DIV3{\bkmkstart AAAAAAACKK}
{\bkmkend AAAAAAACKK}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v UNKNOWN\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:UNKNOWN}
{\qr UNKNOWN{\bkmkstart AAAAAAACKL}
{\bkmkend AAAAAAACKL}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
}
}
{\xe \v EpcMDID\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:EpcMDID}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b CSLibrary.Constants.EpcMDID}{\f2 [strong]}}}
\par
{\bkmkstart AAAAAAACKM}
{\bkmkend AAAAAAACKM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EPCglobal Tag Mask Designer Identifier }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v Impinj\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Impinj}
{\qr Impinj{\bkmkstart AAAAAAACKN}
{\bkmkend AAAAAAACKN}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Impinj \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Texas_Instruments\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Texas_Instruments}
{\qr Texas_Instruments{\bkmkstart AAAAAAACKO}
{\bkmkend AAAAAAACKO}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Texas Instruments \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Alien_Technology\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Alien_Technology}
{\qr Alien_Technology{\bkmkstart AAAAAAACKP}
{\bkmkend AAAAAAACKP}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Alien Technology \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Intelleflex\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Intelleflex}
{\qr Intelleflex{\bkmkstart AAAAAAACKQ}
{\bkmkend AAAAAAACKQ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Intelleflex \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Atmel\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Atmel}
{\qr Atmel{\bkmkstart AAAAAAACKR}
{\bkmkend AAAAAAACKR}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Atmel \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v NXP\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:NXP}
{\qr NXP{\bkmkstart AAAAAAACKS}
{\bkmkend AAAAAAACKS}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
NXP \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ST_Microelectronics\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:ST_Microelectronics}
{\qr ST_Microelectronics{\bkmkstart AAAAAAACKT}
{\bkmkend AAAAAAACKT}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ST Microelectronics \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v EP_Microelectronics\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:EP_Microelectronics}
{\qr EP_Microelectronics{\bkmkstart AAAAAAACKU}
{\bkmkend AAAAAAACKU}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EP Microelectronics \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Motorola\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Motorola}
{\qr Motorola{\bkmkstart AAAAAAACKV}
{\bkmkend AAAAAAACKV}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Motorola \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Sentech_Snd_Bhd\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Sentech_Snd_Bhd}
{\qr Sentech_Snd_Bhd{\bkmkstart AAAAAAACKW}
{\bkmkend AAAAAAACKW}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sentech Snd Bhd \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v EM_Microelectronics\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:EM_Microelectronics}
{\qr EM_Microelectronics{\bkmkstart AAAAAAACKX}
{\bkmkend AAAAAAACKX}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EM Microelectronics \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Renesas_Technology_Corp\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Renesas_Technology_Corp}
{\qr Renesas_Technology_Corp{\bkmkstart AAAAAAACKY}
{\bkmkend AAAAAAACKY}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Renesas Technology Corp \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Mstar\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Mstar}
{\qr Mstar{\bkmkstart AAAAAAACKZ}
{\bkmkend AAAAAAACKZ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mstar \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Tyco_International\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Tyco_International}
{\qr Tyco_International{\bkmkstart AAAAAAACLA}
{\bkmkend AAAAAAACLA}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tyco International \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Quanray_Electronics\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Quanray_Electronics}
{\qr Quanray_Electronics{\bkmkstart AAAAAAACLB}
{\bkmkend AAAAAAACLB}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Quanray Electronics \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Fujitsu\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Fujitsu}
{\qr Fujitsu{\bkmkstart AAAAAAACLC}
{\bkmkend AAAAAAACLC}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fujitsu \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v LSIS\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:LSIS}
{\qr LSIS{\bkmkstart AAAAAAACLD}
{\bkmkend AAAAAAACLD}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
LSIS \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CAEN_RFID_srl\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CAEN_RFID_srl}
{\qr CAEN_RFID_srl{\bkmkstart AAAAAAACLE}
{\bkmkend AAAAAAACLE}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CAEN RFID srl \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CAEN_Productivity_Engineering_Gesellschaft_fuer_IC_Design_mbH\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CAEN_Productivity_Engineering_Gesellschaft_fuer_IC_Design_mbH}
{\qr CAEN_Productivity_Engineering_Gesellschaft_fuer_IC_Design_mbH{\bkmkstart AAAAAAACLF}
{\bkmkend AAAAAAACLF}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CAEN Productivity Engineering Gesellschaft fuer IC Design mbH \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Impinj_with_xTid\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Impinj_with_xTid}
{\qr Impinj_with_xTid{\bkmkstart AAAAAAACLG}
{\bkmkend AAAAAAACLG}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Impinj with xTid \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Texas_Instruments_with_xTid\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Texas_Instruments_with_xTid}
{\qr Texas_Instruments_with_xTid{\bkmkstart AAAAAAACLH}
{\bkmkend AAAAAAACLH}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Texas Instruments with xTid \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Alien_Technology_with_xTid\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Alien_Technology_with_xTid}
{\qr Alien_Technology_with_xTid{\bkmkstart AAAAAAACLI}
{\bkmkend AAAAAAACLI}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Alien Technology with xTid \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Intelleflex_with_xTid\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Intelleflex_with_xTid}
{\qr Intelleflex_with_xTid{\bkmkstart AAAAAAACLJ}
{\bkmkend AAAAAAACLJ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Intelleflex with xTid \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Atmel_with_xTid\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Atmel_with_xTid}
{\qr Atmel_with_xTid{\bkmkstart AAAAAAACLK}
{\bkmkend AAAAAAACLK}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Atmel with xTid \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v NXP_with_xTid\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:NXP_with_xTid}
{\qr NXP_with_xTid{\bkmkstart AAAAAAACLL}
{\bkmkend AAAAAAACLL}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
NXP with xTid \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ST_Microelectronics_with_xTid\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:ST_Microelectronics_with_xTid}
{\qr ST_Microelectronics_with_xTid{\bkmkstart AAAAAAACLM}
{\bkmkend AAAAAAACLM}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ST Microelectronics with xTid \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v EP_Microelectronics_with_xTid\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:EP_Microelectronics_with_xTid}
{\qr EP_Microelectronics_with_xTid{\bkmkstart AAAAAAACLN}
{\bkmkend AAAAAAACLN}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EP Microelectronics with xTid \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Motorola_with_xTid\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Motorola_with_xTid}
{\qr Motorola_with_xTid{\bkmkstart AAAAAAACLO}
{\bkmkend AAAAAAACLO}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Motorola with xTid \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Sentech_Snd_Bhd_with_xTid\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Sentech_Snd_Bhd_with_xTid}
{\qr Sentech_Snd_Bhd_with_xTid{\bkmkstart AAAAAAACLP}
{\bkmkend AAAAAAACLP}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sentech Snd Bhd with xTid \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v EM_Microelectronics_with_xTid\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:EM_Microelectronics_with_xTid}
{\qr EM_Microelectronics_with_xTid{\bkmkstart AAAAAAACLQ}
{\bkmkend AAAAAAACLQ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EM Microelectronics with xTid \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Renesas_Technology_Corp_with_xTid\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Renesas_Technology_Corp_with_xTid}
{\qr Renesas_Technology_Corp_with_xTid{\bkmkstart AAAAAAACLR}
{\bkmkend AAAAAAACLR}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Renesas Technology Corp with xTid \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Mstar_with_xTid\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Mstar_with_xTid}
{\qr Mstar_with_xTid{\bkmkstart AAAAAAACLS}
{\bkmkend AAAAAAACLS}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mstar with xTid \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Tyco_International_with_xTid\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Tyco_International_with_xTid}
{\qr Tyco_International_with_xTid{\bkmkstart AAAAAAACLT}
{\bkmkend AAAAAAACLT}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tyco International with xTid \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Quanray_Electronics_with_xTid\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Quanray_Electronics_with_xTid}
{\qr Quanray_Electronics_with_xTid{\bkmkstart AAAAAAACLU}
{\bkmkend AAAAAAACLU}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Quanray Electronics with xTid \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Fujitsu_with_xTid\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Fujitsu_with_xTid}
{\qr Fujitsu_with_xTid{\bkmkstart AAAAAAACLV}
{\bkmkend AAAAAAACLV}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fujitsu with xTid \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v LSIS_with_xTid\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:LSIS_with_xTid}
{\qr LSIS_with_xTid{\bkmkstart AAAAAAACLW}
{\bkmkend AAAAAAACLW}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
LSIS with xTid \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CAEN_RFID_srl_with_xTid\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CAEN_RFID_srl_with_xTid}
{\qr CAEN_RFID_srl_with_xTid{\bkmkstart AAAAAAACLX}
{\bkmkend AAAAAAACLX}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CAEN RFID srl with xTid \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CAEN_Productivity_Engineering_Gesellschaft_fuer_IC_Design_mbH_with_xTid\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CAEN_Productivity_Engineering_Gesellschaft_fuer_IC_Design_mbH_with_xTid}
{\qr CAEN_Productivity_Engineering_Gesellschaft_fuer_IC_Design_mbH_with_xTid{\bkmkstart AAAAAAACLY}
{\bkmkend AAAAAAACLY}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CAEN Productivity Engineering Gesellschaft fuer IC Design mbH with xTid \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v UNKNOWN\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:UNKNOWN}
{\qr UNKNOWN{\bkmkstart AAAAAAACLZ}
{\bkmkend AAAAAAACLZ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
UNKNOWN \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Impinj\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Impinj}
{\qr Impinj{\bkmkstart AAAAAAACKN}
{\bkmkend AAAAAAACKN}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Impinj \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Texas_Instruments\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Texas_Instruments}
{\qr Texas_Instruments{\bkmkstart AAAAAAACKO}
{\bkmkend AAAAAAACKO}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Texas Instruments \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Alien_Technology\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Alien_Technology}
{\qr Alien_Technology{\bkmkstart AAAAAAACKP}
{\bkmkend AAAAAAACKP}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Alien Technology \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Intelleflex\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Intelleflex}
{\qr Intelleflex{\bkmkstart AAAAAAACKQ}
{\bkmkend AAAAAAACKQ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Intelleflex \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Atmel\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Atmel}
{\qr Atmel{\bkmkstart AAAAAAACKR}
{\bkmkend AAAAAAACKR}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Atmel \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v NXP\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:NXP}
{\qr NXP{\bkmkstart AAAAAAACKS}
{\bkmkend AAAAAAACKS}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
NXP \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ST_Microelectronics\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:ST_Microelectronics}
{\qr ST_Microelectronics{\bkmkstart AAAAAAACKT}
{\bkmkend AAAAAAACKT}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ST Microelectronics \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v EP_Microelectronics\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:EP_Microelectronics}
{\qr EP_Microelectronics{\bkmkstart AAAAAAACKU}
{\bkmkend AAAAAAACKU}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EP Microelectronics \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Motorola\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Motorola}
{\qr Motorola{\bkmkstart AAAAAAACKV}
{\bkmkend AAAAAAACKV}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Motorola \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Sentech_Snd_Bhd\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Sentech_Snd_Bhd}
{\qr Sentech_Snd_Bhd{\bkmkstart AAAAAAACKW}
{\bkmkend AAAAAAACKW}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sentech Snd Bhd \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v EM_Microelectronics\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:EM_Microelectronics}
{\qr EM_Microelectronics{\bkmkstart AAAAAAACKX}
{\bkmkend AAAAAAACKX}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EM Microelectronics \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Renesas_Technology_Corp\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Renesas_Technology_Corp}
{\qr Renesas_Technology_Corp{\bkmkstart AAAAAAACKY}
{\bkmkend AAAAAAACKY}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Renesas Technology Corp \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Mstar\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Mstar}
{\qr Mstar{\bkmkstart AAAAAAACKZ}
{\bkmkend AAAAAAACKZ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mstar \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Tyco_International\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Tyco_International}
{\qr Tyco_International{\bkmkstart AAAAAAACLA}
{\bkmkend AAAAAAACLA}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tyco International \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Quanray_Electronics\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Quanray_Electronics}
{\qr Quanray_Electronics{\bkmkstart AAAAAAACLB}
{\bkmkend AAAAAAACLB}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Quanray Electronics \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Fujitsu\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Fujitsu}
{\qr Fujitsu{\bkmkstart AAAAAAACLC}
{\bkmkend AAAAAAACLC}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fujitsu \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v LSIS\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:LSIS}
{\qr LSIS{\bkmkstart AAAAAAACLD}
{\bkmkend AAAAAAACLD}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
LSIS \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CAEN_RFID_srl\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CAEN_RFID_srl}
{\qr CAEN_RFID_srl{\bkmkstart AAAAAAACLE}
{\bkmkend AAAAAAACLE}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CAEN RFID srl \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CAEN_Productivity_Engineering_Gesellschaft_fuer_IC_Design_mbH\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CAEN_Productivity_Engineering_Gesellschaft_fuer_IC_Design_mbH}
{\qr CAEN_Productivity_Engineering_Gesellschaft_fuer_IC_Design_mbH{\bkmkstart AAAAAAACLF}
{\bkmkend AAAAAAACLF}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CAEN Productivity Engineering Gesellschaft fuer IC Design mbH \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Impinj_with_xTid\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Impinj_with_xTid}
{\qr Impinj_with_xTid{\bkmkstart AAAAAAACLG}
{\bkmkend AAAAAAACLG}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Impinj with xTid \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Texas_Instruments_with_xTid\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Texas_Instruments_with_xTid}
{\qr Texas_Instruments_with_xTid{\bkmkstart AAAAAAACLH}
{\bkmkend AAAAAAACLH}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Texas Instruments with xTid \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Alien_Technology_with_xTid\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Alien_Technology_with_xTid}
{\qr Alien_Technology_with_xTid{\bkmkstart AAAAAAACLI}
{\bkmkend AAAAAAACLI}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Alien Technology with xTid \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Intelleflex_with_xTid\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Intelleflex_with_xTid}
{\qr Intelleflex_with_xTid{\bkmkstart AAAAAAACLJ}
{\bkmkend AAAAAAACLJ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Intelleflex with xTid \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Atmel_with_xTid\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Atmel_with_xTid}
{\qr Atmel_with_xTid{\bkmkstart AAAAAAACLK}
{\bkmkend AAAAAAACLK}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Atmel with xTid \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v NXP_with_xTid\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:NXP_with_xTid}
{\qr NXP_with_xTid{\bkmkstart AAAAAAACLL}
{\bkmkend AAAAAAACLL}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
NXP with xTid \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ST_Microelectronics_with_xTid\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:ST_Microelectronics_with_xTid}
{\qr ST_Microelectronics_with_xTid{\bkmkstart AAAAAAACLM}
{\bkmkend AAAAAAACLM}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ST Microelectronics with xTid \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v EP_Microelectronics_with_xTid\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:EP_Microelectronics_with_xTid}
{\qr EP_Microelectronics_with_xTid{\bkmkstart AAAAAAACLN}
{\bkmkend AAAAAAACLN}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EP Microelectronics with xTid \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Motorola_with_xTid\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Motorola_with_xTid}
{\qr Motorola_with_xTid{\bkmkstart AAAAAAACLO}
{\bkmkend AAAAAAACLO}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Motorola with xTid \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Sentech_Snd_Bhd_with_xTid\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Sentech_Snd_Bhd_with_xTid}
{\qr Sentech_Snd_Bhd_with_xTid{\bkmkstart AAAAAAACLP}
{\bkmkend AAAAAAACLP}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sentech Snd Bhd with xTid \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v EM_Microelectronics_with_xTid\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:EM_Microelectronics_with_xTid}
{\qr EM_Microelectronics_with_xTid{\bkmkstart AAAAAAACLQ}
{\bkmkend AAAAAAACLQ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EM Microelectronics with xTid \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Renesas_Technology_Corp_with_xTid\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Renesas_Technology_Corp_with_xTid}
{\qr Renesas_Technology_Corp_with_xTid{\bkmkstart AAAAAAACLR}
{\bkmkend AAAAAAACLR}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Renesas Technology Corp with xTid \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Mstar_with_xTid\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Mstar_with_xTid}
{\qr Mstar_with_xTid{\bkmkstart AAAAAAACLS}
{\bkmkend AAAAAAACLS}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mstar with xTid \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Tyco_International_with_xTid\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Tyco_International_with_xTid}
{\qr Tyco_International_with_xTid{\bkmkstart AAAAAAACLT}
{\bkmkend AAAAAAACLT}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tyco International with xTid \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Quanray_Electronics_with_xTid\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Quanray_Electronics_with_xTid}
{\qr Quanray_Electronics_with_xTid{\bkmkstart AAAAAAACLU}
{\bkmkend AAAAAAACLU}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Quanray Electronics with xTid \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Fujitsu_with_xTid\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Fujitsu_with_xTid}
{\qr Fujitsu_with_xTid{\bkmkstart AAAAAAACLV}
{\bkmkend AAAAAAACLV}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fujitsu with xTid \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v LSIS_with_xTid\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:LSIS_with_xTid}
{\qr LSIS_with_xTid{\bkmkstart AAAAAAACLW}
{\bkmkend AAAAAAACLW}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
LSIS with xTid \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CAEN_RFID_srl_with_xTid\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CAEN_RFID_srl_with_xTid}
{\qr CAEN_RFID_srl_with_xTid{\bkmkstart AAAAAAACLX}
{\bkmkend AAAAAAACLX}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CAEN RFID srl with xTid \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CAEN_Productivity_Engineering_Gesellschaft_fuer_IC_Design_mbH_with_xTid\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CAEN_Productivity_Engineering_Gesellschaft_fuer_IC_Design_mbH_with_xTid}
{\qr CAEN_Productivity_Engineering_Gesellschaft_fuer_IC_Design_mbH_with_xTid{\bkmkstart AAAAAAACLY}
{\bkmkend AAAAAAACLY}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CAEN Productivity Engineering Gesellschaft fuer IC Design mbH with xTid \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v UNKNOWN\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:UNKNOWN}
{\qr UNKNOWN{\bkmkstart AAAAAAACLZ}
{\bkmkend AAAAAAACLZ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
UNKNOWN \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
}
}
{\xe \v EpcMDID\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:EpcMDID}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b CSLibrary.Constants.EpcMDID}{\f2 [strong]}}}
\par
{\bkmkstart AAAAAAACKM}
{\bkmkend AAAAAAACKM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EPCglobal Tag Mask Designer Identifier }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v Impinj\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Impinj}
{\qr Impinj{\bkmkstart AAAAAAACKN}
{\bkmkend AAAAAAACKN}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Impinj \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Texas_Instruments\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Texas_Instruments}
{\qr Texas_Instruments{\bkmkstart AAAAAAACKO}
{\bkmkend AAAAAAACKO}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Texas Instruments \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Alien_Technology\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Alien_Technology}
{\qr Alien_Technology{\bkmkstart AAAAAAACKP}
{\bkmkend AAAAAAACKP}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Alien Technology \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Intelleflex\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Intelleflex}
{\qr Intelleflex{\bkmkstart AAAAAAACKQ}
{\bkmkend AAAAAAACKQ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Intelleflex \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Atmel\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Atmel}
{\qr Atmel{\bkmkstart AAAAAAACKR}
{\bkmkend AAAAAAACKR}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Atmel \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v NXP\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:NXP}
{\qr NXP{\bkmkstart AAAAAAACKS}
{\bkmkend AAAAAAACKS}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
NXP \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ST_Microelectronics\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:ST_Microelectronics}
{\qr ST_Microelectronics{\bkmkstart AAAAAAACKT}
{\bkmkend AAAAAAACKT}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ST Microelectronics \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v EP_Microelectronics\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:EP_Microelectronics}
{\qr EP_Microelectronics{\bkmkstart AAAAAAACKU}
{\bkmkend AAAAAAACKU}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EP Microelectronics \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Motorola\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Motorola}
{\qr Motorola{\bkmkstart AAAAAAACKV}
{\bkmkend AAAAAAACKV}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Motorola \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Sentech_Snd_Bhd\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Sentech_Snd_Bhd}
{\qr Sentech_Snd_Bhd{\bkmkstart AAAAAAACKW}
{\bkmkend AAAAAAACKW}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sentech Snd Bhd \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v EM_Microelectronics\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:EM_Microelectronics}
{\qr EM_Microelectronics{\bkmkstart AAAAAAACKX}
{\bkmkend AAAAAAACKX}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EM Microelectronics \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Renesas_Technology_Corp\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Renesas_Technology_Corp}
{\qr Renesas_Technology_Corp{\bkmkstart AAAAAAACKY}
{\bkmkend AAAAAAACKY}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Renesas Technology Corp \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Mstar\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Mstar}
{\qr Mstar{\bkmkstart AAAAAAACKZ}
{\bkmkend AAAAAAACKZ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mstar \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Tyco_International\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Tyco_International}
{\qr Tyco_International{\bkmkstart AAAAAAACLA}
{\bkmkend AAAAAAACLA}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tyco International \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Quanray_Electronics\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Quanray_Electronics}
{\qr Quanray_Electronics{\bkmkstart AAAAAAACLB}
{\bkmkend AAAAAAACLB}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Quanray Electronics \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Fujitsu\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Fujitsu}
{\qr Fujitsu{\bkmkstart AAAAAAACLC}
{\bkmkend AAAAAAACLC}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fujitsu \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v LSIS\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:LSIS}
{\qr LSIS{\bkmkstart AAAAAAACLD}
{\bkmkend AAAAAAACLD}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
LSIS \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CAEN_RFID_srl\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CAEN_RFID_srl}
{\qr CAEN_RFID_srl{\bkmkstart AAAAAAACLE}
{\bkmkend AAAAAAACLE}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CAEN RFID srl \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CAEN_Productivity_Engineering_Gesellschaft_fuer_IC_Design_mbH\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CAEN_Productivity_Engineering_Gesellschaft_fuer_IC_Design_mbH}
{\qr CAEN_Productivity_Engineering_Gesellschaft_fuer_IC_Design_mbH{\bkmkstart AAAAAAACLF}
{\bkmkend AAAAAAACLF}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CAEN Productivity Engineering Gesellschaft fuer IC Design mbH \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Impinj_with_xTid\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Impinj_with_xTid}
{\qr Impinj_with_xTid{\bkmkstart AAAAAAACLG}
{\bkmkend AAAAAAACLG}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Impinj with xTid \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Texas_Instruments_with_xTid\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Texas_Instruments_with_xTid}
{\qr Texas_Instruments_with_xTid{\bkmkstart AAAAAAACLH}
{\bkmkend AAAAAAACLH}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Texas Instruments with xTid \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Alien_Technology_with_xTid\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Alien_Technology_with_xTid}
{\qr Alien_Technology_with_xTid{\bkmkstart AAAAAAACLI}
{\bkmkend AAAAAAACLI}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Alien Technology with xTid \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Intelleflex_with_xTid\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Intelleflex_with_xTid}
{\qr Intelleflex_with_xTid{\bkmkstart AAAAAAACLJ}
{\bkmkend AAAAAAACLJ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Intelleflex with xTid \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Atmel_with_xTid\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Atmel_with_xTid}
{\qr Atmel_with_xTid{\bkmkstart AAAAAAACLK}
{\bkmkend AAAAAAACLK}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Atmel with xTid \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v NXP_with_xTid\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:NXP_with_xTid}
{\qr NXP_with_xTid{\bkmkstart AAAAAAACLL}
{\bkmkend AAAAAAACLL}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
NXP with xTid \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ST_Microelectronics_with_xTid\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:ST_Microelectronics_with_xTid}
{\qr ST_Microelectronics_with_xTid{\bkmkstart AAAAAAACLM}
{\bkmkend AAAAAAACLM}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ST Microelectronics with xTid \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v EP_Microelectronics_with_xTid\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:EP_Microelectronics_with_xTid}
{\qr EP_Microelectronics_with_xTid{\bkmkstart AAAAAAACLN}
{\bkmkend AAAAAAACLN}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EP Microelectronics with xTid \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Motorola_with_xTid\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Motorola_with_xTid}
{\qr Motorola_with_xTid{\bkmkstart AAAAAAACLO}
{\bkmkend AAAAAAACLO}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Motorola with xTid \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Sentech_Snd_Bhd_with_xTid\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Sentech_Snd_Bhd_with_xTid}
{\qr Sentech_Snd_Bhd_with_xTid{\bkmkstart AAAAAAACLP}
{\bkmkend AAAAAAACLP}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sentech Snd Bhd with xTid \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v EM_Microelectronics_with_xTid\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:EM_Microelectronics_with_xTid}
{\qr EM_Microelectronics_with_xTid{\bkmkstart AAAAAAACLQ}
{\bkmkend AAAAAAACLQ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EM Microelectronics with xTid \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Renesas_Technology_Corp_with_xTid\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Renesas_Technology_Corp_with_xTid}
{\qr Renesas_Technology_Corp_with_xTid{\bkmkstart AAAAAAACLR}
{\bkmkend AAAAAAACLR}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Renesas Technology Corp with xTid \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Mstar_with_xTid\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Mstar_with_xTid}
{\qr Mstar_with_xTid{\bkmkstart AAAAAAACLS}
{\bkmkend AAAAAAACLS}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mstar with xTid \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Tyco_International_with_xTid\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Tyco_International_with_xTid}
{\qr Tyco_International_with_xTid{\bkmkstart AAAAAAACLT}
{\bkmkend AAAAAAACLT}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tyco International with xTid \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Quanray_Electronics_with_xTid\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Quanray_Electronics_with_xTid}
{\qr Quanray_Electronics_with_xTid{\bkmkstart AAAAAAACLU}
{\bkmkend AAAAAAACLU}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Quanray Electronics with xTid \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Fujitsu_with_xTid\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Fujitsu_with_xTid}
{\qr Fujitsu_with_xTid{\bkmkstart AAAAAAACLV}
{\bkmkend AAAAAAACLV}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fujitsu with xTid \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v LSIS_with_xTid\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:LSIS_with_xTid}
{\qr LSIS_with_xTid{\bkmkstart AAAAAAACLW}
{\bkmkend AAAAAAACLW}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
LSIS with xTid \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CAEN_RFID_srl_with_xTid\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CAEN_RFID_srl_with_xTid}
{\qr CAEN_RFID_srl_with_xTid{\bkmkstart AAAAAAACLX}
{\bkmkend AAAAAAACLX}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CAEN RFID srl with xTid \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CAEN_Productivity_Engineering_Gesellschaft_fuer_IC_Design_mbH_with_xTid\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CAEN_Productivity_Engineering_Gesellschaft_fuer_IC_Design_mbH_with_xTid}
{\qr CAEN_Productivity_Engineering_Gesellschaft_fuer_IC_Design_mbH_with_xTid{\bkmkstart AAAAAAACLY}
{\bkmkend AAAAAAACLY}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CAEN Productivity Engineering Gesellschaft fuer IC Design mbH with xTid \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v UNKNOWN\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:UNKNOWN}
{\qr UNKNOWN{\bkmkstart AAAAAAACLZ}
{\bkmkend AAAAAAACLZ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
UNKNOWN \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Impinj\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Impinj}
{\qr Impinj{\bkmkstart AAAAAAACKN}
{\bkmkend AAAAAAACKN}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Impinj \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Texas_Instruments\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Texas_Instruments}
{\qr Texas_Instruments{\bkmkstart AAAAAAACKO}
{\bkmkend AAAAAAACKO}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Texas Instruments \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Alien_Technology\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Alien_Technology}
{\qr Alien_Technology{\bkmkstart AAAAAAACKP}
{\bkmkend AAAAAAACKP}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Alien Technology \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Intelleflex\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Intelleflex}
{\qr Intelleflex{\bkmkstart AAAAAAACKQ}
{\bkmkend AAAAAAACKQ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Intelleflex \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Atmel\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Atmel}
{\qr Atmel{\bkmkstart AAAAAAACKR}
{\bkmkend AAAAAAACKR}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Atmel \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v NXP\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:NXP}
{\qr NXP{\bkmkstart AAAAAAACKS}
{\bkmkend AAAAAAACKS}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
NXP \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ST_Microelectronics\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:ST_Microelectronics}
{\qr ST_Microelectronics{\bkmkstart AAAAAAACKT}
{\bkmkend AAAAAAACKT}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ST Microelectronics \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v EP_Microelectronics\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:EP_Microelectronics}
{\qr EP_Microelectronics{\bkmkstart AAAAAAACKU}
{\bkmkend AAAAAAACKU}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EP Microelectronics \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Motorola\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Motorola}
{\qr Motorola{\bkmkstart AAAAAAACKV}
{\bkmkend AAAAAAACKV}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Motorola \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Sentech_Snd_Bhd\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Sentech_Snd_Bhd}
{\qr Sentech_Snd_Bhd{\bkmkstart AAAAAAACKW}
{\bkmkend AAAAAAACKW}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sentech Snd Bhd \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v EM_Microelectronics\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:EM_Microelectronics}
{\qr EM_Microelectronics{\bkmkstart AAAAAAACKX}
{\bkmkend AAAAAAACKX}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EM Microelectronics \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Renesas_Technology_Corp\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Renesas_Technology_Corp}
{\qr Renesas_Technology_Corp{\bkmkstart AAAAAAACKY}
{\bkmkend AAAAAAACKY}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Renesas Technology Corp \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Mstar\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Mstar}
{\qr Mstar{\bkmkstart AAAAAAACKZ}
{\bkmkend AAAAAAACKZ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mstar \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Tyco_International\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Tyco_International}
{\qr Tyco_International{\bkmkstart AAAAAAACLA}
{\bkmkend AAAAAAACLA}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tyco International \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Quanray_Electronics\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Quanray_Electronics}
{\qr Quanray_Electronics{\bkmkstart AAAAAAACLB}
{\bkmkend AAAAAAACLB}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Quanray Electronics \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Fujitsu\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Fujitsu}
{\qr Fujitsu{\bkmkstart AAAAAAACLC}
{\bkmkend AAAAAAACLC}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fujitsu \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v LSIS\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:LSIS}
{\qr LSIS{\bkmkstart AAAAAAACLD}
{\bkmkend AAAAAAACLD}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
LSIS \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CAEN_RFID_srl\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CAEN_RFID_srl}
{\qr CAEN_RFID_srl{\bkmkstart AAAAAAACLE}
{\bkmkend AAAAAAACLE}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CAEN RFID srl \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CAEN_Productivity_Engineering_Gesellschaft_fuer_IC_Design_mbH\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CAEN_Productivity_Engineering_Gesellschaft_fuer_IC_Design_mbH}
{\qr CAEN_Productivity_Engineering_Gesellschaft_fuer_IC_Design_mbH{\bkmkstart AAAAAAACLF}
{\bkmkend AAAAAAACLF}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CAEN Productivity Engineering Gesellschaft fuer IC Design mbH \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Impinj_with_xTid\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Impinj_with_xTid}
{\qr Impinj_with_xTid{\bkmkstart AAAAAAACLG}
{\bkmkend AAAAAAACLG}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Impinj with xTid \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Texas_Instruments_with_xTid\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Texas_Instruments_with_xTid}
{\qr Texas_Instruments_with_xTid{\bkmkstart AAAAAAACLH}
{\bkmkend AAAAAAACLH}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Texas Instruments with xTid \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Alien_Technology_with_xTid\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Alien_Technology_with_xTid}
{\qr Alien_Technology_with_xTid{\bkmkstart AAAAAAACLI}
{\bkmkend AAAAAAACLI}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Alien Technology with xTid \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Intelleflex_with_xTid\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Intelleflex_with_xTid}
{\qr Intelleflex_with_xTid{\bkmkstart AAAAAAACLJ}
{\bkmkend AAAAAAACLJ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Intelleflex with xTid \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Atmel_with_xTid\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Atmel_with_xTid}
{\qr Atmel_with_xTid{\bkmkstart AAAAAAACLK}
{\bkmkend AAAAAAACLK}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Atmel with xTid \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v NXP_with_xTid\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:NXP_with_xTid}
{\qr NXP_with_xTid{\bkmkstart AAAAAAACLL}
{\bkmkend AAAAAAACLL}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
NXP with xTid \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ST_Microelectronics_with_xTid\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:ST_Microelectronics_with_xTid}
{\qr ST_Microelectronics_with_xTid{\bkmkstart AAAAAAACLM}
{\bkmkend AAAAAAACLM}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ST Microelectronics with xTid \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v EP_Microelectronics_with_xTid\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:EP_Microelectronics_with_xTid}
{\qr EP_Microelectronics_with_xTid{\bkmkstart AAAAAAACLN}
{\bkmkend AAAAAAACLN}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EP Microelectronics with xTid \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Motorola_with_xTid\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Motorola_with_xTid}
{\qr Motorola_with_xTid{\bkmkstart AAAAAAACLO}
{\bkmkend AAAAAAACLO}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Motorola with xTid \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Sentech_Snd_Bhd_with_xTid\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Sentech_Snd_Bhd_with_xTid}
{\qr Sentech_Snd_Bhd_with_xTid{\bkmkstart AAAAAAACLP}
{\bkmkend AAAAAAACLP}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sentech Snd Bhd with xTid \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v EM_Microelectronics_with_xTid\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:EM_Microelectronics_with_xTid}
{\qr EM_Microelectronics_with_xTid{\bkmkstart AAAAAAACLQ}
{\bkmkend AAAAAAACLQ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EM Microelectronics with xTid \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Renesas_Technology_Corp_with_xTid\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Renesas_Technology_Corp_with_xTid}
{\qr Renesas_Technology_Corp_with_xTid{\bkmkstart AAAAAAACLR}
{\bkmkend AAAAAAACLR}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Renesas Technology Corp with xTid \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Mstar_with_xTid\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Mstar_with_xTid}
{\qr Mstar_with_xTid{\bkmkstart AAAAAAACLS}
{\bkmkend AAAAAAACLS}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mstar with xTid \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Tyco_International_with_xTid\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Tyco_International_with_xTid}
{\qr Tyco_International_with_xTid{\bkmkstart AAAAAAACLT}
{\bkmkend AAAAAAACLT}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tyco International with xTid \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Quanray_Electronics_with_xTid\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Quanray_Electronics_with_xTid}
{\qr Quanray_Electronics_with_xTid{\bkmkstart AAAAAAACLU}
{\bkmkend AAAAAAACLU}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Quanray Electronics with xTid \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Fujitsu_with_xTid\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Fujitsu_with_xTid}
{\qr Fujitsu_with_xTid{\bkmkstart AAAAAAACLV}
{\bkmkend AAAAAAACLV}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fujitsu with xTid \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v LSIS_with_xTid\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:LSIS_with_xTid}
{\qr LSIS_with_xTid{\bkmkstart AAAAAAACLW}
{\bkmkend AAAAAAACLW}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
LSIS with xTid \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CAEN_RFID_srl_with_xTid\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CAEN_RFID_srl_with_xTid}
{\qr CAEN_RFID_srl_with_xTid{\bkmkstart AAAAAAACLX}
{\bkmkend AAAAAAACLX}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CAEN RFID srl with xTid \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CAEN_Productivity_Engineering_Gesellschaft_fuer_IC_Design_mbH_with_xTid\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CAEN_Productivity_Engineering_Gesellschaft_fuer_IC_Design_mbH_with_xTid}
{\qr CAEN_Productivity_Engineering_Gesellschaft_fuer_IC_Design_mbH_with_xTid{\bkmkstart AAAAAAACLY}
{\bkmkend AAAAAAACLY}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CAEN Productivity Engineering Gesellschaft fuer IC Design mbH with xTid \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v UNKNOWN\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:UNKNOWN}
{\qr UNKNOWN{\bkmkstart AAAAAAACLZ}
{\bkmkend AAAAAAACLZ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
UNKNOWN \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
}
}
{\xe \v ErrorCode\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:ErrorCode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b CSLibrary.Constants.ErrorCode} : int{\f2 [strong]}}}
\par
{\bkmkstart AAAAAAACMA}
{\bkmkend AAAAAAACMA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Operation Error Code }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v UNKNOWN\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:UNKNOWN}
{\qr UNKNOWN{\bkmkstart AAAAAAACMB}
{\bkmkend AAAAAAACMB}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Unknow error \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v MAC_ERROR\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:MAC_ERROR}
{\qr MAC_ERROR{\bkmkstart AAAAAAACMC}
{\bkmkend AAAAAAACMC}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
MacError Occurs \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v MAX_RETRY_OVER\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:MAX_RETRY_OVER}
{\qr MAX_RETRY_OVER{\bkmkstart AAAAAAACMD}
{\bkmkend AAAAAAACMD}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Max retry is over \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v WRITTEN_DATA_INVALID\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:WRITTEN_DATA_INVALID}
{\qr WRITTEN_DATA_INVALID{\bkmkstart AAAAAAACME}
{\bkmkend AAAAAAACME}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Written data to target tag is invalid \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v FUNC_RETURN_FAILED\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:FUNC_RETURN_FAILED}
{\qr FUNC_RETURN_FAILED{\bkmkstart AAAAAAACMF}
{\bkmkend AAAAAAACMF}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
function return failure \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CRC_INVALID\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CRC_INVALID}
{\qr CRC_INVALID{\bkmkstart AAAAAAACMG}
{\bkmkend AAAAAAACMG}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CRC Invalid \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v PARSE_PKT_ERROR\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:PARSE_PKT_ERROR}
{\qr PARSE_PKT_ERROR{\bkmkstart AAAAAAACMH}
{\bkmkend AAAAAAACMH}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
fail to parse packet \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v SYSTEM_ERROR\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:SYSTEM_ERROR}
{\qr SYSTEM_ERROR{\bkmkstart AAAAAAACMI}
{\bkmkend AAAAAAACMI}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
System.Exception catch \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v INVALID_TAG\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:INVALID_TAG}
{\qr INVALID_TAG{\bkmkstart AAAAAAACMJ}
{\bkmkend AAAAAAACMJ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Invalid tag found, ie not Gen2 class-1 \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v TAG_NOT_FOUND\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:TAG_NOT_FOUND}
{\qr TAG_NOT_FOUND{\bkmkstart AAAAAAACMK}
{\bkmkend AAAAAAACMK}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
can't find specific tag \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v UNKNOWN\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:UNKNOWN}
{\qr UNKNOWN{\bkmkstart AAAAAAACMB}
{\bkmkend AAAAAAACMB}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Unknow error \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v MAC_ERROR\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:MAC_ERROR}
{\qr MAC_ERROR{\bkmkstart AAAAAAACMC}
{\bkmkend AAAAAAACMC}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
MacError Occurs \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v MAX_RETRY_OVER\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:MAX_RETRY_OVER}
{\qr MAX_RETRY_OVER{\bkmkstart AAAAAAACMD}
{\bkmkend AAAAAAACMD}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Max retry is over \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v WRITTEN_DATA_INVALID\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:WRITTEN_DATA_INVALID}
{\qr WRITTEN_DATA_INVALID{\bkmkstart AAAAAAACME}
{\bkmkend AAAAAAACME}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Written data to target tag is invalid \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v FUNC_RETURN_FAILED\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:FUNC_RETURN_FAILED}
{\qr FUNC_RETURN_FAILED{\bkmkstart AAAAAAACMF}
{\bkmkend AAAAAAACMF}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
function return failure \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CRC_INVALID\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CRC_INVALID}
{\qr CRC_INVALID{\bkmkstart AAAAAAACMG}
{\bkmkend AAAAAAACMG}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CRC Invalid \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v PARSE_PKT_ERROR\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:PARSE_PKT_ERROR}
{\qr PARSE_PKT_ERROR{\bkmkstart AAAAAAACMH}
{\bkmkend AAAAAAACMH}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
fail to parse packet \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v SYSTEM_ERROR\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:SYSTEM_ERROR}
{\qr SYSTEM_ERROR{\bkmkstart AAAAAAACMI}
{\bkmkend AAAAAAACMI}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
System.Exception catch \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v INVALID_TAG\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:INVALID_TAG}
{\qr INVALID_TAG{\bkmkstart AAAAAAACMJ}
{\bkmkend AAAAAAACMJ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Invalid tag found, ie not Gen2 class-1 \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v TAG_NOT_FOUND\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:TAG_NOT_FOUND}
{\qr TAG_NOT_FOUND{\bkmkstart AAAAAAACMK}
{\bkmkend AAAAAAACMK}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
can't find specific tag \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
}
}
{\xe \v ErrorCode\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:ErrorCode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b CSLibrary.Constants.ErrorCode} : int{\f2 [strong]}}}
\par
{\bkmkstart AAAAAAACMA}
{\bkmkend AAAAAAACMA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Operation Error Code }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v UNKNOWN\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:UNKNOWN}
{\qr UNKNOWN{\bkmkstart AAAAAAACMB}
{\bkmkend AAAAAAACMB}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Unknow error \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v MAC_ERROR\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:MAC_ERROR}
{\qr MAC_ERROR{\bkmkstart AAAAAAACMC}
{\bkmkend AAAAAAACMC}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
MacError Occurs \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v MAX_RETRY_OVER\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:MAX_RETRY_OVER}
{\qr MAX_RETRY_OVER{\bkmkstart AAAAAAACMD}
{\bkmkend AAAAAAACMD}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Max retry is over \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v WRITTEN_DATA_INVALID\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:WRITTEN_DATA_INVALID}
{\qr WRITTEN_DATA_INVALID{\bkmkstart AAAAAAACME}
{\bkmkend AAAAAAACME}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Written data to target tag is invalid \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v FUNC_RETURN_FAILED\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:FUNC_RETURN_FAILED}
{\qr FUNC_RETURN_FAILED{\bkmkstart AAAAAAACMF}
{\bkmkend AAAAAAACMF}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
function return failure \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CRC_INVALID\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CRC_INVALID}
{\qr CRC_INVALID{\bkmkstart AAAAAAACMG}
{\bkmkend AAAAAAACMG}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CRC Invalid \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v PARSE_PKT_ERROR\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:PARSE_PKT_ERROR}
{\qr PARSE_PKT_ERROR{\bkmkstart AAAAAAACMH}
{\bkmkend AAAAAAACMH}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
fail to parse packet \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v SYSTEM_ERROR\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:SYSTEM_ERROR}
{\qr SYSTEM_ERROR{\bkmkstart AAAAAAACMI}
{\bkmkend AAAAAAACMI}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
System.Exception catch \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v INVALID_TAG\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:INVALID_TAG}
{\qr INVALID_TAG{\bkmkstart AAAAAAACMJ}
{\bkmkend AAAAAAACMJ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Invalid tag found, ie not Gen2 class-1 \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v TAG_NOT_FOUND\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:TAG_NOT_FOUND}
{\qr TAG_NOT_FOUND{\bkmkstart AAAAAAACMK}
{\bkmkend AAAAAAACMK}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
can't find specific tag \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v UNKNOWN\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:UNKNOWN}
{\qr UNKNOWN{\bkmkstart AAAAAAACMB}
{\bkmkend AAAAAAACMB}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Unknow error \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v MAC_ERROR\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:MAC_ERROR}
{\qr MAC_ERROR{\bkmkstart AAAAAAACMC}
{\bkmkend AAAAAAACMC}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
MacError Occurs \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v MAX_RETRY_OVER\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:MAX_RETRY_OVER}
{\qr MAX_RETRY_OVER{\bkmkstart AAAAAAACMD}
{\bkmkend AAAAAAACMD}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Max retry is over \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v WRITTEN_DATA_INVALID\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:WRITTEN_DATA_INVALID}
{\qr WRITTEN_DATA_INVALID{\bkmkstart AAAAAAACME}
{\bkmkend AAAAAAACME}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Written data to target tag is invalid \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v FUNC_RETURN_FAILED\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:FUNC_RETURN_FAILED}
{\qr FUNC_RETURN_FAILED{\bkmkstart AAAAAAACMF}
{\bkmkend AAAAAAACMF}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
function return failure \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CRC_INVALID\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CRC_INVALID}
{\qr CRC_INVALID{\bkmkstart AAAAAAACMG}
{\bkmkend AAAAAAACMG}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CRC Invalid \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v PARSE_PKT_ERROR\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:PARSE_PKT_ERROR}
{\qr PARSE_PKT_ERROR{\bkmkstart AAAAAAACMH}
{\bkmkend AAAAAAACMH}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
fail to parse packet \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v SYSTEM_ERROR\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:SYSTEM_ERROR}
{\qr SYSTEM_ERROR{\bkmkstart AAAAAAACMI}
{\bkmkend AAAAAAACMI}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
System.Exception catch \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v INVALID_TAG\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:INVALID_TAG}
{\qr INVALID_TAG{\bkmkstart AAAAAAACMJ}
{\bkmkend AAAAAAACMJ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Invalid tag found, ie not Gen2 class-1 \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v TAG_NOT_FOUND\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:TAG_NOT_FOUND}
{\qr TAG_NOT_FOUND{\bkmkstart AAAAAAACMK}
{\bkmkend AAAAAAACMK}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
can't find specific tag \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
}
}
{\xe \v ErrorType\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:ErrorType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b CSLibrary.Constants.ErrorType} : int{\f2 [strong]}}}
\par
{\bkmkstart AAAAAAACML}
{\bkmkend AAAAAAACML}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Error Type }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v UNKNOWN\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:UNKNOWN}
{\qr UNKNOWN{\bkmkstart AAAAAAACMM}
{\bkmkend AAAAAAACMM}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Unknow \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v COMMON\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:COMMON}
{\qr COMMON{\bkmkstart AAAAAAACMN}
{\bkmkend AAAAAAACMN}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
General Error \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v INVENTORY\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:INVENTORY}
{\qr INVENTORY{\bkmkstart AAAAAAACMO}
{\bkmkend AAAAAAACMO}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inventory or search error \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v WRITE\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:WRITE}
{\qr WRITE{\bkmkstart AAAAAAACMP}
{\bkmkend AAAAAAACMP}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Write error \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v READ\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:READ}
{\qr READ{\bkmkstart AAAAAAACMQ}
{\bkmkend AAAAAAACMQ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Read error \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v LOCK\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:LOCK}
{\qr LOCK{\bkmkstart AAAAAAACMR}
{\bkmkend AAAAAAACMR}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Lock error \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v KILL\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:KILL}
{\qr KILL{\bkmkstart AAAAAAACMS}
{\bkmkend AAAAAAACMS}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Kill error Notes : Kill always reports an error even kill a tag successfully \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v MAC\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:MAC}
{\qr MAC{\bkmkstart AAAAAAACMT}
{\bkmkend AAAAAAACMT}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mac Error \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v UNKNOWN\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:UNKNOWN}
{\qr UNKNOWN{\bkmkstart AAAAAAACMM}
{\bkmkend AAAAAAACMM}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Unknow \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v COMMON\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:COMMON}
{\qr COMMON{\bkmkstart AAAAAAACMN}
{\bkmkend AAAAAAACMN}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
General Error \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v INVENTORY\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:INVENTORY}
{\qr INVENTORY{\bkmkstart AAAAAAACMO}
{\bkmkend AAAAAAACMO}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inventory or search error \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v WRITE\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:WRITE}
{\qr WRITE{\bkmkstart AAAAAAACMP}
{\bkmkend AAAAAAACMP}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Write error \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v READ\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:READ}
{\qr READ{\bkmkstart AAAAAAACMQ}
{\bkmkend AAAAAAACMQ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Read error \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v LOCK\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:LOCK}
{\qr LOCK{\bkmkstart AAAAAAACMR}
{\bkmkend AAAAAAACMR}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Lock error \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v KILL\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:KILL}
{\qr KILL{\bkmkstart AAAAAAACMS}
{\bkmkend AAAAAAACMS}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Kill error Notes : Kill always reports an error even kill a tag successfully \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v MAC\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:MAC}
{\qr MAC{\bkmkstart AAAAAAACMT}
{\bkmkend AAAAAAACMT}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mac Error \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
}
}
{\xe \v ErrorType\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:ErrorType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b CSLibrary.Constants.ErrorType} : int{\f2 [strong]}}}
\par
{\bkmkstart AAAAAAACML}
{\bkmkend AAAAAAACML}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Error Type }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v UNKNOWN\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:UNKNOWN}
{\qr UNKNOWN{\bkmkstart AAAAAAACMM}
{\bkmkend AAAAAAACMM}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Unknow \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v COMMON\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:COMMON}
{\qr COMMON{\bkmkstart AAAAAAACMN}
{\bkmkend AAAAAAACMN}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
General Error \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v INVENTORY\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:INVENTORY}
{\qr INVENTORY{\bkmkstart AAAAAAACMO}
{\bkmkend AAAAAAACMO}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inventory or search error \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v WRITE\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:WRITE}
{\qr WRITE{\bkmkstart AAAAAAACMP}
{\bkmkend AAAAAAACMP}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Write error \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v READ\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:READ}
{\qr READ{\bkmkstart AAAAAAACMQ}
{\bkmkend AAAAAAACMQ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Read error \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v LOCK\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:LOCK}
{\qr LOCK{\bkmkstart AAAAAAACMR}
{\bkmkend AAAAAAACMR}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Lock error \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v KILL\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:KILL}
{\qr KILL{\bkmkstart AAAAAAACMS}
{\bkmkend AAAAAAACMS}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Kill error Notes : Kill always reports an error even kill a tag successfully \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v MAC\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:MAC}
{\qr MAC{\bkmkstart AAAAAAACMT}
{\bkmkend AAAAAAACMT}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mac Error \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v UNKNOWN\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:UNKNOWN}
{\qr UNKNOWN{\bkmkstart AAAAAAACMM}
{\bkmkend AAAAAAACMM}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Unknow \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v COMMON\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:COMMON}
{\qr COMMON{\bkmkstart AAAAAAACMN}
{\bkmkend AAAAAAACMN}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
General Error \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v INVENTORY\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:INVENTORY}
{\qr INVENTORY{\bkmkstart AAAAAAACMO}
{\bkmkend AAAAAAACMO}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inventory or search error \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v WRITE\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:WRITE}
{\qr WRITE{\bkmkstart AAAAAAACMP}
{\bkmkend AAAAAAACMP}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Write error \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v READ\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:READ}
{\qr READ{\bkmkstart AAAAAAACMQ}
{\bkmkend AAAAAAACMQ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Read error \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v LOCK\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:LOCK}
{\qr LOCK{\bkmkstart AAAAAAACMR}
{\bkmkend AAAAAAACMR}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Lock error \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v KILL\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:KILL}
{\qr KILL{\bkmkstart AAAAAAACMS}
{\bkmkend AAAAAAACMS}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Kill error Notes : Kill always reports an error even kill a tag successfully \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v MAC\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:MAC}
{\qr MAC{\bkmkstart AAAAAAACMT}
{\bkmkend AAAAAAACMT}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mac Error \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
}
}
{\xe \v ExtendedKillCommand\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:ExtendedKillCommand}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b CSLibrary.Constants.ExtendedKillCommand}{\f2 [strong]}}}
\par
{\bkmkstart AAAAAAACMU}
{\bkmkend AAAAAAACMU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Extended Kill command for UHF class 1 gen-2 version 1.2 }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v NORMAL\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:NORMAL}
{\qr NORMAL{\bkmkstart AAAAAAACMV}
{\bkmkend AAAAAAACMV}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Perform normall Tag Kill command \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v DISABLE_PERMALOCK\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:DISABLE_PERMALOCK}
{\qr DISABLE_PERMALOCK{\bkmkstart AAAAAAACMW}
{\bkmkend AAAAAAACMW}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The Tag shall diable block permalocking and unlock any block of User memory that were previously permalocked. The Tag shall disable support for the BlockPermalock command. If the Tag did not implement block permalocking prior to recommissioning then block permalocking shall remains disabled. The lock status of User memory shall be determined solely by the lock bits. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v DISABLE_USER_MEMORY\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:DISABLE_USER_MEMORY}
{\qr DISABLE_USER_MEMORY{\bkmkstart AAAAAAACMX}
{\bkmkend AAAAAAACMX}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The Tag shall render its User memory inaccessible, causing the entire memory bank to become unreadable, unwriteable, unselectable(ie. the Tag functions as though its User memory bank no longer exits). \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v UNLOCK_ALL_BANKS\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:UNLOCK_ALL_BANKS}
{\qr UNLOCK_ALL_BANKS{\bkmkstart AAAAAAACMY}
{\bkmkend AAAAAAACMY}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The Tag shall unlock its EPC, TID, and User memory banks, regardless of whether these banks were locked or permalocked. Portions of User memory that were block permalock shall remain block permalocked, and vice versa, unless the DISABLE_PERMALOCK is also asserted, in which case the Tag shall unlock its permalocked blocks. The Tag shall write-unlock its kill and access passwords, and shall render the kill and access passwords permanently unreadable regardless of the values of the Tag's lock bits. If an Interrogator subsequently attempts to read the Tag's kill or access passwords the Tag shall backscatter an error code \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v UNKNOWN\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:UNKNOWN}
{\qr UNKNOWN{\bkmkstart AAAAAAACMZ}
{\bkmkend AAAAAAACMZ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Unknown command \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v NORMAL\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:NORMAL}
{\qr NORMAL{\bkmkstart AAAAAAACMV}
{\bkmkend AAAAAAACMV}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Perform normall Tag Kill command \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v DISABLE_PERMALOCK\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:DISABLE_PERMALOCK}
{\qr DISABLE_PERMALOCK{\bkmkstart AAAAAAACMW}
{\bkmkend AAAAAAACMW}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The Tag shall diable block permalocking and unlock any block of User memory that were previously permalocked. The Tag shall disable support for the BlockPermalock command. If the Tag did not implement block permalocking prior to recommissioning then block permalocking shall remains disabled. The lock status of User memory shall be determined solely by the lock bits. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v DISABLE_USER_MEMORY\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:DISABLE_USER_MEMORY}
{\qr DISABLE_USER_MEMORY{\bkmkstart AAAAAAACMX}
{\bkmkend AAAAAAACMX}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The Tag shall render its User memory inaccessible, causing the entire memory bank to become unreadable, unwriteable, unselectable(ie. the Tag functions as though its User memory bank no longer exits). \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v UNLOCK_ALL_BANKS\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:UNLOCK_ALL_BANKS}
{\qr UNLOCK_ALL_BANKS{\bkmkstart AAAAAAACMY}
{\bkmkend AAAAAAACMY}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The Tag shall unlock its EPC, TID, and User memory banks, regardless of whether these banks were locked or permalocked. Portions of User memory that were block permalock shall remain block permalocked, and vice versa, unless the DISABLE_PERMALOCK is also asserted, in which case the Tag shall unlock its permalocked blocks. The Tag shall write-unlock its kill and access passwords, and shall render the kill and access passwords permanently unreadable regardless of the values of the Tag's lock bits. If an Interrogator subsequently attempts to read the Tag's kill or access passwords the Tag shall backscatter an error code \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v UNKNOWN\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:UNKNOWN}
{\qr UNKNOWN{\bkmkstart AAAAAAACMZ}
{\bkmkend AAAAAAACMZ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Unknown command \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
}
}
{\xe \v ExtendedKillCommand\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:ExtendedKillCommand}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b CSLibrary.Constants.ExtendedKillCommand}{\f2 [strong]}}}
\par
{\bkmkstart AAAAAAACMU}
{\bkmkend AAAAAAACMU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Extended Kill command for UHF class 1 gen-2 version 1.2 }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v NORMAL\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:NORMAL}
{\qr NORMAL{\bkmkstart AAAAAAACMV}
{\bkmkend AAAAAAACMV}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Perform normall Tag Kill command \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v DISABLE_PERMALOCK\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:DISABLE_PERMALOCK}
{\qr DISABLE_PERMALOCK{\bkmkstart AAAAAAACMW}
{\bkmkend AAAAAAACMW}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The Tag shall diable block permalocking and unlock any block of User memory that were previously permalocked. The Tag shall disable support for the BlockPermalock command. If the Tag did not implement block permalocking prior to recommissioning then block permalocking shall remains disabled. The lock status of User memory shall be determined solely by the lock bits. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v DISABLE_USER_MEMORY\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:DISABLE_USER_MEMORY}
{\qr DISABLE_USER_MEMORY{\bkmkstart AAAAAAACMX}
{\bkmkend AAAAAAACMX}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The Tag shall render its User memory inaccessible, causing the entire memory bank to become unreadable, unwriteable, unselectable(ie. the Tag functions as though its User memory bank no longer exits). \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v UNLOCK_ALL_BANKS\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:UNLOCK_ALL_BANKS}
{\qr UNLOCK_ALL_BANKS{\bkmkstart AAAAAAACMY}
{\bkmkend AAAAAAACMY}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The Tag shall unlock its EPC, TID, and User memory banks, regardless of whether these banks were locked or permalocked. Portions of User memory that were block permalock shall remain block permalocked, and vice versa, unless the DISABLE_PERMALOCK is also asserted, in which case the Tag shall unlock its permalocked blocks. The Tag shall write-unlock its kill and access passwords, and shall render the kill and access passwords permanently unreadable regardless of the values of the Tag's lock bits. If an Interrogator subsequently attempts to read the Tag's kill or access passwords the Tag shall backscatter an error code \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v UNKNOWN\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:UNKNOWN}
{\qr UNKNOWN{\bkmkstart AAAAAAACMZ}
{\bkmkend AAAAAAACMZ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Unknown command \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v NORMAL\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:NORMAL}
{\qr NORMAL{\bkmkstart AAAAAAACMV}
{\bkmkend AAAAAAACMV}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Perform normall Tag Kill command \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v DISABLE_PERMALOCK\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:DISABLE_PERMALOCK}
{\qr DISABLE_PERMALOCK{\bkmkstart AAAAAAACMW}
{\bkmkend AAAAAAACMW}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The Tag shall diable block permalocking and unlock any block of User memory that were previously permalocked. The Tag shall disable support for the BlockPermalock command. If the Tag did not implement block permalocking prior to recommissioning then block permalocking shall remains disabled. The lock status of User memory shall be determined solely by the lock bits. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v DISABLE_USER_MEMORY\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:DISABLE_USER_MEMORY}
{\qr DISABLE_USER_MEMORY{\bkmkstart AAAAAAACMX}
{\bkmkend AAAAAAACMX}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The Tag shall render its User memory inaccessible, causing the entire memory bank to become unreadable, unwriteable, unselectable(ie. the Tag functions as though its User memory bank no longer exits). \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v UNLOCK_ALL_BANKS\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:UNLOCK_ALL_BANKS}
{\qr UNLOCK_ALL_BANKS{\bkmkstart AAAAAAACMY}
{\bkmkend AAAAAAACMY}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The Tag shall unlock its EPC, TID, and User memory banks, regardless of whether these banks were locked or permalocked. Portions of User memory that were block permalock shall remain block permalocked, and vice versa, unless the DISABLE_PERMALOCK is also asserted, in which case the Tag shall unlock its permalocked blocks. The Tag shall write-unlock its kill and access passwords, and shall render the kill and access passwords permanently unreadable regardless of the values of the Tag's lock bits. If an Interrogator subsequently attempts to read the Tag's kill or access passwords the Tag shall backscatter an error code \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v UNKNOWN\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:UNKNOWN}
{\qr UNKNOWN{\bkmkstart AAAAAAACMZ}
{\bkmkend AAAAAAACMZ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Unknown command \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
}
}
{\xe \v FwUpdateFlags\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:FwUpdateFlags}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b CSLibrary.Constants.FwUpdateFlags}{\f2 [strong]}}}
\par
{\bkmkstart AAAAAAACNA}
{\bkmkend AAAAAAACNA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Firmware Update flags }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v NVMEM_UPDATE\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:NVMEM_UPDATE}
{\qr NVMEM_UPDATE{\bkmkstart AAAAAAACNB}
{\bkmkend AAAAAAACNB}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Update Firmware without test \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v NVMEM_UPDATE_TEST\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:NVMEM_UPDATE_TEST}
{\qr NVMEM_UPDATE_TEST{\bkmkstart AAAAAAACNC}
{\bkmkend AAAAAAACNC}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Update Firmware with test \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v NVMEM_UPDATE_BL\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:NVMEM_UPDATE_BL}
{\qr NVMEM_UPDATE_BL{\bkmkstart AAAAAAACND}
{\bkmkend AAAAAAACND}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Update Bootloader without test \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v NVMEM_UPDATE_BL_TEST\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:NVMEM_UPDATE_BL_TEST}
{\qr NVMEM_UPDATE_BL_TEST{\bkmkstart AAAAAAACNE}
{\bkmkend AAAAAAACNE}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Update Bootloader with test \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v NVMEM_UPDATE_APP\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:NVMEM_UPDATE_APP}
{\qr NVMEM_UPDATE_APP{\bkmkstart AAAAAAACNF}
{\bkmkend AAAAAAACNF}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Update Application without test \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v NVMEM_UPDATE_APP_TEST\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:NVMEM_UPDATE_APP_TEST}
{\qr NVMEM_UPDATE_APP_TEST{\bkmkstart AAAAAAACNG}
{\bkmkend AAAAAAACNG}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Update Application with test \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
}
}
{\xe \v GpioPin\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:GpioPin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b CSLibrary.Constants.GpioPin} : uint{\f2 [strong]}}}
\par
{\bkmkstart AAAAAAACNH}
{\bkmkend AAAAAAACNH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
See native RFID_RADIO_GPIO_* \par
}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v PIN_0\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:PIN_0}
{\qr PIN_0{\bkmkstart AAAAAAACNI}
{\bkmkend AAAAAAACNI}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pin 0 \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v PIN_1\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:PIN_1}
{\qr PIN_1{\bkmkstart AAAAAAACNJ}
{\bkmkend AAAAAAACNJ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pin 1 \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v PIN_2\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:PIN_2}
{\qr PIN_2{\bkmkstart AAAAAAACNK}
{\bkmkend AAAAAAACNK}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pin 2 \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v PIN_3\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:PIN_3}
{\qr PIN_3{\bkmkstart AAAAAAACNL}
{\bkmkend AAAAAAACNL}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pin 3 \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
}
}
{\xe \v GPIOTrigger\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:GPIOTrigger}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b CSLibrary.Constants.GPIOTrigger} : byte{\f2 [strong]}}}
\par
{\bkmkstart AAAAAAACNM}
{\bkmkend AAAAAAACNM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
GPIO Trigger flags }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v OFF\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:OFF}
{\qr OFF{\bkmkstart AAAAAAACNN}
{\bkmkend AAAAAAACNN}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Turn off trigger \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v RAISING_EDGE\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:RAISING_EDGE}
{\qr RAISING_EDGE{\bkmkstart AAAAAAACNO}
{\bkmkend AAAAAAACNO}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Raising edge trigger \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v FALLING_EDGE\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:FALLING_EDGE}
{\qr FALLING_EDGE{\bkmkstart AAAAAAACNP}
{\bkmkend AAAAAAACNP}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Falling edge trigger \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ANY_TRIGGER\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:ANY_TRIGGER}
{\qr ANY_TRIGGER{\bkmkstart AAAAAAACNQ}
{\bkmkend AAAAAAACNQ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Raising edge and falling edge trigger \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
}
}
{\xe \v IsoMDID\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:IsoMDID}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b CSLibrary.Constants.IsoMDID}{\f2 [strong]}}}
\par
{\bkmkstart AAAAAAACNR}
{\bkmkend AAAAAAACNR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ISO/IEC 7816-6 registration authority }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v Motorola\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Motorola}
{\qr Motorola{\bkmkstart AAAAAAACNS}
{\bkmkend AAAAAAACNS}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Motorola \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v STM\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:STM}
{\qr STM{\bkmkstart AAAAAAACNT}
{\bkmkend AAAAAAACNT}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
STMicroelectronics SA \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Hitachi\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Hitachi}
{\qr Hitachi{\bkmkstart AAAAAAACNU}
{\bkmkend AAAAAAACNU}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Hitachi, Ltd \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Philips\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Philips}
{\qr Philips{\bkmkstart AAAAAAACNV}
{\bkmkend AAAAAAACNV}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Philips Semiconductors \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Infineon\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Infineon}
{\qr Infineon{\bkmkstart AAAAAAACNW}
{\bkmkend AAAAAAACNW}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Infineon Technologies AG \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Cylink\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Cylink}
{\qr Cylink{\bkmkstart AAAAAAACNX}
{\bkmkend AAAAAAACNX}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Cylink \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Texas\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Texas}
{\qr Texas{\bkmkstart AAAAAAACNY}
{\bkmkend AAAAAAACNY}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Texas Instrument \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Fujitsu\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Fujitsu}
{\qr Fujitsu{\bkmkstart AAAAAAACNZ}
{\bkmkend AAAAAAACNZ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fujitsu Limited \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Matsushita\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Matsushita}
{\qr Matsushita{\bkmkstart AAAAAAACOA}
{\bkmkend AAAAAAACOA}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Matsushita Electronics Corporation, Semiconductor Co. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v NEC\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:NEC}
{\qr NEC{\bkmkstart AAAAAAACOB}
{\bkmkend AAAAAAACOB}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
NEC \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Oki\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Oki}
{\qr Oki{\bkmkstart AAAAAAACOC}
{\bkmkend AAAAAAACOC}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Oki Electric Industry Co. Ltd \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Toshiba\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Toshiba}
{\qr Toshiba{\bkmkstart AAAAAAACOD}
{\bkmkend AAAAAAACOD}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Toshiba Corp. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Mitsubishi\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Mitsubishi}
{\qr Mitsubishi{\bkmkstart AAAAAAACOE}
{\bkmkend AAAAAAACOE}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mitsubishi Electric Corp. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Samsung\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Samsung}
{\qr Samsung{\bkmkstart AAAAAAACOF}
{\bkmkend AAAAAAACOF}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Samsung Electronics Co. Ltd \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Hynix\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Hynix}
{\qr Hynix{\bkmkstart AAAAAAACOG}
{\bkmkend AAAAAAACOG}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Hynix \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v LG\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:LG}
{\qr LG{\bkmkstart AAAAAAACOH}
{\bkmkend AAAAAAACOH}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
LG-Semiconductors Co. Ltd \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v EmosynEM\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:EmosynEM}
{\qr EmosynEM{\bkmkstart AAAAAAACOI}
{\bkmkend AAAAAAACOI}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Emosyn-EM Microelectronics \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v INSIDE\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:INSIDE}
{\qr INSIDE{\bkmkstart AAAAAAACOJ}
{\bkmkend AAAAAAACOJ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
INSIDE Technology \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ORGA\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:ORGA}
{\qr ORGA{\bkmkstart AAAAAAACOK}
{\bkmkend AAAAAAACOK}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ORGA Kartensysteme GmbH \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v SHARP\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:SHARP}
{\qr SHARP{\bkmkstart AAAAAAACOL}
{\bkmkend AAAAAAACOL}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SHARP Corporation \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ATMEL\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:ATMEL}
{\qr ATMEL{\bkmkstart AAAAAAACOM}
{\bkmkend AAAAAAACOM}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ATMEL \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v EM\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:EM}
{\qr EM{\bkmkstart AAAAAAACON}
{\bkmkend AAAAAAACON}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EM Microelectronic-Marin SA \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v KSW\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:KSW}
{\qr KSW{\bkmkstart AAAAAAACOO}
{\bkmkend AAAAAAACOO}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
KSW Microtec GmbH \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ZMD\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:ZMD}
{\qr ZMD{\bkmkstart AAAAAAACOP}
{\bkmkend AAAAAAACOP}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ZMD AG \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v XICOR\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:XICOR}
{\qr XICOR{\bkmkstart AAAAAAACOQ}
{\bkmkend AAAAAAACOQ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
XICOR, Inc. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Sony\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Sony}
{\qr Sony{\bkmkstart AAAAAAACOR}
{\bkmkend AAAAAAACOR}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sony Corporation \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Malaysia\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Malaysia}
{\qr Malaysia{\bkmkstart AAAAAAACOS}
{\bkmkend AAAAAAACOS}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Malaysia Microelectronic Solutions Sdn. Bhd \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Emosyn\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Emosyn}
{\qr Emosyn{\bkmkstart AAAAAAACOT}
{\bkmkend AAAAAAACOT}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Emosyn \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Fudan\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Fudan}
{\qr Fudan{\bkmkstart AAAAAAACOU}
{\bkmkend AAAAAAACOU}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Shanghai Fudan Microelectronics Co. Ltd. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Magellan\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Magellan}
{\qr Magellan{\bkmkstart AAAAAAACOV}
{\bkmkend AAAAAAACOV}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Magellan Technology Pty Limited \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Melexis\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Melexis}
{\qr Melexis{\bkmkstart AAAAAAACOW}
{\bkmkend AAAAAAACOW}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Melexis NV BO \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Renesas\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Renesas}
{\qr Renesas{\bkmkstart AAAAAAACOX}
{\bkmkend AAAAAAACOX}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Renesas Technology Corp. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v TAGSYS\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:TAGSYS}
{\qr TAGSYS{\bkmkstart AAAAAAACOY}
{\bkmkend AAAAAAACOY}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
TAGSYS \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Transcore\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Transcore}
{\qr Transcore{\bkmkstart AAAAAAACOZ}
{\bkmkend AAAAAAACOZ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Transcore \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Belling\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Belling}
{\qr Belling{\bkmkstart AAAAAAACPA}
{\bkmkend AAAAAAACPA}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Shanghai Belling Corp., Ltd. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Masktech\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Masktech}
{\qr Masktech{\bkmkstart AAAAAAACPB}
{\bkmkend AAAAAAACPB}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Masktech Germany Gmbh \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Innovision\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Innovision}
{\qr Innovision{\bkmkstart AAAAAAACPC}
{\bkmkend AAAAAAACPC}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Innovision Research and Techology Plc \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v HitachiULSI\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:HitachiULSI}
{\qr HitachiULSI{\bkmkstart AAAAAAACPD}
{\bkmkend AAAAAAACPD}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Hitachi ULSI Systems Co., Ltd. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Cypak\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Cypak}
{\qr Cypak{\bkmkstart AAAAAAACPE}
{\bkmkend AAAAAAACPE}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Cypak AB \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Ricoh\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Ricoh}
{\qr Ricoh{\bkmkstart AAAAAAACPF}
{\bkmkend AAAAAAACPF}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ricoh \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ASK\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:ASK}
{\qr ASK{\bkmkstart AAAAAAACPG}
{\bkmkend AAAAAAACPG}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ASK \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Unicore\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Unicore}
{\qr Unicore{\bkmkstart AAAAAAACPH}
{\bkmkend AAAAAAACPH}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Unicore Microsystems, LLC \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Dallas\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Dallas}
{\qr Dallas{\bkmkstart AAAAAAACPI}
{\bkmkend AAAAAAACPI}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Dallas Semiconductor/Maxim \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Impinj\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Impinj}
{\qr Impinj{\bkmkstart AAAAAAACPJ}
{\bkmkend AAAAAAACPJ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Impinj, Inc. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Alliance\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Alliance}
{\qr Alliance{\bkmkstart AAAAAAACPK}
{\bkmkend AAAAAAACPK}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RightPlug Alliance \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Broadcom\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Broadcom}
{\qr Broadcom{\bkmkstart AAAAAAACPL}
{\bkmkend AAAAAAACPL}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Broadcom Corporation \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v MStar\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:MStar}
{\qr MStar{\bkmkstart AAAAAAACPM}
{\bkmkend AAAAAAACPM}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
MStar Semiconductor, Inc \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v eeDar\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:eeDar}
{\qr eeDar{\bkmkstart AAAAAAACPN}
{\bkmkend AAAAAAACPN}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
eeDar Technology Inc. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v RFIDsec\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:RFIDsec}
{\qr RFIDsec{\bkmkstart AAAAAAACPO}
{\bkmkend AAAAAAACPO}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RFIDsec \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Schweizer\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Schweizer}
{\qr Schweizer{\bkmkstart AAAAAAACPP}
{\bkmkend AAAAAAACPP}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Schweizer Electronic AG \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v AMIC\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:AMIC}
{\qr AMIC{\bkmkstart AAAAAAACPQ}
{\bkmkend AAAAAAACPQ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
AMIC Technology Corp \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v UNKNOWN\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:UNKNOWN}
{\qr UNKNOWN{\bkmkstart AAAAAAACPR}
{\bkmkend AAAAAAACPR}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Unknown company \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Motorola\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Motorola}
{\qr Motorola{\bkmkstart AAAAAAACNS}
{\bkmkend AAAAAAACNS}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Motorola \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v STM\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:STM}
{\qr STM{\bkmkstart AAAAAAACNT}
{\bkmkend AAAAAAACNT}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
STMicroelectronics SA \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Hitachi\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Hitachi}
{\qr Hitachi{\bkmkstart AAAAAAACNU}
{\bkmkend AAAAAAACNU}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Hitachi, Ltd \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Philips\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Philips}
{\qr Philips{\bkmkstart AAAAAAACNV}
{\bkmkend AAAAAAACNV}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Philips Semiconductors \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Infineon\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Infineon}
{\qr Infineon{\bkmkstart AAAAAAACNW}
{\bkmkend AAAAAAACNW}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Infineon Technologies AG \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Cylink\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Cylink}
{\qr Cylink{\bkmkstart AAAAAAACNX}
{\bkmkend AAAAAAACNX}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Cylink \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Texas\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Texas}
{\qr Texas{\bkmkstart AAAAAAACNY}
{\bkmkend AAAAAAACNY}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Texas Instrument \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Fujitsu\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Fujitsu}
{\qr Fujitsu{\bkmkstart AAAAAAACNZ}
{\bkmkend AAAAAAACNZ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fujitsu Limited \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Matsushita\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Matsushita}
{\qr Matsushita{\bkmkstart AAAAAAACOA}
{\bkmkend AAAAAAACOA}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Matsushita Electronics Corporation, Semiconductor Co. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v NEC\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:NEC}
{\qr NEC{\bkmkstart AAAAAAACOB}
{\bkmkend AAAAAAACOB}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
NEC \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Oki\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Oki}
{\qr Oki{\bkmkstart AAAAAAACOC}
{\bkmkend AAAAAAACOC}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Oki Electric Industry Co. Ltd \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Toshiba\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Toshiba}
{\qr Toshiba{\bkmkstart AAAAAAACOD}
{\bkmkend AAAAAAACOD}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Toshiba Corp. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Mitsubishi\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Mitsubishi}
{\qr Mitsubishi{\bkmkstart AAAAAAACOE}
{\bkmkend AAAAAAACOE}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mitsubishi Electric Corp. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Samsung\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Samsung}
{\qr Samsung{\bkmkstart AAAAAAACOF}
{\bkmkend AAAAAAACOF}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Samsung Electronics Co. Ltd \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Hynix\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Hynix}
{\qr Hynix{\bkmkstart AAAAAAACOG}
{\bkmkend AAAAAAACOG}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Hynix \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v LG\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:LG}
{\qr LG{\bkmkstart AAAAAAACOH}
{\bkmkend AAAAAAACOH}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
LG-Semiconductors Co. Ltd \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v EmosynEM\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:EmosynEM}
{\qr EmosynEM{\bkmkstart AAAAAAACOI}
{\bkmkend AAAAAAACOI}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Emosyn-EM Microelectronics \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v INSIDE\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:INSIDE}
{\qr INSIDE{\bkmkstart AAAAAAACOJ}
{\bkmkend AAAAAAACOJ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
INSIDE Technology \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ORGA\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:ORGA}
{\qr ORGA{\bkmkstart AAAAAAACOK}
{\bkmkend AAAAAAACOK}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ORGA Kartensysteme GmbH \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v SHARP\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:SHARP}
{\qr SHARP{\bkmkstart AAAAAAACOL}
{\bkmkend AAAAAAACOL}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SHARP Corporation \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ATMEL\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:ATMEL}
{\qr ATMEL{\bkmkstart AAAAAAACOM}
{\bkmkend AAAAAAACOM}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ATMEL \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v EM\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:EM}
{\qr EM{\bkmkstart AAAAAAACON}
{\bkmkend AAAAAAACON}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EM Microelectronic-Marin SA \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v KSW\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:KSW}
{\qr KSW{\bkmkstart AAAAAAACOO}
{\bkmkend AAAAAAACOO}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
KSW Microtec GmbH \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ZMD\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:ZMD}
{\qr ZMD{\bkmkstart AAAAAAACOP}
{\bkmkend AAAAAAACOP}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ZMD AG \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v XICOR\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:XICOR}
{\qr XICOR{\bkmkstart AAAAAAACOQ}
{\bkmkend AAAAAAACOQ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
XICOR, Inc. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Sony\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Sony}
{\qr Sony{\bkmkstart AAAAAAACOR}
{\bkmkend AAAAAAACOR}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sony Corporation \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Malaysia\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Malaysia}
{\qr Malaysia{\bkmkstart AAAAAAACOS}
{\bkmkend AAAAAAACOS}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Malaysia Microelectronic Solutions Sdn. Bhd \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Emosyn\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Emosyn}
{\qr Emosyn{\bkmkstart AAAAAAACOT}
{\bkmkend AAAAAAACOT}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Emosyn \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Fudan\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Fudan}
{\qr Fudan{\bkmkstart AAAAAAACOU}
{\bkmkend AAAAAAACOU}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Shanghai Fudan Microelectronics Co. Ltd. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Magellan\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Magellan}
{\qr Magellan{\bkmkstart AAAAAAACOV}
{\bkmkend AAAAAAACOV}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Magellan Technology Pty Limited \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Melexis\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Melexis}
{\qr Melexis{\bkmkstart AAAAAAACOW}
{\bkmkend AAAAAAACOW}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Melexis NV BO \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Renesas\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Renesas}
{\qr Renesas{\bkmkstart AAAAAAACOX}
{\bkmkend AAAAAAACOX}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Renesas Technology Corp. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v TAGSYS\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:TAGSYS}
{\qr TAGSYS{\bkmkstart AAAAAAACOY}
{\bkmkend AAAAAAACOY}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
TAGSYS \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Transcore\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Transcore}
{\qr Transcore{\bkmkstart AAAAAAACOZ}
{\bkmkend AAAAAAACOZ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Transcore \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Belling\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Belling}
{\qr Belling{\bkmkstart AAAAAAACPA}
{\bkmkend AAAAAAACPA}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Shanghai Belling Corp., Ltd. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Masktech\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Masktech}
{\qr Masktech{\bkmkstart AAAAAAACPB}
{\bkmkend AAAAAAACPB}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Masktech Germany Gmbh \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Innovision\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Innovision}
{\qr Innovision{\bkmkstart AAAAAAACPC}
{\bkmkend AAAAAAACPC}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Innovision Research and Techology Plc \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v HitachiULSI\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:HitachiULSI}
{\qr HitachiULSI{\bkmkstart AAAAAAACPD}
{\bkmkend AAAAAAACPD}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Hitachi ULSI Systems Co., Ltd. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Cypak\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Cypak}
{\qr Cypak{\bkmkstart AAAAAAACPE}
{\bkmkend AAAAAAACPE}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Cypak AB \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Ricoh\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Ricoh}
{\qr Ricoh{\bkmkstart AAAAAAACPF}
{\bkmkend AAAAAAACPF}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ricoh \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ASK\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:ASK}
{\qr ASK{\bkmkstart AAAAAAACPG}
{\bkmkend AAAAAAACPG}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ASK \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Unicore\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Unicore}
{\qr Unicore{\bkmkstart AAAAAAACPH}
{\bkmkend AAAAAAACPH}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Unicore Microsystems, LLC \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Dallas\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Dallas}
{\qr Dallas{\bkmkstart AAAAAAACPI}
{\bkmkend AAAAAAACPI}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Dallas Semiconductor/Maxim \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Impinj\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Impinj}
{\qr Impinj{\bkmkstart AAAAAAACPJ}
{\bkmkend AAAAAAACPJ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Impinj, Inc. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Alliance\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Alliance}
{\qr Alliance{\bkmkstart AAAAAAACPK}
{\bkmkend AAAAAAACPK}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RightPlug Alliance \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Broadcom\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Broadcom}
{\qr Broadcom{\bkmkstart AAAAAAACPL}
{\bkmkend AAAAAAACPL}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Broadcom Corporation \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v MStar\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:MStar}
{\qr MStar{\bkmkstart AAAAAAACPM}
{\bkmkend AAAAAAACPM}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
MStar Semiconductor, Inc \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v eeDar\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:eeDar}
{\qr eeDar{\bkmkstart AAAAAAACPN}
{\bkmkend AAAAAAACPN}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
eeDar Technology Inc. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v RFIDsec\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:RFIDsec}
{\qr RFIDsec{\bkmkstart AAAAAAACPO}
{\bkmkend AAAAAAACPO}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RFIDsec \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Schweizer\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Schweizer}
{\qr Schweizer{\bkmkstart AAAAAAACPP}
{\bkmkend AAAAAAACPP}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Schweizer Electronic AG \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v AMIC\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:AMIC}
{\qr AMIC{\bkmkstart AAAAAAACPQ}
{\bkmkend AAAAAAACPQ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
AMIC Technology Corp \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v UNKNOWN\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:UNKNOWN}
{\qr UNKNOWN{\bkmkstart AAAAAAACPR}
{\bkmkend AAAAAAACPR}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Unknown company \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
}
}
{\xe \v IsoMDID\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:IsoMDID}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b CSLibrary.Constants.IsoMDID}{\f2 [strong]}}}
\par
{\bkmkstart AAAAAAACNR}
{\bkmkend AAAAAAACNR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ISO/IEC 7816-6 registration authority }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v Motorola\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Motorola}
{\qr Motorola{\bkmkstart AAAAAAACNS}
{\bkmkend AAAAAAACNS}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Motorola \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v STM\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:STM}
{\qr STM{\bkmkstart AAAAAAACNT}
{\bkmkend AAAAAAACNT}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
STMicroelectronics SA \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Hitachi\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Hitachi}
{\qr Hitachi{\bkmkstart AAAAAAACNU}
{\bkmkend AAAAAAACNU}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Hitachi, Ltd \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Philips\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Philips}
{\qr Philips{\bkmkstart AAAAAAACNV}
{\bkmkend AAAAAAACNV}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Philips Semiconductors \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Infineon\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Infineon}
{\qr Infineon{\bkmkstart AAAAAAACNW}
{\bkmkend AAAAAAACNW}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Infineon Technologies AG \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Cylink\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Cylink}
{\qr Cylink{\bkmkstart AAAAAAACNX}
{\bkmkend AAAAAAACNX}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Cylink \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Texas\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Texas}
{\qr Texas{\bkmkstart AAAAAAACNY}
{\bkmkend AAAAAAACNY}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Texas Instrument \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Fujitsu\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Fujitsu}
{\qr Fujitsu{\bkmkstart AAAAAAACNZ}
{\bkmkend AAAAAAACNZ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fujitsu Limited \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Matsushita\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Matsushita}
{\qr Matsushita{\bkmkstart AAAAAAACOA}
{\bkmkend AAAAAAACOA}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Matsushita Electronics Corporation, Semiconductor Co. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v NEC\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:NEC}
{\qr NEC{\bkmkstart AAAAAAACOB}
{\bkmkend AAAAAAACOB}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
NEC \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Oki\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Oki}
{\qr Oki{\bkmkstart AAAAAAACOC}
{\bkmkend AAAAAAACOC}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Oki Electric Industry Co. Ltd \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Toshiba\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Toshiba}
{\qr Toshiba{\bkmkstart AAAAAAACOD}
{\bkmkend AAAAAAACOD}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Toshiba Corp. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Mitsubishi\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Mitsubishi}
{\qr Mitsubishi{\bkmkstart AAAAAAACOE}
{\bkmkend AAAAAAACOE}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mitsubishi Electric Corp. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Samsung\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Samsung}
{\qr Samsung{\bkmkstart AAAAAAACOF}
{\bkmkend AAAAAAACOF}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Samsung Electronics Co. Ltd \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Hynix\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Hynix}
{\qr Hynix{\bkmkstart AAAAAAACOG}
{\bkmkend AAAAAAACOG}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Hynix \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v LG\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:LG}
{\qr LG{\bkmkstart AAAAAAACOH}
{\bkmkend AAAAAAACOH}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
LG-Semiconductors Co. Ltd \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v EmosynEM\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:EmosynEM}
{\qr EmosynEM{\bkmkstart AAAAAAACOI}
{\bkmkend AAAAAAACOI}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Emosyn-EM Microelectronics \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v INSIDE\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:INSIDE}
{\qr INSIDE{\bkmkstart AAAAAAACOJ}
{\bkmkend AAAAAAACOJ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
INSIDE Technology \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ORGA\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:ORGA}
{\qr ORGA{\bkmkstart AAAAAAACOK}
{\bkmkend AAAAAAACOK}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ORGA Kartensysteme GmbH \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v SHARP\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:SHARP}
{\qr SHARP{\bkmkstart AAAAAAACOL}
{\bkmkend AAAAAAACOL}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SHARP Corporation \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ATMEL\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:ATMEL}
{\qr ATMEL{\bkmkstart AAAAAAACOM}
{\bkmkend AAAAAAACOM}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ATMEL \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v EM\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:EM}
{\qr EM{\bkmkstart AAAAAAACON}
{\bkmkend AAAAAAACON}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EM Microelectronic-Marin SA \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v KSW\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:KSW}
{\qr KSW{\bkmkstart AAAAAAACOO}
{\bkmkend AAAAAAACOO}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
KSW Microtec GmbH \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ZMD\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:ZMD}
{\qr ZMD{\bkmkstart AAAAAAACOP}
{\bkmkend AAAAAAACOP}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ZMD AG \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v XICOR\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:XICOR}
{\qr XICOR{\bkmkstart AAAAAAACOQ}
{\bkmkend AAAAAAACOQ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
XICOR, Inc. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Sony\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Sony}
{\qr Sony{\bkmkstart AAAAAAACOR}
{\bkmkend AAAAAAACOR}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sony Corporation \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Malaysia\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Malaysia}
{\qr Malaysia{\bkmkstart AAAAAAACOS}
{\bkmkend AAAAAAACOS}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Malaysia Microelectronic Solutions Sdn. Bhd \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Emosyn\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Emosyn}
{\qr Emosyn{\bkmkstart AAAAAAACOT}
{\bkmkend AAAAAAACOT}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Emosyn \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Fudan\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Fudan}
{\qr Fudan{\bkmkstart AAAAAAACOU}
{\bkmkend AAAAAAACOU}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Shanghai Fudan Microelectronics Co. Ltd. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Magellan\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Magellan}
{\qr Magellan{\bkmkstart AAAAAAACOV}
{\bkmkend AAAAAAACOV}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Magellan Technology Pty Limited \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Melexis\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Melexis}
{\qr Melexis{\bkmkstart AAAAAAACOW}
{\bkmkend AAAAAAACOW}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Melexis NV BO \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Renesas\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Renesas}
{\qr Renesas{\bkmkstart AAAAAAACOX}
{\bkmkend AAAAAAACOX}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Renesas Technology Corp. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v TAGSYS\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:TAGSYS}
{\qr TAGSYS{\bkmkstart AAAAAAACOY}
{\bkmkend AAAAAAACOY}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
TAGSYS \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Transcore\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Transcore}
{\qr Transcore{\bkmkstart AAAAAAACOZ}
{\bkmkend AAAAAAACOZ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Transcore \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Belling\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Belling}
{\qr Belling{\bkmkstart AAAAAAACPA}
{\bkmkend AAAAAAACPA}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Shanghai Belling Corp., Ltd. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Masktech\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Masktech}
{\qr Masktech{\bkmkstart AAAAAAACPB}
{\bkmkend AAAAAAACPB}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Masktech Germany Gmbh \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Innovision\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Innovision}
{\qr Innovision{\bkmkstart AAAAAAACPC}
{\bkmkend AAAAAAACPC}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Innovision Research and Techology Plc \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v HitachiULSI\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:HitachiULSI}
{\qr HitachiULSI{\bkmkstart AAAAAAACPD}
{\bkmkend AAAAAAACPD}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Hitachi ULSI Systems Co., Ltd. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Cypak\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Cypak}
{\qr Cypak{\bkmkstart AAAAAAACPE}
{\bkmkend AAAAAAACPE}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Cypak AB \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Ricoh\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Ricoh}
{\qr Ricoh{\bkmkstart AAAAAAACPF}
{\bkmkend AAAAAAACPF}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ricoh \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ASK\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:ASK}
{\qr ASK{\bkmkstart AAAAAAACPG}
{\bkmkend AAAAAAACPG}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ASK \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Unicore\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Unicore}
{\qr Unicore{\bkmkstart AAAAAAACPH}
{\bkmkend AAAAAAACPH}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Unicore Microsystems, LLC \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Dallas\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Dallas}
{\qr Dallas{\bkmkstart AAAAAAACPI}
{\bkmkend AAAAAAACPI}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Dallas Semiconductor/Maxim \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Impinj\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Impinj}
{\qr Impinj{\bkmkstart AAAAAAACPJ}
{\bkmkend AAAAAAACPJ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Impinj, Inc. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Alliance\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Alliance}
{\qr Alliance{\bkmkstart AAAAAAACPK}
{\bkmkend AAAAAAACPK}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RightPlug Alliance \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Broadcom\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Broadcom}
{\qr Broadcom{\bkmkstart AAAAAAACPL}
{\bkmkend AAAAAAACPL}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Broadcom Corporation \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v MStar\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:MStar}
{\qr MStar{\bkmkstart AAAAAAACPM}
{\bkmkend AAAAAAACPM}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
MStar Semiconductor, Inc \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v eeDar\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:eeDar}
{\qr eeDar{\bkmkstart AAAAAAACPN}
{\bkmkend AAAAAAACPN}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
eeDar Technology Inc. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v RFIDsec\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:RFIDsec}
{\qr RFIDsec{\bkmkstart AAAAAAACPO}
{\bkmkend AAAAAAACPO}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RFIDsec \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Schweizer\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Schweizer}
{\qr Schweizer{\bkmkstart AAAAAAACPP}
{\bkmkend AAAAAAACPP}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Schweizer Electronic AG \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v AMIC\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:AMIC}
{\qr AMIC{\bkmkstart AAAAAAACPQ}
{\bkmkend AAAAAAACPQ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
AMIC Technology Corp \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v UNKNOWN\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:UNKNOWN}
{\qr UNKNOWN{\bkmkstart AAAAAAACPR}
{\bkmkend AAAAAAACPR}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Unknown company \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Motorola\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Motorola}
{\qr Motorola{\bkmkstart AAAAAAACNS}
{\bkmkend AAAAAAACNS}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Motorola \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v STM\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:STM}
{\qr STM{\bkmkstart AAAAAAACNT}
{\bkmkend AAAAAAACNT}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
STMicroelectronics SA \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Hitachi\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Hitachi}
{\qr Hitachi{\bkmkstart AAAAAAACNU}
{\bkmkend AAAAAAACNU}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Hitachi, Ltd \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Philips\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Philips}
{\qr Philips{\bkmkstart AAAAAAACNV}
{\bkmkend AAAAAAACNV}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Philips Semiconductors \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Infineon\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Infineon}
{\qr Infineon{\bkmkstart AAAAAAACNW}
{\bkmkend AAAAAAACNW}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Infineon Technologies AG \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Cylink\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Cylink}
{\qr Cylink{\bkmkstart AAAAAAACNX}
{\bkmkend AAAAAAACNX}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Cylink \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Texas\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Texas}
{\qr Texas{\bkmkstart AAAAAAACNY}
{\bkmkend AAAAAAACNY}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Texas Instrument \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Fujitsu\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Fujitsu}
{\qr Fujitsu{\bkmkstart AAAAAAACNZ}
{\bkmkend AAAAAAACNZ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fujitsu Limited \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Matsushita\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Matsushita}
{\qr Matsushita{\bkmkstart AAAAAAACOA}
{\bkmkend AAAAAAACOA}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Matsushita Electronics Corporation, Semiconductor Co. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v NEC\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:NEC}
{\qr NEC{\bkmkstart AAAAAAACOB}
{\bkmkend AAAAAAACOB}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
NEC \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Oki\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Oki}
{\qr Oki{\bkmkstart AAAAAAACOC}
{\bkmkend AAAAAAACOC}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Oki Electric Industry Co. Ltd \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Toshiba\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Toshiba}
{\qr Toshiba{\bkmkstart AAAAAAACOD}
{\bkmkend AAAAAAACOD}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Toshiba Corp. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Mitsubishi\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Mitsubishi}
{\qr Mitsubishi{\bkmkstart AAAAAAACOE}
{\bkmkend AAAAAAACOE}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mitsubishi Electric Corp. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Samsung\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Samsung}
{\qr Samsung{\bkmkstart AAAAAAACOF}
{\bkmkend AAAAAAACOF}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Samsung Electronics Co. Ltd \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Hynix\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Hynix}
{\qr Hynix{\bkmkstart AAAAAAACOG}
{\bkmkend AAAAAAACOG}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Hynix \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v LG\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:LG}
{\qr LG{\bkmkstart AAAAAAACOH}
{\bkmkend AAAAAAACOH}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
LG-Semiconductors Co. Ltd \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v EmosynEM\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:EmosynEM}
{\qr EmosynEM{\bkmkstart AAAAAAACOI}
{\bkmkend AAAAAAACOI}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Emosyn-EM Microelectronics \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v INSIDE\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:INSIDE}
{\qr INSIDE{\bkmkstart AAAAAAACOJ}
{\bkmkend AAAAAAACOJ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
INSIDE Technology \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ORGA\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:ORGA}
{\qr ORGA{\bkmkstart AAAAAAACOK}
{\bkmkend AAAAAAACOK}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ORGA Kartensysteme GmbH \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v SHARP\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:SHARP}
{\qr SHARP{\bkmkstart AAAAAAACOL}
{\bkmkend AAAAAAACOL}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SHARP Corporation \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ATMEL\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:ATMEL}
{\qr ATMEL{\bkmkstart AAAAAAACOM}
{\bkmkend AAAAAAACOM}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ATMEL \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v EM\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:EM}
{\qr EM{\bkmkstart AAAAAAACON}
{\bkmkend AAAAAAACON}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EM Microelectronic-Marin SA \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v KSW\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:KSW}
{\qr KSW{\bkmkstart AAAAAAACOO}
{\bkmkend AAAAAAACOO}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
KSW Microtec GmbH \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ZMD\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:ZMD}
{\qr ZMD{\bkmkstart AAAAAAACOP}
{\bkmkend AAAAAAACOP}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ZMD AG \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v XICOR\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:XICOR}
{\qr XICOR{\bkmkstart AAAAAAACOQ}
{\bkmkend AAAAAAACOQ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
XICOR, Inc. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Sony\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Sony}
{\qr Sony{\bkmkstart AAAAAAACOR}
{\bkmkend AAAAAAACOR}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sony Corporation \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Malaysia\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Malaysia}
{\qr Malaysia{\bkmkstart AAAAAAACOS}
{\bkmkend AAAAAAACOS}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Malaysia Microelectronic Solutions Sdn. Bhd \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Emosyn\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Emosyn}
{\qr Emosyn{\bkmkstart AAAAAAACOT}
{\bkmkend AAAAAAACOT}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Emosyn \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Fudan\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Fudan}
{\qr Fudan{\bkmkstart AAAAAAACOU}
{\bkmkend AAAAAAACOU}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Shanghai Fudan Microelectronics Co. Ltd. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Magellan\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Magellan}
{\qr Magellan{\bkmkstart AAAAAAACOV}
{\bkmkend AAAAAAACOV}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Magellan Technology Pty Limited \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Melexis\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Melexis}
{\qr Melexis{\bkmkstart AAAAAAACOW}
{\bkmkend AAAAAAACOW}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Melexis NV BO \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Renesas\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Renesas}
{\qr Renesas{\bkmkstart AAAAAAACOX}
{\bkmkend AAAAAAACOX}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Renesas Technology Corp. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v TAGSYS\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:TAGSYS}
{\qr TAGSYS{\bkmkstart AAAAAAACOY}
{\bkmkend AAAAAAACOY}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
TAGSYS \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Transcore\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Transcore}
{\qr Transcore{\bkmkstart AAAAAAACOZ}
{\bkmkend AAAAAAACOZ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Transcore \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Belling\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Belling}
{\qr Belling{\bkmkstart AAAAAAACPA}
{\bkmkend AAAAAAACPA}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Shanghai Belling Corp., Ltd. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Masktech\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Masktech}
{\qr Masktech{\bkmkstart AAAAAAACPB}
{\bkmkend AAAAAAACPB}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Masktech Germany Gmbh \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Innovision\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Innovision}
{\qr Innovision{\bkmkstart AAAAAAACPC}
{\bkmkend AAAAAAACPC}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Innovision Research and Techology Plc \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v HitachiULSI\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:HitachiULSI}
{\qr HitachiULSI{\bkmkstart AAAAAAACPD}
{\bkmkend AAAAAAACPD}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Hitachi ULSI Systems Co., Ltd. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Cypak\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Cypak}
{\qr Cypak{\bkmkstart AAAAAAACPE}
{\bkmkend AAAAAAACPE}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Cypak AB \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Ricoh\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Ricoh}
{\qr Ricoh{\bkmkstart AAAAAAACPF}
{\bkmkend AAAAAAACPF}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ricoh \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ASK\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:ASK}
{\qr ASK{\bkmkstart AAAAAAACPG}
{\bkmkend AAAAAAACPG}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ASK \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Unicore\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Unicore}
{\qr Unicore{\bkmkstart AAAAAAACPH}
{\bkmkend AAAAAAACPH}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Unicore Microsystems, LLC \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Dallas\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Dallas}
{\qr Dallas{\bkmkstart AAAAAAACPI}
{\bkmkend AAAAAAACPI}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Dallas Semiconductor/Maxim \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Impinj\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Impinj}
{\qr Impinj{\bkmkstart AAAAAAACPJ}
{\bkmkend AAAAAAACPJ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Impinj, Inc. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Alliance\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Alliance}
{\qr Alliance{\bkmkstart AAAAAAACPK}
{\bkmkend AAAAAAACPK}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RightPlug Alliance \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Broadcom\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Broadcom}
{\qr Broadcom{\bkmkstart AAAAAAACPL}
{\bkmkend AAAAAAACPL}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Broadcom Corporation \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v MStar\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:MStar}
{\qr MStar{\bkmkstart AAAAAAACPM}
{\bkmkend AAAAAAACPM}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
MStar Semiconductor, Inc \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v eeDar\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:eeDar}
{\qr eeDar{\bkmkstart AAAAAAACPN}
{\bkmkend AAAAAAACPN}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
eeDar Technology Inc. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v RFIDsec\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:RFIDsec}
{\qr RFIDsec{\bkmkstart AAAAAAACPO}
{\bkmkend AAAAAAACPO}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RFIDsec \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v Schweizer\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Schweizer}
{\qr Schweizer{\bkmkstart AAAAAAACPP}
{\bkmkend AAAAAAACPP}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Schweizer Electronic AG \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v AMIC\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:AMIC}
{\qr AMIC{\bkmkstart AAAAAAACPQ}
{\bkmkend AAAAAAACPQ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
AMIC Technology Corp \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v UNKNOWN\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:UNKNOWN}
{\qr UNKNOWN{\bkmkstart AAAAAAACPR}
{\bkmkend AAAAAAACPR}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Unknown company \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
}
}
{\xe \v LBT\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:LBT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b CSLibrary.Constants.LBT} : uint{\f2 [strong]}}}
\par
{\bkmkstart AAAAAAACPS}
{\bkmkend AAAAAAACPS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
LBT Config }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v OFF\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:OFF}
{\qr OFF{\bkmkstart AAAAAAACPT}
{\bkmkend AAAAAAACPT}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
LBT OFF \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ON\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:ON}
{\qr ON{\bkmkstart AAAAAAACPU}
{\bkmkend AAAAAAACPU}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
LBT ON \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v SCAN\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:SCAN}
{\qr SCAN{\bkmkstart AAAAAAACPV}
{\bkmkend AAAAAAACPV}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
LBT SCAN MODE \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v OFF\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:OFF}
{\qr OFF{\bkmkstart AAAAAAACPT}
{\bkmkend AAAAAAACPT}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
LBT OFF \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ON\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:ON}
{\qr ON{\bkmkstart AAAAAAACPU}
{\bkmkend AAAAAAACPU}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
LBT ON \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v SCAN\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:SCAN}
{\qr SCAN{\bkmkstart AAAAAAACPV}
{\bkmkend AAAAAAACPV}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
LBT SCAN MODE \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
}
}
{\xe \v LBT\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:LBT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b CSLibrary.Constants.LBT} : uint{\f2 [strong]}}}
\par
{\bkmkstart AAAAAAACPS}
{\bkmkend AAAAAAACPS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
LBT Config }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v OFF\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:OFF}
{\qr OFF{\bkmkstart AAAAAAACPT}
{\bkmkend AAAAAAACPT}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
LBT OFF \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ON\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:ON}
{\qr ON{\bkmkstart AAAAAAACPU}
{\bkmkend AAAAAAACPU}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
LBT ON \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v SCAN\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:SCAN}
{\qr SCAN{\bkmkstart AAAAAAACPV}
{\bkmkend AAAAAAACPV}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
LBT SCAN MODE \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v OFF\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:OFF}
{\qr OFF{\bkmkstart AAAAAAACPT}
{\bkmkend AAAAAAACPT}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
LBT OFF \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ON\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:ON}
{\qr ON{\bkmkstart AAAAAAACPU}
{\bkmkend AAAAAAACPU}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
LBT ON \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v SCAN\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:SCAN}
{\qr SCAN{\bkmkstart AAAAAAACPV}
{\bkmkend AAAAAAACPV}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
LBT SCAN MODE \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
}
}
{\xe \v Machine\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Machine}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b CSLibrary.Constants.Machine}{\f2 [strong]}}}
\par
{\bkmkstart AAAAAAACPW}
{\bkmkend AAAAAAACPW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Machine Type }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v CS101\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CS101}
{\qr CS101{\bkmkstart AAAAAAACPX}
{\bkmkend AAAAAAACPX}
\cell }{\cell }{\row }
{\xe \v CS203\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CS203}
{\qr CS203{\bkmkstart AAAAAAACPY}
{\bkmkend AAAAAAACPY}
\cell }{\cell }{\row }
{\xe \v CS333\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CS333}
{\qr CS333{\bkmkstart AAAAAAACPZ}
{\bkmkend AAAAAAACPZ}
\cell }{\cell }{\row }
{\xe \v CS468\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CS468}
{\qr CS468{\bkmkstart AAAAAAACQA}
{\bkmkend AAAAAAACQA}
\cell }{\cell }{\row }
{\xe \v CS206\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CS206}
{\qr CS206{\bkmkstart AAAAAAACQB}
{\bkmkend AAAAAAACQB}
\cell }{\cell }{\row }
{\xe \v CS468INT\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CS468INT}
{\qr CS468INT{\bkmkstart AAAAAAACQC}
{\bkmkend AAAAAAACQC}
\cell }{\cell }{\row }
{\xe \v CS463\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CS463}
{\qr CS463{\bkmkstart AAAAAAACQD}
{\bkmkend AAAAAAACQD}
\cell }{\cell }{\row }
{\xe \v CS469\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CS469}
{\qr CS469{\bkmkstart AAAAAAACQE}
{\bkmkend AAAAAAACQE}
\cell }{\cell }{\row }
{\xe \v CS208\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CS208}
{\qr CS208{\bkmkstart AAAAAAACQF}
{\bkmkend AAAAAAACQF}
\cell }{\cell }{\row }
{\xe \v CS209\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CS209}
{\qr CS209{\bkmkstart AAAAAAACQG}
{\bkmkend AAAAAAACQG}
\cell }{\cell }{\row }
{\xe \v CS103\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CS103}
{\qr CS103{\bkmkstart AAAAAAACQH}
{\bkmkend AAAAAAACQH}
\cell }{\cell }{\row }
{\xe \v CS108\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CS108}
{\qr CS108{\bkmkstart AAAAAAACQI}
{\bkmkend AAAAAAACQI}
\cell }{\cell }{\row }
{\xe \v MACHINE_CODE_END\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:MACHINE_CODE_END}
{\qr MACHINE_CODE_END{\bkmkstart AAAAAAACQJ}
{\bkmkend AAAAAAACQJ}
\cell }{\cell }{\row }
{\xe \v UNKNOWN\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:UNKNOWN}
{\qr UNKNOWN{\bkmkstart AAAAAAACQK}
{\bkmkend AAAAAAACQK}
\cell }{\cell }{\row }
{\xe \v CS101\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CS101}
{\qr CS101{\bkmkstart AAAAAAACPX}
{\bkmkend AAAAAAACPX}
\cell }{\cell }{\row }
{\xe \v CS203\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CS203}
{\qr CS203{\bkmkstart AAAAAAACPY}
{\bkmkend AAAAAAACPY}
\cell }{\cell }{\row }
{\xe \v CS333\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CS333}
{\qr CS333{\bkmkstart AAAAAAACPZ}
{\bkmkend AAAAAAACPZ}
\cell }{\cell }{\row }
{\xe \v CS468\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CS468}
{\qr CS468{\bkmkstart AAAAAAACQA}
{\bkmkend AAAAAAACQA}
\cell }{\cell }{\row }
{\xe \v CS206\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CS206}
{\qr CS206{\bkmkstart AAAAAAACQB}
{\bkmkend AAAAAAACQB}
\cell }{\cell }{\row }
{\xe \v CS468INT\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CS468INT}
{\qr CS468INT{\bkmkstart AAAAAAACQC}
{\bkmkend AAAAAAACQC}
\cell }{\cell }{\row }
{\xe \v CS463\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CS463}
{\qr CS463{\bkmkstart AAAAAAACQD}
{\bkmkend AAAAAAACQD}
\cell }{\cell }{\row }
{\xe \v CS469\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CS469}
{\qr CS469{\bkmkstart AAAAAAACQE}
{\bkmkend AAAAAAACQE}
\cell }{\cell }{\row }
{\xe \v CS208\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CS208}
{\qr CS208{\bkmkstart AAAAAAACQF}
{\bkmkend AAAAAAACQF}
\cell }{\cell }{\row }
{\xe \v CS209\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CS209}
{\qr CS209{\bkmkstart AAAAAAACQG}
{\bkmkend AAAAAAACQG}
\cell }{\cell }{\row }
{\xe \v CS103\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CS103}
{\qr CS103{\bkmkstart AAAAAAACQH}
{\bkmkend AAAAAAACQH}
\cell }{\cell }{\row }
{\xe \v CS108\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CS108}
{\qr CS108{\bkmkstart AAAAAAACQI}
{\bkmkend AAAAAAACQI}
\cell }{\cell }{\row }
{\xe \v MACHINE_CODE_END\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:MACHINE_CODE_END}
{\qr MACHINE_CODE_END{\bkmkstart AAAAAAACQJ}
{\bkmkend AAAAAAACQJ}
\cell }{\cell }{\row }
{\xe \v UNKNOWN\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:UNKNOWN}
{\qr UNKNOWN{\bkmkstart AAAAAAACQK}
{\bkmkend AAAAAAACQK}
\cell }{\cell }{\row }
}
}
{\xe \v Machine\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Machine}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b CSLibrary.Constants.Machine}{\f2 [strong]}}}
\par
{\bkmkstart AAAAAAACPW}
{\bkmkend AAAAAAACPW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Machine Type }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v CS101\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CS101}
{\qr CS101{\bkmkstart AAAAAAACPX}
{\bkmkend AAAAAAACPX}
\cell }{\cell }{\row }
{\xe \v CS203\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CS203}
{\qr CS203{\bkmkstart AAAAAAACPY}
{\bkmkend AAAAAAACPY}
\cell }{\cell }{\row }
{\xe \v CS333\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CS333}
{\qr CS333{\bkmkstart AAAAAAACPZ}
{\bkmkend AAAAAAACPZ}
\cell }{\cell }{\row }
{\xe \v CS468\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CS468}
{\qr CS468{\bkmkstart AAAAAAACQA}
{\bkmkend AAAAAAACQA}
\cell }{\cell }{\row }
{\xe \v CS206\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CS206}
{\qr CS206{\bkmkstart AAAAAAACQB}
{\bkmkend AAAAAAACQB}
\cell }{\cell }{\row }
{\xe \v CS468INT\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CS468INT}
{\qr CS468INT{\bkmkstart AAAAAAACQC}
{\bkmkend AAAAAAACQC}
\cell }{\cell }{\row }
{\xe \v CS463\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CS463}
{\qr CS463{\bkmkstart AAAAAAACQD}
{\bkmkend AAAAAAACQD}
\cell }{\cell }{\row }
{\xe \v CS469\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CS469}
{\qr CS469{\bkmkstart AAAAAAACQE}
{\bkmkend AAAAAAACQE}
\cell }{\cell }{\row }
{\xe \v CS208\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CS208}
{\qr CS208{\bkmkstart AAAAAAACQF}
{\bkmkend AAAAAAACQF}
\cell }{\cell }{\row }
{\xe \v CS209\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CS209}
{\qr CS209{\bkmkstart AAAAAAACQG}
{\bkmkend AAAAAAACQG}
\cell }{\cell }{\row }
{\xe \v CS103\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CS103}
{\qr CS103{\bkmkstart AAAAAAACQH}
{\bkmkend AAAAAAACQH}
\cell }{\cell }{\row }
{\xe \v CS108\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CS108}
{\qr CS108{\bkmkstart AAAAAAACQI}
{\bkmkend AAAAAAACQI}
\cell }{\cell }{\row }
{\xe \v MACHINE_CODE_END\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:MACHINE_CODE_END}
{\qr MACHINE_CODE_END{\bkmkstart AAAAAAACQJ}
{\bkmkend AAAAAAACQJ}
\cell }{\cell }{\row }
{\xe \v UNKNOWN\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:UNKNOWN}
{\qr UNKNOWN{\bkmkstart AAAAAAACQK}
{\bkmkend AAAAAAACQK}
\cell }{\cell }{\row }
{\xe \v CS101\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CS101}
{\qr CS101{\bkmkstart AAAAAAACPX}
{\bkmkend AAAAAAACPX}
\cell }{\cell }{\row }
{\xe \v CS203\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CS203}
{\qr CS203{\bkmkstart AAAAAAACPY}
{\bkmkend AAAAAAACPY}
\cell }{\cell }{\row }
{\xe \v CS333\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CS333}
{\qr CS333{\bkmkstart AAAAAAACPZ}
{\bkmkend AAAAAAACPZ}
\cell }{\cell }{\row }
{\xe \v CS468\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CS468}
{\qr CS468{\bkmkstart AAAAAAACQA}
{\bkmkend AAAAAAACQA}
\cell }{\cell }{\row }
{\xe \v CS206\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CS206}
{\qr CS206{\bkmkstart AAAAAAACQB}
{\bkmkend AAAAAAACQB}
\cell }{\cell }{\row }
{\xe \v CS468INT\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CS468INT}
{\qr CS468INT{\bkmkstart AAAAAAACQC}
{\bkmkend AAAAAAACQC}
\cell }{\cell }{\row }
{\xe \v CS463\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CS463}
{\qr CS463{\bkmkstart AAAAAAACQD}
{\bkmkend AAAAAAACQD}
\cell }{\cell }{\row }
{\xe \v CS469\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CS469}
{\qr CS469{\bkmkstart AAAAAAACQE}
{\bkmkend AAAAAAACQE}
\cell }{\cell }{\row }
{\xe \v CS208\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CS208}
{\qr CS208{\bkmkstart AAAAAAACQF}
{\bkmkend AAAAAAACQF}
\cell }{\cell }{\row }
{\xe \v CS209\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CS209}
{\qr CS209{\bkmkstart AAAAAAACQG}
{\bkmkend AAAAAAACQG}
\cell }{\cell }{\row }
{\xe \v CS103\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CS103}
{\qr CS103{\bkmkstart AAAAAAACQH}
{\bkmkend AAAAAAACQH}
\cell }{\cell }{\row }
{\xe \v CS108\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CS108}
{\qr CS108{\bkmkstart AAAAAAACQI}
{\bkmkend AAAAAAACQI}
\cell }{\cell }{\row }
{\xe \v MACHINE_CODE_END\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:MACHINE_CODE_END}
{\qr MACHINE_CODE_END{\bkmkstart AAAAAAACQJ}
{\bkmkend AAAAAAACQJ}
\cell }{\cell }{\row }
{\xe \v UNKNOWN\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:UNKNOWN}
{\qr UNKNOWN{\bkmkstart AAAAAAACQK}
{\bkmkend AAAAAAACQK}
\cell }{\cell }{\row }
}
}
{\xe \v MacRegion\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:MacRegion}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b CSLibrary.Constants.MacRegion} : uint{\f2 [strong]}}}
\par
{\bkmkstart AAAAAAACQL}
{\bkmkend AAAAAAACQL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The new region of operation for the radio module. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v FCC_GENERIC\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:FCC_GENERIC}
{\qr FCC_GENERIC{\bkmkstart AAAAAAACQM}
{\bkmkend AAAAAAACQM}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RFID_MAC_REGION_FCC_GENERIC \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ETSI_GENERIC\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:ETSI_GENERIC}
{\qr ETSI_GENERIC{\bkmkstart AAAAAAACQN}
{\bkmkend AAAAAAACQN}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RFID_MAC_REGION_ETSI_GENERIC \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v NEWETSI_GENERIC\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:NEWETSI_GENERIC}
{\qr NEWETSI_GENERIC{\bkmkstart AAAAAAACQO}
{\bkmkend AAAAAAACQO}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RFID_MAC_REGION_NEWETSI_GENERIC \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v JAPAN_GENERIC\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:JAPAN_GENERIC}
{\qr JAPAN_GENERIC{\bkmkstart AAAAAAACQP}
{\bkmkend AAAAAAACQP}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RFID_MAC_REGION_JAPAN_GENERIC \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v KOREA_LBT\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:KOREA_LBT}
{\qr KOREA_LBT{\bkmkstart AAAAAAACQQ}
{\bkmkend AAAAAAACQQ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RFID_MAC_REGION_KOREA_LBT \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v KOREA_FHSS\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:KOREA_FHSS}
{\qr KOREA_FHSS{\bkmkstart AAAAAAACQR}
{\bkmkend AAAAAAACQR}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RFID_MAC_REGION_KOREA_FHSS \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v UNKNOWN\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:UNKNOWN}
{\qr UNKNOWN{\bkmkstart AAAAAAACQS}
{\bkmkend AAAAAAACQS}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
UNKNOWN_REGION \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
}
}
{\xe \v MacResetType\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:MacResetType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b CSLibrary.Constants.MacResetType} : uint{\f2 [strong]}}}
\par
{\bkmkstart AAAAAAACQT}
{\bkmkend AAAAAAACQT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The type of reset that the MAC should perform. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v SOFT\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:SOFT}
{\qr SOFT{\bkmkstart AAAAAAACQU}
{\bkmkend AAAAAAACQU}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Soft reset \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v UNKNOWN\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:UNKNOWN}
{\qr UNKNOWN{\bkmkstart AAAAAAACQV}
{\bkmkend AAAAAAACQV}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Unknown action \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
}
}
{\xe \v MemoryBank\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:MemoryBank}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b CSLibrary.Constants.MemoryBank} : uint{\f2 [strong]}}}
\par
{\bkmkstart AAAAAAACQW}
{\bkmkend AAAAAAACQW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tag's memory bank }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v RESERVED\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:RESERVED}
{\qr RESERVED{\bkmkstart AAAAAAACQX}
{\bkmkend AAAAAAACQX}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Acesss and Kill password bank \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v EPC\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:EPC}
{\qr EPC{\bkmkstart AAAAAAACQY}
{\bkmkend AAAAAAACQY}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PC and EPC memory bank \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v TID\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:TID}
{\qr TID{\bkmkstart AAAAAAACQZ}
{\bkmkend AAAAAAACQZ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
TID bank \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v USER\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:USER}
{\qr USER{\bkmkstart AAAAAAACRA}
{\bkmkend AAAAAAACRA}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
User memory bank \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v BANK0\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:BANK0}
{\qr BANK0{\bkmkstart AAAAAAACRB}
{\bkmkend AAAAAAACRB}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Bank 0 \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v BANK1\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:BANK1}
{\qr BANK1{\bkmkstart AAAAAAACRC}
{\bkmkend AAAAAAACRC}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Bank 1 \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v BANK2\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:BANK2}
{\qr BANK2{\bkmkstart AAAAAAACRD}
{\bkmkend AAAAAAACRD}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Bank 2 \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v BANK3\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:BANK3}
{\qr BANK3{\bkmkstart AAAAAAACRE}
{\bkmkend AAAAAAACRE}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Bank 3 \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v UNKNOWN\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:UNKNOWN}
{\qr UNKNOWN{\bkmkstart AAAAAAACRF}
{\bkmkend AAAAAAACRF}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Unknown \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
}
}
{\xe \v MillerNumber\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:MillerNumber}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b CSLibrary.Constants.MillerNumber} : uint{\f2 [strong]}}}
\par
{\bkmkstart AAAAAAACRG}
{\bkmkend AAAAAAACRG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The miller number (i.e., cycles per symbol) that is sent as part of the Query command. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v NUMBER_FM0\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:NUMBER_FM0}
{\qr NUMBER_FM0{\bkmkstart AAAAAAACRH}
{\bkmkend AAAAAAACRH}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A binary '0' has a transition in the middle of a symbol, whereas a binary '1' does not. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v NUMBER_2\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:NUMBER_2}
{\qr NUMBER_2{\bkmkstart AAAAAAACRI}
{\bkmkend AAAAAAACRI}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The FM0 signal is multiplied by a square wave with either 2 periods for each FM0 symbol. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v NUMBER_4\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:NUMBER_4}
{\qr NUMBER_4{\bkmkstart AAAAAAACRJ}
{\bkmkend AAAAAAACRJ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The FM0 signal is multiplied by a square wave with either 4 periods for each FM0 symbol. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v NUMBER_8\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:NUMBER_8}
{\qr NUMBER_8{\bkmkstart AAAAAAACRK}
{\bkmkend AAAAAAACRK}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The FM0 signal is multiplied by a square wave with either 8 periods for each FM0 symbol. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v UNKNOWN\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:UNKNOWN}
{\qr UNKNOWN{\bkmkstart AAAAAAACRL}
{\bkmkend AAAAAAACRL}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Unknown \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
}
}
{\xe \v ModulationType\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:ModulationType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b CSLibrary.Constants.ModulationType} : uint{\f2 [strong]}}}
\par
{\bkmkstart AAAAAAACRM}
{\bkmkend AAAAAAACRM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The modulation type that is used by the profile. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v DSB_ASK\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:DSB_ASK}
{\qr DSB_ASK{\bkmkstart AAAAAAACRN}
{\bkmkend AAAAAAACRN}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
DSB_ASK Modulation \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v SSB_ASK\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:SSB_ASK}
{\qr SSB_ASK{\bkmkstart AAAAAAACRO}
{\bkmkend AAAAAAACRO}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SSB_ASK Modulation \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v PR_ASK\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:PR_ASK}
{\qr PR_ASK{\bkmkstart AAAAAAACRP}
{\bkmkend AAAAAAACRP}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PR_ASK Modulation \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v UNKNOWN\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:UNKNOWN}
{\qr UNKNOWN{\bkmkstart AAAAAAACRQ}
{\bkmkend AAAAAAACRQ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Unknown \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
}
}
{\xe \v Operation\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Operation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b CSLibrary.Constants.Operation} : int{\f2 [strong]}}}
\par
{\bkmkstart AAAAAAACRR}
{\bkmkend AAAAAAACRR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RFID Operation Mode }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v UNKNOWN\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:UNKNOWN}
{\qr UNKNOWN{\bkmkstart AAAAAAACRS}
{\bkmkend AAAAAAACRS}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Unknow operation \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v TAG_BLOCK_PERMALOCK\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:TAG_BLOCK_PERMALOCK}
{\qr TAG_BLOCK_PERMALOCK{\bkmkstart AAAAAAACRT}
{\bkmkend AAAAAAACRT}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
perform 18K6C BlockPermalock to target tag \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v TAG_LOCK\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:TAG_LOCK}
{\qr TAG_LOCK{\bkmkstart AAAAAAACRU}
{\bkmkend AAAAAAACRU}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
perform 18K6C tag lock to target tag \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v TAG_KILL\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:TAG_KILL}
{\qr TAG_KILL{\bkmkstart AAAAAAACRV}
{\bkmkend AAAAAAACRV}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
perform 18K6C tag kill to target tag \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v TAG_READ_KILL_PWD\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:TAG_READ_KILL_PWD}
{\qr TAG_READ_KILL_PWD{\bkmkstart AAAAAAACRW}
{\bkmkend AAAAAAACRW}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
perform custom read on kill password \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v TAG_READ_ACC_PWD\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:TAG_READ_ACC_PWD}
{\qr TAG_READ_ACC_PWD{\bkmkstart AAAAAAACRX}
{\bkmkend AAAAAAACRX}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
perform custom read on access password \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v TAG_READ_PC\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:TAG_READ_PC}
{\qr TAG_READ_PC{\bkmkstart AAAAAAACRY}
{\bkmkend AAAAAAACRY}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
perform custom read on pc \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v TAG_READ_EPC\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:TAG_READ_EPC}
{\qr TAG_READ_EPC{\bkmkstart AAAAAAACRZ}
{\bkmkend AAAAAAACRZ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
perform custom read on epc \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v TAG_READ_TID\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:TAG_READ_TID}
{\qr TAG_READ_TID{\bkmkstart AAAAAAACSA}
{\bkmkend AAAAAAACSA}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
perform custom read on tid \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v TAG_READ_USER\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:TAG_READ_USER}
{\qr TAG_READ_USER{\bkmkstart AAAAAAACSB}
{\bkmkend AAAAAAACSB}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
perform custom read on user bank \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v TAG_WRITE_KILL_PWD\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:TAG_WRITE_KILL_PWD}
{\qr TAG_WRITE_KILL_PWD{\bkmkstart AAAAAAACSC}
{\bkmkend AAAAAAACSC}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
perform custom write on kill password \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v TAG_WRITE_ACC_PWD\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:TAG_WRITE_ACC_PWD}
{\qr TAG_WRITE_ACC_PWD{\bkmkstart AAAAAAACSD}
{\bkmkend AAAAAAACSD}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
perform custom write on access password \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v TAG_WRITE_PC\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:TAG_WRITE_PC}
{\qr TAG_WRITE_PC{\bkmkstart AAAAAAACSE}
{\bkmkend AAAAAAACSE}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
perform custom write on pc \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v TAG_WRITE_EPC\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:TAG_WRITE_EPC}
{\qr TAG_WRITE_EPC{\bkmkstart AAAAAAACSF}
{\bkmkend AAAAAAACSF}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
perform custom write on epc \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v TAG_WRITE_USER\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:TAG_WRITE_USER}
{\qr TAG_WRITE_USER{\bkmkstart AAAAAAACSG}
{\bkmkend AAAAAAACSG}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
perform custom write on user bank \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v TAG_INVENTORY\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:TAG_INVENTORY}
{\qr TAG_INVENTORY{\bkmkstart AAAAAAACSH}
{\bkmkend AAAAAAACSH}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
perform inventory on any tags \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v TAG_RANGING\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:TAG_RANGING}
{\qr TAG_RANGING{\bkmkstart AAAAAAACSI}
{\bkmkend AAAAAAACSI}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
perform custom ranging on any tags \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v TAG_PRERANGING\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:TAG_PRERANGING}
{\qr TAG_PRERANGING{\bkmkstart AAAAAAACSJ}
{\bkmkend AAAAAAACSJ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
perform custom ranging on any tags \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v TAG_EXERANGING\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:TAG_EXERANGING}
{\qr TAG_EXERANGING{\bkmkstart AAAAAAACSK}
{\bkmkend AAAAAAACSK}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
perform custom ranging on any tags \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v TAG_SEARCHING\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:TAG_SEARCHING}
{\qr TAG_SEARCHING{\bkmkstart AAAAAAACSL}
{\bkmkend AAAAAAACSL}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
perform custom search specific tags \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v TAG_SELECTED\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:TAG_SELECTED}
{\qr TAG_SELECTED{\bkmkstart AAAAAAACSM}
{\bkmkend AAAAAAACSM}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Select a tag for operation \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v TAG_READ_PROTECT\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:TAG_READ_PROTECT}
{\qr TAG_READ_PROTECT{\bkmkstart AAAAAAACSN}
{\bkmkend AAAAAAACSN}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
perform read protect custom command on specific tags \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v TAG_RESET_READ_PROTECT\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:TAG_RESET_READ_PROTECT}
{\qr TAG_RESET_READ_PROTECT{\bkmkstart AAAAAAACSO}
{\bkmkend AAAAAAACSO}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
perform reset read protect custom search on specific tags \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v EAS_CONFIG\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:EAS_CONFIG}
{\qr EAS_CONFIG{\bkmkstart AAAAAAACSP}
{\bkmkend AAAAAAACSP}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
configure EAS \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v EAS_ALARM\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:EAS_ALARM}
{\qr EAS_ALARM{\bkmkstart AAAAAAACSQ}
{\bkmkend AAAAAAACSQ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EAS Alarm \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CL_SET_PASSWORD\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CL_SET_PASSWORD}
{\qr CL_SET_PASSWORD{\bkmkstart AAAAAAACSR}
{\bkmkend AAAAAAACSR}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set password \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CL_SET_LOG_MODE\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CL_SET_LOG_MODE}
{\qr CL_SET_LOG_MODE{\bkmkstart AAAAAAACSS}
{\bkmkend AAAAAAACSS}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set log mode \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CL_SET_LOG_LIMITS\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CL_SET_LOG_LIMITS}
{\qr CL_SET_LOG_LIMITS{\bkmkstart AAAAAAACST}
{\bkmkend AAAAAAACST}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set log limits \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CL_GET_MEASUREMENT_SETUP\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CL_GET_MEASUREMENT_SETUP}
{\qr CL_GET_MEASUREMENT_SETUP{\bkmkstart AAAAAAACSU}
{\bkmkend AAAAAAACSU}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get measurement setup \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CL_SET_SFE_PARA\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CL_SET_SFE_PARA}
{\qr CL_SET_SFE_PARA{\bkmkstart AAAAAAACSV}
{\bkmkend AAAAAAACSV}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set DFE parameter \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CL_SET_CAL_DATA\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CL_SET_CAL_DATA}
{\qr CL_SET_CAL_DATA{\bkmkstart AAAAAAACSW}
{\bkmkend AAAAAAACSW}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set cal data \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CL_END_LOG\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CL_END_LOG}
{\qr CL_END_LOG{\bkmkstart AAAAAAACSX}
{\bkmkend AAAAAAACSX}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
End log \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CL_START_LOG\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CL_START_LOG}
{\qr CL_START_LOG{\bkmkstart AAAAAAACSY}
{\bkmkend AAAAAAACSY}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Start log \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CL_GET_LOG_STATE\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CL_GET_LOG_STATE}
{\qr CL_GET_LOG_STATE{\bkmkstart AAAAAAACSZ}
{\bkmkend AAAAAAACSZ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
get log state \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CL_GET_CAL_DATA\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CL_GET_CAL_DATA}
{\qr CL_GET_CAL_DATA{\bkmkstart AAAAAAACTA}
{\bkmkend AAAAAAACTA}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get cal data \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CL_GET_BAT_LV\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CL_GET_BAT_LV}
{\qr CL_GET_BAT_LV{\bkmkstart AAAAAAACTB}
{\bkmkend AAAAAAACTB}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get battery level \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CL_SET_SHELF_LIFE\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CL_SET_SHELF_LIFE}
{\qr CL_SET_SHELF_LIFE{\bkmkstart AAAAAAACTC}
{\bkmkend AAAAAAACTC}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set shelf life \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CL_INIT\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CL_INIT}
{\qr CL_INIT{\bkmkstart AAAAAAACTD}
{\bkmkend AAAAAAACTD}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Init \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CL_GET_SENSOR_VALUE\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CL_GET_SENSOR_VALUE}
{\qr CL_GET_SENSOR_VALUE{\bkmkstart AAAAAAACTE}
{\bkmkend AAAAAAACTE}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get sensor value \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CL_OPEN_AREA\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CL_OPEN_AREA}
{\qr CL_OPEN_AREA{\bkmkstart AAAAAAACTF}
{\bkmkend AAAAAAACTF}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Open area \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CL_ACCESS_FIFO\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CL_ACCESS_FIFO}
{\qr CL_ACCESS_FIFO{\bkmkstart AAAAAAACTG}
{\bkmkend AAAAAAACTG}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set access FIFO \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v G2_READ_PROTECT\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:G2_READ_PROTECT}
{\qr G2_READ_PROTECT{\bkmkstart AAAAAAACTH}
{\bkmkend AAAAAAACTH}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
G2X ReadProtect \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v G2_RESET_READ_PROTECT\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:G2_RESET_READ_PROTECT}
{\qr G2_RESET_READ_PROTECT{\bkmkstart AAAAAAACTI}
{\bkmkend AAAAAAACTI}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
G2X Reset ReadProtect \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v G2_CHANGE_EAS\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:G2_CHANGE_EAS}
{\qr G2_CHANGE_EAS{\bkmkstart AAAAAAACTJ}
{\bkmkend AAAAAAACTJ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
G2X ChangeEAS \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v G2_EAS_ALARM\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:G2_EAS_ALARM}
{\qr G2_EAS_ALARM{\bkmkstart AAAAAAACTK}
{\bkmkend AAAAAAACTK}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
G2X EAS Alarm \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v G2_CHANGE_CONFIG\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:G2_CHANGE_CONFIG}
{\qr G2_CHANGE_CONFIG{\bkmkstart AAAAAAACTL}
{\bkmkend AAAAAAACTL}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
G2iL Change Config \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v QT_COMMAND\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:QT_COMMAND}
{\qr QT_COMMAND{\bkmkstart AAAAAAACTM}
{\bkmkend AAAAAAACTM}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
QT Command \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v EM4324_GetUid\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:EM4324_GetUid}
{\qr EM4324_GetUid{\bkmkstart AAAAAAACTN}
{\bkmkend AAAAAAACTN}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Custom EM Get Sensor Data \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v EM4325_GetUid\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:EM4325_GetUid}
{\qr EM4325_GetUid{\bkmkstart AAAAAAACTO}
{\bkmkend AAAAAAACTO}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Custom EM Get Sensor Data \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v EM_GetSensorData\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:EM_GetSensorData}
{\qr EM_GetSensorData{\bkmkstart AAAAAAACTP}
{\bkmkend AAAAAAACTP}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Custom EM Get Sensor Data \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v EM_ResetAlarms\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:EM_ResetAlarms}
{\qr EM_ResetAlarms{\bkmkstart AAAAAAACTQ}
{\bkmkend AAAAAAACTQ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Custom EM Get Sensor Data \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v EM_SPI\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:EM_SPI}
{\qr EM_SPI{\bkmkstart AAAAAAACTR}
{\bkmkend AAAAAAACTR}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SPI Command \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v EM_SPIRequestStatus\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:EM_SPIRequestStatus}
{\qr EM_SPIRequestStatus{\bkmkstart AAAAAAACTS}
{\bkmkend AAAAAAACTS}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SPI Command \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v EM_SPIBoot\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:EM_SPIBoot}
{\qr EM_SPIBoot{\bkmkstart AAAAAAACTT}
{\bkmkend AAAAAAACTT}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EM4325 Command \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v EM_SPITransponder\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:EM_SPITransponder}
{\qr EM_SPITransponder{\bkmkstart AAAAAAACTU}
{\bkmkend AAAAAAACTU}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EM4325 Command \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v EM_SPIGetSensorData\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:EM_SPIGetSensorData}
{\qr EM_SPIGetSensorData{\bkmkstart AAAAAAACTV}
{\bkmkend AAAAAAACTV}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EM4325 Command \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v EM_SPISetFlags\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:EM_SPISetFlags}
{\qr EM_SPISetFlags{\bkmkstart AAAAAAACTW}
{\bkmkend AAAAAAACTW}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EM4325 Command \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v EM_SPIReadWord\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:EM_SPIReadWord}
{\qr EM_SPIReadWord{\bkmkstart AAAAAAACTX}
{\bkmkend AAAAAAACTX}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EM4325 Command \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v EM_SPIWriteWord\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:EM_SPIWriteWord}
{\qr EM_SPIWriteWord{\bkmkstart AAAAAAACTY}
{\bkmkend AAAAAAACTY}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EM4325 Command \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v EM_SPIReadPage\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:EM_SPIReadPage}
{\qr EM_SPIReadPage{\bkmkstart AAAAAAACTZ}
{\bkmkend AAAAAAACTZ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EM4325 Command \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v EM_SPIWritePage\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:EM_SPIWritePage}
{\qr EM_SPIWritePage{\bkmkstart AAAAAAACUA}
{\bkmkend AAAAAAACUA}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EM4325 Command \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v EM_SPISetClock\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:EM_SPISetClock}
{\qr EM_SPISetClock{\bkmkstart AAAAAAACUB}
{\bkmkend AAAAAAACUB}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EM4325 Command \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v EM_SPIAlarm\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:EM_SPIAlarm}
{\qr EM_SPIAlarm{\bkmkstart AAAAAAACUC}
{\bkmkend AAAAAAACUC}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EM4325 Command \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v EM_SPIReadRegisterFileWord\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:EM_SPIReadRegisterFileWord}
{\qr EM_SPIReadRegisterFileWord{\bkmkstart AAAAAAACUD}
{\bkmkend AAAAAAACUD}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EM4325 Command \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v EM_SPIWriteRegisterFileWord\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:EM_SPIWriteRegisterFileWord}
{\qr EM_SPIWriteRegisterFileWord{\bkmkstart AAAAAAACUE}
{\bkmkend AAAAAAACUE}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EM4325 Command \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v EM_SPIReqRN\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:EM_SPIReqRN}
{\qr EM_SPIReqRN{\bkmkstart AAAAAAACUF}
{\bkmkend AAAAAAACUF}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EM4325 Command \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v TAG_GENERALSELECTED\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:TAG_GENERALSELECTED}
{\qr TAG_GENERALSELECTED{\bkmkstart AAAAAAACUG}
{\bkmkend AAAAAAACUG}
\cell }{\cell }{\row }
{\xe \v TAG_PREFILTER\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:TAG_PREFILTER}
{\qr TAG_PREFILTER{\bkmkstart AAAAAAACUH}
{\bkmkend AAAAAAACUH}
\cell }{\cell }{\row }
{\xe \v UNKNOWN\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:UNKNOWN}
{\qr UNKNOWN{\bkmkstart AAAAAAACRS}
{\bkmkend AAAAAAACRS}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Unknow operation \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v TAG_BLOCK_PERMALOCK\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:TAG_BLOCK_PERMALOCK}
{\qr TAG_BLOCK_PERMALOCK{\bkmkstart AAAAAAACRT}
{\bkmkend AAAAAAACRT}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
perform 18K6C BlockPermalock to target tag \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v TAG_LOCK\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:TAG_LOCK}
{\qr TAG_LOCK{\bkmkstart AAAAAAACRU}
{\bkmkend AAAAAAACRU}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
perform 18K6C tag lock to target tag \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v TAG_KILL\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:TAG_KILL}
{\qr TAG_KILL{\bkmkstart AAAAAAACRV}
{\bkmkend AAAAAAACRV}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
perform 18K6C tag kill to target tag \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v TAG_READ_KILL_PWD\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:TAG_READ_KILL_PWD}
{\qr TAG_READ_KILL_PWD{\bkmkstart AAAAAAACRW}
{\bkmkend AAAAAAACRW}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
perform custom read on kill password \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v TAG_READ_ACC_PWD\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:TAG_READ_ACC_PWD}
{\qr TAG_READ_ACC_PWD{\bkmkstart AAAAAAACRX}
{\bkmkend AAAAAAACRX}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
perform custom read on access password \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v TAG_READ_PC\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:TAG_READ_PC}
{\qr TAG_READ_PC{\bkmkstart AAAAAAACRY}
{\bkmkend AAAAAAACRY}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
perform custom read on pc \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v TAG_READ_EPC\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:TAG_READ_EPC}
{\qr TAG_READ_EPC{\bkmkstart AAAAAAACRZ}
{\bkmkend AAAAAAACRZ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
perform custom read on epc \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v TAG_READ_TID\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:TAG_READ_TID}
{\qr TAG_READ_TID{\bkmkstart AAAAAAACSA}
{\bkmkend AAAAAAACSA}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
perform custom read on tid \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v TAG_READ_USER\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:TAG_READ_USER}
{\qr TAG_READ_USER{\bkmkstart AAAAAAACSB}
{\bkmkend AAAAAAACSB}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
perform custom read on user bank \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v TAG_WRITE_KILL_PWD\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:TAG_WRITE_KILL_PWD}
{\qr TAG_WRITE_KILL_PWD{\bkmkstart AAAAAAACSC}
{\bkmkend AAAAAAACSC}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
perform custom write on kill password \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v TAG_WRITE_ACC_PWD\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:TAG_WRITE_ACC_PWD}
{\qr TAG_WRITE_ACC_PWD{\bkmkstart AAAAAAACSD}
{\bkmkend AAAAAAACSD}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
perform custom write on access password \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v TAG_WRITE_PC\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:TAG_WRITE_PC}
{\qr TAG_WRITE_PC{\bkmkstart AAAAAAACSE}
{\bkmkend AAAAAAACSE}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
perform custom write on pc \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v TAG_WRITE_EPC\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:TAG_WRITE_EPC}
{\qr TAG_WRITE_EPC{\bkmkstart AAAAAAACSF}
{\bkmkend AAAAAAACSF}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
perform custom write on epc \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v TAG_WRITE_USER\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:TAG_WRITE_USER}
{\qr TAG_WRITE_USER{\bkmkstart AAAAAAACSG}
{\bkmkend AAAAAAACSG}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
perform custom write on user bank \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v TAG_INVENTORY\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:TAG_INVENTORY}
{\qr TAG_INVENTORY{\bkmkstart AAAAAAACSH}
{\bkmkend AAAAAAACSH}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
perform inventory on any tags \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v TAG_RANGING\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:TAG_RANGING}
{\qr TAG_RANGING{\bkmkstart AAAAAAACSI}
{\bkmkend AAAAAAACSI}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
perform custom ranging on any tags \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v TAG_SEARCHING\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:TAG_SEARCHING}
{\qr TAG_SEARCHING{\bkmkstart AAAAAAACSL}
{\bkmkend AAAAAAACSL}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
perform custom search specific tags \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v TAG_SELECTED\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:TAG_SELECTED}
{\qr TAG_SELECTED{\bkmkstart AAAAAAACSM}
{\bkmkend AAAAAAACSM}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Select a tag for operation \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v TAG_READ_PROTECT\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:TAG_READ_PROTECT}
{\qr TAG_READ_PROTECT{\bkmkstart AAAAAAACSN}
{\bkmkend AAAAAAACSN}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
perform read protect custom command on specific tags \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v TAG_RESET_READ_PROTECT\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:TAG_RESET_READ_PROTECT}
{\qr TAG_RESET_READ_PROTECT{\bkmkstart AAAAAAACSO}
{\bkmkend AAAAAAACSO}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
perform reset read protect custom search on specific tags \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v EAS_CONFIG\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:EAS_CONFIG}
{\qr EAS_CONFIG{\bkmkstart AAAAAAACSP}
{\bkmkend AAAAAAACSP}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
configure EAS \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v EAS_ALARM\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:EAS_ALARM}
{\qr EAS_ALARM{\bkmkstart AAAAAAACSQ}
{\bkmkend AAAAAAACSQ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EAS Alarm \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CL_SET_PASSWORD\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CL_SET_PASSWORD}
{\qr CL_SET_PASSWORD{\bkmkstart AAAAAAACSR}
{\bkmkend AAAAAAACSR}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set password \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CL_SET_LOG_MODE\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CL_SET_LOG_MODE}
{\qr CL_SET_LOG_MODE{\bkmkstart AAAAAAACSS}
{\bkmkend AAAAAAACSS}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set log mode \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CL_SET_LOG_LIMITS\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CL_SET_LOG_LIMITS}
{\qr CL_SET_LOG_LIMITS{\bkmkstart AAAAAAACST}
{\bkmkend AAAAAAACST}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set log limits \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CL_GET_MEASUREMENT_SETUP\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CL_GET_MEASUREMENT_SETUP}
{\qr CL_GET_MEASUREMENT_SETUP{\bkmkstart AAAAAAACSU}
{\bkmkend AAAAAAACSU}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get measurement setup \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CL_SET_SFE_PARA\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CL_SET_SFE_PARA}
{\qr CL_SET_SFE_PARA{\bkmkstart AAAAAAACSV}
{\bkmkend AAAAAAACSV}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set DFE parameter \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CL_SET_CAL_DATA\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CL_SET_CAL_DATA}
{\qr CL_SET_CAL_DATA{\bkmkstart AAAAAAACSW}
{\bkmkend AAAAAAACSW}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set cal data \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CL_END_LOG\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CL_END_LOG}
{\qr CL_END_LOG{\bkmkstart AAAAAAACSX}
{\bkmkend AAAAAAACSX}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
End log \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CL_START_LOG\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CL_START_LOG}
{\qr CL_START_LOG{\bkmkstart AAAAAAACSY}
{\bkmkend AAAAAAACSY}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Start log \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CL_GET_LOG_STATE\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CL_GET_LOG_STATE}
{\qr CL_GET_LOG_STATE{\bkmkstart AAAAAAACSZ}
{\bkmkend AAAAAAACSZ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
get log state \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CL_GET_CAL_DATA\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CL_GET_CAL_DATA}
{\qr CL_GET_CAL_DATA{\bkmkstart AAAAAAACTA}
{\bkmkend AAAAAAACTA}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get cal data \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CL_GET_BAT_LV\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CL_GET_BAT_LV}
{\qr CL_GET_BAT_LV{\bkmkstart AAAAAAACTB}
{\bkmkend AAAAAAACTB}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get battery level \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CL_SET_SHELF_LIFE\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CL_SET_SHELF_LIFE}
{\qr CL_SET_SHELF_LIFE{\bkmkstart AAAAAAACTC}
{\bkmkend AAAAAAACTC}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set shelf life \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CL_INIT\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CL_INIT}
{\qr CL_INIT{\bkmkstart AAAAAAACTD}
{\bkmkend AAAAAAACTD}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Init \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CL_GET_SENSOR_VALUE\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CL_GET_SENSOR_VALUE}
{\qr CL_GET_SENSOR_VALUE{\bkmkstart AAAAAAACTE}
{\bkmkend AAAAAAACTE}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get sensor value \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CL_OPEN_AREA\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CL_OPEN_AREA}
{\qr CL_OPEN_AREA{\bkmkstart AAAAAAACTF}
{\bkmkend AAAAAAACTF}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Open area \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CL_ACCESS_FIFO\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CL_ACCESS_FIFO}
{\qr CL_ACCESS_FIFO{\bkmkstart AAAAAAACTG}
{\bkmkend AAAAAAACTG}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set access FIFO \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v G2_READ_PROTECT\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:G2_READ_PROTECT}
{\qr G2_READ_PROTECT{\bkmkstart AAAAAAACTH}
{\bkmkend AAAAAAACTH}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
G2X ReadProtect \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v G2_RESET_READ_PROTECT\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:G2_RESET_READ_PROTECT}
{\qr G2_RESET_READ_PROTECT{\bkmkstart AAAAAAACTI}
{\bkmkend AAAAAAACTI}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
G2X Reset ReadProtect \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v G2_CHANGE_EAS\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:G2_CHANGE_EAS}
{\qr G2_CHANGE_EAS{\bkmkstart AAAAAAACTJ}
{\bkmkend AAAAAAACTJ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
G2X ChangeEAS \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v G2_EAS_ALARM\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:G2_EAS_ALARM}
{\qr G2_EAS_ALARM{\bkmkstart AAAAAAACTK}
{\bkmkend AAAAAAACTK}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
G2X EAS Alarm \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v G2_CHANGE_CONFIG\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:G2_CHANGE_CONFIG}
{\qr G2_CHANGE_CONFIG{\bkmkstart AAAAAAACTL}
{\bkmkend AAAAAAACTL}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
G2iL Change Config \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v QT_COMMAND\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:QT_COMMAND}
{\qr QT_COMMAND{\bkmkstart AAAAAAACTM}
{\bkmkend AAAAAAACTM}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
QT Command \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v EM4324_GetUid\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:EM4324_GetUid}
{\qr EM4324_GetUid{\bkmkstart AAAAAAACTN}
{\bkmkend AAAAAAACTN}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Custom EM Get Sensor Data \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v EM4325_GetUid\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:EM4325_GetUid}
{\qr EM4325_GetUid{\bkmkstart AAAAAAACTO}
{\bkmkend AAAAAAACTO}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Custom EM Get Sensor Data \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v EM_GetSensorData\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:EM_GetSensorData}
{\qr EM_GetSensorData{\bkmkstart AAAAAAACTP}
{\bkmkend AAAAAAACTP}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Custom EM Get Sensor Data \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v EM_ResetAlarms\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:EM_ResetAlarms}
{\qr EM_ResetAlarms{\bkmkstart AAAAAAACTQ}
{\bkmkend AAAAAAACTQ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Custom EM Get Sensor Data \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v EM_SPI\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:EM_SPI}
{\qr EM_SPI{\bkmkstart AAAAAAACTR}
{\bkmkend AAAAAAACTR}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SPI Command \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v EM_SPIRequestStatus\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:EM_SPIRequestStatus}
{\qr EM_SPIRequestStatus{\bkmkstart AAAAAAACTS}
{\bkmkend AAAAAAACTS}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SPI Command \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v EM_SPIBoot\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:EM_SPIBoot}
{\qr EM_SPIBoot{\bkmkstart AAAAAAACTT}
{\bkmkend AAAAAAACTT}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EM4325 Command \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v EM_SPITransponder\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:EM_SPITransponder}
{\qr EM_SPITransponder{\bkmkstart AAAAAAACTU}
{\bkmkend AAAAAAACTU}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EM4325 Command \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v EM_SPIGetSensorData\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:EM_SPIGetSensorData}
{\qr EM_SPIGetSensorData{\bkmkstart AAAAAAACTV}
{\bkmkend AAAAAAACTV}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EM4325 Command \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v EM_SPISetFlags\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:EM_SPISetFlags}
{\qr EM_SPISetFlags{\bkmkstart AAAAAAACTW}
{\bkmkend AAAAAAACTW}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EM4325 Command \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v EM_SPIReadWord\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:EM_SPIReadWord}
{\qr EM_SPIReadWord{\bkmkstart AAAAAAACTX}
{\bkmkend AAAAAAACTX}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EM4325 Command \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v EM_SPIWriteWord\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:EM_SPIWriteWord}
{\qr EM_SPIWriteWord{\bkmkstart AAAAAAACTY}
{\bkmkend AAAAAAACTY}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EM4325 Command \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v EM_SPIReadPage\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:EM_SPIReadPage}
{\qr EM_SPIReadPage{\bkmkstart AAAAAAACTZ}
{\bkmkend AAAAAAACTZ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EM4325 Command \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v EM_SPIWritePage\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:EM_SPIWritePage}
{\qr EM_SPIWritePage{\bkmkstart AAAAAAACUA}
{\bkmkend AAAAAAACUA}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EM4325 Command \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v EM_SPISetClock\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:EM_SPISetClock}
{\qr EM_SPISetClock{\bkmkstart AAAAAAACUB}
{\bkmkend AAAAAAACUB}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EM4325 Command \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v EM_SPIAlarm\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:EM_SPIAlarm}
{\qr EM_SPIAlarm{\bkmkstart AAAAAAACUC}
{\bkmkend AAAAAAACUC}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EM4325 Command \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v EM_SPIReadRegisterFileWord\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:EM_SPIReadRegisterFileWord}
{\qr EM_SPIReadRegisterFileWord{\bkmkstart AAAAAAACUD}
{\bkmkend AAAAAAACUD}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EM4325 Command \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v EM_SPIWriteRegisterFileWord\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:EM_SPIWriteRegisterFileWord}
{\qr EM_SPIWriteRegisterFileWord{\bkmkstart AAAAAAACUE}
{\bkmkend AAAAAAACUE}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EM4325 Command \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v EM_SPIReqRN\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:EM_SPIReqRN}
{\qr EM_SPIReqRN{\bkmkstart AAAAAAACUF}
{\bkmkend AAAAAAACUF}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EM4325 Command \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v TAG_GENERALSELECTED\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:TAG_GENERALSELECTED}
{\qr TAG_GENERALSELECTED{\bkmkstart AAAAAAACUG}
{\bkmkend AAAAAAACUG}
\cell }{\cell }{\row }
}
}
{\xe \v Operation\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Operation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b CSLibrary.Constants.Operation} : int{\f2 [strong]}}}
\par
{\bkmkstart AAAAAAACRR}
{\bkmkend AAAAAAACRR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RFID Operation Mode }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v UNKNOWN\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:UNKNOWN}
{\qr UNKNOWN{\bkmkstart AAAAAAACRS}
{\bkmkend AAAAAAACRS}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Unknow operation \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v TAG_BLOCK_PERMALOCK\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:TAG_BLOCK_PERMALOCK}
{\qr TAG_BLOCK_PERMALOCK{\bkmkstart AAAAAAACRT}
{\bkmkend AAAAAAACRT}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
perform 18K6C BlockPermalock to target tag \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v TAG_LOCK\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:TAG_LOCK}
{\qr TAG_LOCK{\bkmkstart AAAAAAACRU}
{\bkmkend AAAAAAACRU}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
perform 18K6C tag lock to target tag \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v TAG_KILL\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:TAG_KILL}
{\qr TAG_KILL{\bkmkstart AAAAAAACRV}
{\bkmkend AAAAAAACRV}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
perform 18K6C tag kill to target tag \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v TAG_READ_KILL_PWD\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:TAG_READ_KILL_PWD}
{\qr TAG_READ_KILL_PWD{\bkmkstart AAAAAAACRW}
{\bkmkend AAAAAAACRW}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
perform custom read on kill password \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v TAG_READ_ACC_PWD\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:TAG_READ_ACC_PWD}
{\qr TAG_READ_ACC_PWD{\bkmkstart AAAAAAACRX}
{\bkmkend AAAAAAACRX}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
perform custom read on access password \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v TAG_READ_PC\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:TAG_READ_PC}
{\qr TAG_READ_PC{\bkmkstart AAAAAAACRY}
{\bkmkend AAAAAAACRY}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
perform custom read on pc \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v TAG_READ_EPC\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:TAG_READ_EPC}
{\qr TAG_READ_EPC{\bkmkstart AAAAAAACRZ}
{\bkmkend AAAAAAACRZ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
perform custom read on epc \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v TAG_READ_TID\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:TAG_READ_TID}
{\qr TAG_READ_TID{\bkmkstart AAAAAAACSA}
{\bkmkend AAAAAAACSA}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
perform custom read on tid \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v TAG_READ_USER\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:TAG_READ_USER}
{\qr TAG_READ_USER{\bkmkstart AAAAAAACSB}
{\bkmkend AAAAAAACSB}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
perform custom read on user bank \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v TAG_WRITE_KILL_PWD\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:TAG_WRITE_KILL_PWD}
{\qr TAG_WRITE_KILL_PWD{\bkmkstart AAAAAAACSC}
{\bkmkend AAAAAAACSC}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
perform custom write on kill password \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v TAG_WRITE_ACC_PWD\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:TAG_WRITE_ACC_PWD}
{\qr TAG_WRITE_ACC_PWD{\bkmkstart AAAAAAACSD}
{\bkmkend AAAAAAACSD}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
perform custom write on access password \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v TAG_WRITE_PC\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:TAG_WRITE_PC}
{\qr TAG_WRITE_PC{\bkmkstart AAAAAAACSE}
{\bkmkend AAAAAAACSE}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
perform custom write on pc \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v TAG_WRITE_EPC\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:TAG_WRITE_EPC}
{\qr TAG_WRITE_EPC{\bkmkstart AAAAAAACSF}
{\bkmkend AAAAAAACSF}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
perform custom write on epc \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v TAG_WRITE_USER\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:TAG_WRITE_USER}
{\qr TAG_WRITE_USER{\bkmkstart AAAAAAACSG}
{\bkmkend AAAAAAACSG}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
perform custom write on user bank \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v TAG_INVENTORY\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:TAG_INVENTORY}
{\qr TAG_INVENTORY{\bkmkstart AAAAAAACSH}
{\bkmkend AAAAAAACSH}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
perform inventory on any tags \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v TAG_RANGING\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:TAG_RANGING}
{\qr TAG_RANGING{\bkmkstart AAAAAAACSI}
{\bkmkend AAAAAAACSI}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
perform custom ranging on any tags \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v TAG_PRERANGING\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:TAG_PRERANGING}
{\qr TAG_PRERANGING{\bkmkstart AAAAAAACSJ}
{\bkmkend AAAAAAACSJ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
perform custom ranging on any tags \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v TAG_EXERANGING\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:TAG_EXERANGING}
{\qr TAG_EXERANGING{\bkmkstart AAAAAAACSK}
{\bkmkend AAAAAAACSK}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
perform custom ranging on any tags \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v TAG_SEARCHING\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:TAG_SEARCHING}
{\qr TAG_SEARCHING{\bkmkstart AAAAAAACSL}
{\bkmkend AAAAAAACSL}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
perform custom search specific tags \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v TAG_SELECTED\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:TAG_SELECTED}
{\qr TAG_SELECTED{\bkmkstart AAAAAAACSM}
{\bkmkend AAAAAAACSM}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Select a tag for operation \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v TAG_READ_PROTECT\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:TAG_READ_PROTECT}
{\qr TAG_READ_PROTECT{\bkmkstart AAAAAAACSN}
{\bkmkend AAAAAAACSN}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
perform read protect custom command on specific tags \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v TAG_RESET_READ_PROTECT\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:TAG_RESET_READ_PROTECT}
{\qr TAG_RESET_READ_PROTECT{\bkmkstart AAAAAAACSO}
{\bkmkend AAAAAAACSO}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
perform reset read protect custom search on specific tags \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v EAS_CONFIG\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:EAS_CONFIG}
{\qr EAS_CONFIG{\bkmkstart AAAAAAACSP}
{\bkmkend AAAAAAACSP}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
configure EAS \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v EAS_ALARM\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:EAS_ALARM}
{\qr EAS_ALARM{\bkmkstart AAAAAAACSQ}
{\bkmkend AAAAAAACSQ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EAS Alarm \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CL_SET_PASSWORD\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CL_SET_PASSWORD}
{\qr CL_SET_PASSWORD{\bkmkstart AAAAAAACSR}
{\bkmkend AAAAAAACSR}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set password \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CL_SET_LOG_MODE\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CL_SET_LOG_MODE}
{\qr CL_SET_LOG_MODE{\bkmkstart AAAAAAACSS}
{\bkmkend AAAAAAACSS}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set log mode \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CL_SET_LOG_LIMITS\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CL_SET_LOG_LIMITS}
{\qr CL_SET_LOG_LIMITS{\bkmkstart AAAAAAACST}
{\bkmkend AAAAAAACST}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set log limits \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CL_GET_MEASUREMENT_SETUP\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CL_GET_MEASUREMENT_SETUP}
{\qr CL_GET_MEASUREMENT_SETUP{\bkmkstart AAAAAAACSU}
{\bkmkend AAAAAAACSU}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get measurement setup \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CL_SET_SFE_PARA\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CL_SET_SFE_PARA}
{\qr CL_SET_SFE_PARA{\bkmkstart AAAAAAACSV}
{\bkmkend AAAAAAACSV}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set DFE parameter \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CL_SET_CAL_DATA\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CL_SET_CAL_DATA}
{\qr CL_SET_CAL_DATA{\bkmkstart AAAAAAACSW}
{\bkmkend AAAAAAACSW}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set cal data \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CL_END_LOG\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CL_END_LOG}
{\qr CL_END_LOG{\bkmkstart AAAAAAACSX}
{\bkmkend AAAAAAACSX}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
End log \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CL_START_LOG\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CL_START_LOG}
{\qr CL_START_LOG{\bkmkstart AAAAAAACSY}
{\bkmkend AAAAAAACSY}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Start log \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CL_GET_LOG_STATE\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CL_GET_LOG_STATE}
{\qr CL_GET_LOG_STATE{\bkmkstart AAAAAAACSZ}
{\bkmkend AAAAAAACSZ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
get log state \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CL_GET_CAL_DATA\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CL_GET_CAL_DATA}
{\qr CL_GET_CAL_DATA{\bkmkstart AAAAAAACTA}
{\bkmkend AAAAAAACTA}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get cal data \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CL_GET_BAT_LV\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CL_GET_BAT_LV}
{\qr CL_GET_BAT_LV{\bkmkstart AAAAAAACTB}
{\bkmkend AAAAAAACTB}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get battery level \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CL_SET_SHELF_LIFE\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CL_SET_SHELF_LIFE}
{\qr CL_SET_SHELF_LIFE{\bkmkstart AAAAAAACTC}
{\bkmkend AAAAAAACTC}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set shelf life \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CL_INIT\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CL_INIT}
{\qr CL_INIT{\bkmkstart AAAAAAACTD}
{\bkmkend AAAAAAACTD}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Init \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CL_GET_SENSOR_VALUE\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CL_GET_SENSOR_VALUE}
{\qr CL_GET_SENSOR_VALUE{\bkmkstart AAAAAAACTE}
{\bkmkend AAAAAAACTE}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get sensor value \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CL_OPEN_AREA\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CL_OPEN_AREA}
{\qr CL_OPEN_AREA{\bkmkstart AAAAAAACTF}
{\bkmkend AAAAAAACTF}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Open area \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CL_ACCESS_FIFO\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CL_ACCESS_FIFO}
{\qr CL_ACCESS_FIFO{\bkmkstart AAAAAAACTG}
{\bkmkend AAAAAAACTG}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set access FIFO \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v G2_READ_PROTECT\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:G2_READ_PROTECT}
{\qr G2_READ_PROTECT{\bkmkstart AAAAAAACTH}
{\bkmkend AAAAAAACTH}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
G2X ReadProtect \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v G2_RESET_READ_PROTECT\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:G2_RESET_READ_PROTECT}
{\qr G2_RESET_READ_PROTECT{\bkmkstart AAAAAAACTI}
{\bkmkend AAAAAAACTI}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
G2X Reset ReadProtect \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v G2_CHANGE_EAS\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:G2_CHANGE_EAS}
{\qr G2_CHANGE_EAS{\bkmkstart AAAAAAACTJ}
{\bkmkend AAAAAAACTJ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
G2X ChangeEAS \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v G2_EAS_ALARM\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:G2_EAS_ALARM}
{\qr G2_EAS_ALARM{\bkmkstart AAAAAAACTK}
{\bkmkend AAAAAAACTK}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
G2X EAS Alarm \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v G2_CHANGE_CONFIG\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:G2_CHANGE_CONFIG}
{\qr G2_CHANGE_CONFIG{\bkmkstart AAAAAAACTL}
{\bkmkend AAAAAAACTL}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
G2iL Change Config \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v QT_COMMAND\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:QT_COMMAND}
{\qr QT_COMMAND{\bkmkstart AAAAAAACTM}
{\bkmkend AAAAAAACTM}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
QT Command \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v EM4324_GetUid\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:EM4324_GetUid}
{\qr EM4324_GetUid{\bkmkstart AAAAAAACTN}
{\bkmkend AAAAAAACTN}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Custom EM Get Sensor Data \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v EM4325_GetUid\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:EM4325_GetUid}
{\qr EM4325_GetUid{\bkmkstart AAAAAAACTO}
{\bkmkend AAAAAAACTO}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Custom EM Get Sensor Data \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v EM_GetSensorData\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:EM_GetSensorData}
{\qr EM_GetSensorData{\bkmkstart AAAAAAACTP}
{\bkmkend AAAAAAACTP}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Custom EM Get Sensor Data \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v EM_ResetAlarms\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:EM_ResetAlarms}
{\qr EM_ResetAlarms{\bkmkstart AAAAAAACTQ}
{\bkmkend AAAAAAACTQ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Custom EM Get Sensor Data \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v EM_SPI\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:EM_SPI}
{\qr EM_SPI{\bkmkstart AAAAAAACTR}
{\bkmkend AAAAAAACTR}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SPI Command \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v EM_SPIRequestStatus\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:EM_SPIRequestStatus}
{\qr EM_SPIRequestStatus{\bkmkstart AAAAAAACTS}
{\bkmkend AAAAAAACTS}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SPI Command \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v EM_SPIBoot\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:EM_SPIBoot}
{\qr EM_SPIBoot{\bkmkstart AAAAAAACTT}
{\bkmkend AAAAAAACTT}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EM4325 Command \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v EM_SPITransponder\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:EM_SPITransponder}
{\qr EM_SPITransponder{\bkmkstart AAAAAAACTU}
{\bkmkend AAAAAAACTU}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EM4325 Command \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v EM_SPIGetSensorData\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:EM_SPIGetSensorData}
{\qr EM_SPIGetSensorData{\bkmkstart AAAAAAACTV}
{\bkmkend AAAAAAACTV}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EM4325 Command \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v EM_SPISetFlags\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:EM_SPISetFlags}
{\qr EM_SPISetFlags{\bkmkstart AAAAAAACTW}
{\bkmkend AAAAAAACTW}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EM4325 Command \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v EM_SPIReadWord\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:EM_SPIReadWord}
{\qr EM_SPIReadWord{\bkmkstart AAAAAAACTX}
{\bkmkend AAAAAAACTX}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EM4325 Command \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v EM_SPIWriteWord\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:EM_SPIWriteWord}
{\qr EM_SPIWriteWord{\bkmkstart AAAAAAACTY}
{\bkmkend AAAAAAACTY}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EM4325 Command \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v EM_SPIReadPage\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:EM_SPIReadPage}
{\qr EM_SPIReadPage{\bkmkstart AAAAAAACTZ}
{\bkmkend AAAAAAACTZ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EM4325 Command \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v EM_SPIWritePage\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:EM_SPIWritePage}
{\qr EM_SPIWritePage{\bkmkstart AAAAAAACUA}
{\bkmkend AAAAAAACUA}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EM4325 Command \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v EM_SPISetClock\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:EM_SPISetClock}
{\qr EM_SPISetClock{\bkmkstart AAAAAAACUB}
{\bkmkend AAAAAAACUB}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EM4325 Command \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v EM_SPIAlarm\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:EM_SPIAlarm}
{\qr EM_SPIAlarm{\bkmkstart AAAAAAACUC}
{\bkmkend AAAAAAACUC}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EM4325 Command \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v EM_SPIReadRegisterFileWord\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:EM_SPIReadRegisterFileWord}
{\qr EM_SPIReadRegisterFileWord{\bkmkstart AAAAAAACUD}
{\bkmkend AAAAAAACUD}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EM4325 Command \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v EM_SPIWriteRegisterFileWord\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:EM_SPIWriteRegisterFileWord}
{\qr EM_SPIWriteRegisterFileWord{\bkmkstart AAAAAAACUE}
{\bkmkend AAAAAAACUE}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EM4325 Command \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v EM_SPIReqRN\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:EM_SPIReqRN}
{\qr EM_SPIReqRN{\bkmkstart AAAAAAACUF}
{\bkmkend AAAAAAACUF}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EM4325 Command \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v TAG_GENERALSELECTED\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:TAG_GENERALSELECTED}
{\qr TAG_GENERALSELECTED{\bkmkstart AAAAAAACUG}
{\bkmkend AAAAAAACUG}
\cell }{\cell }{\row }
{\xe \v TAG_PREFILTER\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:TAG_PREFILTER}
{\qr TAG_PREFILTER{\bkmkstart AAAAAAACUH}
{\bkmkend AAAAAAACUH}
\cell }{\cell }{\row }
{\xe \v UNKNOWN\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:UNKNOWN}
{\qr UNKNOWN{\bkmkstart AAAAAAACRS}
{\bkmkend AAAAAAACRS}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Unknow operation \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v TAG_BLOCK_PERMALOCK\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:TAG_BLOCK_PERMALOCK}
{\qr TAG_BLOCK_PERMALOCK{\bkmkstart AAAAAAACRT}
{\bkmkend AAAAAAACRT}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
perform 18K6C BlockPermalock to target tag \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v TAG_LOCK\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:TAG_LOCK}
{\qr TAG_LOCK{\bkmkstart AAAAAAACRU}
{\bkmkend AAAAAAACRU}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
perform 18K6C tag lock to target tag \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v TAG_KILL\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:TAG_KILL}
{\qr TAG_KILL{\bkmkstart AAAAAAACRV}
{\bkmkend AAAAAAACRV}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
perform 18K6C tag kill to target tag \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v TAG_READ_KILL_PWD\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:TAG_READ_KILL_PWD}
{\qr TAG_READ_KILL_PWD{\bkmkstart AAAAAAACRW}
{\bkmkend AAAAAAACRW}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
perform custom read on kill password \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v TAG_READ_ACC_PWD\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:TAG_READ_ACC_PWD}
{\qr TAG_READ_ACC_PWD{\bkmkstart AAAAAAACRX}
{\bkmkend AAAAAAACRX}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
perform custom read on access password \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v TAG_READ_PC\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:TAG_READ_PC}
{\qr TAG_READ_PC{\bkmkstart AAAAAAACRY}
{\bkmkend AAAAAAACRY}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
perform custom read on pc \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v TAG_READ_EPC\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:TAG_READ_EPC}
{\qr TAG_READ_EPC{\bkmkstart AAAAAAACRZ}
{\bkmkend AAAAAAACRZ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
perform custom read on epc \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v TAG_READ_TID\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:TAG_READ_TID}
{\qr TAG_READ_TID{\bkmkstart AAAAAAACSA}
{\bkmkend AAAAAAACSA}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
perform custom read on tid \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v TAG_READ_USER\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:TAG_READ_USER}
{\qr TAG_READ_USER{\bkmkstart AAAAAAACSB}
{\bkmkend AAAAAAACSB}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
perform custom read on user bank \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v TAG_WRITE_KILL_PWD\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:TAG_WRITE_KILL_PWD}
{\qr TAG_WRITE_KILL_PWD{\bkmkstart AAAAAAACSC}
{\bkmkend AAAAAAACSC}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
perform custom write on kill password \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v TAG_WRITE_ACC_PWD\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:TAG_WRITE_ACC_PWD}
{\qr TAG_WRITE_ACC_PWD{\bkmkstart AAAAAAACSD}
{\bkmkend AAAAAAACSD}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
perform custom write on access password \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v TAG_WRITE_PC\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:TAG_WRITE_PC}
{\qr TAG_WRITE_PC{\bkmkstart AAAAAAACSE}
{\bkmkend AAAAAAACSE}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
perform custom write on pc \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v TAG_WRITE_EPC\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:TAG_WRITE_EPC}
{\qr TAG_WRITE_EPC{\bkmkstart AAAAAAACSF}
{\bkmkend AAAAAAACSF}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
perform custom write on epc \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v TAG_WRITE_USER\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:TAG_WRITE_USER}
{\qr TAG_WRITE_USER{\bkmkstart AAAAAAACSG}
{\bkmkend AAAAAAACSG}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
perform custom write on user bank \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v TAG_INVENTORY\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:TAG_INVENTORY}
{\qr TAG_INVENTORY{\bkmkstart AAAAAAACSH}
{\bkmkend AAAAAAACSH}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
perform inventory on any tags \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v TAG_RANGING\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:TAG_RANGING}
{\qr TAG_RANGING{\bkmkstart AAAAAAACSI}
{\bkmkend AAAAAAACSI}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
perform custom ranging on any tags \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v TAG_SEARCHING\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:TAG_SEARCHING}
{\qr TAG_SEARCHING{\bkmkstart AAAAAAACSL}
{\bkmkend AAAAAAACSL}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
perform custom search specific tags \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v TAG_SELECTED\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:TAG_SELECTED}
{\qr TAG_SELECTED{\bkmkstart AAAAAAACSM}
{\bkmkend AAAAAAACSM}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Select a tag for operation \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v TAG_READ_PROTECT\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:TAG_READ_PROTECT}
{\qr TAG_READ_PROTECT{\bkmkstart AAAAAAACSN}
{\bkmkend AAAAAAACSN}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
perform read protect custom command on specific tags \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v TAG_RESET_READ_PROTECT\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:TAG_RESET_READ_PROTECT}
{\qr TAG_RESET_READ_PROTECT{\bkmkstart AAAAAAACSO}
{\bkmkend AAAAAAACSO}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
perform reset read protect custom search on specific tags \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v EAS_CONFIG\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:EAS_CONFIG}
{\qr EAS_CONFIG{\bkmkstart AAAAAAACSP}
{\bkmkend AAAAAAACSP}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
configure EAS \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v EAS_ALARM\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:EAS_ALARM}
{\qr EAS_ALARM{\bkmkstart AAAAAAACSQ}
{\bkmkend AAAAAAACSQ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EAS Alarm \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CL_SET_PASSWORD\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CL_SET_PASSWORD}
{\qr CL_SET_PASSWORD{\bkmkstart AAAAAAACSR}
{\bkmkend AAAAAAACSR}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set password \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CL_SET_LOG_MODE\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CL_SET_LOG_MODE}
{\qr CL_SET_LOG_MODE{\bkmkstart AAAAAAACSS}
{\bkmkend AAAAAAACSS}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set log mode \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CL_SET_LOG_LIMITS\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CL_SET_LOG_LIMITS}
{\qr CL_SET_LOG_LIMITS{\bkmkstart AAAAAAACST}
{\bkmkend AAAAAAACST}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set log limits \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CL_GET_MEASUREMENT_SETUP\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CL_GET_MEASUREMENT_SETUP}
{\qr CL_GET_MEASUREMENT_SETUP{\bkmkstart AAAAAAACSU}
{\bkmkend AAAAAAACSU}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get measurement setup \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CL_SET_SFE_PARA\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CL_SET_SFE_PARA}
{\qr CL_SET_SFE_PARA{\bkmkstart AAAAAAACSV}
{\bkmkend AAAAAAACSV}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set DFE parameter \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CL_SET_CAL_DATA\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CL_SET_CAL_DATA}
{\qr CL_SET_CAL_DATA{\bkmkstart AAAAAAACSW}
{\bkmkend AAAAAAACSW}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set cal data \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CL_END_LOG\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CL_END_LOG}
{\qr CL_END_LOG{\bkmkstart AAAAAAACSX}
{\bkmkend AAAAAAACSX}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
End log \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CL_START_LOG\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CL_START_LOG}
{\qr CL_START_LOG{\bkmkstart AAAAAAACSY}
{\bkmkend AAAAAAACSY}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Start log \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CL_GET_LOG_STATE\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CL_GET_LOG_STATE}
{\qr CL_GET_LOG_STATE{\bkmkstart AAAAAAACSZ}
{\bkmkend AAAAAAACSZ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
get log state \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CL_GET_CAL_DATA\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CL_GET_CAL_DATA}
{\qr CL_GET_CAL_DATA{\bkmkstart AAAAAAACTA}
{\bkmkend AAAAAAACTA}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get cal data \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CL_GET_BAT_LV\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CL_GET_BAT_LV}
{\qr CL_GET_BAT_LV{\bkmkstart AAAAAAACTB}
{\bkmkend AAAAAAACTB}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get battery level \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CL_SET_SHELF_LIFE\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CL_SET_SHELF_LIFE}
{\qr CL_SET_SHELF_LIFE{\bkmkstart AAAAAAACTC}
{\bkmkend AAAAAAACTC}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set shelf life \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CL_INIT\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CL_INIT}
{\qr CL_INIT{\bkmkstart AAAAAAACTD}
{\bkmkend AAAAAAACTD}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Init \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CL_GET_SENSOR_VALUE\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CL_GET_SENSOR_VALUE}
{\qr CL_GET_SENSOR_VALUE{\bkmkstart AAAAAAACTE}
{\bkmkend AAAAAAACTE}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get sensor value \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CL_OPEN_AREA\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CL_OPEN_AREA}
{\qr CL_OPEN_AREA{\bkmkstart AAAAAAACTF}
{\bkmkend AAAAAAACTF}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Open area \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CL_ACCESS_FIFO\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CL_ACCESS_FIFO}
{\qr CL_ACCESS_FIFO{\bkmkstart AAAAAAACTG}
{\bkmkend AAAAAAACTG}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set access FIFO \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v G2_READ_PROTECT\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:G2_READ_PROTECT}
{\qr G2_READ_PROTECT{\bkmkstart AAAAAAACTH}
{\bkmkend AAAAAAACTH}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
G2X ReadProtect \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v G2_RESET_READ_PROTECT\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:G2_RESET_READ_PROTECT}
{\qr G2_RESET_READ_PROTECT{\bkmkstart AAAAAAACTI}
{\bkmkend AAAAAAACTI}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
G2X Reset ReadProtect \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v G2_CHANGE_EAS\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:G2_CHANGE_EAS}
{\qr G2_CHANGE_EAS{\bkmkstart AAAAAAACTJ}
{\bkmkend AAAAAAACTJ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
G2X ChangeEAS \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v G2_EAS_ALARM\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:G2_EAS_ALARM}
{\qr G2_EAS_ALARM{\bkmkstart AAAAAAACTK}
{\bkmkend AAAAAAACTK}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
G2X EAS Alarm \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v G2_CHANGE_CONFIG\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:G2_CHANGE_CONFIG}
{\qr G2_CHANGE_CONFIG{\bkmkstart AAAAAAACTL}
{\bkmkend AAAAAAACTL}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
G2iL Change Config \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v QT_COMMAND\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:QT_COMMAND}
{\qr QT_COMMAND{\bkmkstart AAAAAAACTM}
{\bkmkend AAAAAAACTM}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
QT Command \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v EM4324_GetUid\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:EM4324_GetUid}
{\qr EM4324_GetUid{\bkmkstart AAAAAAACTN}
{\bkmkend AAAAAAACTN}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Custom EM Get Sensor Data \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v EM4325_GetUid\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:EM4325_GetUid}
{\qr EM4325_GetUid{\bkmkstart AAAAAAACTO}
{\bkmkend AAAAAAACTO}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Custom EM Get Sensor Data \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v EM_GetSensorData\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:EM_GetSensorData}
{\qr EM_GetSensorData{\bkmkstart AAAAAAACTP}
{\bkmkend AAAAAAACTP}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Custom EM Get Sensor Data \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v EM_ResetAlarms\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:EM_ResetAlarms}
{\qr EM_ResetAlarms{\bkmkstart AAAAAAACTQ}
{\bkmkend AAAAAAACTQ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Custom EM Get Sensor Data \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v EM_SPI\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:EM_SPI}
{\qr EM_SPI{\bkmkstart AAAAAAACTR}
{\bkmkend AAAAAAACTR}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SPI Command \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v EM_SPIRequestStatus\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:EM_SPIRequestStatus}
{\qr EM_SPIRequestStatus{\bkmkstart AAAAAAACTS}
{\bkmkend AAAAAAACTS}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SPI Command \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v EM_SPIBoot\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:EM_SPIBoot}
{\qr EM_SPIBoot{\bkmkstart AAAAAAACTT}
{\bkmkend AAAAAAACTT}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EM4325 Command \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v EM_SPITransponder\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:EM_SPITransponder}
{\qr EM_SPITransponder{\bkmkstart AAAAAAACTU}
{\bkmkend AAAAAAACTU}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EM4325 Command \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v EM_SPIGetSensorData\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:EM_SPIGetSensorData}
{\qr EM_SPIGetSensorData{\bkmkstart AAAAAAACTV}
{\bkmkend AAAAAAACTV}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EM4325 Command \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v EM_SPISetFlags\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:EM_SPISetFlags}
{\qr EM_SPISetFlags{\bkmkstart AAAAAAACTW}
{\bkmkend AAAAAAACTW}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EM4325 Command \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v EM_SPIReadWord\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:EM_SPIReadWord}
{\qr EM_SPIReadWord{\bkmkstart AAAAAAACTX}
{\bkmkend AAAAAAACTX}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EM4325 Command \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v EM_SPIWriteWord\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:EM_SPIWriteWord}
{\qr EM_SPIWriteWord{\bkmkstart AAAAAAACTY}
{\bkmkend AAAAAAACTY}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EM4325 Command \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v EM_SPIReadPage\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:EM_SPIReadPage}
{\qr EM_SPIReadPage{\bkmkstart AAAAAAACTZ}
{\bkmkend AAAAAAACTZ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EM4325 Command \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v EM_SPIWritePage\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:EM_SPIWritePage}
{\qr EM_SPIWritePage{\bkmkstart AAAAAAACUA}
{\bkmkend AAAAAAACUA}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EM4325 Command \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v EM_SPISetClock\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:EM_SPISetClock}
{\qr EM_SPISetClock{\bkmkstart AAAAAAACUB}
{\bkmkend AAAAAAACUB}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EM4325 Command \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v EM_SPIAlarm\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:EM_SPIAlarm}
{\qr EM_SPIAlarm{\bkmkstart AAAAAAACUC}
{\bkmkend AAAAAAACUC}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EM4325 Command \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v EM_SPIReadRegisterFileWord\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:EM_SPIReadRegisterFileWord}
{\qr EM_SPIReadRegisterFileWord{\bkmkstart AAAAAAACUD}
{\bkmkend AAAAAAACUD}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EM4325 Command \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v EM_SPIWriteRegisterFileWord\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:EM_SPIWriteRegisterFileWord}
{\qr EM_SPIWriteRegisterFileWord{\bkmkstart AAAAAAACUE}
{\bkmkend AAAAAAACUE}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EM4325 Command \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v EM_SPIReqRN\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:EM_SPIReqRN}
{\qr EM_SPIReqRN{\bkmkstart AAAAAAACUF}
{\bkmkend AAAAAAACUF}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EM4325 Command \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v TAG_GENERALSELECTED\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:TAG_GENERALSELECTED}
{\qr TAG_GENERALSELECTED{\bkmkstart AAAAAAACUG}
{\bkmkend AAAAAAACUG}
\cell }{\cell }{\row }
}
}
{\xe \v OptType\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:OptType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b CSLibrary.Constants.OptType} : uint{\f2 [strong]}}}
\par
{\bkmkstart AAAAAAACUI}
{\bkmkend AAAAAAACUI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
See native RFID_18K6C_QT_OPT_CMD_TYPE* \par
}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v OPT_NONE\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:OPT_NONE}
{\qr OPT_NONE{\bkmkstart AAAAAAACUJ}
{\bkmkend AAAAAAACUJ}
\cell }{\cell }{\row }
{\xe \v OPT_READ\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:OPT_READ}
{\qr OPT_READ{\bkmkstart AAAAAAACUK}
{\bkmkend AAAAAAACUK}
\cell }{\cell }{\row }
{\xe \v OPT_WRITE_TYPE_SEQUENTIAL\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:OPT_WRITE_TYPE_SEQUENTIAL}
{\qr OPT_WRITE_TYPE_SEQUENTIAL{\bkmkstart AAAAAAACUL}
{\bkmkend AAAAAAACUL}
\cell }{\cell }{\row }
{\xe \v OPT_WRITE_TYPE_RANDOM\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:OPT_WRITE_TYPE_RANDOM}
{\qr OPT_WRITE_TYPE_RANDOM{\bkmkstart AAAAAAACUM}
{\bkmkend AAAAAAACUM}
\cell }{\cell }{\row }
{\xe \v UNKNOWN\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:UNKNOWN}
{\qr UNKNOWN{\bkmkstart AAAAAAACUN}
{\bkmkend AAAAAAACUN}
\cell }{\cell }{\row }
}
}
{\xe \v PermalockFlags\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:PermalockFlags}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b CSLibrary.Constants.PermalockFlags} : int{\f2 [strong]}}}
\par
{\bkmkstart AAAAAAACUO}
{\bkmkend AAAAAAACUO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Permalock access flags }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v SET_VALUE\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:SET_VALUE}
{\qr SET_VALUE{\bkmkstart AAAAAAACUP}
{\bkmkend AAAAAAACUP}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set permalock status \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v GET_VALUE\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:GET_VALUE}
{\qr GET_VALUE{\bkmkstart AAAAAAACUQ}
{\bkmkend AAAAAAACUQ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get permalock status \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
}
}
{\xe \v Permission\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Permission}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b CSLibrary.Constants.Permission} : uint{\f2 [strong]}}}
\par
{\bkmkstart AAAAAAACUR}
{\bkmkend AAAAAAACUR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A tag-permission command (aka, tag lock) allows the application to set the access permissions of a tag. These include the following: \'95 Set whether or not an access password is required to write to the EPC, TID, or user memory banks. \'95 Set whether or not the above memory-write permission is permanently set. Once the memory-write permission has been permanently set, attempts to change the permission or turn off the permanent setting will fail. \'95 Set a memory bank to be read-only. \'95 Set whether or not the individual passwords (i.e., access and kill) may be accessed (i.e., read and written) and, if they are accessible, whether or not an access password is required to read the individual passwords (i.e., access and kill). \'95 Set whether or not the above password-access permission is permanently set. Once the password-access permission has been permanently set, attempts to change the permission or turn off the permanent setting will fail. \'95 Set the individual passwords to be inaccessible (i.e., unable to be read or written). }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v UNLOCK\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:UNLOCK}
{\qr UNLOCK{\bkmkstart AAAAAAACUS}
{\bkmkend AAAAAAACUS}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This bank can be read and written \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v PERM_UNLOCK\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:PERM_UNLOCK}
{\qr PERM_UNLOCK{\bkmkstart AAAAAAACUT}
{\bkmkend AAAAAAACUT}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This bank can be read and written permanently. Note : The security of this bank can not be changed \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v LOCK\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:LOCK}
{\qr LOCK{\bkmkstart AAAAAAACUU}
{\bkmkend AAAAAAACUU}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This bank can not be accessible unless access password is provided \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v PERM_LOCK\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:PERM_LOCK}
{\qr PERM_LOCK{\bkmkstart AAAAAAACUV}
{\bkmkend AAAAAAACUV}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This bank can not be accessible unless access password is provided. Note : The security of this bank can not be changed \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v UNCHANGED\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:UNCHANGED}
{\qr UNCHANGED{\bkmkstart AAAAAAACUW}
{\bkmkend AAAAAAACUW}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The permission should remain unchanged. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v UNKNOWN\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:UNKNOWN}
{\qr UNKNOWN{\bkmkstart AAAAAAACUX}
{\bkmkend AAAAAAACUX}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Unknown permission \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
}
}
{\xe \v QTCtrlType\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:QTCtrlType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b CSLibrary.Constants.QTCtrlType} : uint{\f2 [strong]}}}
\par
{\bkmkstart AAAAAAACUY}
{\bkmkend AAAAAAACUY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
See native RFID_18K6C_QT_CTRL_TYPE* \par
}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v READ\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:READ}
{\qr READ{\bkmkstart AAAAAAACUZ}
{\bkmkend AAAAAAACUZ}
\cell }{\cell }{\row }
{\xe \v WRITE\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:WRITE}
{\qr WRITE{\bkmkstart AAAAAAACVA}
{\bkmkend AAAAAAACVA}
\cell }{\cell }{\row }
{\xe \v UNKNOWN\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:UNKNOWN}
{\qr UNKNOWN{\bkmkstart AAAAAAACVB}
{\bkmkend AAAAAAACVB}
\cell }{\cell }{\row }
}
}
{\xe \v QTMemMapType\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:QTMemMapType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b CSLibrary.Constants.QTMemMapType} : uint{\f2 [strong]}}}
\par
{\bkmkstart AAAAAAACVC}
{\bkmkend AAAAAAACVC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
See native RFID_18K6C_QT_MEMMAP_TYPE* \par
}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v PRIVATE\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:PRIVATE}
{\qr PRIVATE{\bkmkstart AAAAAAACVD}
{\bkmkend AAAAAAACVD}
\cell }{\cell }{\row }
{\xe \v PUBLIC\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:PUBLIC}
{\qr PUBLIC{\bkmkstart AAAAAAACVE}
{\bkmkend AAAAAAACVE}
\cell }{\cell }{\row }
{\xe \v UNKNOWN\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:UNKNOWN}
{\qr UNKNOWN{\bkmkstart AAAAAAACVF}
{\bkmkend AAAAAAACVF}
\cell }{\cell }{\row }
}
}
{\xe \v QTPersistenceType\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:QTPersistenceType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b CSLibrary.Constants.QTPersistenceType} : uint{\f2 [strong]}}}
\par
{\bkmkstart AAAAAAACVG}
{\bkmkend AAAAAAACVG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
See native RFID_18K6C_QT_PERSISTENCE_TYPE* \par
}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v TEMPORARY\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:TEMPORARY}
{\qr TEMPORARY{\bkmkstart AAAAAAACVH}
{\bkmkend AAAAAAACVH}
\cell }{\cell }{\row }
{\xe \v PERMANENT\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:PERMANENT}
{\qr PERMANENT{\bkmkstart AAAAAAACVI}
{\bkmkend AAAAAAACVI}
\cell }{\cell }{\row }
{\xe \v UNKNOWN\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:UNKNOWN}
{\qr UNKNOWN{\bkmkstart AAAAAAACVJ}
{\bkmkend AAAAAAACVJ}
\cell }{\cell }{\row }
}
}
{\xe \v QTShortRangeType\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:QTShortRangeType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b CSLibrary.Constants.QTShortRangeType} : uint{\f2 [strong]}}}
\par
{\bkmkstart AAAAAAACVK}
{\bkmkend AAAAAAACVK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
See native RFID_18K6C_QT_SR_TYPE* \par
}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v DISABLE\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:DISABLE}
{\qr DISABLE{\bkmkstart AAAAAAACVL}
{\bkmkend AAAAAAACVL}
\cell }{\cell }{\row }
{\xe \v ENABLE\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:ENABLE}
{\qr ENABLE{\bkmkstart AAAAAAACVM}
{\bkmkend AAAAAAACVM}
\cell }{\cell }{\row }
{\xe \v UNKNOWN\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:UNKNOWN}
{\qr UNKNOWN{\bkmkstart AAAAAAACVN}
{\bkmkend AAAAAAACVN}
\cell }{\cell }{\row }
}
}
{\xe \v RadioOperationMode\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:RadioOperationMode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b CSLibrary.Constants.RadioOperationMode} : uint{\f2 [strong]}}}
\par
{\bkmkstart AAAAAAACVO}
{\bkmkend AAAAAAACVO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A radio module may operate either in continuous or non-continuous mode. In continuous mode, when a tag-protocol-operation cycle (i.e., one iteration through all enabled antenna ports) has completed, the radio module will begin a new tag- protocol-operation cycle with the first enabled antenna port and will continue to do so until the operation is explicitly cancelled by the application. In non- continuous mode, only a single tag-protocol-operation cycle is executed upon the radio module. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v CONTINUOUS\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CONTINUOUS}
{\qr CONTINUOUS{\bkmkstart AAAAAAACVP}
{\bkmkend AAAAAAACVP}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Continuous operation \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v NONCONTINUOUS\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:NONCONTINUOUS}
{\qr NONCONTINUOUS{\bkmkstart AAAAAAACVQ}
{\bkmkend AAAAAAACVQ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Non-continuous \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v UNKNOWN\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:UNKNOWN}
{\qr UNKNOWN{\bkmkstart AAAAAAACVR}
{\bkmkend AAAAAAACVR}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Unknown \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
}
}
{\xe \v RadioPowerState\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:RadioPowerState}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b CSLibrary.Constants.RadioPowerState} : uint{\f2 [strong]}}}
\par
{\bkmkstart AAAAAAACVS}
{\bkmkend AAAAAAACVS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Based upon the usage scenario, an application is given the flexibility to place the radio module into specific power states. A radio module that is in the low-power state will remain so until either a tag-protocol operation (e.g., TagInventory, etc.) is executed on the radio module or until it is explicitly instructed to leave low-power state. Note that if an RFID radio module is brought out of low-power state by the execution of a tag-protocol operation, it will not automatically return to low-power state. Note that the radio-module power state should not be confused with the per- antenna RF power-level }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v FULL\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:FULL}
{\qr FULL{\bkmkstart AAAAAAACVT}
{\bkmkend AAAAAAACVT}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Full power mode \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v STANDBY\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:STANDBY}
{\qr STANDBY{\bkmkstart AAAAAAACVU}
{\bkmkend AAAAAAACVU}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Standby mode \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v UNKNOWN\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:UNKNOWN}
{\qr UNKNOWN{\bkmkstart AAAAAAACVV}
{\bkmkend AAAAAAACVV}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Unknown \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
}
}
{\xe \v RadioProtocol\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:RadioProtocol}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b CSLibrary.Constants.RadioProtocol} : uint{\f2 [strong]}}}
\par
{\bkmkstart AAAAAAACVW}
{\bkmkend AAAAAAACVW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The tag protocol for which this link profile has been configured. The value of this field determines which of the structures within the profileConfig contains the link profile configuration information. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v ISO18K6C\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:ISO18K6C}
{\qr ISO18K6C{\bkmkstart AAAAAAACVX}
{\bkmkend AAAAAAACVX}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ISO 18000-6C \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v UNKNOWN\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:UNKNOWN}
{\qr UNKNOWN{\bkmkstart AAAAAAACVY}
{\bkmkend AAAAAAACVY}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Unknown \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
}
}
{\xe \v ReaderCallbackType\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:ReaderCallbackType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b CSLibrary.Constants.ReaderCallbackType}{\f2 [strong]}}}
\par
{\bkmkstart AAAAAAACVZ}
{\bkmkend AAAAAAACVZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
reader Callback Type }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v CONNECT_SUCESS\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CONNECT_SUCESS}
{\qr CONNECT_SUCESS{\bkmkstart AAAAAAACWA}
{\bkmkend AAAAAAACWA}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reader connect sucess \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v COMMUNICATION_ERROR\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:COMMUNICATION_ERROR}
{\qr COMMUNICATION_ERROR{\bkmkstart AAAAAAACWB}
{\bkmkend AAAAAAACWB}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RFID Command Error \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CONNECTION_LOST\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CONNECTION_LOST}
{\qr CONNECTION_LOST{\bkmkstart AAAAAAACWC}
{\bkmkend AAAAAAACWC}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
BT connection disconnected \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v UNKNOWN\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:UNKNOWN}
{\qr UNKNOWN{\bkmkstart AAAAAAACWD}
{\bkmkend AAAAAAACWD}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Specific-Tag Searching, Only PC , EPC and RSSI will backscatter \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
}
}
{\xe \v RegionCode\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:RegionCode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b CSLibrary.Constants.RegionCode}{\f2 [strong]}}}
\par
{\bkmkstart AAAAAAACWE}
{\bkmkend AAAAAAACWE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Region Profile }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v FCC\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:FCC}
{\qr FCC{\bkmkstart AAAAAAACWF}
{\bkmkend AAAAAAACWF}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
USA \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ETSI\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:ETSI}
{\qr ETSI{\bkmkstart AAAAAAACWG}
{\bkmkend AAAAAAACWG}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Europe \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CN\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CN}
{\qr CN{\bkmkstart AAAAAAACWH}
{\bkmkend AAAAAAACWH}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
China all frequency \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v TW\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:TW}
{\qr TW{\bkmkstart AAAAAAACWI}
{\bkmkend AAAAAAACWI}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Taiwan \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v KR\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:KR}
{\qr KR{\bkmkstart AAAAAAACWJ}
{\bkmkend AAAAAAACWJ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Korea \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v HK\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:HK}
{\qr HK{\bkmkstart AAAAAAACWK}
{\bkmkend AAAAAAACWK}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Hong Kong \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v JP\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:JP}
{\qr JP{\bkmkstart AAAAAAACWL}
{\bkmkend AAAAAAACWL}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Japan \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v AU\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:AU}
{\qr AU{\bkmkstart AAAAAAACWM}
{\bkmkend AAAAAAACWM}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Australia \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v MY\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:MY}
{\qr MY{\bkmkstart AAAAAAACWN}
{\bkmkend AAAAAAACWN}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Malaysia \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v SG\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:SG}
{\qr SG{\bkmkstart AAAAAAACWO}
{\bkmkend AAAAAAACWO}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Singapore \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v IN\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:IN}
{\qr IN{\bkmkstart AAAAAAACWP}
{\bkmkend AAAAAAACWP}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
India \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v G800\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:G800}
{\qr G800{\bkmkstart AAAAAAACWQ}
{\bkmkend AAAAAAACWQ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
G800 same as India \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ZA\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:ZA}
{\qr ZA{\bkmkstart AAAAAAACWR}
{\bkmkend AAAAAAACWR}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
South Africa \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v BR1\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:BR1}
{\qr BR1{\bkmkstart AAAAAAACWS}
{\bkmkend AAAAAAACWS}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Brazil \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v BR2\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:BR2}
{\qr BR2{\bkmkstart AAAAAAACWT}
{\bkmkend AAAAAAACWT}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Brazil \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v BR3\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:BR3}
{\qr BR3{\bkmkstart AAAAAAACWU}
{\bkmkend AAAAAAACWU}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Brazil \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v BR4\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:BR4}
{\qr BR4{\bkmkstart AAAAAAACWV}
{\bkmkend AAAAAAACWV}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Brazil \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v BR5\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:BR5}
{\qr BR5{\bkmkstart AAAAAAACWW}
{\bkmkend AAAAAAACWW}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Brazil \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ID\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:ID}
{\qr ID{\bkmkstart AAAAAAACWX}
{\bkmkend AAAAAAACWX}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Indonesia \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v TH\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:TH}
{\qr TH{\bkmkstart AAAAAAACWY}
{\bkmkend AAAAAAACWY}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Thailand \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v JE\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:JE}
{\qr JE{\bkmkstart AAAAAAACWZ}
{\bkmkend AAAAAAACWZ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Israel \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v PH\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:PH}
{\qr PH{\bkmkstart AAAAAAACXA}
{\bkmkend AAAAAAACXA}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Philippine \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ETSIUPPERBAND\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:ETSIUPPERBAND}
{\qr ETSIUPPERBAND{\bkmkstart AAAAAAACXB}
{\bkmkend AAAAAAACXB}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ETSI Upper Band \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v NZ\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:NZ}
{\qr NZ{\bkmkstart AAAAAAACXC}
{\bkmkend AAAAAAACXC}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
New Zealand \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v UH1\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:UH1}
{\qr UH1{\bkmkstart AAAAAAACXD}
{\bkmkend AAAAAAACXD}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
UH1 \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v UH2\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:UH2}
{\qr UH2{\bkmkstart AAAAAAACXE}
{\bkmkend AAAAAAACXE}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
UH2 \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v LH\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:LH}
{\qr LH{\bkmkstart AAAAAAACXF}
{\bkmkend AAAAAAACXF}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
LH \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v LH1\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:LH1}
{\qr LH1{\bkmkstart AAAAAAACXG}
{\bkmkend AAAAAAACXG}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
LH \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v LH2\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:LH2}
{\qr LH2{\bkmkstart AAAAAAACXH}
{\bkmkend AAAAAAACXH}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
LH \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v VE\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:VE}
{\qr VE{\bkmkstart AAAAAAACXI}
{\bkmkend AAAAAAACXI}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Venezuela \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v AR\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:AR}
{\qr AR{\bkmkstart AAAAAAACXJ}
{\bkmkend AAAAAAACXJ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Argentina \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CL\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CL}
{\qr CL{\bkmkstart AAAAAAACXK}
{\bkmkend AAAAAAACXK}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Chile. \par
}\cell }{\row }
{\xe \v CO\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CO}
{\qr CO{\bkmkstart AAAAAAACXL}
{\bkmkend AAAAAAACXL}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Colombia \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CR\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CR}
{\qr CR{\bkmkstart AAAAAAACXM}
{\bkmkend AAAAAAACXM}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Costa Rica\'A0\'A0\'A0\'A0\'A0\'A0 \'A0\'A0\'A0\'A0\'A0\'A0\'A0\'A0\'A0\'A0\'A0\'A0\'A0\'A0\'A0 \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v DO\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:DO}
{\qr DO{\bkmkstart AAAAAAACXN}
{\bkmkend AAAAAAACXN}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Dominican Republic \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v PA\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:PA}
{\qr PA{\bkmkstart AAAAAAACXO}
{\bkmkend AAAAAAACXO}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Panama \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v PE\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:PE}
{\qr PE{\bkmkstart AAAAAAACXP}
{\bkmkend AAAAAAACXP}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Peru \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v UY\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:UY}
{\qr UY{\bkmkstart AAAAAAACXQ}
{\bkmkend AAAAAAACXQ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Uruguay \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v UNKNOWN\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:UNKNOWN}
{\qr UNKNOWN{\bkmkstart AAAAAAACXR}
{\bkmkend AAAAAAACXR}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Unknow Country \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CURRENT\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CURRENT}
{\qr CURRENT{\bkmkstart AAAAAAACXS}
{\bkmkend AAAAAAACXS}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Current Country \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v FCC\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:FCC}
{\qr FCC{\bkmkstart AAAAAAACWF}
{\bkmkend AAAAAAACWF}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
USA \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ETSI\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:ETSI}
{\qr ETSI{\bkmkstart AAAAAAACWG}
{\bkmkend AAAAAAACWG}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Europe \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CN\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CN}
{\qr CN{\bkmkstart AAAAAAACWH}
{\bkmkend AAAAAAACWH}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
China all frequency \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CN1\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CN1}
{\qr CN1{\bkmkstart AAAAAAACXT}
{\bkmkend AAAAAAACXT}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
China \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CN2\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CN2}
{\qr CN2{\bkmkstart AAAAAAACXU}
{\bkmkend AAAAAAACXU}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
China \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CN3\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CN3}
{\qr CN3{\bkmkstart AAAAAAACXV}
{\bkmkend AAAAAAACXV}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
China \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CN4\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CN4}
{\qr CN4{\bkmkstart AAAAAAACXW}
{\bkmkend AAAAAAACXW}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
China \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CN5\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CN5}
{\qr CN5{\bkmkstart AAAAAAACXX}
{\bkmkend AAAAAAACXX}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
China \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CN6\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CN6}
{\qr CN6{\bkmkstart AAAAAAACXY}
{\bkmkend AAAAAAACXY}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
China \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CN7\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CN7}
{\qr CN7{\bkmkstart AAAAAAACXZ}
{\bkmkend AAAAAAACXZ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
China \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CN8\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CN8}
{\qr CN8{\bkmkstart AAAAAAACYA}
{\bkmkend AAAAAAACYA}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
China \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CN9\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CN9}
{\qr CN9{\bkmkstart AAAAAAACYB}
{\bkmkend AAAAAAACYB}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
China \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CN10\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CN10}
{\qr CN10{\bkmkstart AAAAAAACYC}
{\bkmkend AAAAAAACYC}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
China \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CN11\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CN11}
{\qr CN11{\bkmkstart AAAAAAACYD}
{\bkmkend AAAAAAACYD}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
China \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CN12\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CN12}
{\qr CN12{\bkmkstart AAAAAAACYE}
{\bkmkend AAAAAAACYE}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
China \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v TW\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:TW}
{\qr TW{\bkmkstart AAAAAAACWI}
{\bkmkend AAAAAAACWI}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Taiwan \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v KR\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:KR}
{\qr KR{\bkmkstart AAAAAAACWJ}
{\bkmkend AAAAAAACWJ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Korea \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v HK\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:HK}
{\qr HK{\bkmkstart AAAAAAACWK}
{\bkmkend AAAAAAACWK}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Hong Kong \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v JP\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:JP}
{\qr JP{\bkmkstart AAAAAAACWL}
{\bkmkend AAAAAAACWL}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Japan \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v AU\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:AU}
{\qr AU{\bkmkstart AAAAAAACWM}
{\bkmkend AAAAAAACWM}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Australia \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v MY\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:MY}
{\qr MY{\bkmkstart AAAAAAACWN}
{\bkmkend AAAAAAACWN}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Malaysia \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v SG\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:SG}
{\qr SG{\bkmkstart AAAAAAACWO}
{\bkmkend AAAAAAACWO}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Singapore \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v IN\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:IN}
{\qr IN{\bkmkstart AAAAAAACWP}
{\bkmkend AAAAAAACWP}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
India \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v G800\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:G800}
{\qr G800{\bkmkstart AAAAAAACWQ}
{\bkmkend AAAAAAACWQ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
G800 same as India \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ZA\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:ZA}
{\qr ZA{\bkmkstart AAAAAAACWR}
{\bkmkend AAAAAAACWR}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
South Africa \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v BR1\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:BR1}
{\qr BR1{\bkmkstart AAAAAAACWS}
{\bkmkend AAAAAAACWS}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Brazil \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v BR2\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:BR2}
{\qr BR2{\bkmkstart AAAAAAACWT}
{\bkmkend AAAAAAACWT}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Brazil \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ID\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:ID}
{\qr ID{\bkmkstart AAAAAAACWX}
{\bkmkend AAAAAAACWX}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Indonesia \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v TH\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:TH}
{\qr TH{\bkmkstart AAAAAAACWY}
{\bkmkend AAAAAAACWY}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Thailand \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v JP2012\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:JP2012}
{\qr JP2012{\bkmkstart AAAAAAACYF}
{\bkmkend AAAAAAACYF}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Japan 2012 \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v UH1\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:UH1}
{\qr UH1{\bkmkstart AAAAAAACXD}
{\bkmkend AAAAAAACXD}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Unknow Country \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v UH2\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:UH2}
{\qr UH2{\bkmkstart AAAAAAACXE}
{\bkmkend AAAAAAACXE}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Upper Half 920-928 \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v LH\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:LH}
{\qr LH{\bkmkstart AAAAAAACXF}
{\bkmkend AAAAAAACXF}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
920-928 \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v JE\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:JE}
{\qr JE{\bkmkstart AAAAAAACWZ}
{\bkmkend AAAAAAACWZ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Israel \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v PH\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:PH}
{\qr PH{\bkmkstart AAAAAAACXA}
{\bkmkend AAAAAAACXA}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Philippine \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v UNKNOWN\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:UNKNOWN}
{\qr UNKNOWN{\bkmkstart AAAAAAACXR}
{\bkmkend AAAAAAACXR}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Unknow Country \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
}
}
{\xe \v RegionCode\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:RegionCode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b CSLibrary.Constants.RegionCode}{\f2 [strong]}}}
\par
{\bkmkstart AAAAAAACWE}
{\bkmkend AAAAAAACWE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Region Profile }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Region Profile \par
}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v FCC\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:FCC}
{\qr FCC{\bkmkstart AAAAAAACWF}
{\bkmkend AAAAAAACWF}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
USA \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ETSI\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:ETSI}
{\qr ETSI{\bkmkstart AAAAAAACWG}
{\bkmkend AAAAAAACWG}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Europe \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CN\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CN}
{\qr CN{\bkmkstart AAAAAAACWH}
{\bkmkend AAAAAAACWH}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
China all frequency \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v TW\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:TW}
{\qr TW{\bkmkstart AAAAAAACWI}
{\bkmkend AAAAAAACWI}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Taiwan \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v KR\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:KR}
{\qr KR{\bkmkstart AAAAAAACWJ}
{\bkmkend AAAAAAACWJ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Korea \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v HK\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:HK}
{\qr HK{\bkmkstart AAAAAAACWK}
{\bkmkend AAAAAAACWK}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Hong Kong \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v JP\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:JP}
{\qr JP{\bkmkstart AAAAAAACWL}
{\bkmkend AAAAAAACWL}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Japan \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v AU\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:AU}
{\qr AU{\bkmkstart AAAAAAACWM}
{\bkmkend AAAAAAACWM}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Australia \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v MY\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:MY}
{\qr MY{\bkmkstart AAAAAAACWN}
{\bkmkend AAAAAAACWN}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Malaysia \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v SG\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:SG}
{\qr SG{\bkmkstart AAAAAAACWO}
{\bkmkend AAAAAAACWO}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Singapore \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v IN\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:IN}
{\qr IN{\bkmkstart AAAAAAACWP}
{\bkmkend AAAAAAACWP}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
India \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v G800\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:G800}
{\qr G800{\bkmkstart AAAAAAACWQ}
{\bkmkend AAAAAAACWQ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
G800 same as India \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ZA\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:ZA}
{\qr ZA{\bkmkstart AAAAAAACWR}
{\bkmkend AAAAAAACWR}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
South Africa \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v BR1\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:BR1}
{\qr BR1{\bkmkstart AAAAAAACWS}
{\bkmkend AAAAAAACWS}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Brazil \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v BR2\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:BR2}
{\qr BR2{\bkmkstart AAAAAAACWT}
{\bkmkend AAAAAAACWT}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Brazil \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v BR3\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:BR3}
{\qr BR3{\bkmkstart AAAAAAACWU}
{\bkmkend AAAAAAACWU}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Brazil \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v BR4\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:BR4}
{\qr BR4{\bkmkstart AAAAAAACWV}
{\bkmkend AAAAAAACWV}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Brazil \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v BR5\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:BR5}
{\qr BR5{\bkmkstart AAAAAAACWW}
{\bkmkend AAAAAAACWW}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Brazil \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ID\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:ID}
{\qr ID{\bkmkstart AAAAAAACWX}
{\bkmkend AAAAAAACWX}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Indonesia \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v TH\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:TH}
{\qr TH{\bkmkstart AAAAAAACWY}
{\bkmkend AAAAAAACWY}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Thailand \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v JE\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:JE}
{\qr JE{\bkmkstart AAAAAAACWZ}
{\bkmkend AAAAAAACWZ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Israel \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v PH\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:PH}
{\qr PH{\bkmkstart AAAAAAACXA}
{\bkmkend AAAAAAACXA}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Philippine \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ETSIUPPERBAND\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:ETSIUPPERBAND}
{\qr ETSIUPPERBAND{\bkmkstart AAAAAAACXB}
{\bkmkend AAAAAAACXB}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ETSI Upper Band \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v NZ\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:NZ}
{\qr NZ{\bkmkstart AAAAAAACXC}
{\bkmkend AAAAAAACXC}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
New Zealand \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v UH1\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:UH1}
{\qr UH1{\bkmkstart AAAAAAACXD}
{\bkmkend AAAAAAACXD}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
UH1 \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v UH2\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:UH2}
{\qr UH2{\bkmkstart AAAAAAACXE}
{\bkmkend AAAAAAACXE}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
UH2 \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v LH\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:LH}
{\qr LH{\bkmkstart AAAAAAACXF}
{\bkmkend AAAAAAACXF}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
LH \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v LH1\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:LH1}
{\qr LH1{\bkmkstart AAAAAAACXG}
{\bkmkend AAAAAAACXG}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
LH \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v LH2\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:LH2}
{\qr LH2{\bkmkstart AAAAAAACXH}
{\bkmkend AAAAAAACXH}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
LH \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v VE\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:VE}
{\qr VE{\bkmkstart AAAAAAACXI}
{\bkmkend AAAAAAACXI}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Venezuela \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v AR\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:AR}
{\qr AR{\bkmkstart AAAAAAACXJ}
{\bkmkend AAAAAAACXJ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Argentina \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CL\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CL}
{\qr CL{\bkmkstart AAAAAAACXK}
{\bkmkend AAAAAAACXK}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Chile. \par
}\cell }{\row }
{\xe \v CO\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CO}
{\qr CO{\bkmkstart AAAAAAACXL}
{\bkmkend AAAAAAACXL}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Colombia \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CR\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CR}
{\qr CR{\bkmkstart AAAAAAACXM}
{\bkmkend AAAAAAACXM}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Costa Rica\'A0\'A0\'A0\'A0\'A0\'A0 \'A0\'A0\'A0\'A0\'A0\'A0\'A0\'A0\'A0\'A0\'A0\'A0\'A0\'A0\'A0 \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v DO\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:DO}
{\qr DO{\bkmkstart AAAAAAACXN}
{\bkmkend AAAAAAACXN}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Dominican Republic \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v PA\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:PA}
{\qr PA{\bkmkstart AAAAAAACXO}
{\bkmkend AAAAAAACXO}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Panama \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v PE\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:PE}
{\qr PE{\bkmkstart AAAAAAACXP}
{\bkmkend AAAAAAACXP}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Peru \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v UY\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:UY}
{\qr UY{\bkmkstart AAAAAAACXQ}
{\bkmkend AAAAAAACXQ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Uruguay \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v UNKNOWN\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:UNKNOWN}
{\qr UNKNOWN{\bkmkstart AAAAAAACXR}
{\bkmkend AAAAAAACXR}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Unknow Country \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CURRENT\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CURRENT}
{\qr CURRENT{\bkmkstart AAAAAAACXS}
{\bkmkend AAAAAAACXS}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Current Country \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v FCC\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:FCC}
{\qr FCC{\bkmkstart AAAAAAACWF}
{\bkmkend AAAAAAACWF}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
USA \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ETSI\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:ETSI}
{\qr ETSI{\bkmkstart AAAAAAACWG}
{\bkmkend AAAAAAACWG}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Europe \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CN\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CN}
{\qr CN{\bkmkstart AAAAAAACWH}
{\bkmkend AAAAAAACWH}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
China all frequency \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CN1\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CN1}
{\qr CN1{\bkmkstart AAAAAAACXT}
{\bkmkend AAAAAAACXT}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
China \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CN2\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CN2}
{\qr CN2{\bkmkstart AAAAAAACXU}
{\bkmkend AAAAAAACXU}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
China \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CN3\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CN3}
{\qr CN3{\bkmkstart AAAAAAACXV}
{\bkmkend AAAAAAACXV}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
China \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CN4\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CN4}
{\qr CN4{\bkmkstart AAAAAAACXW}
{\bkmkend AAAAAAACXW}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
China \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CN5\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CN5}
{\qr CN5{\bkmkstart AAAAAAACXX}
{\bkmkend AAAAAAACXX}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
China \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CN6\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CN6}
{\qr CN6{\bkmkstart AAAAAAACXY}
{\bkmkend AAAAAAACXY}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
China \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CN7\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CN7}
{\qr CN7{\bkmkstart AAAAAAACXZ}
{\bkmkend AAAAAAACXZ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
China \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CN8\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CN8}
{\qr CN8{\bkmkstart AAAAAAACYA}
{\bkmkend AAAAAAACYA}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
China \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CN9\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CN9}
{\qr CN9{\bkmkstart AAAAAAACYB}
{\bkmkend AAAAAAACYB}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
China \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CN10\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CN10}
{\qr CN10{\bkmkstart AAAAAAACYC}
{\bkmkend AAAAAAACYC}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
China \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CN11\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CN11}
{\qr CN11{\bkmkstart AAAAAAACYD}
{\bkmkend AAAAAAACYD}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
China \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CN12\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CN12}
{\qr CN12{\bkmkstart AAAAAAACYE}
{\bkmkend AAAAAAACYE}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
China \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v TW\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:TW}
{\qr TW{\bkmkstart AAAAAAACWI}
{\bkmkend AAAAAAACWI}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Taiwan \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v KR\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:KR}
{\qr KR{\bkmkstart AAAAAAACWJ}
{\bkmkend AAAAAAACWJ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Korea \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v HK\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:HK}
{\qr HK{\bkmkstart AAAAAAACWK}
{\bkmkend AAAAAAACWK}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Hong Kong \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v JP\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:JP}
{\qr JP{\bkmkstart AAAAAAACWL}
{\bkmkend AAAAAAACWL}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Japan \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v AU\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:AU}
{\qr AU{\bkmkstart AAAAAAACWM}
{\bkmkend AAAAAAACWM}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Australia \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v MY\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:MY}
{\qr MY{\bkmkstart AAAAAAACWN}
{\bkmkend AAAAAAACWN}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Malaysia \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v SG\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:SG}
{\qr SG{\bkmkstart AAAAAAACWO}
{\bkmkend AAAAAAACWO}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Singapore \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v IN\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:IN}
{\qr IN{\bkmkstart AAAAAAACWP}
{\bkmkend AAAAAAACWP}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
India \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v G800\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:G800}
{\qr G800{\bkmkstart AAAAAAACWQ}
{\bkmkend AAAAAAACWQ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
G800 same as India \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ZA\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:ZA}
{\qr ZA{\bkmkstart AAAAAAACWR}
{\bkmkend AAAAAAACWR}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
South Africa \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v BR1\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:BR1}
{\qr BR1{\bkmkstart AAAAAAACWS}
{\bkmkend AAAAAAACWS}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Brazil \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v BR2\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:BR2}
{\qr BR2{\bkmkstart AAAAAAACWT}
{\bkmkend AAAAAAACWT}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Brazil \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ID\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:ID}
{\qr ID{\bkmkstart AAAAAAACWX}
{\bkmkend AAAAAAACWX}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Indonesia \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v TH\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:TH}
{\qr TH{\bkmkstart AAAAAAACWY}
{\bkmkend AAAAAAACWY}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Thailand \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v JP2012\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:JP2012}
{\qr JP2012{\bkmkstart AAAAAAACYF}
{\bkmkend AAAAAAACYF}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Japan 2012 \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v UH1\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:UH1}
{\qr UH1{\bkmkstart AAAAAAACXD}
{\bkmkend AAAAAAACXD}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Unknow Country \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v UH2\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:UH2}
{\qr UH2{\bkmkstart AAAAAAACXE}
{\bkmkend AAAAAAACXE}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Upper Half 920-928 \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v LH\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:LH}
{\qr LH{\bkmkstart AAAAAAACXF}
{\bkmkend AAAAAAACXF}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
920-928 \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v JE\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:JE}
{\qr JE{\bkmkstart AAAAAAACWZ}
{\bkmkend AAAAAAACWZ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Israel \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v PH\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:PH}
{\qr PH{\bkmkstart AAAAAAACXA}
{\bkmkend AAAAAAACXA}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Philippine \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v UNKNOWN\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:UNKNOWN}
{\qr UNKNOWN{\bkmkstart AAAAAAACXR}
{\bkmkend AAAAAAACXR}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Unknow Country \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
}
}
{\xe \v ResponseMode\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:ResponseMode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b CSLibrary.Constants.ResponseMode} : uint{\f2 [strong]}}}
\par
{\bkmkstart AAAAAAACYG}
{\bkmkend AAAAAAACYG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The requested data-reporting mode for the data type specified by responseType. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v COMPACT\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:COMPACT}
{\qr COMPACT{\bkmkstart AAAAAAACYH}
{\bkmkend AAAAAAACYH}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The response data is limited to provide the application with the pertinent tag-access operation data, but minimize the amount of MAC-to- host communication overhead. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v NORMAL\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:NORMAL}
{\qr NORMAL{\bkmkstart AAAAAAACYI}
{\bkmkend AAAAAAACYI}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The response data builds on the compact mode to provide the application with status and contextual information to give additional finer- grained feedback such as the beginning of inventory cycles, etc. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v EXTENDED\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:EXTENDED}
{\qr EXTENDED{\bkmkstart AAAAAAACYJ}
{\bkmkend AAAAAAACYJ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The response data builds on the normal mode by providing additional diagnostics and statistical information. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v UNKNOWN\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:UNKNOWN}
{\qr UNKNOWN{\bkmkstart AAAAAAACYK}
{\bkmkend AAAAAAACYK}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Unknown Mode \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
}
}
{\xe \v ResponseType\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:ResponseType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b CSLibrary.Constants.ResponseType} : uint{\f2 [strong]}}}
\par
{\bkmkstart AAAAAAACYL}
{\bkmkend AAAAAAACYL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The type of data that will have its mode set to the mode specified by responseMode. For version 1.1 of the RFID Reader Library, the only valid value is RFID_RESPONSE_TYPE_DATA. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v DATA\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:DATA}
{\qr DATA{\bkmkstart AAAAAAACYM}
{\bkmkend AAAAAAACYM}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
an application can control the mode of data reporting in response to a tag-access operation (i.e., inventory, read, etc.). \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v UNKNOWN\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:UNKNOWN}
{\qr UNKNOWN{\bkmkstart AAAAAAACYN}
{\bkmkend AAAAAAACYN}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Unknown mode \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
}
}
{\xe \v Result\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Result}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b CSLibrary.Constants.Result} : int{\f2 [strong]}}}
\par
{\bkmkstart AAAAAAACYO}
{\bkmkend AAAAAAACYO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
function Result value definitions }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v OK\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:OK}
{\qr OK{\bkmkstart AAAAAAACYP}
{\bkmkend AAAAAAACYP}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Success \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ALREADY_OPEN\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:ALREADY_OPEN}
{\qr ALREADY_OPEN{\bkmkstart AAAAAAACYQ}
{\bkmkend AAAAAAACYQ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Attempted to open a radio that is already open \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v BUFFER_TOO_SMALL\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:BUFFER_TOO_SMALL}
{\qr BUFFER_TOO_SMALL{\bkmkstart AAAAAAACYR}
{\bkmkend AAAAAAACYR}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Buffer supplied is too small \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v FAILURE\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:FAILURE}
{\qr FAILURE{\bkmkstart AAAAAAACYS}
{\bkmkend AAAAAAACYS}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
General failure \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v DRIVER_LOAD\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:DRIVER_LOAD}
{\qr DRIVER_LOAD{\bkmkstart AAAAAAACYT}
{\bkmkend AAAAAAACYT}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Failed to load radio bus driver \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v DRIVER_MISMATCH\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:DRIVER_MISMATCH}
{\qr DRIVER_MISMATCH{\bkmkstart AAAAAAACYU}
{\bkmkend AAAAAAACYU}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Library cannot use version of radio bus driver present on system \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v EMULATION_MODE\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:EMULATION_MODE}
{\qr EMULATION_MODE{\bkmkstart AAAAAAACYV}
{\bkmkend AAAAAAACYV}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Operation cannot be performed while library is in emulation mode \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v INVALID_ANTENNA\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:INVALID_ANTENNA}
{\qr INVALID_ANTENNA{\bkmkstart AAAAAAACYW}
{\bkmkend AAAAAAACYW}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Antenna number is invalid \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v INVALID_HANDLE\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:INVALID_HANDLE}
{\qr INVALID_HANDLE{\bkmkstart AAAAAAACYX}
{\bkmkend AAAAAAACYX}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Radio handle provided is invalid \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v INVALID_PARAMETER\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:INVALID_PARAMETER}
{\qr INVALID_PARAMETER{\bkmkstart AAAAAAACYY}
{\bkmkend AAAAAAACYY}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
One of the parameters to the function is invalid \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v NO_SUCH_RADIO\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:NO_SUCH_RADIO}
{\qr NO_SUCH_RADIO{\bkmkstart AAAAAAACYZ}
{\bkmkend AAAAAAACYZ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Attempted to open a non-existent radio \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v NOT_INITIALIZED\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:NOT_INITIALIZED}
{\qr NOT_INITIALIZED{\bkmkstart AAAAAAACZA}
{\bkmkend AAAAAAACZA}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Library has not been successfully initialized \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v NOT_SUPPORTED\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:NOT_SUPPORTED}
{\qr NOT_SUPPORTED{\bkmkstart AAAAAAACZB}
{\bkmkend AAAAAAACZB}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Function not supported \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v OPERATION_CANCELLED\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:OPERATION_CANCELLED}
{\qr OPERATION_CANCELLED{\bkmkstart AAAAAAACZC}
{\bkmkend AAAAAAACZC}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Op cancelled by cancel op func, close radio, or library shutdown \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v OUT_OF_MEMORY\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:OUT_OF_MEMORY}
{\qr OUT_OF_MEMORY{\bkmkstart AAAAAAACZD}
{\bkmkend AAAAAAACZD}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Library encountered an error allocating memory \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v RADIO_BUSY\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:RADIO_BUSY}
{\qr RADIO_BUSY{\bkmkstart AAAAAAACZE}
{\bkmkend AAAAAAACZE}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The operation cannot be performed because the radio is currently busy \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v RADIO_FAILURE\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:RADIO_FAILURE}
{\qr RADIO_FAILURE{\bkmkstart AAAAAAACZF}
{\bkmkend AAAAAAACZF}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The underlying radio module encountered an error \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v RADIO_NOT_PRESENT\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:RADIO_NOT_PRESENT}
{\qr RADIO_NOT_PRESENT{\bkmkstart AAAAAAACZG}
{\bkmkend AAAAAAACZG}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The radio has been detached from the system \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CURRENTLY_NOT_ALLOWED\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CURRENTLY_NOT_ALLOWED}
{\qr CURRENTLY_NOT_ALLOWED{\bkmkstart AAAAAAACZH}
{\bkmkend AAAAAAACZH}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The RFID library function is not allowed at this time. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v RADIO_NOT_RESPONDING\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:RADIO_NOT_RESPONDING}
{\qr RADIO_NOT_RESPONDING{\bkmkstart AAAAAAACZI}
{\bkmkend AAAAAAACZI}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The radio module's MAC firmware is not responding to requests. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v NONVOLATILE_INIT_FAILED\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:NONVOLATILE_INIT_FAILED}
{\qr NONVOLATILE_INIT_FAILED{\bkmkstart AAAAAAACZJ}
{\bkmkend AAAAAAACZJ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The MAC firmware encountered an error while initiating the nonvolatile memory update. The MAC firmware will return to its normal idle state without resetting the radio module. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v NONVOLATILE_OUT_OF_BOUNDS\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:NONVOLATILE_OUT_OF_BOUNDS}
{\qr NONVOLATILE_OUT_OF_BOUNDS{\bkmkstart AAAAAAACZK}
{\bkmkend AAAAAAACZK}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
An attempt was made to write data to an address that is not in the valid range of radio module nonvolatile memory addresses. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v NONVOLATILE_WRITE_FAILED\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:NONVOLATILE_WRITE_FAILED}
{\qr NONVOLATILE_WRITE_FAILED{\bkmkstart AAAAAAACZL}
{\bkmkend AAAAAAACZL}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The MAC firmware encountered an error while trying to write to the radio module's nonvolatile memory region. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v RECEIVE_OVERFLOW\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:RECEIVE_OVERFLOW}
{\qr RECEIVE_OVERFLOW{\bkmkstart AAAAAAACZM}
{\bkmkend AAAAAAACZM}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The underlying transport layer detected that there was an overflow error Resulting in one or more bytes of the incoming data being dropped. The operation was aborted and all data in the pipeline was flushed. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v SYSTEM_CATCH_EXCEPTION\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:SYSTEM_CATCH_EXCEPTION}
{\qr SYSTEM_CATCH_EXCEPTION{\bkmkstart AAAAAAACZN}
{\bkmkend AAAAAAACZN}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
System catch exception \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v NO_TAG_FOUND\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:NO_TAG_FOUND}
{\qr NO_TAG_FOUND{\bkmkstart AAAAAAACZO}
{\bkmkend AAAAAAACZO}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
No Tag Found \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v MAX_RETRY_EXIT\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:MAX_RETRY_EXIT}
{\qr MAX_RETRY_EXIT{\bkmkstart AAAAAAACZP}
{\bkmkend AAAAAAACZP}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tag access maximum retry error \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v UNKNOWN_OPERATION\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:UNKNOWN_OPERATION}
{\qr UNKNOWN_OPERATION{\bkmkstart AAAAAAACZQ}
{\bkmkend AAAAAAACZQ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Unknown Operation \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v PREALLOCATED_BUFFER_FULL\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:PREALLOCATED_BUFFER_FULL}
{\qr PREALLOCATED_BUFFER_FULL{\bkmkstart AAAAAAACZR}
{\bkmkend AAAAAAACZR}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pre-allocated buffer is full \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v POWER_UP_FAIL\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:POWER_UP_FAIL}
{\qr POWER_UP_FAIL{\bkmkstart AAAAAAACZS}
{\bkmkend AAAAAAACZS}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RFID Power up failed \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v POWER_DOWN_FAIL\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:POWER_DOWN_FAIL}
{\qr POWER_DOWN_FAIL{\bkmkstart AAAAAAACZT}
{\bkmkend AAAAAAACZT}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RFID Power down failed \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v NETWORK_RESET\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:NETWORK_RESET}
{\qr NETWORK_RESET{\bkmkstart AAAAAAACZU}
{\bkmkend AAAAAAACZU}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Network reset \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v NETWORK_LOST\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:NETWORK_LOST}
{\qr NETWORK_LOST{\bkmkstart AAAAAAACZV}
{\bkmkend AAAAAAACZV}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Network lost \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v INVALID_OEM_COUNTRY_CODE\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:INVALID_OEM_COUNTRY_CODE}
{\qr INVALID_OEM_COUNTRY_CODE{\bkmkstart AAAAAAACZW}
{\bkmkend AAAAAAACZW}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OEM Country code invalid \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v DEVICE_NOT_SUPPORT\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:DEVICE_NOT_SUPPORT}
{\qr DEVICE_NOT_SUPPORT{\bkmkstart AAAAAAACZX}
{\bkmkend AAAAAAACZX}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Device not support \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v DEVICE_CONNECTED\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:DEVICE_CONNECTED}
{\qr DEVICE_CONNECTED{\bkmkstart AAAAAAACZY}
{\bkmkend AAAAAAACZY}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Device Connected \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v THREAD_ERROR\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:THREAD_ERROR}
{\qr THREAD_ERROR{\bkmkstart AAAAAAACZZ}
{\bkmkend AAAAAAACZZ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Process thread error. \par
}\cell }{\row }
{\xe \v MAC_ERROR\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:MAC_ERROR}
{\qr MAC_ERROR{\bkmkstart AAAAAAADAA}
{\bkmkend AAAAAAADAA}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
MAC ERROR \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
}
}
{\xe \v RFID_18K6C\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:RFID_18K6C}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b CSLibrary.Constants.RFID_18K6C} : byte{\f2 [strong]}}}
\par
{\bkmkstart AAAAAAADAB}
{\bkmkend AAAAAAADAB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The values that can be found in the command field for tag access packets }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v QUERYREP\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:QUERYREP}
{\qr QUERYREP{\bkmkstart AAAAAAADAC}
{\bkmkend AAAAAAADAC}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ISO 18000-6C query response \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ACK\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:ACK}
{\qr ACK{\bkmkstart AAAAAAADAD}
{\bkmkend AAAAAAADAD}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ISO 18000-6C ACK \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v QUERY\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:QUERY}
{\qr QUERY{\bkmkstart AAAAAAADAE}
{\bkmkend AAAAAAADAE}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ISO 18000-6C Query \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v QUERYADJ\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:QUERYADJ}
{\qr QUERYADJ{\bkmkstart AAAAAAADAF}
{\bkmkend AAAAAAADAF}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ISO 18000-6C Query adj \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v SELECT\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:SELECT}
{\qr SELECT{\bkmkstart AAAAAAADAG}
{\bkmkend AAAAAAADAG}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ISO 18000-6C Select \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v NAK\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:NAK}
{\qr NAK{\bkmkstart AAAAAAADAH}
{\bkmkend AAAAAAADAH}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ISO 18000-6C Nak \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v REQRN\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:REQRN}
{\qr REQRN{\bkmkstart AAAAAAADAI}
{\bkmkend AAAAAAADAI}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ISO 18000-6C request RN \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v READ\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:READ}
{\qr READ{\bkmkstart AAAAAAADAJ}
{\bkmkend AAAAAAADAJ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ISO 18000-6C Read \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v WRITE\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:WRITE}
{\qr WRITE{\bkmkstart AAAAAAADAK}
{\bkmkend AAAAAAADAK}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ISO 18000-6C Write \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v KILL\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:KILL}
{\qr KILL{\bkmkstart AAAAAAADAL}
{\bkmkend AAAAAAADAL}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ISO 18000-6C Kill \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v LOCK\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:LOCK}
{\qr LOCK{\bkmkstart AAAAAAADAM}
{\bkmkend AAAAAAADAM}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ISO 18000-6C Lock \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ACCESS\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:ACCESS}
{\qr ACCESS{\bkmkstart AAAAAAADAN}
{\bkmkend AAAAAAADAN}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ISO 18000-6C Access \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v BLOCKWRITE\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:BLOCKWRITE}
{\qr BLOCKWRITE{\bkmkstart AAAAAAADAO}
{\bkmkend AAAAAAADAO}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ISO 18000-6C Block write \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v BLOCKERASE\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:BLOCKERASE}
{\qr BLOCKERASE{\bkmkstart AAAAAAADAP}
{\bkmkend AAAAAAADAP}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ISO 18000-6C Block erase \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v QT\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:QT}
{\qr QT{\bkmkstart AAAAAAADAQ}
{\bkmkend AAAAAAADAQ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ISO 18000-6C QT command \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v UNKNOWN\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:UNKNOWN}
{\qr UNKNOWN{\bkmkstart AAAAAAADAR}
{\bkmkend AAAAAAADAR}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Unknown \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
}
}
{\xe \v RFID_ACCESS\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:RFID_ACCESS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b CSLibrary.Constants.RFID_ACCESS} : byte{\f2 [strong]}}}
\par
{\bkmkstart AAAAAAADAS}
{\bkmkend AAAAAAADAS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tag access enum Result }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v GENERAL_ERR\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:GENERAL_ERR}
{\qr GENERAL_ERR{\bkmkstart AAAAAAADAT}
{\bkmkend AAAAAAADAT}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
general error (catch-all for errors not covered by codes) \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v MEMORY_LOCATION_NOT_EXIST\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:MEMORY_LOCATION_NOT_EXIST}
{\qr MEMORY_LOCATION_NOT_EXIST{\bkmkstart AAAAAAADAU}
{\bkmkend AAAAAAADAU}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
specified memory location does not exist of the PC value is not supported by the tag \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v PERMISSION_DENIED\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:PERMISSION_DENIED}
{\qr PERMISSION_DENIED{\bkmkstart AAAAAAADAV}
{\bkmkend AAAAAAADAV}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
specified memory location is locked and/or permalocked and is not writeable \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v INSUFFICIENT_POWER_TO_WRITE\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:INSUFFICIENT_POWER_TO_WRITE}
{\qr INSUFFICIENT_POWER_TO_WRITE{\bkmkstart AAAAAAADAW}
{\bkmkend AAAAAAADAW}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
tag has insufficient power to perform the memory write \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v NOT_SUPPORTED\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:NOT_SUPPORTED}
{\qr NOT_SUPPORTED{\bkmkstart AAAAAAADAX}
{\bkmkend AAAAAAADAX}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
tag does not support error-specific codes \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ACK_TIMEOUT\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:ACK_TIMEOUT}
{\qr ACK_TIMEOUT{\bkmkstart AAAAAAADAY}
{\bkmkend AAAAAAADAY}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tag failed to respond within timeout. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CRC_INVALID\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CRC_INVALID}
{\qr CRC_INVALID{\bkmkstart AAAAAAADAZ}
{\bkmkend AAAAAAADAZ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CRC was invalid \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v WRITE_VERIFY_FAILED\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:WRITE_VERIFY_FAILED}
{\qr WRITE_VERIFY_FAILED{\bkmkstart AAAAAAADBA}
{\bkmkend AAAAAAADBA}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Read after write verify failed. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v PROBLEM_TRANSMITTING_TAG_CMD\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:PROBLEM_TRANSMITTING_TAG_CMD}
{\qr PROBLEM_TRANSMITTING_TAG_CMD{\bkmkstart AAAAAAADBB}
{\bkmkend AAAAAAADBB}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Problem transmitting tag command. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CRC_INVALID_ON_WRITE\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CRC_INVALID_ON_WRITE}
{\qr CRC_INVALID_ON_WRITE{\bkmkstart AAAAAAADBC}
{\bkmkend AAAAAAADBC}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CRC error on tag response to a write. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CRC_INVALID_ON_READ\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CRC_INVALID_ON_READ}
{\qr CRC_INVALID_ON_READ{\bkmkstart AAAAAAADBD}
{\bkmkend AAAAAAADBD}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CRC error on the read packet when verifying the write. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v WRITE_RETRY_EXCEEDED\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:WRITE_RETRY_EXCEEDED}
{\qr WRITE_RETRY_EXCEEDED{\bkmkstart AAAAAAADBE}
{\bkmkend AAAAAAADBE}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Maximum retry's on the write exceeded. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v READ_TIMEOUT\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:READ_TIMEOUT}
{\qr READ_TIMEOUT{\bkmkstart AAAAAAADBF}
{\bkmkend AAAAAAADBF}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Failed waiting for read data from tag, possible timeout. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v REQ_TAG_HANDLE_FAILED\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:REQ_TAG_HANDLE_FAILED}
{\qr REQ_TAG_HANDLE_FAILED{\bkmkstart AAAAAAADBG}
{\bkmkend AAAAAAADBG}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Failure requesting a new tag handle. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v RESP_TIMEOUT\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:RESP_TIMEOUT}
{\qr RESP_TIMEOUT{\bkmkstart AAAAAAADBH}
{\bkmkend AAAAAAADBH}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Error waiting for tag response, possible timeout. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CRC_INVALID_ON_KILL\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CRC_INVALID_ON_KILL}
{\qr CRC_INVALID_ON_KILL{\bkmkstart AAAAAAADBI}
{\bkmkend AAAAAAADBI}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CRC error on tag response to a kill. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v PROBLEM_TRANSMITTING_KILL_CMD\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:PROBLEM_TRANSMITTING_KILL_CMD}
{\qr PROBLEM_TRANSMITTING_KILL_CMD{\bkmkstart AAAAAAADBJ}
{\bkmkend AAAAAAADBJ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Problem transmitting 2nd half of tag kill. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v INVALID_HANDLE_ON_KILL_CMD\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:INVALID_HANDLE_ON_KILL_CMD}
{\qr INVALID_HANDLE_ON_KILL_CMD{\bkmkstart AAAAAAADBK}
{\bkmkend AAAAAAADBK}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tag responded with an invalid handle on first kill command. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v UNKNOWN\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:UNKNOWN}
{\qr UNKNOWN{\bkmkstart AAAAAAADBL}
{\bkmkend AAAAAAADBL}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
can't determine error type \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v SUCCESS\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:SUCCESS}
{\qr SUCCESS{\bkmkstart AAAAAAADBM}
{\bkmkend AAAAAAADBM}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
access success \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
}
}
{\xe \v RFID_COMMAND_TYPE_18K6C\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:RFID_COMMAND_TYPE_18K6C}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b CSLibrary.Constants.RFID_COMMAND_TYPE_18K6C} : uint{\f2 [strong]}}}
\par
{\bkmkstart AAAAAAADBN}
{\bkmkend AAAAAAADBN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Constants} for the command begin's cmd field }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v INVENTORY\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:INVENTORY}
{\qr INVENTORY{\bkmkstart AAAAAAADBO}
{\bkmkend AAAAAAADBO}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ISO 18000-6C Inventory \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v READ\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:READ}
{\qr READ{\bkmkstart AAAAAAADBP}
{\bkmkend AAAAAAADBP}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ISO 18000-6C Read \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v WRITE\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:WRITE}
{\qr WRITE{\bkmkstart AAAAAAADBQ}
{\bkmkend AAAAAAADBQ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ISO 18000-6C Write \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v LOCK\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:LOCK}
{\qr LOCK{\bkmkstart AAAAAAADBR}
{\bkmkend AAAAAAADBR}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ISO 18000-6C Lock \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v KILL\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:KILL}
{\qr KILL{\bkmkstart AAAAAAADBS}
{\bkmkend AAAAAAADBS}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ISO 18000-6C Kill \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
}
}
{\xe \v RFID_PACKET_TYPE\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:RFID_PACKET_TYPE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b CSLibrary.Constants.RFID_PACKET_TYPE} : ushort{\f2 [strong]}}}
\par
{\bkmkstart AAAAAAADBT}
{\bkmkend AAAAAAADBT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The 16-bit packet types that will be found in the common packet header pkt_type field. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
When adding a new packet type to a class, simply append it to end of the appropriate type's enumeration list.\par
NOTE: These packet type constants are in the endian format for the system upon which the compile is being performed. Before comparing them against the packet type field from the packet, ensure that, if necessary, the packet type field is converted from little endian (i.e., MAC format) to the endian format for the system running the application. \par
}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v COMMAND_BEGIN\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:COMMAND_BEGIN}
{\qr COMMAND_BEGIN{\bkmkstart AAAAAAADBU}
{\bkmkend AAAAAAADBU}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The command-begin packet indicates the start of a sequence of packets for an ISO 18000-6C tag-protocol operation (i.e. inventory, read, etc.). The type of command executed by the RFID radio module determines which data packets appear, and in what order they appear, between the command-begin/end packet pair. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v COMMAND_END\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:COMMAND_END}
{\qr COMMAND_END{\bkmkstart AAAAAAADBV}
{\bkmkend AAAAAAADBV}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The command-end packet indicates the end of sequence of packets for an ISO 18000- 6C tag-protocol operation. A command-end packet is always used to terminate a packet sequence regardless of the fact that a tag-access operation is completed successfully or not. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ANTENNA_CYCLE_BEGIN\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:ANTENNA_CYCLE_BEGIN}
{\qr ANTENNA_CYCLE_BEGIN{\bkmkstart AAAAAAADBW}
{\bkmkend AAAAAAADBW}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The antenna-cycle-begin packet indicates the start of one iteration through all enabled, functional antennas. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ANTENNA_BEGIN\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:ANTENNA_BEGIN}
{\qr ANTENNA_BEGIN{\bkmkstart AAAAAAADBX}
{\bkmkend AAAAAAADBX}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The antenna-begin packet indicates the radio has begun using a particular antenna for the current cycle. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ISO18K6C_INVENTORY_ROUND_BEGIN\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:ISO18K6C_INVENTORY_ROUND_BEGIN}
{\qr ISO18K6C_INVENTORY_ROUND_BEGIN{\bkmkstart AAAAAAADBY}
{\bkmkend AAAAAAADBY}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The ISO 18000-6C inventory-round-begin packet indicates that an ISO 18000-6C inventory round has begun on an antenna. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ISO18K6C_INVENTORY\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:ISO18K6C_INVENTORY}
{\qr ISO18K6C_INVENTORY{\bkmkstart AAAAAAADBZ}
{\bkmkend AAAAAAADBZ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The ISO 18000-6C inventory-response packet contains the data a tag backscatters during the tag-singulation phase. This data is generated for tag inventories as well as ISO 18000-6C tag-access operations (i.e. read, write, etc.). Assuming a valid CRC, the data contains the PC+EPC+CRC16 received during the singulation of a tag. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ISO18K6C_TAG_ACCESS\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:ISO18K6C_TAG_ACCESS}
{\qr ISO18K6C_TAG_ACCESS{\bkmkstart AAAAAAADCA}
{\bkmkend AAAAAAADCA}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The ISO 18000-6C tag-access packet indicates the Result of the tag-access command upon the ISO 18000-6C tag. Valid tag access commands are as follows: Read, Write, Kill, Lock, Erase \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ANTENNA_CYCLE_END\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:ANTENNA_CYCLE_END}
{\qr ANTENNA_CYCLE_END{\bkmkstart AAAAAAADCB}
{\bkmkend AAAAAAADCB}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The antenna-cycle-end packet indicates the end of one iteration through all enabled, functional antennas. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ANTENNA_END\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:ANTENNA_END}
{\qr ANTENNA_END{\bkmkstart AAAAAAADCC}
{\bkmkend AAAAAAADCC}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The antenna-end packet indicates that the radio has stopped using a particular antenna for the current cycle. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ISO18K6C_INVENTORY_ROUND_END\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:ISO18K6C_INVENTORY_ROUND_END}
{\qr ISO18K6C_INVENTORY_ROUND_END{\bkmkstart AAAAAAADCD}
{\bkmkend AAAAAAADCD}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The ISO 18000-6C inventory-round-end packet indicates that an ISO 18000-6C inventory round has ended on an antenna. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v INVENTORY_CYCLE_BEGIN\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:INVENTORY_CYCLE_BEGIN}
{\qr INVENTORY_CYCLE_BEGIN{\bkmkstart AAAAAAADCE}
{\bkmkend AAAAAAADCE}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The inventory-cycle-begin packet indicates that an inventory round has begun on an antenna. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v INVENTORY_CYCLE_END\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:INVENTORY_CYCLE_END}
{\qr INVENTORY_CYCLE_END{\bkmkstart AAAAAAADCF}
{\bkmkend AAAAAAADCF}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The inventory-cycle-end packet indicates that an inventory round has ended on an antenna. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CARRIER_INFO\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CARRIER_INFO}
{\qr CARRIER_INFO{\bkmkstart AAAAAAADCG}
{\bkmkend AAAAAAADCG}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The Carrier info packet is sent by the Intel\'AE R1000 Firmware whenever Transmit CW is turned on and whenever it is turned off. The purpose is to provide timing information frequency channel use information to the host application. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CYCCFG_EVT\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CYCCFG_EVT}
{\qr CYCCFG_EVT{\bkmkstart AAAAAAADCH}
{\bkmkend AAAAAAADCH}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The Cycle configuration event packet is sent when the Intel\'AE R1000 Firmware performs a cycle granular configuration adjustment. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v RES0\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:RES0}
{\qr RES0{\bkmkstart AAAAAAADCI}
{\bkmkend AAAAAAADCI}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reserved \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v RES1\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:RES1}
{\qr RES1{\bkmkstart AAAAAAADCJ}
{\bkmkend AAAAAAADCJ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reserved \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v RES2\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:RES2}
{\qr RES2{\bkmkstart AAAAAAADCK}
{\bkmkend AAAAAAADCK}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reserved \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v RES3\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:RES3}
{\qr RES3{\bkmkstart AAAAAAADCL}
{\bkmkend AAAAAAADCL}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reserved \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ISO18K6C_INVENTORY_ROUND_BEGIN_DIAGS\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:ISO18K6C_INVENTORY_ROUND_BEGIN_DIAGS}
{\qr ISO18K6C_INVENTORY_ROUND_BEGIN_DIAGS{\bkmkstart AAAAAAADCM}
{\bkmkend AAAAAAADCM}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The ISO 18000-6C inventory-round-begin-diagnostics packet appears at the beginning of an ISO 18000-6C inventory round and contains diagnostics information related to the inventory round that is about to commence. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ISO18K6C_INVENTORY_ROUND_END_DIAGS\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:ISO18K6C_INVENTORY_ROUND_END_DIAGS}
{\qr ISO18K6C_INVENTORY_ROUND_END_DIAGS{\bkmkstart AAAAAAADCN}
{\bkmkend AAAAAAADCN}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The ISO 18000-6C inventory-round-end-diagnostics packet appears at the end of an ISO 18000-6C inventory round and contains diagnostics information related to the inventory round that has just completed. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ISO18K6C_INVENTORY_DIAGS\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:ISO18K6C_INVENTORY_DIAGS}
{\qr ISO18K6C_INVENTORY_DIAGS{\bkmkstart AAAAAAADCO}
{\bkmkend AAAAAAADCO}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The ISO 18000-6C inventory-response diagnostics packet is used to convey diagnostics information for the tag during the ISO 18000-6C inventory. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v RES4\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:RES4}
{\qr RES4{\bkmkstart AAAAAAADCP}
{\bkmkend AAAAAAADCP}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reserved \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v INVENTORY_CYCLE_END_DIAGS\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:INVENTORY_CYCLE_END_DIAGS}
{\qr INVENTORY_CYCLE_END_DIAGS{\bkmkstart AAAAAAADCQ}
{\bkmkend AAAAAAADCQ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The inventory-cycle-end-diagnostics packet appears at the end of an inventory round and contains diagnostics information related to the inventory round that has just completed. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v NONCRITICAL_FAULT\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:NONCRITICAL_FAULT}
{\qr NONCRITICAL_FAULT{\bkmkstart AAAAAAADCR}
{\bkmkend AAAAAAADCR}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The packet types for the status packets. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
}
}
{\xe \v RFState\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:RFState}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b CSLibrary.Constants.RFState}{\f2 [strong]}}}
\par
{\bkmkstart AAAAAAADCS}
{\bkmkend AAAAAAADCS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reader Operation State }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RFID device status \par
}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v IDLE\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:IDLE}
{\qr IDLE{\bkmkstart AAAAAAADCT}
{\bkmkend AAAAAAADCT}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Idle mode, ready for any operation. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v BUSY\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:BUSY}
{\qr BUSY{\bkmkstart AAAAAAADCU}
{\bkmkend AAAAAAADCU}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Operation is running, please stop it before do any other operation. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ABORT\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:ABORT}
{\qr ABORT{\bkmkstart AAAAAAADCV}
{\bkmkend AAAAAAADCV}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Operation is stopping, please wait until back to Idle mode. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v RESET\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:RESET}
{\qr RESET{\bkmkstart AAAAAAADCW}
{\bkmkend AAAAAAADCW}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reader is required to reset. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v SHUTDOWN\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:SHUTDOWN}
{\qr SHUTDOWN{\bkmkstart AAAAAAADCX}
{\bkmkend AAAAAAADCX}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
buffer full \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ERROR\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:ERROR}
{\qr ERROR{\bkmkstart AAAAAAADCY}
{\bkmkend AAAAAAADCY}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reader is in error stage, please restart reader. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ANT_CYCLE_END\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:ANT_CYCLE_END}
{\qr ANT_CYCLE_END{\bkmkstart AAAAAAADCZ}
{\bkmkend AAAAAAADCZ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Anntenna Cycle End {\b Notification}. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CH_BUSY\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CH_BUSY}
{\qr CH_BUSY{\bkmkstart AAAAAAADDA}
{\bkmkend AAAAAAADDA}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Channel hit \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CH_CLEAR\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CH_CLEAR}
{\qr CH_CLEAR{\bkmkstart AAAAAAADDB}
{\bkmkend AAAAAAADDB}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Channel clear \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v EAS_ALARM\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:EAS_ALARM}
{\qr EAS_ALARM{\bkmkstart AAAAAAADDC}
{\bkmkend AAAAAAADDC}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EAS Alert \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v BUFFER_FULL\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:BUFFER_FULL}
{\qr BUFFER_FULL{\bkmkstart AAAAAAADDD}
{\bkmkend AAAAAAADDD}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Receive Buffer Full \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v INVENTORY_MAC_ERROR\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:INVENTORY_MAC_ERROR}
{\qr INVENTORY_MAC_ERROR{\bkmkstart AAAAAAADDE}
{\bkmkend AAAAAAADDE}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inventory MAC Error \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CARRIER_INFO\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CARRIER_INFO}
{\qr CARRIER_INFO{\bkmkstart AAAAAAADDF}
{\bkmkend AAAAAAADDF}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Received Carrier Info \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v INVENTORY_CYCLE_BEGIN\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:INVENTORY_CYCLE_BEGIN}
{\qr INVENTORY_CYCLE_BEGIN{\bkmkstart AAAAAAADDG}
{\bkmkend AAAAAAADDG}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inventory Cycle Begin \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v INITIALIZATION_COMPLETE\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:INITIALIZATION_COMPLETE}
{\qr INITIALIZATION_COMPLETE{\bkmkstart AAAAAAADDH}
{\bkmkend AAAAAAADDH}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reader initialization complete \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v UNKNOWN\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:UNKNOWN}
{\qr UNKNOWN{\bkmkstart AAAAAAADDI}
{\bkmkend AAAAAAADDI}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Unknown operation \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v IDLE\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:IDLE}
{\qr IDLE{\bkmkstart AAAAAAADCT}
{\bkmkend AAAAAAADCT}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Idle mode, ready for any operation. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v BUSY\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:BUSY}
{\qr BUSY{\bkmkstart AAAAAAADCU}
{\bkmkend AAAAAAADCU}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Operation is running, please stop it before do any other operation. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ABORT\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:ABORT}
{\qr ABORT{\bkmkstart AAAAAAADCV}
{\bkmkend AAAAAAADCV}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Operation is stopping, please wait until back to Idle mode. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v RESET\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:RESET}
{\qr RESET{\bkmkstart AAAAAAADCW}
{\bkmkend AAAAAAADCW}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reader is required to reset. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v SHUTDOWN\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:SHUTDOWN}
{\qr SHUTDOWN{\bkmkstart AAAAAAADCX}
{\bkmkend AAAAAAADCX}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
buffer full \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ERROR\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:ERROR}
{\qr ERROR{\bkmkstart AAAAAAADCY}
{\bkmkend AAAAAAADCY}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reader is in error stage, please restart reader. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ANT_CYCLE_END\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:ANT_CYCLE_END}
{\qr ANT_CYCLE_END{\bkmkstart AAAAAAADCZ}
{\bkmkend AAAAAAADCZ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Anntenna Cycle End {\b Notification}. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CH_BUSY\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CH_BUSY}
{\qr CH_BUSY{\bkmkstart AAAAAAADDA}
{\bkmkend AAAAAAADDA}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Channel hit \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CH_CLEAR\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CH_CLEAR}
{\qr CH_CLEAR{\bkmkstart AAAAAAADDB}
{\bkmkend AAAAAAADDB}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Channel clear \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v EAS_ALARM\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:EAS_ALARM}
{\qr EAS_ALARM{\bkmkstart AAAAAAADDC}
{\bkmkend AAAAAAADDC}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EAS Alert \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v BUFFER_FULL\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:BUFFER_FULL}
{\qr BUFFER_FULL{\bkmkstart AAAAAAADDD}
{\bkmkend AAAAAAADDD}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Receive Buffer Full \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v INVENTORY_MAC_ERROR\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:INVENTORY_MAC_ERROR}
{\qr INVENTORY_MAC_ERROR{\bkmkstart AAAAAAADDE}
{\bkmkend AAAAAAADDE}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inventory MAC Error \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CARRIER_INFO\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CARRIER_INFO}
{\qr CARRIER_INFO{\bkmkstart AAAAAAADDF}
{\bkmkend AAAAAAADDF}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Received Carrier Info \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v INVENTORY_CYCLE_BEGIN\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:INVENTORY_CYCLE_BEGIN}
{\qr INVENTORY_CYCLE_BEGIN{\bkmkstart AAAAAAADDG}
{\bkmkend AAAAAAADDG}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inventory Cycle Begin \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v UNKNOWN\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:UNKNOWN}
{\qr UNKNOWN{\bkmkstart AAAAAAADDI}
{\bkmkend AAAAAAADDI}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Unknown operation \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
}
}
{\xe \v RFState\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:RFState}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b CSLibrary.Constants.RFState}{\f2 [strong]}}}
\par
{\bkmkstart AAAAAAADCS}
{\bkmkend AAAAAAADCS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RFID device status }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v IDLE\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:IDLE}
{\qr IDLE{\bkmkstart AAAAAAADCT}
{\bkmkend AAAAAAADCT}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Idle mode, ready for any operation. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v BUSY\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:BUSY}
{\qr BUSY{\bkmkstart AAAAAAADCU}
{\bkmkend AAAAAAADCU}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Operation is running, please stop it before do any other operation. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ABORT\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:ABORT}
{\qr ABORT{\bkmkstart AAAAAAADCV}
{\bkmkend AAAAAAADCV}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Operation is stopping, please wait until back to Idle mode. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v RESET\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:RESET}
{\qr RESET{\bkmkstart AAAAAAADCW}
{\bkmkend AAAAAAADCW}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reader is required to reset. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v SHUTDOWN\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:SHUTDOWN}
{\qr SHUTDOWN{\bkmkstart AAAAAAADCX}
{\bkmkend AAAAAAADCX}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
buffer full \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ERROR\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:ERROR}
{\qr ERROR{\bkmkstart AAAAAAADCY}
{\bkmkend AAAAAAADCY}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reader is in error stage, please restart reader. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ANT_CYCLE_END\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:ANT_CYCLE_END}
{\qr ANT_CYCLE_END{\bkmkstart AAAAAAADCZ}
{\bkmkend AAAAAAADCZ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Anntenna Cycle End {\b Notification}. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CH_BUSY\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CH_BUSY}
{\qr CH_BUSY{\bkmkstart AAAAAAADDA}
{\bkmkend AAAAAAADDA}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Channel hit \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CH_CLEAR\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CH_CLEAR}
{\qr CH_CLEAR{\bkmkstart AAAAAAADDB}
{\bkmkend AAAAAAADDB}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Channel clear \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v EAS_ALARM\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:EAS_ALARM}
{\qr EAS_ALARM{\bkmkstart AAAAAAADDC}
{\bkmkend AAAAAAADDC}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EAS Alert \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v BUFFER_FULL\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:BUFFER_FULL}
{\qr BUFFER_FULL{\bkmkstart AAAAAAADDD}
{\bkmkend AAAAAAADDD}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Receive Buffer Full \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v INVENTORY_MAC_ERROR\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:INVENTORY_MAC_ERROR}
{\qr INVENTORY_MAC_ERROR{\bkmkstart AAAAAAADDE}
{\bkmkend AAAAAAADDE}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inventory MAC Error \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CARRIER_INFO\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CARRIER_INFO}
{\qr CARRIER_INFO{\bkmkstart AAAAAAADDF}
{\bkmkend AAAAAAADDF}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Received Carrier Info \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v INVENTORY_CYCLE_BEGIN\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:INVENTORY_CYCLE_BEGIN}
{\qr INVENTORY_CYCLE_BEGIN{\bkmkstart AAAAAAADDG}
{\bkmkend AAAAAAADDG}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inventory Cycle Begin \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v INITIALIZATION_COMPLETE\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:INITIALIZATION_COMPLETE}
{\qr INITIALIZATION_COMPLETE{\bkmkstart AAAAAAADDH}
{\bkmkend AAAAAAADDH}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reader initialization complete \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v UNKNOWN\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:UNKNOWN}
{\qr UNKNOWN{\bkmkstart AAAAAAADDI}
{\bkmkend AAAAAAADDI}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Unknown operation \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v IDLE\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:IDLE}
{\qr IDLE{\bkmkstart AAAAAAADCT}
{\bkmkend AAAAAAADCT}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Idle mode, ready for any operation. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v BUSY\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:BUSY}
{\qr BUSY{\bkmkstart AAAAAAADCU}
{\bkmkend AAAAAAADCU}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Operation is running, please stop it before do any other operation. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ABORT\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:ABORT}
{\qr ABORT{\bkmkstart AAAAAAADCV}
{\bkmkend AAAAAAADCV}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Operation is stopping, please wait until back to Idle mode. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v RESET\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:RESET}
{\qr RESET{\bkmkstart AAAAAAADCW}
{\bkmkend AAAAAAADCW}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reader is required to reset. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v SHUTDOWN\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:SHUTDOWN}
{\qr SHUTDOWN{\bkmkstart AAAAAAADCX}
{\bkmkend AAAAAAADCX}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
buffer full \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ERROR\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:ERROR}
{\qr ERROR{\bkmkstart AAAAAAADCY}
{\bkmkend AAAAAAADCY}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reader is in error stage, please restart reader. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ANT_CYCLE_END\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:ANT_CYCLE_END}
{\qr ANT_CYCLE_END{\bkmkstart AAAAAAADCZ}
{\bkmkend AAAAAAADCZ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Anntenna Cycle End {\b Notification}. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CH_BUSY\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CH_BUSY}
{\qr CH_BUSY{\bkmkstart AAAAAAADDA}
{\bkmkend AAAAAAADDA}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Channel hit \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CH_CLEAR\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CH_CLEAR}
{\qr CH_CLEAR{\bkmkstart AAAAAAADDB}
{\bkmkend AAAAAAADDB}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Channel clear \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v EAS_ALARM\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:EAS_ALARM}
{\qr EAS_ALARM{\bkmkstart AAAAAAADDC}
{\bkmkend AAAAAAADDC}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EAS Alert \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v BUFFER_FULL\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:BUFFER_FULL}
{\qr BUFFER_FULL{\bkmkstart AAAAAAADDD}
{\bkmkend AAAAAAADDD}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Receive Buffer Full \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v INVENTORY_MAC_ERROR\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:INVENTORY_MAC_ERROR}
{\qr INVENTORY_MAC_ERROR{\bkmkstart AAAAAAADDE}
{\bkmkend AAAAAAADDE}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inventory MAC Error \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v CARRIER_INFO\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:CARRIER_INFO}
{\qr CARRIER_INFO{\bkmkstart AAAAAAADDF}
{\bkmkend AAAAAAADDF}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Received Carrier Info \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v INVENTORY_CYCLE_BEGIN\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:INVENTORY_CYCLE_BEGIN}
{\qr INVENTORY_CYCLE_BEGIN{\bkmkstart AAAAAAADDG}
{\bkmkend AAAAAAADDG}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inventory Cycle Begin \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v UNKNOWN\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:UNKNOWN}
{\qr UNKNOWN{\bkmkstart AAAAAAADDI}
{\bkmkend AAAAAAADDI}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Unknown operation \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
}
}
{\xe \v Selected\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Selected}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b CSLibrary.Constants.Selected} : uint{\f2 [strong]}}}
\par
{\bkmkstart AAAAAAADDJ}
{\bkmkend AAAAAAADDJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Specifies the state of the selected (SL) flag for tags that will have the operation applied to them. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v ALL\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:ALL}
{\qr ALL{\bkmkstart AAAAAAADDK}
{\bkmkend AAAAAAADDK}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Select all \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v DEASSERTED\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:DEASSERTED}
{\qr DEASSERTED{\bkmkstart AAAAAAADDL}
{\bkmkend AAAAAAADDL}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Select off \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ASSERTED\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:ASSERTED}
{\qr ASSERTED{\bkmkstart AAAAAAADDM}
{\bkmkend AAAAAAADDM}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Select on \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v UNKNOWN\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:UNKNOWN}
{\qr UNKNOWN{\bkmkstart AAAAAAADDN}
{\bkmkend AAAAAAADDN}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Unknown \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
}
}
{\xe \v SelectFlags\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:SelectFlags}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b CSLibrary.Constants.SelectFlags}{\f2 [strong]}}}
\par
{\bkmkstart AAAAAAADDO}
{\bkmkend AAAAAAADDO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Select Flags }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v ZERO\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:ZERO}
{\qr ZERO{\bkmkstart AAAAAAADDP}
{\bkmkend AAAAAAADDP}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Normal Inventory \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v SELECT\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:SELECT}
{\qr SELECT{\bkmkstart AAAAAAADDQ}
{\bkmkend AAAAAAADDQ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Use Select Criteria \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v POSTMATCH\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:POSTMATCH}
{\qr POSTMATCH{\bkmkstart AAAAAAADDR}
{\bkmkend AAAAAAADDR}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Use Post-Match Criteria \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v POST_MATCH\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:POST_MATCH}
{\qr POST_MATCH{\bkmkstart AAAAAAADDS}
{\bkmkend AAAAAAADDS}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Using Post-Match Criterion \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v DISABLE_INVENTORY\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:DISABLE_INVENTORY}
{\qr DISABLE_INVENTORY{\bkmkstart AAAAAAADDT}
{\bkmkend AAAAAAADDT}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Disable Inventory \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v READ1BANK\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:READ1BANK}
{\qr READ1BANK{\bkmkstart AAAAAAADDU}
{\bkmkend AAAAAAADDU}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Read 1 bank after Inventory \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v READ2BANK\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:READ2BANK}
{\qr READ2BANK{\bkmkstart AAAAAAADDV}
{\bkmkend AAAAAAADDV}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Read 2 bank after Inventory \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v UNKNOWN\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:UNKNOWN}
{\qr UNKNOWN{\bkmkstart AAAAAAADDW}
{\bkmkend AAAAAAADDW}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Unknown \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ZERO\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:ZERO}
{\qr ZERO{\bkmkstart AAAAAAADDP}
{\bkmkend AAAAAAADDP}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Normal Inventory \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v SELECT\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:SELECT}
{\qr SELECT{\bkmkstart AAAAAAADDQ}
{\bkmkend AAAAAAADDQ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Use Select Criteria \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v POSTMATCH\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:POSTMATCH}
{\qr POSTMATCH{\bkmkstart AAAAAAADDR}
{\bkmkend AAAAAAADDR}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Use Post-Match Criteria \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v POST_MATCH\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:POST_MATCH}
{\qr POST_MATCH{\bkmkstart AAAAAAADDS}
{\bkmkend AAAAAAADDS}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Using Post-Match Criterion \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v DISABLE_INVENTORY\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:DISABLE_INVENTORY}
{\qr DISABLE_INVENTORY{\bkmkstart AAAAAAADDT}
{\bkmkend AAAAAAADDT}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Disable Inventory \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v READ1BANK\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:READ1BANK}
{\qr READ1BANK{\bkmkstart AAAAAAADDU}
{\bkmkend AAAAAAADDU}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Read 1 bank after Inventory \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v READ2BANK\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:READ2BANK}
{\qr READ2BANK{\bkmkstart AAAAAAADDV}
{\bkmkend AAAAAAADDV}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Read 2 bank after Inventory \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v UNKNOWN\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:UNKNOWN}
{\qr UNKNOWN{\bkmkstart AAAAAAADDW}
{\bkmkend AAAAAAADDW}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Unknown \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
}
}
{\xe \v SelectFlags\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:SelectFlags}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b CSLibrary.Constants.SelectFlags}{\f2 [strong]}}}
\par
{\bkmkstart AAAAAAADDO}
{\bkmkend AAAAAAADDO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v ZERO\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:ZERO}
{\qr ZERO{\bkmkstart AAAAAAADDP}
{\bkmkend AAAAAAADDP}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Normal Inventory \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v SELECT\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:SELECT}
{\qr SELECT{\bkmkstart AAAAAAADDQ}
{\bkmkend AAAAAAADDQ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Use Select Criteria \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v POSTMATCH\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:POSTMATCH}
{\qr POSTMATCH{\bkmkstart AAAAAAADDR}
{\bkmkend AAAAAAADDR}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Use Post-Match Criteria \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v POST_MATCH\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:POST_MATCH}
{\qr POST_MATCH{\bkmkstart AAAAAAADDS}
{\bkmkend AAAAAAADDS}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Using Post-Match Criterion \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v DISABLE_INVENTORY\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:DISABLE_INVENTORY}
{\qr DISABLE_INVENTORY{\bkmkstart AAAAAAADDT}
{\bkmkend AAAAAAADDT}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Disable Inventory \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v READ1BANK\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:READ1BANK}
{\qr READ1BANK{\bkmkstart AAAAAAADDU}
{\bkmkend AAAAAAADDU}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Read 1 bank after Inventory \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v READ2BANK\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:READ2BANK}
{\qr READ2BANK{\bkmkstart AAAAAAADDV}
{\bkmkend AAAAAAADDV}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Read 2 bank after Inventory \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v UNKNOWN\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:UNKNOWN}
{\qr UNKNOWN{\bkmkstart AAAAAAADDW}
{\bkmkend AAAAAAADDW}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Unknown \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ZERO\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:ZERO}
{\qr ZERO{\bkmkstart AAAAAAADDP}
{\bkmkend AAAAAAADDP}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Normal Inventory \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v SELECT\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:SELECT}
{\qr SELECT{\bkmkstart AAAAAAADDQ}
{\bkmkend AAAAAAADDQ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Use Select Criteria \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v POSTMATCH\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:POSTMATCH}
{\qr POSTMATCH{\bkmkstart AAAAAAADDR}
{\bkmkend AAAAAAADDR}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Use Post-Match Criteria \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v POST_MATCH\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:POST_MATCH}
{\qr POST_MATCH{\bkmkstart AAAAAAADDS}
{\bkmkend AAAAAAADDS}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Using Post-Match Criterion \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v DISABLE_INVENTORY\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:DISABLE_INVENTORY}
{\qr DISABLE_INVENTORY{\bkmkstart AAAAAAADDT}
{\bkmkend AAAAAAADDT}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Disable Inventory \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v READ1BANK\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:READ1BANK}
{\qr READ1BANK{\bkmkstart AAAAAAADDU}
{\bkmkend AAAAAAADDU}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Read 1 bank after Inventory \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v READ2BANK\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:READ2BANK}
{\qr READ2BANK{\bkmkstart AAAAAAADDV}
{\bkmkend AAAAAAADDV}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Read 2 bank after Inventory \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v UNKNOWN\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:UNKNOWN}
{\qr UNKNOWN{\bkmkstart AAAAAAADDW}
{\bkmkend AAAAAAADDW}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Unknown \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
}
}
{\xe \v SelectMaskFlags\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:SelectMaskFlags}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b CSLibrary.Constants.SelectMaskFlags}{\f2 [strong]}}}
\par
{\bkmkstart AAAAAAADDX}
{\bkmkend AAAAAAADDX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tag Parameters Selected flags }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v DISABLE_ALL\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:DISABLE_ALL}
{\qr DISABLE_ALL{\bkmkstart AAAAAAADDY}
{\bkmkend AAAAAAADDY}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
a flag that enable all disable \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ENABLE_TOGGLE\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:ENABLE_TOGGLE}
{\qr ENABLE_TOGGLE{\bkmkstart AAAAAAADDZ}
{\bkmkend AAAAAAADDZ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A flag that indicates if, after performing the inventory cycle for the specified target (i.e., A or B), if the target should be toggled (i.e., A to B or B to A) and another inventory cycle run. A non- zero value indicates that the target should be toggled. A zero value indicates that the target should not be toggled. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ENABLE_PC_MASK\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:ENABLE_PC_MASK}
{\qr ENABLE_PC_MASK{\bkmkstart AAAAAAADEA}
{\bkmkend AAAAAAADEA}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A flag that enable using PC mask to select a tag. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ENABLE_NON_MATCH\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:ENABLE_NON_MATCH}
{\qr ENABLE_NON_MATCH{\bkmkstart AAAAAAADEB}
{\bkmkend AAAAAAADEB}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A flag that select a tag if the tag is not matching to you selected criteria. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ENABLE_ALL\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:ENABLE_ALL}
{\qr ENABLE_ALL{\bkmkstart AAAAAAADEC}
{\bkmkend AAAAAAADEC}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
a flag that enable all items \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
}
}
{\xe \v Session\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Session}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b CSLibrary.Constants.Session} : uint{\f2 [strong]}}}
\par
{\bkmkstart AAAAAAADED}
{\bkmkend AAAAAAADED}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Specifies which inventory session flag (i.e., S0, S1, S2, or S3) will be matched against the inventory state specified by target. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v S0\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:S0}
{\qr S0{\bkmkstart AAAAAAADEE}
{\bkmkend AAAAAAADEE}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tag energized : Indefinite\par
Tag not energized : None\par
}\cell }{\row }
{\xe \v S1\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:S1}
{\qr S1{\bkmkstart AAAAAAADEF}
{\bkmkend AAAAAAADEF}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tag energized :\par
Norminal temperature range : 5s > persistence > 500ms\par
Exttended temperature range : Not specified\par
Tag not energized :\par
Norminal temperature range : 5s > persistence > 500ms\par
Exttended temperature range : Not specified\par
}\cell }{\row }
{\xe \v S2\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:S2}
{\qr S2{\bkmkstart AAAAAAADEG}
{\bkmkend AAAAAAADEG}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tag energized : Indefinite\par
Tag not energized :\par
Norminal temperature range : persistence > 2s\par
Exttended temperature range : Not specified\par
}\cell }{\row }
{\xe \v S3\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:S3}
{\qr S3{\bkmkstart AAAAAAADEH}
{\bkmkend AAAAAAADEH}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tag energized : Indefinite\par
Tag not energized :\par
Norminal temperature range : persistence > 2s\par
Exttended temperature range : Not specified\par
}\cell }{\row }
{\xe \v UNKNOWN\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:UNKNOWN}
{\qr UNKNOWN{\bkmkstart AAAAAAADEI}
{\bkmkend AAAAAAADEI}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Unknown \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
}
}
{\xe \v SessionTarget\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:SessionTarget}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b CSLibrary.Constants.SessionTarget} : uint{\f2 [strong]}}}
\par
{\bkmkstart AAAAAAADEJ}
{\bkmkend AAAAAAADEJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Specifies the state of the inventory session flag (i.e., A or B), specified by session, for tags that will have the operation applied to them. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v A\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:A}
{\qr A{\bkmkstart AAAAAAADEK}
{\bkmkend AAAAAAADEK}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Session A \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v B\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:B}
{\qr B{\bkmkstart AAAAAAADEL}
{\bkmkend AAAAAAADEL}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Session B \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v UNKNOWN\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:UNKNOWN}
{\qr UNKNOWN{\bkmkstart AAAAAAADEM}
{\bkmkend AAAAAAADEM}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Unknown \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
}
}
{\xe \v SingulationAlgorithm\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:SingulationAlgorithm}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b CSLibrary.Constants.SingulationAlgorithm} : uint{\f2 [strong]}}}
\par
{\bkmkstart AAAAAAADEN}
{\bkmkend AAAAAAADEN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Based upon usage scenarios, different singulation algorithms (i.e., Q-adjustment, etc.) may be desired. This document simply documents the mechanisms by which an application can choose and configure singulation algorithms. This document does not provide specific information about the singulation algorithms. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v FIXEDQ\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:FIXEDQ}
{\qr FIXEDQ{\bkmkstart AAAAAAADEO}
{\bkmkend AAAAAAADEO}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fixed Q value. This is the MAC's singulation algorithm 0 (see [MAC-EDS]). NOTE: when performing non-inventory tag-access operations (i.e., read, write, kill, or lock), the MAC always uses this singulation algorithm. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v DYNAMICQ\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:DYNAMICQ}
{\qr DYNAMICQ{\bkmkstart AAAAAAADEP}
{\bkmkend AAAAAAADEP}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adjusts the Q value based on the presence or absence of tags. This is the MAC's singulation algorithm 1 (see [MAC-EDS]). \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adjusts the Q value based on the presence or absence of tags. This is the MAC's singulation algorithm 2 (see [MAC-EDS]). \par
Adjusts the Q value based on the presence or absence of tags. This is the MAC's singulation algorithm 3 (see [MAC-EDS]). \par
}\cell }{\row }
{\xe \v UNKNOWN\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:UNKNOWN}
{\qr UNKNOWN{\bkmkstart AAAAAAADEQ}
{\bkmkend AAAAAAADEQ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Unknown \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
}
}
{\xe \v TAG_BACKSCATTERED_ERROR\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:TAG_BACKSCATTERED_ERROR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b CSLibrary.Constants.TAG_BACKSCATTERED_ERROR} : byte{\f2 [strong]}}}
\par
{\bkmkstart AAAAAAADER}
{\bkmkend AAAAAAADER}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
If a Tag encounters an error when executing an access command that reads from or writes to memory, and if the command is a handle-based command(i.e. Read, Write, Kill, Lock, BlockWrite, BlockErase, or BlockPermalock), then the Tag shall backscatter an error code. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v OTHER_ERROR\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:OTHER_ERROR}
{\qr OTHER_ERROR{\bkmkstart AAAAAAADES}
{\bkmkend AAAAAAADES}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Catch-all for errors not covered by other codes \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v MEMORY_OVERRUN\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:MEMORY_OVERRUN}
{\qr MEMORY_OVERRUN{\bkmkstart AAAAAAADET}
{\bkmkend AAAAAAADET}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The specified memory location does not exist or the EPC length field is not \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v MEMORY_LOCKED\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:MEMORY_LOCKED}
{\qr MEMORY_LOCKED{\bkmkstart AAAAAAADEU}
{\bkmkend AAAAAAADEU}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The specified memory location is locked and/or permalocked and is either not writeable or not readable. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v INSUFFICIENT_POWER\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:INSUFFICIENT_POWER}
{\qr INSUFFICIENT_POWER{\bkmkstart AAAAAAADEV}
{\bkmkend AAAAAAADEV}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The Tag has insufficient power to perform the memory-write operation. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v NON_SPECIFIC_ERROR\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:NON_SPECIFIC_ERROR}
{\qr NON_SPECIFIC_ERROR{\bkmkstart AAAAAAADEW}
{\bkmkend AAAAAAADEW}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The Tag does not support error-specific codes. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
}
}
{\xe \v TagAccess\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:TagAccess}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b CSLibrary.Constants.TagAccess} : byte{\f2 [strong]}}}
\par
{\bkmkstart AAAAAAADEX}
{\bkmkend AAAAAAADEX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The values that can be found in the command field for tag access packets }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v READ\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:READ}
{\qr READ{\bkmkstart AAAAAAADEY}
{\bkmkend AAAAAAADEY}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ISO 18000-6C Read \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v WRITE\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:WRITE}
{\qr WRITE{\bkmkstart AAAAAAADEZ}
{\bkmkend AAAAAAADEZ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ISO 18000-6C Write \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v KILL\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:KILL}
{\qr KILL{\bkmkstart AAAAAAADFA}
{\bkmkend AAAAAAADFA}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ISO 18000-6C Kill \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v LOCK\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:LOCK}
{\qr LOCK{\bkmkstart AAAAAAADFB}
{\bkmkend AAAAAAADFB}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ISO 18000-6C Lock \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ERASE\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:ERASE}
{\qr ERASE{\bkmkstart AAAAAAADFC}
{\bkmkend AAAAAAADFC}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ISO 18000-6C Erase \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v UNKNOWN\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:UNKNOWN}
{\qr UNKNOWN{\bkmkstart AAAAAAADFD}
{\bkmkend AAAAAAADFD}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Unknown \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v READ\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:READ}
{\qr READ{\bkmkstart AAAAAAADEY}
{\bkmkend AAAAAAADEY}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ISO 18000-6C Read \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v WRITE\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:WRITE}
{\qr WRITE{\bkmkstart AAAAAAADEZ}
{\bkmkend AAAAAAADEZ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ISO 18000-6C Write \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v KILL\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:KILL}
{\qr KILL{\bkmkstart AAAAAAADFA}
{\bkmkend AAAAAAADFA}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ISO 18000-6C Kill \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v LOCK\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:LOCK}
{\qr LOCK{\bkmkstart AAAAAAADFB}
{\bkmkend AAAAAAADFB}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ISO 18000-6C Lock \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ERASE\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:ERASE}
{\qr ERASE{\bkmkstart AAAAAAADFC}
{\bkmkend AAAAAAADFC}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ISO 18000-6C Erase \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v UNKNOWN\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:UNKNOWN}
{\qr UNKNOWN{\bkmkstart AAAAAAADFD}
{\bkmkend AAAAAAADFD}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Unknown \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
}
}
{\xe \v TagAccess\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:TagAccess}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b CSLibrary.Constants.TagAccess} : byte{\f2 [strong]}}}
\par
{\bkmkstart AAAAAAADEX}
{\bkmkend AAAAAAADEX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The values that can be found in the command field for tag access packets }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v READ\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:READ}
{\qr READ{\bkmkstart AAAAAAADEY}
{\bkmkend AAAAAAADEY}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ISO 18000-6C Read \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v WRITE\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:WRITE}
{\qr WRITE{\bkmkstart AAAAAAADEZ}
{\bkmkend AAAAAAADEZ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ISO 18000-6C Write \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v KILL\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:KILL}
{\qr KILL{\bkmkstart AAAAAAADFA}
{\bkmkend AAAAAAADFA}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ISO 18000-6C Kill \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v LOCK\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:LOCK}
{\qr LOCK{\bkmkstart AAAAAAADFB}
{\bkmkend AAAAAAADFB}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ISO 18000-6C Lock \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ERASE\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:ERASE}
{\qr ERASE{\bkmkstart AAAAAAADFC}
{\bkmkend AAAAAAADFC}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ISO 18000-6C Erase \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v UNKNOWN\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:UNKNOWN}
{\qr UNKNOWN{\bkmkstart AAAAAAADFD}
{\bkmkend AAAAAAADFD}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Unknown \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v READ\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:READ}
{\qr READ{\bkmkstart AAAAAAADEY}
{\bkmkend AAAAAAADEY}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ISO 18000-6C Read \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v WRITE\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:WRITE}
{\qr WRITE{\bkmkstart AAAAAAADEZ}
{\bkmkend AAAAAAADEZ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ISO 18000-6C Write \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v KILL\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:KILL}
{\qr KILL{\bkmkstart AAAAAAADFA}
{\bkmkend AAAAAAADFA}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ISO 18000-6C Kill \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v LOCK\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:LOCK}
{\qr LOCK{\bkmkstart AAAAAAADFB}
{\bkmkend AAAAAAADFB}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ISO 18000-6C Lock \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v ERASE\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:ERASE}
{\qr ERASE{\bkmkstart AAAAAAADFC}
{\bkmkend AAAAAAADFC}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ISO 18000-6C Erase \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v UNKNOWN\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:UNKNOWN}
{\qr UNKNOWN{\bkmkstart AAAAAAADFD}
{\bkmkend AAAAAAADFD}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Unknown \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
}
}
{\xe \v Target\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:Target}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b CSLibrary.Constants.Target} : uint{\f2 [strong]}}}
\par
{\bkmkstart AAAAAAADFE}
{\bkmkend AAAAAAADFE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Specifies what flag, selected (i.e., SL) or one of the four inventory flags (i.e., S0, S1, S2, or S3), will be modified by the action. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v S0\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:S0}
{\qr S0{\bkmkstart AAAAAAADFF}
{\bkmkend AAAAAAADFF}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tag energized : Indefinite Tag not energized : None \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v S1\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:S1}
{\qr S1{\bkmkstart AAAAAAADFG}
{\bkmkend AAAAAAADFG}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tag energized : Norminal temperature range : 5s > persistence > 500ms Exttended temperature range : Not specified Tag not energized : Norminal temperature range : 5s > persistence > 500ms Exttended temperature range : Not specified \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v S2\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:S2}
{\qr S2{\bkmkstart AAAAAAADFH}
{\bkmkend AAAAAAADFH}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tag energized : Indefinite Tag not energized : Norminal temperature range : persistence > 2s Exttended temperature range : Not specified \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v S3\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:S3}
{\qr S3{\bkmkstart AAAAAAADFI}
{\bkmkend AAAAAAADFI}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tag energized : Indefinite Tag not energized : Norminal temperature range : persistence > 2s Exttended temperature range : Not specified \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v SELECTED\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:SELECTED}
{\qr SELECTED{\bkmkstart AAAAAAADFJ}
{\bkmkend AAAAAAADFJ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tag energized : Indefinite Tag not energized : Norminal temperature range : persistence > 2s Exttended temperature range : Not specified \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v UNKNOWN\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:UNKNOWN}
{\qr UNKNOWN{\bkmkstart AAAAAAADFK}
{\bkmkend AAAAAAADFK}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
}
}
{\xe \v WriteType\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:WriteType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b CSLibrary.Constants.WriteType} : uint{\f2 [strong]}}}
\par
{\bkmkstart AAAAAAADFL}
{\bkmkend AAAAAAADFL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The type of write that will be performed \'96 i.e., sequential or random. The value of this field determines which of the structures within parameters contains the write parameters. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v SEQUENTIAL\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:SEQUENTIAL}
{\qr SEQUENTIAL{\bkmkstart AAAAAAADFM}
{\bkmkend AAAAAAADFM}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Write tag method by sequential \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v RANDOM\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:RANDOM}
{\qr RANDOM{\bkmkstart AAAAAAADFN}
{\bkmkend AAAAAAADFN}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Write tag method by random \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v UNKNOWN\:CSLibrary::Constants}
{\xe \v CSLibrary::Constants\:UNKNOWN}
{\qr UNKNOWN{\bkmkstart AAAAAAADFO}
{\bkmkend AAAAAAADFO}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Unknown type \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary.Events Namespace Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary.Events}
{\xe \v CSLibrary.Events}
{\bkmkstart AAAAAAADFP}
{\bkmkend AAAAAAADFP}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b OnAccessCompletedEventArgs}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tag Access Completed Argument }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b OnAsyncCallbackEventArgs}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inventory or tag search callback event argument }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b OnReaderStateChangedEventArgs}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reader status callback event argument }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b OnStateChangedEventArgs}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reader Operation changed EventArgs }}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumerations\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b AntennaSequenceMode} \{ {\b AntennaSequenceMode.NORMAL}, 
{\b AntennaSequenceMode.SEQUENCE}, 
{\b AntennaSequenceMode.SMART_CHECK}, 
{\b AntennaSequenceMode.SEQUENCE_SMART_CHECK}, 
{\b AntennaSequenceMode.UNKNOWN} = 0x4
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
AntennaSequenceMode }}}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumeration Type Documentation\par
\pard\plain 
{\xe \v AntennaSequenceMode\:CSLibrary::Events}
{\xe \v CSLibrary::Events\:AntennaSequenceMode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b CSLibrary.Events.AntennaSequenceMode}{\f2 [strong]}}}
\par
{\bkmkstart AAAAAAADFQ}
{\bkmkend AAAAAAADFQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
AntennaSequenceMode }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v NORMAL\:CSLibrary::Events}
{\xe \v CSLibrary::Events\:NORMAL}
{\qr NORMAL{\bkmkstart AAAAAAADFR}
{\bkmkend AAAAAAADFR}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Normal mode \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v SEQUENCE\:CSLibrary::Events}
{\xe \v CSLibrary::Events\:SEQUENCE}
{\qr SEQUENCE{\bkmkstart AAAAAAADFS}
{\bkmkend AAAAAAADFS}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sequence Mode \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v SMART_CHECK\:CSLibrary::Events}
{\xe \v CSLibrary::Events\:SMART_CHECK}
{\qr SMART_CHECK{\bkmkstart AAAAAAADFT}
{\bkmkend AAAAAAADFT}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Smart check mode \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v SEQUENCE_SMART_CHECK\:CSLibrary::Events}
{\xe \v CSLibrary::Events\:SEQUENCE_SMART_CHECK}
{\qr SEQUENCE_SMART_CHECK{\bkmkstart AAAAAAADFU}
{\bkmkend AAAAAAADFU}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Combination of Sequence and Smart Check \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v UNKNOWN\:CSLibrary::Events}
{\xe \v CSLibrary::Events\:UNKNOWN}
{\qr UNKNOWN{\bkmkstart AAAAAAADFV}
{\bkmkend AAAAAAADFV}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Unknown \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary.Net Namespace Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary.Net}
{\xe \v CSLibrary.Net}
{\bkmkstart AAAAAAADGN}
{\bkmkend AAAAAAADGN}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b NetFinder}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary.Structures Namespace Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary.Structures}
{\xe \v CSLibrary.Structures}
{\bkmkstart AAAAAAADHO}
{\bkmkend AAAAAAADHO}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b AllConfigParms}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Big mother of them all configuration structure. /summary> }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b AntennaPortConfig}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
When configuring or retrieving the configuration for logical antenna ports, an application has several parameters that it can set/retrieve. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b AntennaPortStatus}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The structure used to retrieve the status for a logical antenna port is defined as follows: }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b BeeperParms}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Beeper structure /summary> }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CarrierWaveParms}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Carrier wave parms }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b CommonParms}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
All tag-protocol operation functions share a common set of parameters. These parameters are gathered in one place for convenience. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ConfigBase}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Configuration base class }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CSLibraryOperationParms}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Operation Paramemter }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b DecodeMessage}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
decode structure }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b DecoderParms}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Decoder functionality settings. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b DEVICE_STATUS}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RFID Device Status {\b Structures} }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b DriverVersion}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Driver {\b Version} Structure }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b DynamicQParms}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The parameters for the dynamic-Q algorithm, MAC singulation algorithm 3, (i.e., RFID_18K6C_SINGULATION_ALGORITHM_DYNAMICQ) }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b EngineInfoParms}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Engine Information Structure (5000K engine with PSOC only) }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ErrorMessage}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
error message structure }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b FixedQParms}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The parameters for the fixed-Q algorithm, MAC singulation algorithm 0, (i.e., RFID_18K6C_SINGULATION_ALGORITHM_FIXEDQ) }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b FrequencyBandParms}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Frequency Band Parms }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
interface {\b IBANK}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ImageAcquisitionParms}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Image Acquisition structure /summary> }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ImageMessage}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Image information structure /summary> }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ImagerCapabilitiesParms}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Imager capabilities structure }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ImageTransferParms}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Image Transfer structure /summary> }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b IntelligentImage}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Intelligent Image Capture }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b InternalCustCmdEASParms}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b InternalCustCmdTagReadProtectParms}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b InternalTagInventoryParms}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b InternalTagRangingParms}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b InternalTagReadProtectParms}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b InternalTagSearchOneParms}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b INVENTORY_PKT}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tag Access Packet }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b LibraryVersion}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Library {\b Version} Structure }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b MacVersion}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mac {\b Version} Structure }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b MessageBase}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Barcode} Message base class }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b NonVolatileMemoryBlock}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The ISO 18000-6C tag-lock operation lock specific command parameters. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b PowerParms}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Matrix Products Power management structure }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ProfileConfig}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Link Profile Configuration Structure }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b QueryParms}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Once the tag population has been partitioned into disjoint groups, a subsequent tag-protocol operation (i.e., an inventory operation or access command) is then applied to one of the tag groups. A tag group is specified using the following: }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b RadioInformation}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
When detecting the attached RFID radio modules, the structures for retrieving the information for the attached RFID radio modules are as follows: }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b RadioLinkProfile}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b RadioLinkProfile} Structure }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b RadioLinkProfileConfig}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b RawDecodeMessage}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Raw decode structure }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b RECT}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Image Size }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b S_DATA}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Custom Data Structure }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b S_EPC}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Electronic Product Code }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b S_MASK}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Custom Data Structure }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b S_PC}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Protocol Control(must be 2 Bytes) }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b S_PWD}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Custom Password Structure }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b S_TID}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
TID }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b S_XPC_W1}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
X Protocol Control W1 (must be 2 Bytes) }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b S_XPC_W2}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
X Protocol Control W2 (must be 2 Bytes) }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b SelectAction}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The partitioning of tags into disjoint groups is accomplished by applying actions to the tags that match and/or do not match the specified mask. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b SelectCriteria}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tag-selection criteria }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b SelectCriterion}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Together, the selection mask and selection action form a single selection criterion. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b SelectMask}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The tag mask is used to specify a bit pattern that is used to match against one of a tag's memory banks to determine if it is matching or non-matching. A mask is a combination of a memory bank and a sequence of bits that will be matched at the specified offset within the chosen memory bank. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b SequenceBarcodeParms}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sequence mode barcode descriptor }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b SequenceModeParms}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sequence Mode control }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b SingulationAlgorithmParms}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b SingulationAlgorithmParms} }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b SingulationCriteria}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Post-singulation match criteria can be grouped together using the following: }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b SingulationCriterion}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Together, the selection mask and an indication if the application is interested in matching or non-matching tags form a single post-singulation match criterion. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b SingulationMask}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The post-singulation match mask is used to specify a bit pattern of up to 496 bits that is used to match against the EPC backscattered by a tag during singulation to determine if a tag is matching or non-matching. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b SIZE}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Image Size }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b SymbologyParms}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure of structures, one for each symbology. /summary> }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b SymCodeOCR}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure for unusual OCR }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b SymFlagsOnly}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure for symbologies with no specified min or max length. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b SymFlagsRange}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure for symbologies with min or max length. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b TAG_ACCESS_PKT}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tag Access Packet }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b TagBlockPermalockParms}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
block lock structure, configure this before do block lock }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b TagCallbackInfo}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tag Callback Information }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b TagGeneralSelectedParms}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Selected tag parameters, configure this before any specific tag operation }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b TagGroup}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A class that specifies the tag group that will have a subsequent tag-protocol operation applied to it. This parameter must not be NULL. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b TagInventoryParms}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The ISO 18000-6C tag-inventory operation parameters }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b TagKillParms}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tag Kill structure, configure this before do tag kill }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b TagLockParms}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tag lock structure, configure this before do tag lock }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b TagPerm}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A structure that contains the access permissions to be set for the tag. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b TagPostMachParms}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Post match tag parameters, configure this before any specific tag operation }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b TagRangingParms}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
this parms is same as inventory parms }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b TagReadEpcParms}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Read EPC structures, configure this before read current EPC }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b TagReadPcParms}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Read PC structures, configure this before read current PC }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b TagReadProtectParms}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b TagReadProtectParms} }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b TagReadPwdParms}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Read password structures, configure this before read current password }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b TagReadTidParms}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Read TID structures, configure this before read current TID }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b TagReadUserParms}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Read User memory structures, configure this before read current User memory }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b TagSearchingParms}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
search one tag parms }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b TagSelectedParms}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Selected tag parameters, configure this before any specific tag operation }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b TagWriteEpcParms}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Write EPC structures, configure this before write new EPC value }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b TagWritePcParms}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Write PC structures, configure this before write new PC value }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b TagWritePwdParms}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Write password structures, configure this before write new password value }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b TagWriteUserParms}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Write User structures, configure this before write new user data }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b TemperatureParms}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Temperature Parms }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b TextMessage}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Text} message type }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b ThresholdTemperatureParms}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b ThresholdTemperatureParms} }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b TriggerParms}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Triggering control }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Version}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Version} Structure }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b VersionParms}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Revision information }}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumerations\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b QTMode} \{ {\b QTMode.PermPublic}, 
{\b QTMode.TempPublic}, 
{\b QTMode.PermPrivate}, 
{\b QTMode.TempPrivate}
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
QT Mode }}}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
delegate bool {\b GPI_INTERRUPT_CALLBACK} (String ip, int GPI0, int GPI1)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
GPI Interrupt callback }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
delegate bool {\b TagAccessCallbackDelegate} ({\b TAG_ACCESS_PKT} pkt)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tag access callback }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
delegate bool {\b InventoryCallbackDelegate} ({\b INVENTORY_PKT} pkt)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tag access callback }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumeration Type Documentation\par
\pard\plain 
{\xe \v QTMode\:CSLibrary::Structures}
{\xe \v CSLibrary::Structures\:QTMode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b CSLibrary.Structures.QTMode}{\f2 [strong]}}}
\par
{\bkmkstart AAAAAAADHP}
{\bkmkend AAAAAAADHP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
QT Mode }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v PermPublic\:CSLibrary::Structures}
{\xe \v CSLibrary::Structures\:PermPublic}
{\qr PermPublic{\bkmkstart AAAAAAADHQ}
{\bkmkend AAAAAAADHQ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Permanent Public \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v TempPublic\:CSLibrary::Structures}
{\xe \v CSLibrary::Structures\:TempPublic}
{\qr TempPublic{\bkmkstart AAAAAAADHR}
{\bkmkend AAAAAAADHR}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Temporary Public \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v PermPrivate\:CSLibrary::Structures}
{\xe \v CSLibrary::Structures\:PermPrivate}
{\qr PermPrivate{\bkmkstart AAAAAAADHS}
{\bkmkend AAAAAAADHS}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Permanent Private \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v TempPrivate\:CSLibrary::Structures}
{\xe \v CSLibrary::Structures\:TempPrivate}
{\qr TempPrivate{\bkmkstart AAAAAAADHT}
{\bkmkend AAAAAAADHT}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Temporary Private \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v GPI_INTERRUPT_CALLBACK\:CSLibrary::Structures}
{\xe \v CSLibrary::Structures\:GPI_INTERRUPT_CALLBACK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
delegate bool CSLibrary.Structures.GPI_INTERRUPT_CALLBACK (String  {\i ip}, int  {\i GPI0}, int  {\i GPI1})}}
\par
{\bkmkstart AAAAAAADHU}
{\bkmkend AAAAAAADHU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
GPI Interrupt callback }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i ip} \cell }{Source IP address\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i GPI0} \cell }{GPI0 Status : 1 = on, -1 = off, 0 = not available\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i GPI1} \cell }{GPI1 Status : 1 = on, -1 = off, 0 = not available\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v InventoryCallbackDelegate\:CSLibrary::Structures}
{\xe \v CSLibrary::Structures\:InventoryCallbackDelegate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
delegate bool CSLibrary.Structures.InventoryCallbackDelegate ({\b INVENTORY_PKT}  {\i pkt})}}
\par
{\bkmkstart AAAAAAADHV}
{\bkmkend AAAAAAADHV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tag access callback }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pkt} \cell }{packet data\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid return false will abort operation\par
}}}
{\xe \v TagAccessCallbackDelegate\:CSLibrary::Structures}
{\xe \v CSLibrary::Structures\:TagAccessCallbackDelegate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
delegate bool CSLibrary.Structures.TagAccessCallbackDelegate ({\b TAG_ACCESS_PKT}  {\i pkt})}}
\par
{\bkmkstart AAAAAAADHW}
{\bkmkend AAAAAAADHW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tag access callback }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pkt} \cell }{packet data\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid return false will abort operation\par
}}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary.Text Namespace Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary.Text}
{\xe \v CSLibrary.Text}
{\bkmkstart AAAAAAAEMY}
{\bkmkend AAAAAAAEMY}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Hex}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
For Backward Compatibility }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b HexEncoding}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Summary description for {\b HexEncoding}. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b oldHex}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Summary description for {\b HexEncoding}. }}}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary.Tools Namespace Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary.Tools}
{\xe \v CSLibrary.Tools}
{\bkmkstart AAAAAAAEPS}
{\bkmkend AAAAAAAEPS}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Crc}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Hex}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
For Backward Compatibility }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b HexEncoding}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Summary description for {\b HexEncoding}. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Queue}\par
}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Class Documentation{\tc \v Class Documentation}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary.Structures.AllConfigParms Class Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary.Structures.AllConfigParms}
{\xe \v CSLibrary.Structures.AllConfigParms}
{\bkmkstart AAAAAAADHX}
{\bkmkend AAAAAAADHX}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Big mother of them all configuration structure. /summary> }}\par
Inheritance diagram for CSLibrary.Structures.AllConfigParms:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_c_s_library_1_1_barcode_1_1_structures_1_1_all_config_parms.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b AllConfigParms} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b BeeperParms} {\b beeperCfg} = new {\b BeeperParms}()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Beeper config }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TriggerParms} {\b triggerCfg} = new {\b TriggerParms}()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Trigger config }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DecoderParms} {\b decoderCfg} = new {\b DecoderParms}()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Decoder config }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b PowerParms} {\b powerCfg} = new {\b PowerParms}()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Power setting config }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b VersionParms} {\b versionInfo} = new {\b VersionParms}()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Version information }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SymbologyParms} {\b symbolCfg} = new {\b SymbologyParms}()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Symbology }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ImageAcquisitionParms} {\b imgAcqu} = new {\b ImageAcquisitionParms}()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Image acquisition config }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ImageTransferParms} {\b imgTrans} = new {\b ImageTransferParms}()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Image Transfer config }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SequenceModeParms} {\b sequenceCfg} = new {\b SequenceModeParms}()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sequence mode config }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Big mother of them all configuration structure. /summary> \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v AllConfigParms\:CSLibrary::Barcode::Structures::AllConfigParms}
{\xe \v CSLibrary::Barcode::Structures::AllConfigParms\:AllConfigParms}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CSLibrary.Structures.AllConfigParms.AllConfigParms ()}}
\par
{\bkmkstart AAAAAAADHY}
{\bkmkend AAAAAAADHY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
}}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v beeperCfg\:CSLibrary::Barcode::Structures::AllConfigParms}
{\xe \v CSLibrary::Barcode::Structures::AllConfigParms\:beeperCfg}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b BeeperParms} CSLibrary.Structures.AllConfigParms.beeperCfg = new {\b BeeperParms}()}}
\par
{\bkmkstart AAAAAAADHZ}
{\bkmkend AAAAAAADHZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Beeper config }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v decoderCfg\:CSLibrary::Barcode::Structures::AllConfigParms}
{\xe \v CSLibrary::Barcode::Structures::AllConfigParms\:decoderCfg}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b DecoderParms} CSLibrary.Structures.AllConfigParms.decoderCfg = new {\b DecoderParms}()}}
\par
{\bkmkstart AAAAAAADIA}
{\bkmkend AAAAAAADIA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Decoder config }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v imgAcqu\:CSLibrary::Barcode::Structures::AllConfigParms}
{\xe \v CSLibrary::Barcode::Structures::AllConfigParms\:imgAcqu}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b ImageAcquisitionParms} CSLibrary.Structures.AllConfigParms.imgAcqu = new {\b ImageAcquisitionParms}()}}
\par
{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Image acquisition config }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v imgTrans\:CSLibrary::Barcode::Structures::AllConfigParms}
{\xe \v CSLibrary::Barcode::Structures::AllConfigParms\:imgTrans}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b ImageTransferParms} CSLibrary.Structures.AllConfigParms.imgTrans = new {\b ImageTransferParms}()}}
\par
{\bkmkstart AAAAAAADIC}
{\bkmkend AAAAAAADIC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Image Transfer config }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v powerCfg\:CSLibrary::Barcode::Structures::AllConfigParms}
{\xe \v CSLibrary::Barcode::Structures::AllConfigParms\:powerCfg}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b PowerParms} CSLibrary.Structures.AllConfigParms.powerCfg = new {\b PowerParms}()}}
\par
{\bkmkstart AAAAAAADID}
{\bkmkend AAAAAAADID}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Power setting config }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v sequenceCfg\:CSLibrary::Barcode::Structures::AllConfigParms}
{\xe \v CSLibrary::Barcode::Structures::AllConfigParms\:sequenceCfg}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b SequenceModeParms} CSLibrary.Structures.AllConfigParms.sequenceCfg = new {\b SequenceModeParms}()}}
\par
{\bkmkstart AAAAAAADIE}
{\bkmkend AAAAAAADIE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sequence mode config }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v symbolCfg\:CSLibrary::Barcode::Structures::AllConfigParms}
{\xe \v CSLibrary::Barcode::Structures::AllConfigParms\:symbolCfg}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b SymbologyParms} CSLibrary.Structures.AllConfigParms.symbolCfg = new {\b SymbologyParms}()}}
\par
{\bkmkstart AAAAAAADIF}
{\bkmkend AAAAAAADIF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Symbology }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v triggerCfg\:CSLibrary::Barcode::Structures::AllConfigParms}
{\xe \v CSLibrary::Barcode::Structures::AllConfigParms\:triggerCfg}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b TriggerParms} CSLibrary.Structures.AllConfigParms.triggerCfg = new {\b TriggerParms}()}}
\par
{\bkmkstart AAAAAAADIG}
{\bkmkend AAAAAAADIG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Trigger config }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v versionInfo\:CSLibrary::Barcode::Structures::AllConfigParms}
{\xe \v CSLibrary::Barcode::Structures::AllConfigParms\:versionInfo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b VersionParms} CSLibrary.Structures.AllConfigParms.versionInfo = new {\b VersionParms}()}}
\par
{\bkmkstart AAAAAAADIH}
{\bkmkend AAAAAAADIH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Version information }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
CSLibrary/BarcodeReader/Structures/{\b CSLibrary.Barcode.Structures.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary.Structures.AntennaPortConfig Class Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary.Structures.AntennaPortConfig}
{\xe \v CSLibrary.Structures.AntennaPortConfig}
{\bkmkstart AAAAAAADII}
{\bkmkend AAAAAAADII}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
When configuring or retrieving the configuration for logical antenna ports, an application has several parameters that it can set/retrieve. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b AntennaPortConfig} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt32 {\b powerLevel} = 0\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The power level for the logical antenna port's physical transmit antenna. This value is specified in 0.1 (i.e., 1/10th) dBm. Note that all radio modules may not support setting an antenna port's power level at 1/10th dBm resolutions. The dBm rounding/truncation policy is left to the radio module and is outside the scope of the RFID Reader Library. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt32 {\b dwellTime} = 0\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Specifies the maximum amount of time, in milliseconds, that may be spent on the logical antenna port during a tag-protocol-operation cycle before switching to the next enabled antenna port. A value of zero indicates that there is no maximum dwell time for this antenna port. If this parameter is zero, then numberInventoryCycles may not be zero. See for the effect of antenna-port dwell time and number of inventory cycles on the amount of time spent on an antenna port during a single tag-protocol-operation cycle. NOTE: when performing any non-inventory ISO 18000-6C tag access operation (i.e., read, write, kill, or lock), the radio module ignores the dwell time for the antenna port which is used for the tag-protocol operation. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt32 {\b numberInventoryCycles} = 0\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Specifies the maximum number of inventory cycles to attempt on the antenna port during a tag-protocol- operation cycle before switching to the next enabled antenna port. An inventory cycle consists of one or more executions of the singulation algorithm for a particular inventory-session target (i.e., A or B). If the singulation algorithm [SING-ALG] is configured to toggle the inventory-session, executing the singulation algorithm for inventory session A and inventory session B counts as two inventory cycles. A value of zero indicates that there is no maximum number of inventory cycles for this antenna port. If this parameter is zero, then dwellTime may not be zero. See for the effect of antenna-port dwell time and number of inventory cycles on the amount of time spent on an antenna port during a single tag-protocol-operation cycle. NOTE: when performing any non-inventory ISO 18000- 6C tag access operation (i.e., read, write, kill, or lock), the radio module ignores the number of inventory cycles for the antenna port which is used for the tag-protocol operation. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt32 {\b physicalRxPort} = 0\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The physical receive port that this logical antenna port is mapped to. Consult [MAC-EDS] for the valid physical receive antenna ports. In version 1.1, when calling RFID_AntennaPortSetConfiguration this value must be the same as the value in physicalTxPort. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt32 {\b physicalTxPort} = 0\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The physical transmit port that this logical antenna port is mapped to. Consult [MAC-EDS] for the valid physical receive antenna ports. In version 1.1, when calling RFID_AntennaPortSetConfiguration this value must be the same as the value in physcialRxPort. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt32 {\b antennaSenseThreshold} = 0\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The measured resistance, specified in ohms, above which the antenna-sense resistance should be considered to be an open circuit (i.e., a disconnected antenna). If it is detected that the antenna-sense resistance is above the threshold, the carrier wave will not be turned on in order to protect the circuit. NOTE: This value, while appearing in the per-antenna configuration is actually a system-wide setting in the current release. Changing it will Result in the value being changed for all antennas. To prevent unintentionally changing this value for all antennas, it is best to first retrieve the antenna configuration for the antenna for which configuration will be changed, update the fields that should be changed, and then set the configuration. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt32 {\b length_} = 28\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure size }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Properties\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt32 {\b length}{\f2  [get]}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure size }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
When configuring or retrieving the configuration for logical antenna ports, an application has several parameters that it can set/retrieve. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v AntennaPortConfig\:CSLibrary::Structures::AntennaPortConfig}
{\xe \v CSLibrary::Structures::AntennaPortConfig\:AntennaPortConfig}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CSLibrary.Structures.AntennaPortConfig.AntennaPortConfig ()}}
\par
{\bkmkstart AAAAAAADIJ}
{\bkmkend AAAAAAADIJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v antennaSenseThreshold\:CSLibrary::Structures::AntennaPortConfig}
{\xe \v CSLibrary::Structures::AntennaPortConfig\:antennaSenseThreshold}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt32 CSLibrary.Structures.AntennaPortConfig.antennaSenseThreshold = 0}}
\par
{\bkmkstart AAAAAAADIK}
{\bkmkend AAAAAAADIK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The measured resistance, specified in ohms, above which the antenna-sense resistance should be considered to be an open circuit (i.e., a disconnected antenna). If it is detected that the antenna-sense resistance is above the threshold, the carrier wave will not be turned on in order to protect the circuit. NOTE: This value, while appearing in the per-antenna configuration is actually a system-wide setting in the current release. Changing it will Result in the value being changed for all antennas. To prevent unintentionally changing this value for all antennas, it is best to first retrieve the antenna configuration for the antenna for which configuration will be changed, update the fields that should be changed, and then set the configuration. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v dwellTime\:CSLibrary::Structures::AntennaPortConfig}
{\xe \v CSLibrary::Structures::AntennaPortConfig\:dwellTime}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt32 CSLibrary.Structures.AntennaPortConfig.dwellTime = 0}}
\par
{\bkmkstart AAAAAAADIL}
{\bkmkend AAAAAAADIL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Specifies the maximum amount of time, in milliseconds, that may be spent on the logical antenna port during a tag-protocol-operation cycle before switching to the next enabled antenna port. A value of zero indicates that there is no maximum dwell time for this antenna port. If this parameter is zero, then numberInventoryCycles may not be zero. See for the effect of antenna-port dwell time and number of inventory cycles on the amount of time spent on an antenna port during a single tag-protocol-operation cycle. NOTE: when performing any non-inventory ISO 18000-6C tag access operation (i.e., read, write, kill, or lock), the radio module ignores the dwell time for the antenna port which is used for the tag-protocol operation. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v length_\:CSLibrary::Structures::AntennaPortConfig}
{\xe \v CSLibrary::Structures::AntennaPortConfig\:length_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt32 CSLibrary.Structures.AntennaPortConfig.length_ = 28{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADIM}
{\bkmkend AAAAAAADIM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure size }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v numberInventoryCycles\:CSLibrary::Structures::AntennaPortConfig}
{\xe \v CSLibrary::Structures::AntennaPortConfig\:numberInventoryCycles}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt32 CSLibrary.Structures.AntennaPortConfig.numberInventoryCycles = 0}}
\par
{\bkmkstart AAAAAAADIN}
{\bkmkend AAAAAAADIN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Specifies the maximum number of inventory cycles to attempt on the antenna port during a tag-protocol- operation cycle before switching to the next enabled antenna port. An inventory cycle consists of one or more executions of the singulation algorithm for a particular inventory-session target (i.e., A or B). If the singulation algorithm [SING-ALG] is configured to toggle the inventory-session, executing the singulation algorithm for inventory session A and inventory session B counts as two inventory cycles. A value of zero indicates that there is no maximum number of inventory cycles for this antenna port. If this parameter is zero, then dwellTime may not be zero. See for the effect of antenna-port dwell time and number of inventory cycles on the amount of time spent on an antenna port during a single tag-protocol-operation cycle. NOTE: when performing any non-inventory ISO 18000- 6C tag access operation (i.e., read, write, kill, or lock), the radio module ignores the number of inventory cycles for the antenna port which is used for the tag-protocol operation. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v physicalRxPort\:CSLibrary::Structures::AntennaPortConfig}
{\xe \v CSLibrary::Structures::AntennaPortConfig\:physicalRxPort}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt32 CSLibrary.Structures.AntennaPortConfig.physicalRxPort = 0}}
\par
{\bkmkstart AAAAAAADIO}
{\bkmkend AAAAAAADIO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The physical receive port that this logical antenna port is mapped to. Consult [MAC-EDS] for the valid physical receive antenna ports. In version 1.1, when calling RFID_AntennaPortSetConfiguration this value must be the same as the value in physicalTxPort. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v physicalTxPort\:CSLibrary::Structures::AntennaPortConfig}
{\xe \v CSLibrary::Structures::AntennaPortConfig\:physicalTxPort}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt32 CSLibrary.Structures.AntennaPortConfig.physicalTxPort = 0}}
\par
{\bkmkstart AAAAAAADIP}
{\bkmkend AAAAAAADIP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The physical transmit port that this logical antenna port is mapped to. Consult [MAC-EDS] for the valid physical receive antenna ports. In version 1.1, when calling RFID_AntennaPortSetConfiguration this value must be the same as the value in physcialRxPort. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v powerLevel\:CSLibrary::Structures::AntennaPortConfig}
{\xe \v CSLibrary::Structures::AntennaPortConfig\:powerLevel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt32 CSLibrary.Structures.AntennaPortConfig.powerLevel = 0}}
\par
{\bkmkstart AAAAAAADIQ}
{\bkmkend AAAAAAADIQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The power level for the logical antenna port's physical transmit antenna. This value is specified in 0.1 (i.e., 1/10th) dBm. Note that all radio modules may not support setting an antenna port's power level at 1/10th dBm resolutions. The dBm rounding/truncation policy is left to the radio module and is outside the scope of the RFID Reader Library. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Property Documentation\par
\pard\plain 
{\xe \v length\:CSLibrary::Structures::AntennaPortConfig}
{\xe \v CSLibrary::Structures::AntennaPortConfig\:length}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt32 CSLibrary.Structures.AntennaPortConfig.length{\f2 [get]}}}
\par
{\bkmkstart AAAAAAADIR}
{\bkmkend AAAAAAADIR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure size }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
CSLibrary/RFIDReader/Structures/{\b Intel.Structures.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary.Structures.AntennaPortStatus Class Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary.Structures.AntennaPortStatus}
{\xe \v CSLibrary.Structures.AntennaPortStatus}
{\bkmkstart AAAAAAADIS}
{\bkmkend AAAAAAADIS}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The structure used to retrieve the status for a logical antenna port is defined as follows: }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b AntennaPortStatus} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b AntennaPortState} {\b state} = {\b AntennaPortState.UNKNOWN}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Indicates the state of the logical antenna port. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Boolean {\b enableLocalInv}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enable local Inventory parameter. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SingulationAlgorithm} {\b inv_algo}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inventory local parameter }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt32 {\b startQ}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inventory local parameter }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Boolean {\b enableLocalProfile}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enable local profile }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt32 {\b profile}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Link Profile }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Boolean {\b enableLocalFreq}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enable Local frequency }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt32 {\b freqChn}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
frequency channel to use. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt32 {\b antennaSenseValue} = 0\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The stored value from the last measurement of the antenna-sense resistor for the logical antenna port's physical transmit antenna port. The last measurement taken occurred the last time that the carrier wave was turned on for this antenna port \'96 note that this means that when retrieving the logical antenna port's status, this does not Result in an active measurement of the antenna-sense resistor. This value is specified in ohms. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt32 {\b length_} = 40\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure size }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Properties\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt32 {\b length}{\f2  [get]}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure size }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The structure used to retrieve the status for a logical antenna port is defined as follows: \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v AntennaPortStatus\:CSLibrary::Structures::AntennaPortStatus}
{\xe \v CSLibrary::Structures::AntennaPortStatus\:AntennaPortStatus}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CSLibrary.Structures.AntennaPortStatus.AntennaPortStatus ()}}
\par
{\bkmkstart AAAAAAADIT}
{\bkmkend AAAAAAADIT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v antennaSenseValue\:CSLibrary::Structures::AntennaPortStatus}
{\xe \v CSLibrary::Structures::AntennaPortStatus\:antennaSenseValue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt32 CSLibrary.Structures.AntennaPortStatus.antennaSenseValue = 0}}
\par
{\bkmkstart AAAAAAADIU}
{\bkmkend AAAAAAADIU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The stored value from the last measurement of the antenna-sense resistor for the logical antenna port's physical transmit antenna port. The last measurement taken occurred the last time that the carrier wave was turned on for this antenna port \'96 note that this means that when retrieving the logical antenna port's status, this does not Result in an active measurement of the antenna-sense resistor. This value is specified in ohms. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v enableLocalFreq\:CSLibrary::Structures::AntennaPortStatus}
{\xe \v CSLibrary::Structures::AntennaPortStatus\:enableLocalFreq}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Boolean CSLibrary.Structures.AntennaPortStatus.enableLocalFreq}}
\par
{\bkmkstart AAAAAAADIV}
{\bkmkend AAAAAAADIV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enable Local frequency }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v enableLocalInv\:CSLibrary::Structures::AntennaPortStatus}
{\xe \v CSLibrary::Structures::AntennaPortStatus\:enableLocalInv}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Boolean CSLibrary.Structures.AntennaPortStatus.enableLocalInv}}
\par
{\bkmkstart AAAAAAADIW}
{\bkmkend AAAAAAADIW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enable local Inventory parameter. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v enableLocalProfile\:CSLibrary::Structures::AntennaPortStatus}
{\xe \v CSLibrary::Structures::AntennaPortStatus\:enableLocalProfile}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Boolean CSLibrary.Structures.AntennaPortStatus.enableLocalProfile}}
\par
{\bkmkstart AAAAAAADIX}
{\bkmkend AAAAAAADIX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enable local profile }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v freqChn\:CSLibrary::Structures::AntennaPortStatus}
{\xe \v CSLibrary::Structures::AntennaPortStatus\:freqChn}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt32 CSLibrary.Structures.AntennaPortStatus.freqChn}}
\par
{\bkmkstart AAAAAAADIY}
{\bkmkend AAAAAAADIY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
frequency channel to use. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v inv_algo\:CSLibrary::Structures::AntennaPortStatus}
{\xe \v CSLibrary::Structures::AntennaPortStatus\:inv_algo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b SingulationAlgorithm} CSLibrary.Structures.AntennaPortStatus.inv_algo}}
\par
{\bkmkstart AAAAAAADIZ}
{\bkmkend AAAAAAADIZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inventory local parameter }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v length_\:CSLibrary::Structures::AntennaPortStatus}
{\xe \v CSLibrary::Structures::AntennaPortStatus\:length_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt32 CSLibrary.Structures.AntennaPortStatus.length_ = 40{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADJA}
{\bkmkend AAAAAAADJA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure size }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v profile\:CSLibrary::Structures::AntennaPortStatus}
{\xe \v CSLibrary::Structures::AntennaPortStatus\:profile}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt32 CSLibrary.Structures.AntennaPortStatus.profile}}
\par
{\bkmkstart AAAAAAADJB}
{\bkmkend AAAAAAADJB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Link Profile }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v startQ\:CSLibrary::Structures::AntennaPortStatus}
{\xe \v CSLibrary::Structures::AntennaPortStatus\:startQ}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt32 CSLibrary.Structures.AntennaPortStatus.startQ}}
\par
{\bkmkstart AAAAAAADJC}
{\bkmkend AAAAAAADJC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inventory local parameter }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v state\:CSLibrary::Structures::AntennaPortStatus}
{\xe \v CSLibrary::Structures::AntennaPortStatus\:state}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b AntennaPortState} CSLibrary.Structures.AntennaPortStatus.state = {\b AntennaPortState.UNKNOWN}}}
\par
{\bkmkstart AAAAAAADJD}
{\bkmkend AAAAAAADJD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Indicates the state of the logical antenna port. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Property Documentation\par
\pard\plain 
{\xe \v length\:CSLibrary::Structures::AntennaPortStatus}
{\xe \v CSLibrary::Structures::AntennaPortStatus\:length}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt32 CSLibrary.Structures.AntennaPortStatus.length{\f2 [get]}}}
\par
{\bkmkstart AAAAAAADJE}
{\bkmkend AAAAAAADJE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure size }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
CSLibrary/RFIDReader/Structures/{\b Intel.Structures.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary.Barcode Class Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary.Barcode}
{\xe \v CSLibrary.Barcode}
{\bkmkstart AAAAAAAACD}
{\bkmkend AAAAAAAACD}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Barcode} library }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b BarcodeEventArgs}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Barcode} Event Argument }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b BarcodeStateEventArgs}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
delegate void {\b BarcodeEventHandler} ({\b BarcodeEventArgs} e)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
BarcodeEventHandler Delegate }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
delegate void {\b BarcodeStateEventHandler} ({\b BarcodeStateEventArgs} e)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
BarcodeStateEventHandler Delegate }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b Start} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Start to capture barcode, until stop is sent. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b Stop} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Stop capturing }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Properties\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b BarcodeEventHandler} {\b OnCapturedNotify}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
BarcodeEventHandler : Capture completed event trigger }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b BarcodeStateEventHandler} {\b OnStateChanged}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
BarcodeStateEventHandler : report current operation }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static bool {\b bCaptureDecoded}{\f2  [get, set]}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
True will only return decoded data in {\b OnCapturedNotify} }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b BarcodeState} {\b State}{\f2  [get, protected set]}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Current operation state }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Events\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b BarcodeEventHandler} {\b m_captureCompleted}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b BarcodeStateEventHandler} {\b m_stateChanged}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b TellThemCaptureCompleted} ({\b BarcodeEventArgs} e)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b TellThemStateChanged} ({\b BarcodeStateEventArgs} e)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b FireStateChangedEvent} ({\b BarcodeState} e)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b FireCaptureCompletedEvent} ({\b BarcodeEventArgs} e)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Private Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b BarcodeState} {\b m_state} = BarcodeState.IDLE\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static bool {\b b_CaptureDecoded} = true\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b mStop} = 0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static object {\b synlock} = new object()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Barcode} library \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v BarcodeEventHandler\:CSLibrary::Barcode}
{\xe \v CSLibrary::Barcode\:BarcodeEventHandler}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
delegate void CSLibrary.Barcode.BarcodeEventHandler ({\b BarcodeEventArgs}  {\i e})}}
\par
{\bkmkstart AAAAAAAACE}
{\bkmkend AAAAAAAACE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
BarcodeEventHandler Delegate }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i e} \cell }{\cell }
{\row }
}
}}
{\xe \v BarcodeStateEventHandler\:CSLibrary::Barcode}
{\xe \v CSLibrary::Barcode\:BarcodeStateEventHandler}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
delegate void CSLibrary.Barcode.BarcodeStateEventHandler ({\b BarcodeStateEventArgs}  {\i e})}}
\par
{\bkmkstart AAAAAAAACF}
{\bkmkend AAAAAAAACF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
BarcodeStateEventHandler Delegate }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i e} \cell }{\cell }
{\row }
}
}}
{\xe \v FireCaptureCompletedEvent\:CSLibrary::Barcode}
{\xe \v CSLibrary::Barcode\:FireCaptureCompletedEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CSLibrary.Barcode.FireCaptureCompletedEvent ({\b BarcodeEventArgs}  {\i e}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAACG}
{\bkmkend AAAAAAAACG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v FireStateChangedEvent\:CSLibrary::Barcode}
{\xe \v CSLibrary::Barcode\:FireStateChangedEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CSLibrary.Barcode.FireStateChangedEvent ({\b BarcodeState}  {\i e}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAACH}
{\bkmkend AAAAAAAACH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Start\:CSLibrary::Barcode}
{\xe \v CSLibrary::Barcode\:Start}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool CSLibrary.Barcode.Start ()}}
\par
{\bkmkstart AAAAAAAACI}
{\bkmkend AAAAAAAACI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Start to capture barcode, until stop is sent. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v Stop\:CSLibrary::Barcode}
{\xe \v CSLibrary::Barcode\:Stop}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool CSLibrary.Barcode.Stop ()}}
\par
{\bkmkstart AAAAAAAACJ}
{\bkmkend AAAAAAAACJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Stop capturing }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v TellThemCaptureCompleted\:CSLibrary::Barcode}
{\xe \v CSLibrary::Barcode\:TellThemCaptureCompleted}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CSLibrary.Barcode.TellThemCaptureCompleted ({\b BarcodeEventArgs}  {\i e}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAACK}
{\bkmkend AAAAAAAACK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v TellThemStateChanged\:CSLibrary::Barcode}
{\xe \v CSLibrary::Barcode\:TellThemStateChanged}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CSLibrary.Barcode.TellThemStateChanged ({\b BarcodeStateEventArgs}  {\i e}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAACL}
{\bkmkend AAAAAAAACL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v b_CaptureDecoded\:CSLibrary::Barcode}
{\xe \v CSLibrary::Barcode\:b_CaptureDecoded}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool CSLibrary.Barcode.b_CaptureDecoded = true{\f2 [static]}, {\f2 [private]}}}
\par
{\bkmkstart AAAAAAAACM}
{\bkmkend AAAAAAAACM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v m_state\:CSLibrary::Barcode}
{\xe \v CSLibrary::Barcode\:m_state}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b BarcodeState} CSLibrary.Barcode.m_state = BarcodeState.IDLE{\f2 [static]}, {\f2 [private]}}}
\par
{\bkmkstart AAAAAAAACN}
{\bkmkend AAAAAAAACN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mStop\:CSLibrary::Barcode}
{\xe \v CSLibrary::Barcode\:mStop}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int CSLibrary.Barcode.mStop = 0{\f2 [static]}, {\f2 [private]}}}
\par
{\bkmkstart AAAAAAAACO}
{\bkmkend AAAAAAAACO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v synlock\:CSLibrary::Barcode}
{\xe \v CSLibrary::Barcode\:synlock}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
object CSLibrary.Barcode.synlock = new object(){\f2 [static]}, {\f2 [private]}}}
\par
{\bkmkstart AAAAAAAACP}
{\bkmkend AAAAAAAACP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Property Documentation\par
\pard\plain 
{\xe \v bCaptureDecoded\:CSLibrary::Barcode}
{\xe \v CSLibrary::Barcode\:bCaptureDecoded}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool CSLibrary.Barcode.bCaptureDecoded{\f2 [static]}, {\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAAACQ}
{\bkmkend AAAAAAAACQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
True will only return decoded data in {\b OnCapturedNotify} }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v OnCapturedNotify\:CSLibrary::Barcode}
{\xe \v CSLibrary::Barcode\:OnCapturedNotify}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b BarcodeEventHandler} CSLibrary.Barcode.OnCapturedNotify{\f2 [static]}, {\f2 [add]}, {\f2 [remove]}}}
\par
{\bkmkstart AAAAAAAACR}
{\bkmkend AAAAAAAACR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
BarcodeEventHandler : Capture completed event trigger }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v OnStateChanged\:CSLibrary::Barcode}
{\xe \v CSLibrary::Barcode\:OnStateChanged}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b BarcodeStateEventHandler} CSLibrary.Barcode.OnStateChanged{\f2 [static]}, {\f2 [add]}, {\f2 [remove]}}}
\par
{\bkmkstart AAAAAAAACS}
{\bkmkend AAAAAAAACS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
BarcodeStateEventHandler : report current operation }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v State\:CSLibrary::Barcode}
{\xe \v CSLibrary::Barcode\:State}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b BarcodeState} CSLibrary.Barcode.State{\f2 [static]}, {\f2 [get]}, {\f2 [protected set]}}}
\par
{\bkmkstart AAAAAAAACT}
{\bkmkend AAAAAAAACT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Current operation state }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Event Documentation\par
\pard\plain 
{\xe \v m_captureCompleted\:CSLibrary::Barcode}
{\xe \v CSLibrary::Barcode\:m_captureCompleted}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b BarcodeEventHandler} CSLibrary.Barcode.m_captureCompleted{\f2 [static]}, {\f2 [private]}}}
\par
{\bkmkstart AAAAAAAACU}
{\bkmkend AAAAAAAACU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v m_stateChanged\:CSLibrary::Barcode}
{\xe \v CSLibrary::Barcode\:m_stateChanged}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b BarcodeStateEventHandler} CSLibrary.Barcode.m_stateChanged{\f2 [static]}, {\f2 [private]}}}
\par
{\bkmkstart AAAAAAAACV}
{\bkmkend AAAAAAAACV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
CSLibrary/BarcodeReader/{\b CSLibrary.Barcode.Linkage.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary.Barcode.BarcodeEventArgs Class Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary.Barcode.BarcodeEventArgs}
{\xe \v CSLibrary.Barcode.BarcodeEventArgs}
{\bkmkstart AAAAAAAACW}
{\bkmkend AAAAAAAACW}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Barcode} Event Argument }}\par
Inheritance diagram for CSLibrary.Barcode.BarcodeEventArgs:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_c_s_library_1_1_barcode_1_1_barcode_event_args.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b BarcodeEventArgs} ({\b MessageType} type, MessageBase msg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b BarcodeEventArgs} ({\b MessageType} type, string error)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Properties\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
MessageBase {\b Message}{\f2  [get]}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Decoded {\b Barcode} Message }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b MessageType} {\b MessageType}{\f2  [get]}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Capture result }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b ErrorMessage}{\f2  [get]}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Error message }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
MessageBase {\b m_msg} = null\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b MessageType} {\b m_type} = MessageType.ERR_MSG\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b m_error} = String.Empty\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Barcode} Event Argument \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v BarcodeEventArgs\:CSLibrary::Barcode::BarcodeEventArgs}
{\xe \v CSLibrary::Barcode::BarcodeEventArgs\:BarcodeEventArgs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CSLibrary.Barcode.BarcodeEventArgs.BarcodeEventArgs ({\b MessageType}  {\i type}, MessageBase  {\i msg})}}
\par
{\bkmkstart AAAAAAAACX}
{\bkmkend AAAAAAAACX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i type} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i msg} \cell }{\cell }
{\row }
}
}}
{\xe \v BarcodeEventArgs\:CSLibrary::Barcode::BarcodeEventArgs}
{\xe \v CSLibrary::Barcode::BarcodeEventArgs\:BarcodeEventArgs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CSLibrary.Barcode.BarcodeEventArgs.BarcodeEventArgs ({\b MessageType}  {\i type}, string  {\i error})}}
\par
{\bkmkstart AAAAAAAACY}
{\bkmkend AAAAAAAACY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i type} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i error} \cell }{\cell }
{\row }
}
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v m_error\:CSLibrary::Barcode::BarcodeEventArgs}
{\xe \v CSLibrary::Barcode::BarcodeEventArgs\:m_error}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string CSLibrary.Barcode.BarcodeEventArgs.m_error = String.Empty{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAACZ}
{\bkmkend AAAAAAAACZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v m_msg\:CSLibrary::Barcode::BarcodeEventArgs}
{\xe \v CSLibrary::Barcode::BarcodeEventArgs\:m_msg}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
MessageBase CSLibrary.Barcode.BarcodeEventArgs.m_msg = null{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAADA}
{\bkmkend AAAAAAAADA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v m_type\:CSLibrary::Barcode::BarcodeEventArgs}
{\xe \v CSLibrary::Barcode::BarcodeEventArgs\:m_type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b MessageType} CSLibrary.Barcode.BarcodeEventArgs.m_type = MessageType.ERR_MSG{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAADB}
{\bkmkend AAAAAAAADB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Property Documentation\par
\pard\plain 
{\xe \v ErrorMessage\:CSLibrary::Barcode::BarcodeEventArgs}
{\xe \v CSLibrary::Barcode::BarcodeEventArgs\:ErrorMessage}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string CSLibrary.Barcode.BarcodeEventArgs.ErrorMessage{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAADC}
{\bkmkend AAAAAAAADC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Error message }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Message\:CSLibrary::Barcode::BarcodeEventArgs}
{\xe \v CSLibrary::Barcode::BarcodeEventArgs\:Message}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
MessageBase CSLibrary.Barcode.BarcodeEventArgs.Message{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAADD}
{\bkmkend AAAAAAAADD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Decoded {\b Barcode} Message }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v MessageType\:CSLibrary::Barcode::BarcodeEventArgs}
{\xe \v CSLibrary::Barcode::BarcodeEventArgs\:MessageType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b MessageType} CSLibrary.Barcode.BarcodeEventArgs.MessageType{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAADE}
{\bkmkend AAAAAAAADE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Capture result }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
CSLibrary/BarcodeReader/Events/{\b CSLibrary.Barcode.EventArgs.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary.BarcodeReader Class Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary.BarcodeReader}
{\xe \v CSLibrary.BarcodeReader}
{\bkmkstart AAAAAAAADJ}
{\bkmkend AAAAAAAADJ}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b DOWNLINKCMD}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Types\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b STATE} \{ {\b STATE.unknown}, 
{\b STATE.ready}, 
{\b STATE.notvalid}
 \}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b Start} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Start to capture barcode, until stop is sent. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b Stop} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Stop capturing }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b FactoryReset} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Properties\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b STATE} {\b state}{\f2  [get]}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Events\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b CSLibrary.Barcode.BarcodeEventArgs} > {\b OnCapturedNotify}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b TellThemCaptureCompleted} (BarcodeEventArgs e)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b FireCaptureCompletedEvent} (BarcodeEventArgs e)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b HighLevelInterface} {\b _deviceHandler}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b STATE} {\b _state} = {\b STATE.unknown}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b BarcodeState} {\b m_state} = BarcodeState.IDLE\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
object {\b synlock} = new object()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
readonly byte [] {\b barcodecmd_TriggerMode} = new byte[] \{ 0x1b, 0x31 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
readonly byte [] {\b barcodecmd_ContinueMode} = new byte[] \{ 0x1b, 0x33 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
readonly byte [] {\b barcodecmd_StopContinue} = new byte[] \{ 0x1b, 0x30 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
readonly byte [] {\b barcodecmd_SysModeEnter} = new byte[] \{ 0x6e, 0x6c, 0x73, 0x30, 0x30, 0x30, 0x36, 0x30, 0x31, 0x30, 0x3b \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
readonly byte [] {\b barcodecmd_PermContinueMode} = new byte[] \{ 0x6e, 0x6c, 0x73, 0x30, 0x33, 0x30, 0x32, 0x30, 0x32, 0x30, 0x3b \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
readonly byte [] {\b barcodecmd_PermTriggerMode} = new byte[] \{ 0x6e, 0x6c, 0x73, 0x30, 0x33, 0x30, 0x32, 0x30, 0x30, 0x30, 0x3b \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
readonly byte [] {\b barcodecmd_ScanCycleTime30000} = new byte[] \{ 0x6e, 0x6c, 0x73, 0x30, 0x33, 0x31, 0x33, 0x30, 0x30, 0x30, 0x3d, 0x33, 0x30, 0x30, 0x30, 0x30, 0x3b \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
readonly byte [] {\b barcodecmd_SysModeExit} = new byte[] \{ 0x6e, 0x6c, 0x73, 0x30, 0x30, 0x30, 0x36, 0x30, 0x30, 0x30, 0x3b \}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Enumeration Documentation\par
\pard\plain 
{\xe \v STATE\:CSLibrary::BarcodeReader}
{\xe \v CSLibrary::BarcodeReader\:STATE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b CSLibrary.BarcodeReader.STATE}{\f2 [strong]}}}
\par
{\bkmkstart AAAAAAAADK}
{\bkmkend AAAAAAAADK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v unknown\:CSLibrary::BarcodeReader}
{\xe \v CSLibrary::BarcodeReader\:unknown}
{\qr unknown{\bkmkstart AAAAAAAADL}
{\bkmkend AAAAAAAADL}
\cell }{\cell }{\row }
{\xe \v ready\:CSLibrary::BarcodeReader}
{\xe \v CSLibrary::BarcodeReader\:ready}
{\qr ready{\bkmkstart AAAAAAAADM}
{\bkmkend AAAAAAAADM}
\cell }{\cell }{\row }
{\xe \v notvalid\:CSLibrary::BarcodeReader}
{\xe \v CSLibrary::BarcodeReader\:notvalid}
{\qr notvalid{\bkmkstart AAAAAAAADN}
{\bkmkend AAAAAAAADN}
\cell }{\cell }{\row }
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v FactoryReset\:CSLibrary::BarcodeReader}
{\xe \v CSLibrary::BarcodeReader\:FactoryReset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CSLibrary.BarcodeReader.FactoryReset ()}}
\par
{\bkmkstart AAAAAAAADO}
{\bkmkend AAAAAAAADO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v FireCaptureCompletedEvent\:CSLibrary::BarcodeReader}
{\xe \v CSLibrary::BarcodeReader\:FireCaptureCompletedEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CSLibrary.BarcodeReader.FireCaptureCompletedEvent (BarcodeEventArgs  {\i e}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAADP}
{\bkmkend AAAAAAAADP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Start\:CSLibrary::BarcodeReader}
{\xe \v CSLibrary::BarcodeReader\:Start}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool CSLibrary.BarcodeReader.Start ()}}
\par
{\bkmkstart AAAAAAAADQ}
{\bkmkend AAAAAAAADQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Start to capture barcode, until stop is sent. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v Stop\:CSLibrary::BarcodeReader}
{\xe \v CSLibrary::BarcodeReader\:Stop}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool CSLibrary.BarcodeReader.Stop ()}}
\par
{\bkmkstart AAAAAAAADR}
{\bkmkend AAAAAAAADR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Stop capturing }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v TellThemCaptureCompleted\:CSLibrary::BarcodeReader}
{\xe \v CSLibrary::BarcodeReader\:TellThemCaptureCompleted}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CSLibrary.BarcodeReader.TellThemCaptureCompleted (BarcodeEventArgs  {\i e}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAADS}
{\bkmkend AAAAAAAADS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v _deviceHandler\:CSLibrary::BarcodeReader}
{\xe \v CSLibrary::BarcodeReader\:_deviceHandler}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b HighLevelInterface} CSLibrary.BarcodeReader._deviceHandler{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAADT}
{\bkmkend AAAAAAAADT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v _state\:CSLibrary::BarcodeReader}
{\xe \v CSLibrary::BarcodeReader\:_state}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b STATE} CSLibrary.BarcodeReader._state = {\b STATE.unknown}{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAADU}
{\bkmkend AAAAAAAADU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v barcodecmd_ContinueMode\:CSLibrary::BarcodeReader}
{\xe \v CSLibrary::BarcodeReader\:barcodecmd_ContinueMode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly byte [] CSLibrary.BarcodeReader.barcodecmd_ContinueMode = new byte[] \{ 0x1b, 0x33 \}{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAADV}
{\bkmkend AAAAAAAADV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v barcodecmd_PermContinueMode\:CSLibrary::BarcodeReader}
{\xe \v CSLibrary::BarcodeReader\:barcodecmd_PermContinueMode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly byte [] CSLibrary.BarcodeReader.barcodecmd_PermContinueMode = new byte[] \{ 0x6e, 0x6c, 0x73, 0x30, 0x33, 0x30, 0x32, 0x30, 0x32, 0x30, 0x3b \}{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAADW}
{\bkmkend AAAAAAAADW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v barcodecmd_PermTriggerMode\:CSLibrary::BarcodeReader}
{\xe \v CSLibrary::BarcodeReader\:barcodecmd_PermTriggerMode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly byte [] CSLibrary.BarcodeReader.barcodecmd_PermTriggerMode = new byte[] \{ 0x6e, 0x6c, 0x73, 0x30, 0x33, 0x30, 0x32, 0x30, 0x30, 0x30, 0x3b \}{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAADX}
{\bkmkend AAAAAAAADX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v barcodecmd_ScanCycleTime30000\:CSLibrary::BarcodeReader}
{\xe \v CSLibrary::BarcodeReader\:barcodecmd_ScanCycleTime30000}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly byte [] CSLibrary.BarcodeReader.barcodecmd_ScanCycleTime30000 = new byte[] \{ 0x6e, 0x6c, 0x73, 0x30, 0x33, 0x31, 0x33, 0x30, 0x30, 0x30, 0x3d, 0x33, 0x30, 0x30, 0x30, 0x30, 0x3b \}{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAADY}
{\bkmkend AAAAAAAADY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v barcodecmd_StopContinue\:CSLibrary::BarcodeReader}
{\xe \v CSLibrary::BarcodeReader\:barcodecmd_StopContinue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly byte [] CSLibrary.BarcodeReader.barcodecmd_StopContinue = new byte[] \{ 0x1b, 0x30 \}{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAADZ}
{\bkmkend AAAAAAAADZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v barcodecmd_SysModeEnter\:CSLibrary::BarcodeReader}
{\xe \v CSLibrary::BarcodeReader\:barcodecmd_SysModeEnter}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly byte [] CSLibrary.BarcodeReader.barcodecmd_SysModeEnter = new byte[] \{ 0x6e, 0x6c, 0x73, 0x30, 0x30, 0x30, 0x36, 0x30, 0x31, 0x30, 0x3b \}{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAEA}
{\bkmkend AAAAAAAAEA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v barcodecmd_SysModeExit\:CSLibrary::BarcodeReader}
{\xe \v CSLibrary::BarcodeReader\:barcodecmd_SysModeExit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly byte [] CSLibrary.BarcodeReader.barcodecmd_SysModeExit = new byte[] \{ 0x6e, 0x6c, 0x73, 0x30, 0x30, 0x30, 0x36, 0x30, 0x30, 0x30, 0x3b \}{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAEB}
{\bkmkend AAAAAAAAEB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v barcodecmd_TriggerMode\:CSLibrary::BarcodeReader}
{\xe \v CSLibrary::BarcodeReader\:barcodecmd_TriggerMode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly byte [] CSLibrary.BarcodeReader.barcodecmd_TriggerMode = new byte[] \{ 0x1b, 0x31 \}{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAEC}
{\bkmkend AAAAAAAAEC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v m_state\:CSLibrary::BarcodeReader}
{\xe \v CSLibrary::BarcodeReader\:m_state}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b BarcodeState} CSLibrary.BarcodeReader.m_state = BarcodeState.IDLE{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAED}
{\bkmkend AAAAAAAAED}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v synlock\:CSLibrary::BarcodeReader}
{\xe \v CSLibrary::BarcodeReader\:synlock}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
object CSLibrary.BarcodeReader.synlock = new object(){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAEE}
{\bkmkend AAAAAAAAEE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Property Documentation\par
\pard\plain 
{\xe \v state\:CSLibrary::BarcodeReader}
{\xe \v CSLibrary::BarcodeReader\:state}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b STATE} CSLibrary.BarcodeReader.state{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAEF}
{\bkmkend AAAAAAAAEF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Event Documentation\par
\pard\plain 
{\xe \v OnCapturedNotify\:CSLibrary::BarcodeReader}
{\xe \v CSLibrary::BarcodeReader\:OnCapturedNotify}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
EventHandler<{\b CSLibrary.Barcode.BarcodeEventArgs}> CSLibrary.BarcodeReader.OnCapturedNotify}}
\par
{\bkmkstart AAAAAAAAEG}
{\bkmkend AAAAAAAAEG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
CSLibrary/BarcodeReader/{\b ClassBarCode.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary.Barcode.BarcodeStateEventArgs Class Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary.Barcode.BarcodeStateEventArgs}
{\xe \v CSLibrary.Barcode.BarcodeStateEventArgs}
{\bkmkstart AAAAAAAADF}
{\bkmkend AAAAAAAADF}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
}}\par
Inheritance diagram for CSLibrary.Barcode.BarcodeStateEventArgs:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_c_s_library_1_1_barcode_1_1_barcode_state_event_args.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b BarcodeStateEventArgs} ({\b BarcodeState} state)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Properties\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b BarcodeState} {\b State}{\f2  [get]}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Current operation state }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b BarcodeState} {\b m_state} = BarcodeState.IDLE\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v BarcodeStateEventArgs\:CSLibrary::Barcode::BarcodeStateEventArgs}
{\xe \v CSLibrary::Barcode::BarcodeStateEventArgs\:BarcodeStateEventArgs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CSLibrary.Barcode.BarcodeStateEventArgs.BarcodeStateEventArgs ({\b BarcodeState}  {\i state})}}
\par
{\bkmkstart AAAAAAAADG}
{\bkmkend AAAAAAAADG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i state} \cell }{\cell }
{\row }
}
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v m_state\:CSLibrary::Barcode::BarcodeStateEventArgs}
{\xe \v CSLibrary::Barcode::BarcodeStateEventArgs\:m_state}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b BarcodeState} CSLibrary.Barcode.BarcodeStateEventArgs.m_state = BarcodeState.IDLE{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAADH}
{\bkmkend AAAAAAAADH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Property Documentation\par
\pard\plain 
{\xe \v State\:CSLibrary::Barcode::BarcodeStateEventArgs}
{\xe \v CSLibrary::Barcode::BarcodeStateEventArgs\:State}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b BarcodeState} CSLibrary.Barcode.BarcodeStateEventArgs.State{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAADI}
{\bkmkend AAAAAAAADI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Current operation state }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
CSLibrary/BarcodeReader/Events/{\b CSLibrary.Barcode.EventArgs.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary.Structures.BeeperParms Class Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary.Structures.BeeperParms}
{\xe \v CSLibrary.Structures.BeeperParms}
{\bkmkstart AAAAAAADJF}
{\bkmkend AAAAAAADJF}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Beeper structure /summary> }}\par
Inheritance diagram for CSLibrary.Structures.BeeperParms:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_c_s_library_1_1_barcode_1_1_structures_1_1_beeper_parms.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b BeeperParms} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b BeeperMask} {\b dwMask} = BeeperMask.ALL\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mask of active items. Notes: You can use OR to enable multiple items }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b bBeepOnDecode}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sound beeper on successful decode. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b bShortBeep}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sound beeper whenever imager resets. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b bMenuCmdBeep}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sound beeper whenever a menu command is received. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b BeeperVolume} {\b beepVolume}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the beeper volume. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Beeper structure /summary> \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v BeeperParms\:CSLibrary::Barcode::Structures::BeeperParms}
{\xe \v CSLibrary::Barcode::Structures::BeeperParms\:BeeperParms}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CSLibrary.Structures.BeeperParms.BeeperParms ()}}
\par
{\bkmkstart AAAAAAADJG}
{\bkmkend AAAAAAADJG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v bBeepOnDecode\:CSLibrary::Barcode::Structures::BeeperParms}
{\xe \v CSLibrary::Barcode::Structures::BeeperParms\:bBeepOnDecode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool CSLibrary.Structures.BeeperParms.bBeepOnDecode}}
\par
{\bkmkstart AAAAAAADJH}
{\bkmkend AAAAAAADJH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sound beeper on successful decode. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v beepVolume\:CSLibrary::Barcode::Structures::BeeperParms}
{\xe \v CSLibrary::Barcode::Structures::BeeperParms\:beepVolume}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b BeeperVolume} CSLibrary.Structures.BeeperParms.beepVolume}}
\par
{\bkmkstart AAAAAAADJI}
{\bkmkend AAAAAAADJI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the beeper volume. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v bMenuCmdBeep\:CSLibrary::Barcode::Structures::BeeperParms}
{\xe \v CSLibrary::Barcode::Structures::BeeperParms\:bMenuCmdBeep}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool CSLibrary.Structures.BeeperParms.bMenuCmdBeep}}
\par
{\bkmkstart AAAAAAADJJ}
{\bkmkend AAAAAAADJJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sound beeper whenever a menu command is received. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v bShortBeep\:CSLibrary::Barcode::Structures::BeeperParms}
{\xe \v CSLibrary::Barcode::Structures::BeeperParms\:bShortBeep}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool CSLibrary.Structures.BeeperParms.bShortBeep}}
\par
{\bkmkstart AAAAAAADJK}
{\bkmkend AAAAAAADJK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sound beeper whenever imager resets. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v dwMask\:CSLibrary::Barcode::Structures::BeeperParms}
{\xe \v CSLibrary::Barcode::Structures::BeeperParms\:dwMask}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b BeeperMask} CSLibrary.Structures.BeeperParms.dwMask = BeeperMask.ALL}}
\par
{\bkmkstart AAAAAAADJL}
{\bkmkend AAAAAAADJL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mask of active items. Notes: You can use OR to enable multiple items }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
CSLibrary/BarcodeReader/Structures/{\b CSLibrary.Barcode.Structures.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary.BluetoothIC Class Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary.BluetoothIC}
{\xe \v CSLibrary.BluetoothIC}
{\bkmkstart AAAAAAAAEM}
{\bkmkend AAAAAAAAEM}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b DOWNLINKCMD}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b GetDeviceName} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b SetDeviceName} (string deviceName)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b _deviceName}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b _version}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b HighLevelInterface} {\b _deviceHandler}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v GetDeviceName\:CSLibrary::BluetoothIC}
{\xe \v CSLibrary::BluetoothIC\:GetDeviceName}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string CSLibrary.BluetoothIC.GetDeviceName ()}}
\par
{\bkmkstart AAAAAAAAEN}
{\bkmkend AAAAAAAAEN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SetDeviceName\:CSLibrary::BluetoothIC}
{\xe \v CSLibrary::BluetoothIC\:SetDeviceName}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool CSLibrary.BluetoothIC.SetDeviceName (string  {\i deviceName})}}
\par
{\bkmkstart AAAAAAAAEO}
{\bkmkend AAAAAAAAEO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v _deviceHandler\:CSLibrary::BluetoothIC}
{\xe \v CSLibrary::BluetoothIC\:_deviceHandler}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b HighLevelInterface} CSLibrary.BluetoothIC._deviceHandler{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAEP}
{\bkmkend AAAAAAAAEP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v _deviceName\:CSLibrary::BluetoothIC}
{\xe \v CSLibrary::BluetoothIC\:_deviceName}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string CSLibrary.BluetoothIC._deviceName{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAEQ}
{\bkmkend AAAAAAAAEQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v _version\:CSLibrary::BluetoothIC}
{\xe \v CSLibrary::BluetoothIC\:_version}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string CSLibrary.BluetoothIC._version{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAER}
{\bkmkend AAAAAAAAER}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
CSLibrary/BluetoothIC/{\b ClassBluetoothIC.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary.Structures.CarrierWaveParms Class Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary.Structures.CarrierWaveParms}
{\xe \v CSLibrary.Structures.CarrierWaveParms}
{\bkmkstart AAAAAAADJM}
{\bkmkend AAAAAAADJM}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Carrier wave parms }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b dataMode} = false\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
data mode enable }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Carrier wave parms \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v dataMode\:CSLibrary::Structures::CarrierWaveParms}
{\xe \v CSLibrary::Structures::CarrierWaveParms\:dataMode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool CSLibrary.Structures.CarrierWaveParms.dataMode = false}}
\par
{\bkmkstart AAAAAAADJN}
{\bkmkend AAAAAAADJN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
data mode enable }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
CSLibrary/RFIDReader/Structures/{\b CSLibrary.Structures.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary.Structures.CommonParms Struct Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary.Structures.CommonParms}
{\xe \v CSLibrary.Structures.CommonParms}
{\bkmkstart AAAAAAADJO}
{\bkmkend AAAAAAADJO}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
All tag-protocol operation functions share a common set of parameters. These parameters are gathered in one place for convenience. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt32 {\b tagStopCount}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The maximum number of tags to which the tag-protocol operation will be applied. If this number is zero, then the operation is applied to all tags that match the selection, and optionally post-singulation, match criteria (within the constraints of the antenna-port dwell time and inventory cycle count \'96 see ). If this number is non-zero, the antenna-port dwell-time and inventory-cycle-count constraints still apply, however the operation will be prematurely terminated if the maximum number of tags have the tag-protocol operation applied to them. For version 1.0, this field may have a maximum value 1. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b callback}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
a callback function that the library will invoke with the Resulting operation-response packets. This field must not be NULL. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b context}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
An application-defined value that is passed through unmodified to the application-specified callback function. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b callbackCode}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A pointer to a 32-bit integer that upon return will contain the return code from the last call to the application-supplied callback function. If the application does not desire this information, this field may be NULL. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
All tag-protocol operation functions share a common set of parameters. These parameters are gathered in one place for convenience. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v callback\:CSLibrary::Structures::CommonParms}
{\xe \v CSLibrary::Structures::CommonParms\:callback}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr CSLibrary.Structures.CommonParms.callback}}
\par
{\bkmkstart AAAAAAADJP}
{\bkmkend AAAAAAADJP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
a callback function that the library will invoke with the Resulting operation-response packets. This field must not be NULL. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v callbackCode\:CSLibrary::Structures::CommonParms}
{\xe \v CSLibrary::Structures::CommonParms\:callbackCode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr CSLibrary.Structures.CommonParms.callbackCode}}
\par
{\bkmkstart AAAAAAADJQ}
{\bkmkend AAAAAAADJQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A pointer to a 32-bit integer that upon return will contain the return code from the last call to the application-supplied callback function. If the application does not desire this information, this field may be NULL. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v context\:CSLibrary::Structures::CommonParms}
{\xe \v CSLibrary::Structures::CommonParms\:context}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr CSLibrary.Structures.CommonParms.context}}
\par
{\bkmkstart AAAAAAADJR}
{\bkmkend AAAAAAADJR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
An application-defined value that is passed through unmodified to the application-specified callback function. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v tagStopCount\:CSLibrary::Structures::CommonParms}
{\xe \v CSLibrary::Structures::CommonParms\:tagStopCount}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt32 CSLibrary.Structures.CommonParms.tagStopCount}}
\par
{\bkmkstart AAAAAAADJS}
{\bkmkend AAAAAAADJS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The maximum number of tags to which the tag-protocol operation will be applied. If this number is zero, then the operation is applied to all tags that match the selection, and optionally post-singulation, match criteria (within the constraints of the antenna-port dwell time and inventory cycle count \'96 see ). If this number is non-zero, the antenna-port dwell-time and inventory-cycle-count constraints still apply, however the operation will be prematurely terminated if the maximum number of tags have the tag-protocol operation applied to them. For version 1.0, this field may have a maximum value 1. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
CSLibrary/RFIDReader/Structures/{\b Intel.Structures.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary.Structures.ConfigBase Class Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary.Structures.ConfigBase}
{\xe \v CSLibrary.Structures.ConfigBase}
{\bkmkstart AAAAAAADJT}
{\bkmkend AAAAAAADJT}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Configuration base class }}\par
Inheritance diagram for CSLibrary.Structures.ConfigBase:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_c_s_library_1_1_barcode_1_1_structures_1_1_config_base.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ConfigBase} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Int32 {\b m_length} = 4\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure size }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Properties\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Int32 {\b length}{\f2  [get, protected set]}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure size }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Configuration base class \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v ConfigBase\:CSLibrary::Barcode::Structures::ConfigBase}
{\xe \v CSLibrary::Barcode::Structures::ConfigBase\:ConfigBase}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CSLibrary.Structures.ConfigBase.ConfigBase ()}}
\par
{\bkmkstart AAAAAAADJU}
{\bkmkend AAAAAAADJU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
}}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v m_length\:CSLibrary::Barcode::Structures::ConfigBase}
{\xe \v CSLibrary::Barcode::Structures::ConfigBase\:m_length}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Int32 CSLibrary.Structures.ConfigBase.m_length = 4{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADJV}
{\bkmkend AAAAAAADJV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure size }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Property Documentation\par
\pard\plain 
{\xe \v length\:CSLibrary::Barcode::Structures::ConfigBase}
{\xe \v CSLibrary::Barcode::Structures::ConfigBase\:length}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Int32 CSLibrary.Structures.ConfigBase.length{\f2 [get]}, {\f2 [protected set]}}}
\par
{\bkmkstart AAAAAAADJW}
{\bkmkend AAAAAAADJW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure size }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
CSLibrary/BarcodeReader/Structures/{\b CSLibrary.Barcode.Structures.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary.Barcode.Constants.Constants Class Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary.Barcode.Constants.Constants}
{\xe \v CSLibrary.Barcode.Constants.Constants}
{\bkmkstart AAAAAAACFN}
{\bkmkend AAAAAAACFN}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constant value }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static readonly uint {\b BAD_DWORD_VALUE} = uint.MaxValue\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
DWORD -1 (bad value) }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static readonly uint {\b ALL_MASK} = 0xffffffff\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Universal Mask }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static readonly uint {\b MIN_COMPRESSION_FACTOR} = 0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static readonly uint {\b MAX_COMPRESSION_FACTOR} = 100\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static readonly uint {\b MIN_EDGE_ENHANCEMENT} = 0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static readonly uint {\b MAX_EDGE_ENHANCEMENT} = 23\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static readonly uint {\b MIN_GAMMA_CORRECTION} = 0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static readonly uint {\b MAX_GAMMA_CORRECTION} = 1000\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static readonly uint {\b MIN_TEXT_ENHANCEMENT} = 0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static readonly uint {\b MAX_TEXT_ENHANCEMENT} = 255\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static readonly uint {\b MAX_MESAGE_LENGTH} = 4096\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Data structure that holds the decoded barcode message. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static readonly uint {\b MIN_TRIGGER_TIMEOUT_VAL} = 0\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Trigger Timeout Range-Infinite }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static readonly uint {\b MAX_TRIGGER_TIMEOUT_VAL} = 300000\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Trigger Timeout Range-5 Minutes. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static readonly uint {\b MAX_SEQ_BARCODES} = 12\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static readonly uint {\b MAX_NUM_START_CHARS} = 32\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static readonly uint {\b SEQ_ALL_LENGTH} = 9999\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static readonly uint {\b MIN_CODE_DELAY} = 10\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static readonly uint {\b MAX_CONCAT_DELAY} = 1000\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static readonly uint {\b MAX_COMPOSITE_DELAY} = 1000\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static readonly uint {\b MAX_ADDENDA_DELAY} = 500\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static readonly uint {\b MAX_VERSION_STRING_LEN} = 128\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static readonly uint {\b MAX_DEVICE_TYPE_STRING_LEN} = 64\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static readonly uint {\b MAX_MANUFACTURERS_ID_LEN} = 16\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static readonly uint {\b MAX_SHORT_VERSION_LEN} = 32\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Defines for Engine Information Structure. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static readonly uint {\b MAX_SERIAL_NUMBER_LEN} = 16\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static readonly uint {\b MAX_CHECKSUM_LEN} = 8\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static readonly uint {\b ENGINE_ID_DIGITS} = 4\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constant value \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v ALL_MASK\:CSLibrary::Barcode::Constants::Constants}
{\xe \v CSLibrary::Barcode::Constants::Constants\:ALL_MASK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly uint CSLibrary.Barcode.Constants.Constants.ALL_MASK = 0xffffffff{\f2 [static]}}}
\par
{\bkmkstart AAAAAAACFO}
{\bkmkend AAAAAAACFO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Universal Mask }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v BAD_DWORD_VALUE\:CSLibrary::Barcode::Constants::Constants}
{\xe \v CSLibrary::Barcode::Constants::Constants\:BAD_DWORD_VALUE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly uint CSLibrary.Barcode.Constants.Constants.BAD_DWORD_VALUE = uint.MaxValue{\f2 [static]}}}
\par
{\bkmkstart AAAAAAACFP}
{\bkmkend AAAAAAACFP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
DWORD -1 (bad value) }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v ENGINE_ID_DIGITS\:CSLibrary::Barcode::Constants::Constants}
{\xe \v CSLibrary::Barcode::Constants::Constants\:ENGINE_ID_DIGITS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly uint CSLibrary.Barcode.Constants.Constants.ENGINE_ID_DIGITS = 4{\f2 [static]}}}
\par
{\bkmkstart AAAAAAACFQ}
{\bkmkend AAAAAAACFQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v MAX_ADDENDA_DELAY\:CSLibrary::Barcode::Constants::Constants}
{\xe \v CSLibrary::Barcode::Constants::Constants\:MAX_ADDENDA_DELAY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly uint CSLibrary.Barcode.Constants.Constants.MAX_ADDENDA_DELAY = 500{\f2 [static]}}}
\par
{\bkmkstart AAAAAAACFR}
{\bkmkend AAAAAAACFR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v MAX_CHECKSUM_LEN\:CSLibrary::Barcode::Constants::Constants}
{\xe \v CSLibrary::Barcode::Constants::Constants\:MAX_CHECKSUM_LEN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly uint CSLibrary.Barcode.Constants.Constants.MAX_CHECKSUM_LEN = 8{\f2 [static]}}}
\par
{\bkmkstart AAAAAAACFS}
{\bkmkend AAAAAAACFS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v MAX_COMPOSITE_DELAY\:CSLibrary::Barcode::Constants::Constants}
{\xe \v CSLibrary::Barcode::Constants::Constants\:MAX_COMPOSITE_DELAY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly uint CSLibrary.Barcode.Constants.Constants.MAX_COMPOSITE_DELAY = 1000{\f2 [static]}}}
\par
{\bkmkstart AAAAAAACFT}
{\bkmkend AAAAAAACFT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v MAX_COMPRESSION_FACTOR\:CSLibrary::Barcode::Constants::Constants}
{\xe \v CSLibrary::Barcode::Constants::Constants\:MAX_COMPRESSION_FACTOR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly uint CSLibrary.Barcode.Constants.Constants.MAX_COMPRESSION_FACTOR = 100{\f2 [static]}}}
\par
{\bkmkstart AAAAAAACFU}
{\bkmkend AAAAAAACFU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v MAX_CONCAT_DELAY\:CSLibrary::Barcode::Constants::Constants}
{\xe \v CSLibrary::Barcode::Constants::Constants\:MAX_CONCAT_DELAY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly uint CSLibrary.Barcode.Constants.Constants.MAX_CONCAT_DELAY = 1000{\f2 [static]}}}
\par
{\bkmkstart AAAAAAACFV}
{\bkmkend AAAAAAACFV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v MAX_DEVICE_TYPE_STRING_LEN\:CSLibrary::Barcode::Constants::Constants}
{\xe \v CSLibrary::Barcode::Constants::Constants\:MAX_DEVICE_TYPE_STRING_LEN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly uint CSLibrary.Barcode.Constants.Constants.MAX_DEVICE_TYPE_STRING_LEN = 64{\f2 [static]}}}
\par
{\bkmkstart AAAAAAACFW}
{\bkmkend AAAAAAACFW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v MAX_EDGE_ENHANCEMENT\:CSLibrary::Barcode::Constants::Constants}
{\xe \v CSLibrary::Barcode::Constants::Constants\:MAX_EDGE_ENHANCEMENT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly uint CSLibrary.Barcode.Constants.Constants.MAX_EDGE_ENHANCEMENT = 23{\f2 [static]}}}
\par
{\bkmkstart AAAAAAACFX}
{\bkmkend AAAAAAACFX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v MAX_GAMMA_CORRECTION\:CSLibrary::Barcode::Constants::Constants}
{\xe \v CSLibrary::Barcode::Constants::Constants\:MAX_GAMMA_CORRECTION}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly uint CSLibrary.Barcode.Constants.Constants.MAX_GAMMA_CORRECTION = 1000{\f2 [static]}}}
\par
{\bkmkstart AAAAAAACFY}
{\bkmkend AAAAAAACFY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v MAX_MANUFACTURERS_ID_LEN\:CSLibrary::Barcode::Constants::Constants}
{\xe \v CSLibrary::Barcode::Constants::Constants\:MAX_MANUFACTURERS_ID_LEN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly uint CSLibrary.Barcode.Constants.Constants.MAX_MANUFACTURERS_ID_LEN = 16{\f2 [static]}}}
\par
{\bkmkstart AAAAAAACFZ}
{\bkmkend AAAAAAACFZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v MAX_MESAGE_LENGTH\:CSLibrary::Barcode::Constants::Constants}
{\xe \v CSLibrary::Barcode::Constants::Constants\:MAX_MESAGE_LENGTH}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly uint CSLibrary.Barcode.Constants.Constants.MAX_MESAGE_LENGTH = 4096{\f2 [static]}}}
\par
{\bkmkstart AAAAAAACGA}
{\bkmkend AAAAAAACGA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Data structure that holds the decoded barcode message. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v MAX_NUM_START_CHARS\:CSLibrary::Barcode::Constants::Constants}
{\xe \v CSLibrary::Barcode::Constants::Constants\:MAX_NUM_START_CHARS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly uint CSLibrary.Barcode.Constants.Constants.MAX_NUM_START_CHARS = 32{\f2 [static]}}}
\par
{\bkmkstart AAAAAAACGB}
{\bkmkend AAAAAAACGB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v MAX_SEQ_BARCODES\:CSLibrary::Barcode::Constants::Constants}
{\xe \v CSLibrary::Barcode::Constants::Constants\:MAX_SEQ_BARCODES}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly uint CSLibrary.Barcode.Constants.Constants.MAX_SEQ_BARCODES = 12{\f2 [static]}}}
\par
{\bkmkstart AAAAAAACGC}
{\bkmkend AAAAAAACGC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v MAX_SERIAL_NUMBER_LEN\:CSLibrary::Barcode::Constants::Constants}
{\xe \v CSLibrary::Barcode::Constants::Constants\:MAX_SERIAL_NUMBER_LEN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly uint CSLibrary.Barcode.Constants.Constants.MAX_SERIAL_NUMBER_LEN = 16{\f2 [static]}}}
\par
{\bkmkstart AAAAAAACGD}
{\bkmkend AAAAAAACGD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v MAX_SHORT_VERSION_LEN\:CSLibrary::Barcode::Constants::Constants}
{\xe \v CSLibrary::Barcode::Constants::Constants\:MAX_SHORT_VERSION_LEN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly uint CSLibrary.Barcode.Constants.Constants.MAX_SHORT_VERSION_LEN = 32{\f2 [static]}}}
\par
{\bkmkstart AAAAAAACGE}
{\bkmkend AAAAAAACGE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Defines for Engine Information Structure. }}\par
}
{\xe \v MAX_TEXT_ENHANCEMENT\:CSLibrary::Barcode::Constants::Constants}
{\xe \v CSLibrary::Barcode::Constants::Constants\:MAX_TEXT_ENHANCEMENT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly uint CSLibrary.Barcode.Constants.Constants.MAX_TEXT_ENHANCEMENT = 255{\f2 [static]}}}
\par
{\bkmkstart AAAAAAACGF}
{\bkmkend AAAAAAACGF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v MAX_TRIGGER_TIMEOUT_VAL\:CSLibrary::Barcode::Constants::Constants}
{\xe \v CSLibrary::Barcode::Constants::Constants\:MAX_TRIGGER_TIMEOUT_VAL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly uint CSLibrary.Barcode.Constants.Constants.MAX_TRIGGER_TIMEOUT_VAL = 300000{\f2 [static]}}}
\par
{\bkmkstart AAAAAAACGG}
{\bkmkend AAAAAAACGG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Trigger Timeout Range-5 Minutes. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v MAX_VERSION_STRING_LEN\:CSLibrary::Barcode::Constants::Constants}
{\xe \v CSLibrary::Barcode::Constants::Constants\:MAX_VERSION_STRING_LEN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly uint CSLibrary.Barcode.Constants.Constants.MAX_VERSION_STRING_LEN = 128{\f2 [static]}}}
\par
{\bkmkstart AAAAAAACGH}
{\bkmkend AAAAAAACGH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v MIN_CODE_DELAY\:CSLibrary::Barcode::Constants::Constants}
{\xe \v CSLibrary::Barcode::Constants::Constants\:MIN_CODE_DELAY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly uint CSLibrary.Barcode.Constants.Constants.MIN_CODE_DELAY = 10{\f2 [static]}}}
\par
{\bkmkstart AAAAAAACGI}
{\bkmkend AAAAAAACGI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v MIN_COMPRESSION_FACTOR\:CSLibrary::Barcode::Constants::Constants}
{\xe \v CSLibrary::Barcode::Constants::Constants\:MIN_COMPRESSION_FACTOR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly uint CSLibrary.Barcode.Constants.Constants.MIN_COMPRESSION_FACTOR = 0{\f2 [static]}}}
\par
{\bkmkstart AAAAAAACGJ}
{\bkmkend AAAAAAACGJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v MIN_EDGE_ENHANCEMENT\:CSLibrary::Barcode::Constants::Constants}
{\xe \v CSLibrary::Barcode::Constants::Constants\:MIN_EDGE_ENHANCEMENT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly uint CSLibrary.Barcode.Constants.Constants.MIN_EDGE_ENHANCEMENT = 0{\f2 [static]}}}
\par
{\bkmkstart AAAAAAACGK}
{\bkmkend AAAAAAACGK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v MIN_GAMMA_CORRECTION\:CSLibrary::Barcode::Constants::Constants}
{\xe \v CSLibrary::Barcode::Constants::Constants\:MIN_GAMMA_CORRECTION}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly uint CSLibrary.Barcode.Constants.Constants.MIN_GAMMA_CORRECTION = 0{\f2 [static]}}}
\par
{\bkmkstart AAAAAAACGL}
{\bkmkend AAAAAAACGL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v MIN_TEXT_ENHANCEMENT\:CSLibrary::Barcode::Constants::Constants}
{\xe \v CSLibrary::Barcode::Constants::Constants\:MIN_TEXT_ENHANCEMENT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly uint CSLibrary.Barcode.Constants.Constants.MIN_TEXT_ENHANCEMENT = 0{\f2 [static]}}}
\par
{\bkmkstart AAAAAAACGM}
{\bkmkend AAAAAAACGM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v MIN_TRIGGER_TIMEOUT_VAL\:CSLibrary::Barcode::Constants::Constants}
{\xe \v CSLibrary::Barcode::Constants::Constants\:MIN_TRIGGER_TIMEOUT_VAL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly uint CSLibrary.Barcode.Constants.Constants.MIN_TRIGGER_TIMEOUT_VAL = 0{\f2 [static]}}}
\par
{\bkmkstart AAAAAAACGN}
{\bkmkend AAAAAAACGN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Trigger Timeout Range-Infinite }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v SEQ_ALL_LENGTH\:CSLibrary::Barcode::Constants::Constants}
{\xe \v CSLibrary::Barcode::Constants::Constants\:SEQ_ALL_LENGTH}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly uint CSLibrary.Barcode.Constants.Constants.SEQ_ALL_LENGTH = 9999{\f2 [static]}}}
\par
{\bkmkstart AAAAAAACGO}
{\bkmkend AAAAAAACGO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
CSLibrary/BarcodeReader/Constants/{\b CSLibrary.Barcode.Constants.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary.SiliconLabIC.Constants Class Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary.SiliconLabIC.Constants}
{\xe \v CSLibrary.SiliconLabIC.Constants}
{\bkmkstart AAAAAAABKF}
{\bkmkend AAAAAAABKF}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Types\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b AccessCompletedCallbackType} \{ {\b AccessCompletedCallbackType.SERIALNUMBER}, 
{\b AccessCompletedCallbackType.UNKNOWN}
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SiliconLab IC Callback Type }}}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Enumeration Documentation\par
\pard\plain 
{\xe \v AccessCompletedCallbackType\:CSLibrary::SiliconLabIC::Constants}
{\xe \v CSLibrary::SiliconLabIC::Constants\:AccessCompletedCallbackType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b CSLibrary.SiliconLabIC.Constants.AccessCompletedCallbackType}{\f2 [strong]}}}
\par
{\bkmkstart AAAAAAABKG}
{\bkmkend AAAAAAABKG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SiliconLab IC Callback Type }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v SERIALNUMBER\:CSLibrary::SiliconLabIC::Constants}
{\xe \v CSLibrary::SiliconLabIC::Constants\:SERIALNUMBER}
{\qr SERIALNUMBER{\bkmkstart AAAAAAABKH}
{\bkmkend AAAAAAABKH}
\cell }{\cell }{\row }
{\xe \v UNKNOWN\:CSLibrary::SiliconLabIC::Constants}
{\xe \v CSLibrary::SiliconLabIC::Constants\:UNKNOWN}
{\qr UNKNOWN{\bkmkstart AAAAAAABKI}
{\bkmkend AAAAAAABKI}
\cell }{\cell }{\row }
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
CSLibrary/SiliconLabIC/{\b ClassEvent.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary.Structures.CSLibraryOperationParms Class Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary.Structures.CSLibraryOperationParms}
{\xe \v CSLibrary.Structures.CSLibraryOperationParms}
{\bkmkstart AAAAAAADJX}
{\bkmkend AAAAAAADJX}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Operation Paramemter }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TagInventoryParms} {\b TagInventory} = new {\b TagInventoryParms}()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Config this before search }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TagKillParms} {\b TagKill} = new {\b TagKillParms}()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Config this before kill }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TagLockParms} {\b TagLock} = new {\b TagLockParms}()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Config this before lock }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TagBlockPermalockParms} {\b TagBlockLock} = new {\b TagBlockPermalockParms}()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
User Bank Perm-Lock }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TagReadEpcParms} {\b TagReadEPC} = new {\b TagReadEpcParms}()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Config this before read EPC }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TagReadPcParms} {\b TagReadPC} = new {\b TagReadPcParms}()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Config this before read PC }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TagReadPwdParms} {\b TagReadAccPwd} = new {\b TagReadPwdParms}()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Config this before read Access password }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TagReadPwdParms} {\b TagReadKillPwd} = new {\b TagReadPwdParms}()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Config this before read Kill password }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TagReadTidParms} {\b TagReadTid} = new {\b TagReadTidParms}()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Config this before read TID }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TagReadUserParms} {\b TagReadUser} = new {\b TagReadUserParms}()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Config this before read USER }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TagWritePwdParms} {\b TagWriteKillPwd} = new {\b TagWritePwdParms}()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Config this before write kill password }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TagWritePwdParms} {\b TagWriteAccPwd} = new {\b TagWritePwdParms}()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Config this before write access password }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TagWritePcParms} {\b TagWritePC} = new {\b TagWritePcParms}()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Config this before write PC }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TagWriteEpcParms} {\b TagWriteEPC} = new {\b TagWriteEpcParms}()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Config this before write EPC }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TagWriteUserParms} {\b TagWriteUser} = new {\b TagWriteUserParms}()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Config this before write USER }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TagRangingParms} {\b TagRanging} = new {\b TagRangingParms}()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Config this before ranging all tags }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TagSearchingParms} {\b TagSearchOne} = new {\b TagSearchingParms}()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Config this before search one tag }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TagSelectedParms} {\b TagSelected} = new {\b TagSelectedParms}()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Selected a tag for read, write, lock, kill, and search one operation }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TagGeneralSelectedParms} {\b TagGeneralSelected} = new {\b TagGeneralSelectedParms}()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set Mask }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TagPostMachParms} {\b TagPostMatch} = new {\b TagPostMachParms}()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Selected a tag for read, write, lock, kill, and search one operation }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TagReadProtectParms} {\b TagReadProtect} = new {\b TagReadProtectParms}()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Custom command TagReadProtect }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TagReadProtectParms} {\b TagResetReadProtect} = new {\b TagReadProtectParms}()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Custom command TagResetReadProtect }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CarrierWaveParms} {\b CarrierWave} = new {\b CarrierWaveParms}()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Custom command for internal use. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Operation Paramemter \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v CarrierWave\:CSLibrary::Structures::CSLibraryOperationParms}
{\xe \v CSLibrary::Structures::CSLibraryOperationParms\:CarrierWave}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b CarrierWaveParms} CSLibrary.Structures.CSLibraryOperationParms.CarrierWave = new {\b CarrierWaveParms}()}}
\par
{\bkmkstart AAAAAAADJY}
{\bkmkend AAAAAAADJY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Custom command for internal use. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v TagBlockLock\:CSLibrary::Structures::CSLibraryOperationParms}
{\xe \v CSLibrary::Structures::CSLibraryOperationParms\:TagBlockLock}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b TagBlockPermalockParms} CSLibrary.Structures.CSLibraryOperationParms.TagBlockLock = new {\b TagBlockPermalockParms}()}}
\par
{\bkmkstart AAAAAAADJZ}
{\bkmkend AAAAAAADJZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
User Bank Perm-Lock }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v TagGeneralSelected\:CSLibrary::Structures::CSLibraryOperationParms}
{\xe \v CSLibrary::Structures::CSLibraryOperationParms\:TagGeneralSelected}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b TagGeneralSelectedParms} CSLibrary.Structures.CSLibraryOperationParms.TagGeneralSelected = new {\b TagGeneralSelectedParms}()}}
\par
{\bkmkstart AAAAAAADKA}
{\bkmkend AAAAAAADKA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set Mask }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v TagInventory\:CSLibrary::Structures::CSLibraryOperationParms}
{\xe \v CSLibrary::Structures::CSLibraryOperationParms\:TagInventory}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b TagInventoryParms} CSLibrary.Structures.CSLibraryOperationParms.TagInventory = new {\b TagInventoryParms}()}}
\par
{\bkmkstart AAAAAAADKB}
{\bkmkend AAAAAAADKB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Config this before search }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v TagKill\:CSLibrary::Structures::CSLibraryOperationParms}
{\xe \v CSLibrary::Structures::CSLibraryOperationParms\:TagKill}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b TagKillParms} CSLibrary.Structures.CSLibraryOperationParms.TagKill = new {\b TagKillParms}()}}
\par
{\bkmkstart AAAAAAADKC}
{\bkmkend AAAAAAADKC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Config this before kill }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v TagLock\:CSLibrary::Structures::CSLibraryOperationParms}
{\xe \v CSLibrary::Structures::CSLibraryOperationParms\:TagLock}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b TagLockParms} CSLibrary.Structures.CSLibraryOperationParms.TagLock = new {\b TagLockParms}()}}
\par
{\bkmkstart AAAAAAADKD}
{\bkmkend AAAAAAADKD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Config this before lock }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v TagPostMatch\:CSLibrary::Structures::CSLibraryOperationParms}
{\xe \v CSLibrary::Structures::CSLibraryOperationParms\:TagPostMatch}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b TagPostMachParms} CSLibrary.Structures.CSLibraryOperationParms.TagPostMatch = new {\b TagPostMachParms}()}}
\par
{\bkmkstart AAAAAAADKE}
{\bkmkend AAAAAAADKE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Selected a tag for read, write, lock, kill, and search one operation }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v TagRanging\:CSLibrary::Structures::CSLibraryOperationParms}
{\xe \v CSLibrary::Structures::CSLibraryOperationParms\:TagRanging}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b TagRangingParms} CSLibrary.Structures.CSLibraryOperationParms.TagRanging = new {\b TagRangingParms}()}}
\par
{\bkmkstart AAAAAAADKF}
{\bkmkend AAAAAAADKF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Config this before ranging all tags }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v TagReadAccPwd\:CSLibrary::Structures::CSLibraryOperationParms}
{\xe \v CSLibrary::Structures::CSLibraryOperationParms\:TagReadAccPwd}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b TagReadPwdParms} CSLibrary.Structures.CSLibraryOperationParms.TagReadAccPwd = new {\b TagReadPwdParms}()}}
\par
{\bkmkstart AAAAAAADKG}
{\bkmkend AAAAAAADKG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Config this before read Access password }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v TagReadEPC\:CSLibrary::Structures::CSLibraryOperationParms}
{\xe \v CSLibrary::Structures::CSLibraryOperationParms\:TagReadEPC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b TagReadEpcParms} CSLibrary.Structures.CSLibraryOperationParms.TagReadEPC = new {\b TagReadEpcParms}()}}
\par
{\bkmkstart AAAAAAADKH}
{\bkmkend AAAAAAADKH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Config this before read EPC }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v TagReadKillPwd\:CSLibrary::Structures::CSLibraryOperationParms}
{\xe \v CSLibrary::Structures::CSLibraryOperationParms\:TagReadKillPwd}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b TagReadPwdParms} CSLibrary.Structures.CSLibraryOperationParms.TagReadKillPwd = new {\b TagReadPwdParms}()}}
\par
{\bkmkstart AAAAAAADKI}
{\bkmkend AAAAAAADKI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Config this before read Kill password }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v TagReadPC\:CSLibrary::Structures::CSLibraryOperationParms}
{\xe \v CSLibrary::Structures::CSLibraryOperationParms\:TagReadPC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b TagReadPcParms} CSLibrary.Structures.CSLibraryOperationParms.TagReadPC = new {\b TagReadPcParms}()}}
\par
{\bkmkstart AAAAAAADKJ}
{\bkmkend AAAAAAADKJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Config this before read PC }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v TagReadProtect\:CSLibrary::Structures::CSLibraryOperationParms}
{\xe \v CSLibrary::Structures::CSLibraryOperationParms\:TagReadProtect}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b TagReadProtectParms} CSLibrary.Structures.CSLibraryOperationParms.TagReadProtect = new {\b TagReadProtectParms}()}}
\par
{\bkmkstart AAAAAAADKK}
{\bkmkend AAAAAAADKK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Custom command TagReadProtect }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v TagReadTid\:CSLibrary::Structures::CSLibraryOperationParms}
{\xe \v CSLibrary::Structures::CSLibraryOperationParms\:TagReadTid}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b TagReadTidParms} CSLibrary.Structures.CSLibraryOperationParms.TagReadTid = new {\b TagReadTidParms}()}}
\par
{\bkmkstart AAAAAAADKL}
{\bkmkend AAAAAAADKL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Config this before read TID }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v TagReadUser\:CSLibrary::Structures::CSLibraryOperationParms}
{\xe \v CSLibrary::Structures::CSLibraryOperationParms\:TagReadUser}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b TagReadUserParms} CSLibrary.Structures.CSLibraryOperationParms.TagReadUser = new {\b TagReadUserParms}()}}
\par
{\bkmkstart AAAAAAADKM}
{\bkmkend AAAAAAADKM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Config this before read USER }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v TagResetReadProtect\:CSLibrary::Structures::CSLibraryOperationParms}
{\xe \v CSLibrary::Structures::CSLibraryOperationParms\:TagResetReadProtect}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b TagReadProtectParms} CSLibrary.Structures.CSLibraryOperationParms.TagResetReadProtect = new {\b TagReadProtectParms}()}}
\par
{\bkmkstart AAAAAAADKN}
{\bkmkend AAAAAAADKN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Custom command TagResetReadProtect }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v TagSearchOne\:CSLibrary::Structures::CSLibraryOperationParms}
{\xe \v CSLibrary::Structures::CSLibraryOperationParms\:TagSearchOne}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b TagSearchingParms} CSLibrary.Structures.CSLibraryOperationParms.TagSearchOne = new {\b TagSearchingParms}()}}
\par
{\bkmkstart AAAAAAADKO}
{\bkmkend AAAAAAADKO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Config this before search one tag }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v TagSelected\:CSLibrary::Structures::CSLibraryOperationParms}
{\xe \v CSLibrary::Structures::CSLibraryOperationParms\:TagSelected}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b TagSelectedParms} CSLibrary.Structures.CSLibraryOperationParms.TagSelected = new {\b TagSelectedParms}()}}
\par
{\bkmkstart AAAAAAADKP}
{\bkmkend AAAAAAADKP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Selected a tag for read, write, lock, kill, and search one operation }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v TagWriteAccPwd\:CSLibrary::Structures::CSLibraryOperationParms}
{\xe \v CSLibrary::Structures::CSLibraryOperationParms\:TagWriteAccPwd}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b TagWritePwdParms} CSLibrary.Structures.CSLibraryOperationParms.TagWriteAccPwd = new {\b TagWritePwdParms}()}}
\par
{\bkmkstart AAAAAAADKQ}
{\bkmkend AAAAAAADKQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Config this before write access password }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v TagWriteEPC\:CSLibrary::Structures::CSLibraryOperationParms}
{\xe \v CSLibrary::Structures::CSLibraryOperationParms\:TagWriteEPC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b TagWriteEpcParms} CSLibrary.Structures.CSLibraryOperationParms.TagWriteEPC = new {\b TagWriteEpcParms}()}}
\par
{\bkmkstart AAAAAAADKR}
{\bkmkend AAAAAAADKR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Config this before write EPC }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v TagWriteKillPwd\:CSLibrary::Structures::CSLibraryOperationParms}
{\xe \v CSLibrary::Structures::CSLibraryOperationParms\:TagWriteKillPwd}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b TagWritePwdParms} CSLibrary.Structures.CSLibraryOperationParms.TagWriteKillPwd = new {\b TagWritePwdParms}()}}
\par
{\bkmkstart AAAAAAADKS}
{\bkmkend AAAAAAADKS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Config this before write kill password }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v TagWritePC\:CSLibrary::Structures::CSLibraryOperationParms}
{\xe \v CSLibrary::Structures::CSLibraryOperationParms\:TagWritePC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b TagWritePcParms} CSLibrary.Structures.CSLibraryOperationParms.TagWritePC = new {\b TagWritePcParms}()}}
\par
{\bkmkstart AAAAAAADKT}
{\bkmkend AAAAAAADKT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Config this before write PC }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v TagWriteUser\:CSLibrary::Structures::CSLibraryOperationParms}
{\xe \v CSLibrary::Structures::CSLibraryOperationParms\:TagWriteUser}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b TagWriteUserParms} CSLibrary.Structures.CSLibraryOperationParms.TagWriteUser = new {\b TagWriteUserParms}()}}
\par
{\bkmkstart AAAAAAADKU}
{\bkmkend AAAAAAADKU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Config this before write USER }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
CSLibrary/RFIDReader/Structures/{\b CSLibrary.Structures.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary.Structures.DecodeMessage Class Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary.Structures.DecodeMessage}
{\xe \v CSLibrary.Structures.DecodeMessage}
{\bkmkstart AAAAAAADKV}
{\bkmkend AAAAAAADKV}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
decode structure }}\par
Inheritance diagram for CSLibrary.Structures.DecodeMessage:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_c_s_library_1_1_barcode_1_1_structures_1_1_decode_message.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DecodeMessage} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
String {\b pchMessage}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
decoded message data }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b AimID} {\b chCodeID}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
AIM Id of symbology }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SymID} {\b chSymLetter}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
HHP Id of symbology }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Char {\b chSymModifier}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Modifier characters. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt32 {\b nLength}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
length of the decoded message }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
decode structure \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v DecodeMessage\:CSLibrary::Barcode::Structures::DecodeMessage}
{\xe \v CSLibrary::Barcode::Structures::DecodeMessage\:DecodeMessage}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CSLibrary.Structures.DecodeMessage.DecodeMessage ()}}
\par
{\bkmkstart AAAAAAADKW}
{\bkmkend AAAAAAADKW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v chCodeID\:CSLibrary::Barcode::Structures::DecodeMessage}
{\xe \v CSLibrary::Barcode::Structures::DecodeMessage\:chCodeID}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b AimID} CSLibrary.Structures.DecodeMessage.chCodeID}}
\par
{\bkmkstart AAAAAAADKX}
{\bkmkend AAAAAAADKX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
AIM Id of symbology }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v chSymLetter\:CSLibrary::Barcode::Structures::DecodeMessage}
{\xe \v CSLibrary::Barcode::Structures::DecodeMessage\:chSymLetter}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b SymID} CSLibrary.Structures.DecodeMessage.chSymLetter}}
\par
{\bkmkstart AAAAAAADKY}
{\bkmkend AAAAAAADKY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
HHP Id of symbology }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v chSymModifier\:CSLibrary::Barcode::Structures::DecodeMessage}
{\xe \v CSLibrary::Barcode::Structures::DecodeMessage\:chSymModifier}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Char CSLibrary.Structures.DecodeMessage.chSymModifier}}
\par
{\bkmkstart AAAAAAADKZ}
{\bkmkend AAAAAAADKZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Modifier characters. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v nLength\:CSLibrary::Barcode::Structures::DecodeMessage}
{\xe \v CSLibrary::Barcode::Structures::DecodeMessage\:nLength}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt32 CSLibrary.Structures.DecodeMessage.nLength}}
\par
{\bkmkstart AAAAAAADLA}
{\bkmkend AAAAAAADLA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
length of the decoded message }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v pchMessage\:CSLibrary::Barcode::Structures::DecodeMessage}
{\xe \v CSLibrary::Barcode::Structures::DecodeMessage\:pchMessage}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
String CSLibrary.Structures.DecodeMessage.pchMessage}}
\par
{\bkmkstart AAAAAAADLB}
{\bkmkend AAAAAAADLB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
decoded message data }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
CSLibrary/BarcodeReader/Structures/{\b CSLibrary.Barcode.Structures.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary.Structures.DecoderParms Class Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary.Structures.DecoderParms}
{\xe \v CSLibrary.Structures.DecoderParms}
{\bkmkstart AAAAAAADLC}
{\bkmkend AAAAAAADLC}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Decoder functionality settings. }}\par
Inheritance diagram for CSLibrary.Structures.DecoderParms:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_c_s_library_1_1_barcode_1_1_structures_1_1_decoder_parms.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DecoderParms} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DecoderMask} {\b dwMask} = DecoderMask.ALL\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mask of active items. Notes: You can use OR to enable multiple items }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint {\b dwMaxMsgSize}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Maximum length for any returned barcode string. This is a read only value. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b bDecodeMultiple}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Decode and send all symbols decoded with first frame where at least 1 symbol is found. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b bUseAimers}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Turn on aimers during barcode capture. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint {\b dwPrintWeight}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
How dark the barcode elements are relative to the background (1-7). }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DecoderMode} {\b decodeMethod}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Normal decoder, linear codes only, fast normal decoder, which omits checking at the image margins as well as some bad bar- code correction. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b bCenterDecodeEnable}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Does symbol have to intersect center decode window to be valid. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RECT} {\b centerWindow}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Bounding coords or window that decoded symbol must intersect }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b IllumLedColor} {\b illumLedColor}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Illumination LED color to use. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint {\b dwUpcAddendaDelay}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
10->500 Delay before reading UPC if expecting addenda. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint {\b dwCompositeDelay}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
10->1000 Delay before reading code if expecting composite. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint {\b dwConcatenateDelay}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
10->1000 Delay to wait before reading code if expecting concatenated code. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Decoder functionality settings. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v DecoderParms\:CSLibrary::Barcode::Structures::DecoderParms}
{\xe \v CSLibrary::Barcode::Structures::DecoderParms\:DecoderParms}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CSLibrary.Structures.DecoderParms.DecoderParms ()}}
\par
{\bkmkstart AAAAAAADLD}
{\bkmkend AAAAAAADLD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v bCenterDecodeEnable\:CSLibrary::Barcode::Structures::DecoderParms}
{\xe \v CSLibrary::Barcode::Structures::DecoderParms\:bCenterDecodeEnable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool CSLibrary.Structures.DecoderParms.bCenterDecodeEnable}}
\par
{\bkmkstart AAAAAAADLE}
{\bkmkend AAAAAAADLE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Does symbol have to intersect center decode window to be valid. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v bDecodeMultiple\:CSLibrary::Barcode::Structures::DecoderParms}
{\xe \v CSLibrary::Barcode::Structures::DecoderParms\:bDecodeMultiple}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool CSLibrary.Structures.DecoderParms.bDecodeMultiple}}
\par
{\bkmkstart AAAAAAADLF}
{\bkmkend AAAAAAADLF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Decode and send all symbols decoded with first frame where at least 1 symbol is found. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v bUseAimers\:CSLibrary::Barcode::Structures::DecoderParms}
{\xe \v CSLibrary::Barcode::Structures::DecoderParms\:bUseAimers}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool CSLibrary.Structures.DecoderParms.bUseAimers}}
\par
{\bkmkstart AAAAAAADLG}
{\bkmkend AAAAAAADLG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Turn on aimers during barcode capture. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v centerWindow\:CSLibrary::Barcode::Structures::DecoderParms}
{\xe \v CSLibrary::Barcode::Structures::DecoderParms\:centerWindow}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RECT} CSLibrary.Structures.DecoderParms.centerWindow}}
\par
{\bkmkstart AAAAAAADLH}
{\bkmkend AAAAAAADLH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Bounding coords or window that decoded symbol must intersect }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v decodeMethod\:CSLibrary::Barcode::Structures::DecoderParms}
{\xe \v CSLibrary::Barcode::Structures::DecoderParms\:decodeMethod}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b DecoderMode} CSLibrary.Structures.DecoderParms.decodeMethod}}
\par
{\bkmkstart AAAAAAADLI}
{\bkmkend AAAAAAADLI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Normal decoder, linear codes only, fast normal decoder, which omits checking at the image margins as well as some bad bar- code correction. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v dwCompositeDelay\:CSLibrary::Barcode::Structures::DecoderParms}
{\xe \v CSLibrary::Barcode::Structures::DecoderParms\:dwCompositeDelay}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint CSLibrary.Structures.DecoderParms.dwCompositeDelay}}
\par
{\bkmkstart AAAAAAADLJ}
{\bkmkend AAAAAAADLJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
10->1000 Delay before reading code if expecting composite. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v dwConcatenateDelay\:CSLibrary::Barcode::Structures::DecoderParms}
{\xe \v CSLibrary::Barcode::Structures::DecoderParms\:dwConcatenateDelay}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint CSLibrary.Structures.DecoderParms.dwConcatenateDelay}}
\par
{\bkmkstart AAAAAAADLK}
{\bkmkend AAAAAAADLK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
10->1000 Delay to wait before reading code if expecting concatenated code. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v dwMask\:CSLibrary::Barcode::Structures::DecoderParms}
{\xe \v CSLibrary::Barcode::Structures::DecoderParms\:dwMask}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b DecoderMask} CSLibrary.Structures.DecoderParms.dwMask = DecoderMask.ALL}}
\par
{\bkmkstart AAAAAAADLL}
{\bkmkend AAAAAAADLL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mask of active items. Notes: You can use OR to enable multiple items }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v dwMaxMsgSize\:CSLibrary::Barcode::Structures::DecoderParms}
{\xe \v CSLibrary::Barcode::Structures::DecoderParms\:dwMaxMsgSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint CSLibrary.Structures.DecoderParms.dwMaxMsgSize}}
\par
{\bkmkstart AAAAAAADLM}
{\bkmkend AAAAAAADLM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Maximum length for any returned barcode string. This is a read only value. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v dwPrintWeight\:CSLibrary::Barcode::Structures::DecoderParms}
{\xe \v CSLibrary::Barcode::Structures::DecoderParms\:dwPrintWeight}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint CSLibrary.Structures.DecoderParms.dwPrintWeight}}
\par
{\bkmkstart AAAAAAADLN}
{\bkmkend AAAAAAADLN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
How dark the barcode elements are relative to the background (1-7). }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v dwUpcAddendaDelay\:CSLibrary::Barcode::Structures::DecoderParms}
{\xe \v CSLibrary::Barcode::Structures::DecoderParms\:dwUpcAddendaDelay}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint CSLibrary.Structures.DecoderParms.dwUpcAddendaDelay}}
\par
{\bkmkstart AAAAAAADLO}
{\bkmkend AAAAAAADLO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
10->500 Delay before reading UPC if expecting addenda. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v illumLedColor\:CSLibrary::Barcode::Structures::DecoderParms}
{\xe \v CSLibrary::Barcode::Structures::DecoderParms\:illumLedColor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b IllumLedColor} CSLibrary.Structures.DecoderParms.illumLedColor}}
\par
{\bkmkstart AAAAAAADLP}
{\bkmkend AAAAAAADLP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Illumination LED color to use. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
CSLibrary/BarcodeReader/Structures/{\b CSLibrary.Barcode.Structures.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary.Structures.DEVICE_STATUS Struct Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary.Structures.DEVICE_STATUS}
{\xe \v CSLibrary.Structures.DEVICE_STATUS}
{\bkmkstart AAAAAAADLQ}
{\bkmkend AAAAAAADLQ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RFID Device Status {\b Structures} }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
TimeSpan {\b GetElapsedTime} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get last elapsed time since last received packet. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b IsPowerOn}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Whether RFID is on. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b IsErrorReset}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Whether AutoReset is on. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b IsKeepAlive}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Whether UDP keep alive is on. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b IsConnected}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Whether connection is connected or listening. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte {\b day}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte {\b hrs}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte {\b min}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte {\b sec}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b IsCRCFilter}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Crc filter flag }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RFID Device Status {\b Structures} \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v GetElapsedTime\:CSLibrary::Structures::DEVICE_STATUS}
{\xe \v CSLibrary::Structures::DEVICE_STATUS\:GetElapsedTime}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TimeSpan CSLibrary.Structures.DEVICE_STATUS.GetElapsedTime ()}}
\par
{\bkmkstart AAAAAAADLR}
{\bkmkend AAAAAAADLR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get last elapsed time since last received packet. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v day\:CSLibrary::Structures::DEVICE_STATUS}
{\xe \v CSLibrary::Structures::DEVICE_STATUS\:day}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte CSLibrary.Structures.DEVICE_STATUS.day}}
\par
{\bkmkstart AAAAAAADLS}
{\bkmkend AAAAAAADLS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v hrs\:CSLibrary::Structures::DEVICE_STATUS}
{\xe \v CSLibrary::Structures::DEVICE_STATUS\:hrs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte CSLibrary.Structures.DEVICE_STATUS.hrs}}
\par
{\bkmkstart AAAAAAADLT}
{\bkmkend AAAAAAADLT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v IsConnected\:CSLibrary::Structures::DEVICE_STATUS}
{\xe \v CSLibrary::Structures::DEVICE_STATUS\:IsConnected}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool CSLibrary.Structures.DEVICE_STATUS.IsConnected}}
\par
{\bkmkstart AAAAAAADLU}
{\bkmkend AAAAAAADLU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Whether connection is connected or listening. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v IsCRCFilter\:CSLibrary::Structures::DEVICE_STATUS}
{\xe \v CSLibrary::Structures::DEVICE_STATUS\:IsCRCFilter}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool CSLibrary.Structures.DEVICE_STATUS.IsCRCFilter}}
\par
{\bkmkstart AAAAAAADLV}
{\bkmkend AAAAAAADLV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Crc filter flag }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v IsErrorReset\:CSLibrary::Structures::DEVICE_STATUS}
{\xe \v CSLibrary::Structures::DEVICE_STATUS\:IsErrorReset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool CSLibrary.Structures.DEVICE_STATUS.IsErrorReset}}
\par
{\bkmkstart AAAAAAADLW}
{\bkmkend AAAAAAADLW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Whether AutoReset is on. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v IsKeepAlive\:CSLibrary::Structures::DEVICE_STATUS}
{\xe \v CSLibrary::Structures::DEVICE_STATUS\:IsKeepAlive}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool CSLibrary.Structures.DEVICE_STATUS.IsKeepAlive}}
\par
{\bkmkstart AAAAAAADLX}
{\bkmkend AAAAAAADLX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Whether UDP keep alive is on. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v IsPowerOn\:CSLibrary::Structures::DEVICE_STATUS}
{\xe \v CSLibrary::Structures::DEVICE_STATUS\:IsPowerOn}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool CSLibrary.Structures.DEVICE_STATUS.IsPowerOn}}
\par
{\bkmkstart AAAAAAADLY}
{\bkmkend AAAAAAADLY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Whether RFID is on. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v min\:CSLibrary::Structures::DEVICE_STATUS}
{\xe \v CSLibrary::Structures::DEVICE_STATUS\:min}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte CSLibrary.Structures.DEVICE_STATUS.min}}
\par
{\bkmkstart AAAAAAADLZ}
{\bkmkend AAAAAAADLZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v sec\:CSLibrary::Structures::DEVICE_STATUS}
{\xe \v CSLibrary::Structures::DEVICE_STATUS\:sec}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte CSLibrary.Structures.DEVICE_STATUS.sec}}
\par
{\bkmkstart AAAAAAADMA}
{\bkmkend AAAAAAADMA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
CSLibrary/RFIDReader/Structures/{\b CSLibrary.Structures.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary.Net.NetFinder.DeviceFinderArgs Class Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary.Net.NetFinder.DeviceFinderArgs}
{\xe \v CSLibrary.Net.NetFinder.DeviceFinderArgs}
{\bkmkstart AAAAAAADHC}
{\bkmkend AAAAAAADHC}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
DeviceFinder Argument }}\par
Inheritance diagram for CSLibrary.Net.NetFinder.DeviceFinderArgs:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_c_s_library_1_1_net_1_1_net_finder_1_1_device_finder_args.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DeviceFinderArgs} ({\b DeviceInfomation} data)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Device Finder }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Properties\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DeviceInfomation} {\b Found}{\f2  [get, set]}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Device finder information }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DeviceInfomation} {\b _data}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
DeviceFinder Argument \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v DeviceFinderArgs\:CSLibrary::Net::NetFinder::DeviceFinderArgs}
{\xe \v CSLibrary::Net::NetFinder::DeviceFinderArgs\:DeviceFinderArgs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CSLibrary.Net.NetFinder.DeviceFinderArgs.DeviceFinderArgs ({\b DeviceInfomation}  {\i data})}}
\par
{\bkmkstart AAAAAAADHD}
{\bkmkend AAAAAAADHD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Device Finder }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i data} \cell }{\cell }
{\row }
}
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v _data\:CSLibrary::Net::NetFinder::DeviceFinderArgs}
{\xe \v CSLibrary::Net::NetFinder::DeviceFinderArgs\:_data}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b DeviceInfomation} CSLibrary.Net.NetFinder.DeviceFinderArgs._data{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADHE}
{\bkmkend AAAAAAADHE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Property Documentation\par
\pard\plain 
{\xe \v Found\:CSLibrary::Net::NetFinder::DeviceFinderArgs}
{\xe \v CSLibrary::Net::NetFinder::DeviceFinderArgs\:Found}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b DeviceInfomation} CSLibrary.Net.NetFinder.DeviceFinderArgs.Found{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAADHF}
{\bkmkend AAAAAAADHF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Device finder information }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
CSLibrary/{\b ClassNetfinder.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary.Net.NetFinder.DeviceInfomation Class Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary.Net.NetFinder.DeviceInfomation}
{\xe \v CSLibrary.Net.NetFinder.DeviceInfomation}
{\bkmkstart AAAAAAADHG}
{\bkmkend AAAAAAADHG}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Netfinder information return from device }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b DeviceName}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Device name, user can change it. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Guid {\b UUID}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b RSSI}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Netfinder information return from device \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v DeviceName\:CSLibrary::Net::NetFinder::DeviceInfomation}
{\xe \v CSLibrary::Net::NetFinder::DeviceInfomation\:DeviceName}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string CSLibrary.Net.NetFinder.DeviceInfomation.DeviceName}}
\par
{\bkmkstart AAAAAAADHH}
{\bkmkend AAAAAAADHH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Device name, user can change it. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v RSSI\:CSLibrary::Net::NetFinder::DeviceInfomation}
{\xe \v CSLibrary::Net::NetFinder::DeviceInfomation\:RSSI}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int CSLibrary.Net.NetFinder.DeviceInfomation.RSSI}}
\par
{\bkmkstart AAAAAAADHI}
{\bkmkend AAAAAAADHI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v UUID\:CSLibrary::Net::NetFinder::DeviceInfomation}
{\xe \v CSLibrary::Net::NetFinder::DeviceInfomation\:UUID}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Guid CSLibrary.Net.NetFinder.DeviceInfomation.UUID}}
\par
{\bkmkstart AAAAAAADHJ}
{\bkmkend AAAAAAADHJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
CSLibrary/{\b ClassNetfinder.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary.SiliconLabIC.DOWNLINKCMD Class Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary.SiliconLabIC.DOWNLINKCMD}
{\xe \v CSLibrary.SiliconLabIC.DOWNLINKCMD}
{\bkmkstart AAAAAAABKJ}
{\bkmkend AAAAAAABKJ}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static readonly byte [] {\b GETVERSION} = \{ 0xB0, 0x00 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static readonly byte [] {\b GETSERIALNUMBER} = \{ 0xB0, 0x04 \}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v GETSERIALNUMBER\:CSLibrary::SiliconLabIC::DOWNLINKCMD}
{\xe \v CSLibrary::SiliconLabIC::DOWNLINKCMD\:GETSERIALNUMBER}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly byte [] CSLibrary.SiliconLabIC.DOWNLINKCMD.GETSERIALNUMBER = \{ 0xB0, 0x04 \}{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABKK}
{\bkmkend AAAAAAABKK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GETVERSION\:CSLibrary::SiliconLabIC::DOWNLINKCMD}
{\xe \v CSLibrary::SiliconLabIC::DOWNLINKCMD\:GETVERSION}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly byte [] CSLibrary.SiliconLabIC.DOWNLINKCMD.GETVERSION = \{ 0xB0, 0x00 \}{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABKL}
{\bkmkend AAAAAAABKL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
CSLibrary/SiliconLabIC/{\b ClassSiliconLabIC.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary.BluetoothIC.DOWNLINKCMD Class Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary.BluetoothIC.DOWNLINKCMD}
{\xe \v CSLibrary.BluetoothIC.DOWNLINKCMD}
{\bkmkstart AAAAAAAAES}
{\bkmkend AAAAAAAAES}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static readonly byte [] {\b GETVERSION} = \{ 0xC0, 0x00 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static readonly byte [] {\b SETDEVICENAME} = \{ 0xC0, 0x03 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static readonly byte [] {\b GETDEVICENAME} = \{ 0xC0, 0x04 \}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v GETDEVICENAME\:CSLibrary::BluetoothIC::DOWNLINKCMD}
{\xe \v CSLibrary::BluetoothIC::DOWNLINKCMD\:GETDEVICENAME}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly byte [] CSLibrary.BluetoothIC.DOWNLINKCMD.GETDEVICENAME = \{ 0xC0, 0x04 \}{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAET}
{\bkmkend AAAAAAAAET}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GETVERSION\:CSLibrary::BluetoothIC::DOWNLINKCMD}
{\xe \v CSLibrary::BluetoothIC::DOWNLINKCMD\:GETVERSION}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly byte [] CSLibrary.BluetoothIC.DOWNLINKCMD.GETVERSION = \{ 0xC0, 0x00 \}{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAEU}
{\bkmkend AAAAAAAAEU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SETDEVICENAME\:CSLibrary::BluetoothIC::DOWNLINKCMD}
{\xe \v CSLibrary::BluetoothIC::DOWNLINKCMD\:SETDEVICENAME}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly byte [] CSLibrary.BluetoothIC.DOWNLINKCMD.SETDEVICENAME = \{ 0xC0, 0x03 \}{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAEV}
{\bkmkend AAAAAAAAEV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
CSLibrary/BluetoothIC/{\b ClassBluetoothIC.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary.BarcodeReader.DOWNLINKCMD Class Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary.BarcodeReader.DOWNLINKCMD}
{\xe \v CSLibrary.BarcodeReader.DOWNLINKCMD}
{\bkmkstart AAAAAAAAEH}
{\bkmkend AAAAAAAAEH}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static readonly byte [] {\b BARCODEPOWERON} = \{ 0x90, 0x00 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static readonly byte [] {\b BARCODEPOWEROFF} = \{ 0x90, 0x01 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static readonly byte [] {\b BARCODESCANTRIGGER} = \{ 0x90, 0x02 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static readonly byte [] {\b BARCODERAWDATA} = \{ 0x90, 0x03 \}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v BARCODEPOWEROFF\:CSLibrary::BarcodeReader::DOWNLINKCMD}
{\xe \v CSLibrary::BarcodeReader::DOWNLINKCMD\:BARCODEPOWEROFF}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly byte [] CSLibrary.BarcodeReader.DOWNLINKCMD.BARCODEPOWEROFF = \{ 0x90, 0x01 \}{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAEI}
{\bkmkend AAAAAAAAEI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v BARCODEPOWERON\:CSLibrary::BarcodeReader::DOWNLINKCMD}
{\xe \v CSLibrary::BarcodeReader::DOWNLINKCMD\:BARCODEPOWERON}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly byte [] CSLibrary.BarcodeReader.DOWNLINKCMD.BARCODEPOWERON = \{ 0x90, 0x00 \}{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAEJ}
{\bkmkend AAAAAAAAEJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v BARCODERAWDATA\:CSLibrary::BarcodeReader::DOWNLINKCMD}
{\xe \v CSLibrary::BarcodeReader::DOWNLINKCMD\:BARCODERAWDATA}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly byte [] CSLibrary.BarcodeReader.DOWNLINKCMD.BARCODERAWDATA = \{ 0x90, 0x03 \}{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAEK}
{\bkmkend AAAAAAAAEK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v BARCODESCANTRIGGER\:CSLibrary::BarcodeReader::DOWNLINKCMD}
{\xe \v CSLibrary::BarcodeReader::DOWNLINKCMD\:BARCODESCANTRIGGER}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly byte [] CSLibrary.BarcodeReader.DOWNLINKCMD.BARCODESCANTRIGGER = \{ 0x90, 0x02 \}{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAEL}
{\bkmkend AAAAAAAAEL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
CSLibrary/BarcodeReader/{\b ClassBarCode.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary.HighLevelInterface.DOWNLINKCMD Class Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary.HighLevelInterface.DOWNLINKCMD}
{\xe \v CSLibrary.HighLevelInterface.DOWNLINKCMD}
{\bkmkstart AAAAAAAAHV}
{\bkmkend AAAAAAAAHV}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static readonly byte [] {\b RFIDPOWERON} = \{ 0x80, 0x00 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static readonly byte [] {\b RFIDPOWEROFF} = \{ 0x80, 0x01 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static readonly byte [] {\b RFIDCMD} = \{ 0x80, 0x02 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static readonly byte [] {\b BARCODEPOWERON} = \{ 0x90, 0x00 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static readonly byte [] {\b BARCODEPOWEROFF} = \{ 0x90, 0x01 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static readonly byte [] {\b BARCODESCANTRIGGER} = \{ 0x90, 0x02 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static readonly byte [] {\b BARCODERAWDATA} = \{ 0x90, 0x03 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static readonly byte [] {\b GETVOLTAGE} = \{ 0xA0, 0x00 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static readonly byte [] {\b GETTRIGGERSTATE} = \{ 0xA0, 0x01 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static readonly byte [] {\b STARTAUTOREPORTING} = \{ 0xA0, 0x02 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static readonly byte [] {\b STOPAUTOREPORTING} = \{ 0xA0, 0x03 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static readonly byte [] {\b GETSILICONVER} = \{ 0xB0, 0x00 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static readonly byte [] {\b SLIMAGERAWDATA} = \{ 0xB0, 0x01 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static readonly byte [] {\b SLBOOTLOADERRAWDATA} = \{ 0xB0, 0x02 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static readonly byte [] {\b GETVLUETOOTHVER} = \{ 0xB0, 0x00 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static readonly byte [] {\b BTIMAGERAWDATA} = \{ 0xB0, 0x01 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static readonly byte [] {\b BTBOOTLOADERRAWDATA} = \{ 0xB0, 0x02 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static readonly byte [] {\b SETDEVICENAME} = \{ 0xB0, 0x03 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static readonly byte [] {\b GETDEVICENAME} = \{ 0xB0, 0x04 \}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v BARCODEPOWEROFF\:CSLibrary::HighLevelInterface::DOWNLINKCMD}
{\xe \v CSLibrary::HighLevelInterface::DOWNLINKCMD\:BARCODEPOWEROFF}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly byte [] CSLibrary.HighLevelInterface.DOWNLINKCMD.BARCODEPOWEROFF = \{ 0x90, 0x01 \}{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAHW}
{\bkmkend AAAAAAAAHW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v BARCODEPOWERON\:CSLibrary::HighLevelInterface::DOWNLINKCMD}
{\xe \v CSLibrary::HighLevelInterface::DOWNLINKCMD\:BARCODEPOWERON}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly byte [] CSLibrary.HighLevelInterface.DOWNLINKCMD.BARCODEPOWERON = \{ 0x90, 0x00 \}{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAHX}
{\bkmkend AAAAAAAAHX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v BARCODERAWDATA\:CSLibrary::HighLevelInterface::DOWNLINKCMD}
{\xe \v CSLibrary::HighLevelInterface::DOWNLINKCMD\:BARCODERAWDATA}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly byte [] CSLibrary.HighLevelInterface.DOWNLINKCMD.BARCODERAWDATA = \{ 0x90, 0x03 \}{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAHY}
{\bkmkend AAAAAAAAHY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v BARCODESCANTRIGGER\:CSLibrary::HighLevelInterface::DOWNLINKCMD}
{\xe \v CSLibrary::HighLevelInterface::DOWNLINKCMD\:BARCODESCANTRIGGER}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly byte [] CSLibrary.HighLevelInterface.DOWNLINKCMD.BARCODESCANTRIGGER = \{ 0x90, 0x02 \}{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAHZ}
{\bkmkend AAAAAAAAHZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v BTBOOTLOADERRAWDATA\:CSLibrary::HighLevelInterface::DOWNLINKCMD}
{\xe \v CSLibrary::HighLevelInterface::DOWNLINKCMD\:BTBOOTLOADERRAWDATA}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly byte [] CSLibrary.HighLevelInterface.DOWNLINKCMD.BTBOOTLOADERRAWDATA = \{ 0xB0, 0x02 \}{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAIA}
{\bkmkend AAAAAAAAIA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v BTIMAGERAWDATA\:CSLibrary::HighLevelInterface::DOWNLINKCMD}
{\xe \v CSLibrary::HighLevelInterface::DOWNLINKCMD\:BTIMAGERAWDATA}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly byte [] CSLibrary.HighLevelInterface.DOWNLINKCMD.BTIMAGERAWDATA = \{ 0xB0, 0x01 \}{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAIB}
{\bkmkend AAAAAAAAIB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GETDEVICENAME\:CSLibrary::HighLevelInterface::DOWNLINKCMD}
{\xe \v CSLibrary::HighLevelInterface::DOWNLINKCMD\:GETDEVICENAME}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly byte [] CSLibrary.HighLevelInterface.DOWNLINKCMD.GETDEVICENAME = \{ 0xB0, 0x04 \}{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAIC}
{\bkmkend AAAAAAAAIC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GETSILICONVER\:CSLibrary::HighLevelInterface::DOWNLINKCMD}
{\xe \v CSLibrary::HighLevelInterface::DOWNLINKCMD\:GETSILICONVER}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly byte [] CSLibrary.HighLevelInterface.DOWNLINKCMD.GETSILICONVER = \{ 0xB0, 0x00 \}{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAID}
{\bkmkend AAAAAAAAID}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GETTRIGGERSTATE\:CSLibrary::HighLevelInterface::DOWNLINKCMD}
{\xe \v CSLibrary::HighLevelInterface::DOWNLINKCMD\:GETTRIGGERSTATE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly byte [] CSLibrary.HighLevelInterface.DOWNLINKCMD.GETTRIGGERSTATE = \{ 0xA0, 0x01 \}{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAIE}
{\bkmkend AAAAAAAAIE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GETVLUETOOTHVER\:CSLibrary::HighLevelInterface::DOWNLINKCMD}
{\xe \v CSLibrary::HighLevelInterface::DOWNLINKCMD\:GETVLUETOOTHVER}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly byte [] CSLibrary.HighLevelInterface.DOWNLINKCMD.GETVLUETOOTHVER = \{ 0xB0, 0x00 \}{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAIF}
{\bkmkend AAAAAAAAIF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GETVOLTAGE\:CSLibrary::HighLevelInterface::DOWNLINKCMD}
{\xe \v CSLibrary::HighLevelInterface::DOWNLINKCMD\:GETVOLTAGE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly byte [] CSLibrary.HighLevelInterface.DOWNLINKCMD.GETVOLTAGE = \{ 0xA0, 0x00 \}{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAIG}
{\bkmkend AAAAAAAAIG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v RFIDCMD\:CSLibrary::HighLevelInterface::DOWNLINKCMD}
{\xe \v CSLibrary::HighLevelInterface::DOWNLINKCMD\:RFIDCMD}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly byte [] CSLibrary.HighLevelInterface.DOWNLINKCMD.RFIDCMD = \{ 0x80, 0x02 \}{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAIH}
{\bkmkend AAAAAAAAIH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v RFIDPOWEROFF\:CSLibrary::HighLevelInterface::DOWNLINKCMD}
{\xe \v CSLibrary::HighLevelInterface::DOWNLINKCMD\:RFIDPOWEROFF}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly byte [] CSLibrary.HighLevelInterface.DOWNLINKCMD.RFIDPOWEROFF = \{ 0x80, 0x01 \}{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAII}
{\bkmkend AAAAAAAAII}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v RFIDPOWERON\:CSLibrary::HighLevelInterface::DOWNLINKCMD}
{\xe \v CSLibrary::HighLevelInterface::DOWNLINKCMD\:RFIDPOWERON}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly byte [] CSLibrary.HighLevelInterface.DOWNLINKCMD.RFIDPOWERON = \{ 0x80, 0x00 \}{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAIJ}
{\bkmkend AAAAAAAAIJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SETDEVICENAME\:CSLibrary::HighLevelInterface::DOWNLINKCMD}
{\xe \v CSLibrary::HighLevelInterface::DOWNLINKCMD\:SETDEVICENAME}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly byte [] CSLibrary.HighLevelInterface.DOWNLINKCMD.SETDEVICENAME = \{ 0xB0, 0x03 \}{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAIK}
{\bkmkend AAAAAAAAIK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SLBOOTLOADERRAWDATA\:CSLibrary::HighLevelInterface::DOWNLINKCMD}
{\xe \v CSLibrary::HighLevelInterface::DOWNLINKCMD\:SLBOOTLOADERRAWDATA}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly byte [] CSLibrary.HighLevelInterface.DOWNLINKCMD.SLBOOTLOADERRAWDATA = \{ 0xB0, 0x02 \}{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAIL}
{\bkmkend AAAAAAAAIL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SLIMAGERAWDATA\:CSLibrary::HighLevelInterface::DOWNLINKCMD}
{\xe \v CSLibrary::HighLevelInterface::DOWNLINKCMD\:SLIMAGERAWDATA}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly byte [] CSLibrary.HighLevelInterface.DOWNLINKCMD.SLIMAGERAWDATA = \{ 0xB0, 0x01 \}{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAIM}
{\bkmkend AAAAAAAAIM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v STARTAUTOREPORTING\:CSLibrary::HighLevelInterface::DOWNLINKCMD}
{\xe \v CSLibrary::HighLevelInterface::DOWNLINKCMD\:STARTAUTOREPORTING}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly byte [] CSLibrary.HighLevelInterface.DOWNLINKCMD.STARTAUTOREPORTING = \{ 0xA0, 0x02 \}{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAIN}
{\bkmkend AAAAAAAAIN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v STOPAUTOREPORTING\:CSLibrary::HighLevelInterface::DOWNLINKCMD}
{\xe \v CSLibrary::HighLevelInterface::DOWNLINKCMD\:STOPAUTOREPORTING}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly byte [] CSLibrary.HighLevelInterface.DOWNLINKCMD.STOPAUTOREPORTING = \{ 0xA0, 0x03 \}{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAIO}
{\bkmkend AAAAAAAAIO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
CSLibrary/{\b CSLibrary.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary.Notification.DOWNLINKCMD Class Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary.Notification.DOWNLINKCMD}
{\xe \v CSLibrary.Notification.DOWNLINKCMD}
{\bkmkstart AAAAAAAAJF}
{\bkmkend AAAAAAAAJF}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static readonly byte [] {\b GETVOLTAGE} = \{ 0xA0, 0x00 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static readonly byte [] {\b GETTRIGGERSTATE} = \{ 0xA0, 0x01 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static readonly byte [] {\b STARTAUTOREPORTING} = \{ 0xA0, 0x02 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static readonly byte [] {\b STOPAUTOREPORTING} = \{ 0xA0, 0x03 \}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v GETTRIGGERSTATE\:CSLibrary::Notification::DOWNLINKCMD}
{\xe \v CSLibrary::Notification::DOWNLINKCMD\:GETTRIGGERSTATE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly byte [] CSLibrary.Notification.DOWNLINKCMD.GETTRIGGERSTATE = \{ 0xA0, 0x01 \}{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAJG}
{\bkmkend AAAAAAAAJG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GETVOLTAGE\:CSLibrary::Notification::DOWNLINKCMD}
{\xe \v CSLibrary::Notification::DOWNLINKCMD\:GETVOLTAGE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly byte [] CSLibrary.Notification.DOWNLINKCMD.GETVOLTAGE = \{ 0xA0, 0x00 \}{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAJH}
{\bkmkend AAAAAAAAJH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v STARTAUTOREPORTING\:CSLibrary::Notification::DOWNLINKCMD}
{\xe \v CSLibrary::Notification::DOWNLINKCMD\:STARTAUTOREPORTING}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly byte [] CSLibrary.Notification.DOWNLINKCMD.STARTAUTOREPORTING = \{ 0xA0, 0x02 \}{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAJI}
{\bkmkend AAAAAAAAJI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v STOPAUTOREPORTING\:CSLibrary::Notification::DOWNLINKCMD}
{\xe \v CSLibrary::Notification::DOWNLINKCMD\:STOPAUTOREPORTING}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly byte [] CSLibrary.Notification.DOWNLINKCMD.STOPAUTOREPORTING = \{ 0xA0, 0x03 \}{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAJJ}
{\bkmkend AAAAAAAAJJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
CSLibrary/Notification/{\b ClassNotification.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary.RFIDReader.DOWNLINKCMD Class Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary.RFIDReader.DOWNLINKCMD}
{\xe \v CSLibrary.RFIDReader.DOWNLINKCMD}
{\bkmkstart AAAAAAABJU}
{\bkmkend AAAAAAABJU}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static readonly byte [] {\b RFIDPOWERON} = \{ 0x80, 0x00 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static readonly byte [] {\b RFIDPOWEROFF} = \{ 0x80, 0x01 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static readonly byte [] {\b RFIDCMD} = \{ 0x80, 0x02 \}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v RFIDCMD\:CSLibrary::RFIDReader::DOWNLINKCMD}
{\xe \v CSLibrary::RFIDReader::DOWNLINKCMD\:RFIDCMD}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly byte [] CSLibrary.RFIDReader.DOWNLINKCMD.RFIDCMD = \{ 0x80, 0x02 \}{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABJV}
{\bkmkend AAAAAAABJV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v RFIDPOWEROFF\:CSLibrary::RFIDReader::DOWNLINKCMD}
{\xe \v CSLibrary::RFIDReader::DOWNLINKCMD\:RFIDPOWEROFF}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly byte [] CSLibrary.RFIDReader.DOWNLINKCMD.RFIDPOWEROFF = \{ 0x80, 0x01 \}{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABJW}
{\bkmkend AAAAAAABJW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v RFIDPOWERON\:CSLibrary::RFIDReader::DOWNLINKCMD}
{\xe \v CSLibrary::RFIDReader::DOWNLINKCMD\:RFIDPOWERON}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly byte [] CSLibrary.RFIDReader.DOWNLINKCMD.RFIDPOWERON = \{ 0x80, 0x00 \}{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABJX}
{\bkmkend AAAAAAABJX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
CSLibrary/RFIDReader/backup/{\b CSLibrary.HighLevelInterface.Private.cs}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
CSLibrary/RFIDReader/{\b ClassRFID.Private.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary.Structures.DriverVersion Class Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary.Structures.DriverVersion}
{\xe \v CSLibrary.Structures.DriverVersion}
{\bkmkstart AAAAAAADMB}
{\bkmkend AAAAAAADMB}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Driver {\b Version} Structure }}\par
Inheritance diagram for CSLibrary.Structures.DriverVersion:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_c_s_library_1_1_structures_1_1_driver_version.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DriverVersion} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Driver {\b Version} Structure \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v DriverVersion\:CSLibrary::Structures::DriverVersion}
{\xe \v CSLibrary::Structures::DriverVersion\:DriverVersion}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CSLibrary.Structures.DriverVersion.DriverVersion ()}}
\par
{\bkmkstart AAAAAAADMC}
{\bkmkend AAAAAAADMC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
CSLibrary/RFIDReader/Structures/{\b Intel.Structures.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary.Structures.DynamicQParms Class Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary.Structures.DynamicQParms}
{\xe \v CSLibrary.Structures.DynamicQParms}
{\bkmkstart AAAAAAADMD}
{\bkmkend AAAAAAADMD}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The parameters for the dynamic-Q algorithm, MAC singulation algorithm 3, (i.e., RFID_18K6C_SINGULATION_ALGORITHM_DYNAMICQ) }}\par
Inheritance diagram for CSLibrary.Structures.DynamicQParms:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_c_s_library_1_1_structures_1_1_dynamic_q_parms.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt32 {\b startQValue} = 0\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The starting Q value to use. Valid values are 0-15, inclusive. startQValue must be greater than or equal to minQValue and less than or equal to maxQValue. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt32 {\b minQValue} = 0\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The minimum Q value to use. Valid values are 0-15, inclusive. minQValue must be less than or equal to startQValue and maxQValue. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt32 {\b maxQValue} = 0\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The maximum Q value to use. Valid values are 0-15, inclusive. maxQValue must be greater than or equal to startQValue and minQValue. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt32 {\b retryCount} = 0\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Specifies the number of times to try another execution of the singulation algorithm for the specified session/target before either toggling the target (if toggleTarget is non- zero) or terminating the inventory/tag access operation. Valid values are 0-255, inclusive. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt32 {\b toggleTarget} = 0\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A flag that indicates if, after performing the inventory cycle for the specified target (i.e., A or B), if the target should be toggled (i.e., A to B or B to A) and another inventory cycle run. A non-zero value indicates that the target should be toggled. A zero value indicates that the target should not be toggled. Note that if the target is toggled, retryCount and maxQueryRepCount will also apply to the new target. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt32 {\b thresholdMultiplier} = 0\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The multiplier, specified in units of fourths (i.e., 0.25), that will be applied to the Q-adjustment threshold as part of the dynamic-Q algorithm. For example, a value of 7 represents a multiplier of 1.75. See [MAC-EDS] for specifics on how the Q-adjustment threshold is used in the dynamic Q algorithm. Valid values are 0- 255, inclusive. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The parameters for the dynamic-Q algorithm, MAC singulation algorithm 3, (i.e., RFID_18K6C_SINGULATION_ALGORITHM_DYNAMICQ) \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v maxQValue\:CSLibrary::Structures::DynamicQParms}
{\xe \v CSLibrary::Structures::DynamicQParms\:maxQValue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt32 CSLibrary.Structures.DynamicQParms.maxQValue = 0}}
\par
{\bkmkstart AAAAAAADME}
{\bkmkend AAAAAAADME}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The maximum Q value to use. Valid values are 0-15, inclusive. maxQValue must be greater than or equal to startQValue and minQValue. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v minQValue\:CSLibrary::Structures::DynamicQParms}
{\xe \v CSLibrary::Structures::DynamicQParms\:minQValue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt32 CSLibrary.Structures.DynamicQParms.minQValue = 0}}
\par
{\bkmkstart AAAAAAADMF}
{\bkmkend AAAAAAADMF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The minimum Q value to use. Valid values are 0-15, inclusive. minQValue must be less than or equal to startQValue and maxQValue. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v retryCount\:CSLibrary::Structures::DynamicQParms}
{\xe \v CSLibrary::Structures::DynamicQParms\:retryCount}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt32 CSLibrary.Structures.DynamicQParms.retryCount = 0}}
\par
{\bkmkstart AAAAAAADMG}
{\bkmkend AAAAAAADMG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Specifies the number of times to try another execution of the singulation algorithm for the specified session/target before either toggling the target (if toggleTarget is non- zero) or terminating the inventory/tag access operation. Valid values are 0-255, inclusive. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v startQValue\:CSLibrary::Structures::DynamicQParms}
{\xe \v CSLibrary::Structures::DynamicQParms\:startQValue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt32 CSLibrary.Structures.DynamicQParms.startQValue = 0}}
\par
{\bkmkstart AAAAAAADMH}
{\bkmkend AAAAAAADMH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The starting Q value to use. Valid values are 0-15, inclusive. startQValue must be greater than or equal to minQValue and less than or equal to maxQValue. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v thresholdMultiplier\:CSLibrary::Structures::DynamicQParms}
{\xe \v CSLibrary::Structures::DynamicQParms\:thresholdMultiplier}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt32 CSLibrary.Structures.DynamicQParms.thresholdMultiplier = 0}}
\par
{\bkmkstart AAAAAAADMI}
{\bkmkend AAAAAAADMI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The multiplier, specified in units of fourths (i.e., 0.25), that will be applied to the Q-adjustment threshold as part of the dynamic-Q algorithm. For example, a value of 7 represents a multiplier of 1.75. See [MAC-EDS] for specifics on how the Q-adjustment threshold is used in the dynamic Q algorithm. Valid values are 0- 255, inclusive. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v toggleTarget\:CSLibrary::Structures::DynamicQParms}
{\xe \v CSLibrary::Structures::DynamicQParms\:toggleTarget}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt32 CSLibrary.Structures.DynamicQParms.toggleTarget = 0}}
\par
{\bkmkstart AAAAAAADMJ}
{\bkmkend AAAAAAADMJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A flag that indicates if, after performing the inventory cycle for the specified target (i.e., A or B), if the target should be toggled (i.e., A to B or B to A) and another inventory cycle run. A non-zero value indicates that the target should be toggled. A zero value indicates that the target should not be toggled. Note that if the target is toggled, retryCount and maxQueryRepCount will also apply to the new target. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
CSLibrary/RFIDReader/Structures/{\b Intel.Structures.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary.Structures.EngineInfoParms Class Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary.Structures.EngineInfoParms}
{\xe \v CSLibrary.Structures.EngineInfoParms}
{\bkmkstart AAAAAAADMK}
{\bkmkend AAAAAAADMK}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Engine Information Structure (5000K engine with PSOC only) }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt16 [] {\b tcEngId} = new UInt16[{\b Constants.Constants.ENGINE_ID_DIGITS}]\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
4 digit ASCII Hex. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt16 [] {\b tcHHPSerialNumber} = new UInt16[{\b Constants.Constants.MAX_SERIAL_NUMBER_LEN}]\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ASCII Decimal }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt16 [] {\b tcCustomSerialNumber} = new UInt16[{\b Constants.Constants.MAX_SERIAL_NUMBER_LEN}]\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ASCII Decimal }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
long {\b nAimerX}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Aimer X }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
long {\b nAimerY}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Aimer Y }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
long {\b nLaserPower}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Laser power in mW }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt16 [] {\b tcFirmwareChecksum} = new UInt16[{\b Constants.Constants.MAX_CHECKSUM_LEN}]\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Firmware Checksum (ASCII Decimal) }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt16 [] {\b tcFirmwareRev} = new UInt16[{\b Constants.Constants.MAX_SHORT_VERSION_LEN}]\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Firmware Revision Number }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
long {\b nLedCtrlMode}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
How LEDs are controled. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
long {\b nLedClr}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
LED color (Red or Green LEDs) }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
long {\b nPwmFreq}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PWM base frequence. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
long {\b nRedLedCurrent}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Red LED current (mA). }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
long {\b nRedLedMaxCurrent}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Red LED max current (mA). }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
long {\b nGreenLedCurrent}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Green LED current (mA). }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
long {\b nGreenLedMaxCurrent}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Green LED max current (mA). }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
long {\b nAimerCurrent}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Aimer current (mA). }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
long {\b nAimerMaxCurrent}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Aimer max current (mA). }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
long {\b nPixelClockFreq}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pixel clock frequency (MHz) }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt16 [] {\b tcRegisterChecksum} = new UInt16[{\b Constants.Constants.MAX_CHECKSUM_LEN}]\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Register Checksum. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint {\b dwStructSize} = 224\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure size }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Engine Information Structure (5000K engine with PSOC only) \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v dwStructSize\:CSLibrary::Barcode::Structures::EngineInfoParms}
{\xe \v CSLibrary::Barcode::Structures::EngineInfoParms\:dwStructSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint CSLibrary.Structures.EngineInfoParms.dwStructSize = 224{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADML}
{\bkmkend AAAAAAADML}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure size }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v nAimerCurrent\:CSLibrary::Barcode::Structures::EngineInfoParms}
{\xe \v CSLibrary::Barcode::Structures::EngineInfoParms\:nAimerCurrent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
long CSLibrary.Structures.EngineInfoParms.nAimerCurrent}}
\par
{\bkmkstart AAAAAAADMM}
{\bkmkend AAAAAAADMM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Aimer current (mA). }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v nAimerMaxCurrent\:CSLibrary::Barcode::Structures::EngineInfoParms}
{\xe \v CSLibrary::Barcode::Structures::EngineInfoParms\:nAimerMaxCurrent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
long CSLibrary.Structures.EngineInfoParms.nAimerMaxCurrent}}
\par
{\bkmkstart AAAAAAADMN}
{\bkmkend AAAAAAADMN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Aimer max current (mA). }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v nAimerX\:CSLibrary::Barcode::Structures::EngineInfoParms}
{\xe \v CSLibrary::Barcode::Structures::EngineInfoParms\:nAimerX}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
long CSLibrary.Structures.EngineInfoParms.nAimerX}}
\par
{\bkmkstart AAAAAAADMO}
{\bkmkend AAAAAAADMO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Aimer X }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v nAimerY\:CSLibrary::Barcode::Structures::EngineInfoParms}
{\xe \v CSLibrary::Barcode::Structures::EngineInfoParms\:nAimerY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
long CSLibrary.Structures.EngineInfoParms.nAimerY}}
\par
{\bkmkstart AAAAAAADMP}
{\bkmkend AAAAAAADMP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Aimer Y }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v nGreenLedCurrent\:CSLibrary::Barcode::Structures::EngineInfoParms}
{\xe \v CSLibrary::Barcode::Structures::EngineInfoParms\:nGreenLedCurrent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
long CSLibrary.Structures.EngineInfoParms.nGreenLedCurrent}}
\par
{\bkmkstart AAAAAAADMQ}
{\bkmkend AAAAAAADMQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Green LED current (mA). }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v nGreenLedMaxCurrent\:CSLibrary::Barcode::Structures::EngineInfoParms}
{\xe \v CSLibrary::Barcode::Structures::EngineInfoParms\:nGreenLedMaxCurrent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
long CSLibrary.Structures.EngineInfoParms.nGreenLedMaxCurrent}}
\par
{\bkmkstart AAAAAAADMR}
{\bkmkend AAAAAAADMR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Green LED max current (mA). }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v nLaserPower\:CSLibrary::Barcode::Structures::EngineInfoParms}
{\xe \v CSLibrary::Barcode::Structures::EngineInfoParms\:nLaserPower}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
long CSLibrary.Structures.EngineInfoParms.nLaserPower}}
\par
{\bkmkstart AAAAAAADMS}
{\bkmkend AAAAAAADMS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Laser power in mW }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v nLedClr\:CSLibrary::Barcode::Structures::EngineInfoParms}
{\xe \v CSLibrary::Barcode::Structures::EngineInfoParms\:nLedClr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
long CSLibrary.Structures.EngineInfoParms.nLedClr}}
\par
{\bkmkstart AAAAAAADMT}
{\bkmkend AAAAAAADMT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
LED color (Red or Green LEDs) }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v nLedCtrlMode\:CSLibrary::Barcode::Structures::EngineInfoParms}
{\xe \v CSLibrary::Barcode::Structures::EngineInfoParms\:nLedCtrlMode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
long CSLibrary.Structures.EngineInfoParms.nLedCtrlMode}}
\par
{\bkmkstart AAAAAAADMU}
{\bkmkend AAAAAAADMU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
How LEDs are controled. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v nPixelClockFreq\:CSLibrary::Barcode::Structures::EngineInfoParms}
{\xe \v CSLibrary::Barcode::Structures::EngineInfoParms\:nPixelClockFreq}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
long CSLibrary.Structures.EngineInfoParms.nPixelClockFreq}}
\par
{\bkmkstart AAAAAAADMV}
{\bkmkend AAAAAAADMV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pixel clock frequency (MHz) }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v nPwmFreq\:CSLibrary::Barcode::Structures::EngineInfoParms}
{\xe \v CSLibrary::Barcode::Structures::EngineInfoParms\:nPwmFreq}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
long CSLibrary.Structures.EngineInfoParms.nPwmFreq}}
\par
{\bkmkstart AAAAAAADMW}
{\bkmkend AAAAAAADMW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PWM base frequence. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v nRedLedCurrent\:CSLibrary::Barcode::Structures::EngineInfoParms}
{\xe \v CSLibrary::Barcode::Structures::EngineInfoParms\:nRedLedCurrent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
long CSLibrary.Structures.EngineInfoParms.nRedLedCurrent}}
\par
{\bkmkstart AAAAAAADMX}
{\bkmkend AAAAAAADMX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Red LED current (mA). }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v nRedLedMaxCurrent\:CSLibrary::Barcode::Structures::EngineInfoParms}
{\xe \v CSLibrary::Barcode::Structures::EngineInfoParms\:nRedLedMaxCurrent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
long CSLibrary.Structures.EngineInfoParms.nRedLedMaxCurrent}}
\par
{\bkmkstart AAAAAAADMY}
{\bkmkend AAAAAAADMY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Red LED max current (mA). }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v tcCustomSerialNumber\:CSLibrary::Barcode::Structures::EngineInfoParms}
{\xe \v CSLibrary::Barcode::Structures::EngineInfoParms\:tcCustomSerialNumber}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt16 [] CSLibrary.Structures.EngineInfoParms.tcCustomSerialNumber = new UInt16[{\b Constants.Constants.MAX_SERIAL_NUMBER_LEN}]}}
\par
{\bkmkstart AAAAAAADMZ}
{\bkmkend AAAAAAADMZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ASCII Decimal }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v tcEngId\:CSLibrary::Barcode::Structures::EngineInfoParms}
{\xe \v CSLibrary::Barcode::Structures::EngineInfoParms\:tcEngId}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt16 [] CSLibrary.Structures.EngineInfoParms.tcEngId = new UInt16[{\b Constants.Constants.ENGINE_ID_DIGITS}]}}
\par
{\bkmkstart AAAAAAADNA}
{\bkmkend AAAAAAADNA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
4 digit ASCII Hex. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v tcFirmwareChecksum\:CSLibrary::Barcode::Structures::EngineInfoParms}
{\xe \v CSLibrary::Barcode::Structures::EngineInfoParms\:tcFirmwareChecksum}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt16 [] CSLibrary.Structures.EngineInfoParms.tcFirmwareChecksum = new UInt16[{\b Constants.Constants.MAX_CHECKSUM_LEN}]}}
\par
{\bkmkstart AAAAAAADNB}
{\bkmkend AAAAAAADNB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Firmware Checksum (ASCII Decimal) }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v tcFirmwareRev\:CSLibrary::Barcode::Structures::EngineInfoParms}
{\xe \v CSLibrary::Barcode::Structures::EngineInfoParms\:tcFirmwareRev}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt16 [] CSLibrary.Structures.EngineInfoParms.tcFirmwareRev = new UInt16[{\b Constants.Constants.MAX_SHORT_VERSION_LEN}]}}
\par
{\bkmkstart AAAAAAADNC}
{\bkmkend AAAAAAADNC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Firmware Revision Number }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v tcHHPSerialNumber\:CSLibrary::Barcode::Structures::EngineInfoParms}
{\xe \v CSLibrary::Barcode::Structures::EngineInfoParms\:tcHHPSerialNumber}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt16 [] CSLibrary.Structures.EngineInfoParms.tcHHPSerialNumber = new UInt16[{\b Constants.Constants.MAX_SERIAL_NUMBER_LEN}]}}
\par
{\bkmkstart AAAAAAADND}
{\bkmkend AAAAAAADND}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ASCII Decimal }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v tcRegisterChecksum\:CSLibrary::Barcode::Structures::EngineInfoParms}
{\xe \v CSLibrary::Barcode::Structures::EngineInfoParms\:tcRegisterChecksum}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt16 [] CSLibrary.Structures.EngineInfoParms.tcRegisterChecksum = new UInt16[{\b Constants.Constants.MAX_CHECKSUM_LEN}]}}
\par
{\bkmkstart AAAAAAADNE}
{\bkmkend AAAAAAADNE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Register Checksum. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
CSLibrary/BarcodeReader/Structures/{\b CSLibrary.Barcode.Structures.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary.Structures.ErrorMessage Class Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary.Structures.ErrorMessage}
{\xe \v CSLibrary.Structures.ErrorMessage}
{\bkmkstart AAAAAAADNF}
{\bkmkend AAAAAAADNF}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
error message structure }}\par
Inheritance diagram for CSLibrary.Structures.ErrorMessage:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_c_s_library_1_1_barcode_1_1_structures_1_1_error_message.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
String {\b message}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
decoded message data }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Result} {\b result}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
AIM Id of symbology }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
error message structure \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v message\:CSLibrary::Barcode::Structures::ErrorMessage}
{\xe \v CSLibrary::Barcode::Structures::ErrorMessage\:message}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
String CSLibrary.Structures.ErrorMessage.message}}
\par
{\bkmkstart AAAAAAADNG}
{\bkmkend AAAAAAADNG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
decoded message data }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v result\:CSLibrary::Barcode::Structures::ErrorMessage}
{\xe \v CSLibrary::Barcode::Structures::ErrorMessage\:result}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Result} CSLibrary.Structures.ErrorMessage.result}}
\par
{\bkmkstart AAAAAAADNH}
{\bkmkend AAAAAAADNH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
AIM Id of symbology }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
CSLibrary/BarcodeReader/Structures/{\b CSLibrary.Barcode.Structures.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary.SiliconLabIC.Events Class Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary.SiliconLabIC.Events}
{\xe \v CSLibrary.SiliconLabIC.Events}
{\bkmkstart AAAAAAABKM}
{\bkmkend AAAAAAABKM}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b OnAccessCompletedEventArgs}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
CSLibrary/SiliconLabIC/{\b ClassEvent.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary.Structures.FixedQParms Class Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary.Structures.FixedQParms}
{\xe \v CSLibrary.Structures.FixedQParms}
{\bkmkstart AAAAAAADNI}
{\bkmkend AAAAAAADNI}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The parameters for the fixed-Q algorithm, MAC singulation algorithm 0, (i.e., RFID_18K6C_SINGULATION_ALGORITHM_FIXEDQ) }}\par
Inheritance diagram for CSLibrary.Structures.FixedQParms:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_c_s_library_1_1_structures_1_1_fixed_q_parms.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FixedQParms} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FixedQParms} (uint {\b qValue}, uint {\b retryCount}, uint {\b toggleTarget}, uint {\b repeatUntilNoTags})\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt32 {\b qValue} = 0\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The Q value to use. Valid values are 0-15, inclusive. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt32 {\b retryCount} = 0\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Specifies the number of times to try another execution of the singulation algorithm for the specified session/target before either toggling the target (if toggleTarget is non-zero) or terminating the inventory/tag access operation. Valid values are 0- 255, inclusive. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt32 {\b toggleTarget} = 0\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A flag that indicates if, after performing the inventory cycle for the specified target (i.e., A or B), if the target should be toggled (i.e., A to B or B to A) and another inventory cycle run. A non- zero value indicates that the target should be toggled. A zero value indicates that the target should not be toggled. Note that if the target is toggled, retryCount and repeatUntilNoTags will also apply to the new target. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt32 {\b repeatUntilNoTags} = 0\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A flag that indicates whether or not the singulation algorithm should continue performing inventory rounds until no tags are singulated. A non-zero value indicates that, for each execution of the singulation algorithm, inventory rounds should be performed until no tags are singulated. A zero value indicates that a single inventory round should be performed for each execution of the singulation algorithm. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The parameters for the fixed-Q algorithm, MAC singulation algorithm 0, (i.e., RFID_18K6C_SINGULATION_ALGORITHM_FIXEDQ) \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v FixedQParms\:CSLibrary::Structures::FixedQParms}
{\xe \v CSLibrary::Structures::FixedQParms\:FixedQParms}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CSLibrary.Structures.FixedQParms.FixedQParms ()}}
\par
{\bkmkstart AAAAAAADNJ}
{\bkmkend AAAAAAADNJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v FixedQParms\:CSLibrary::Structures::FixedQParms}
{\xe \v CSLibrary::Structures::FixedQParms\:FixedQParms}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CSLibrary.Structures.FixedQParms.FixedQParms (uint  {\i qValue}, uint  {\i retryCount}, uint  {\i toggleTarget}, uint  {\i repeatUntilNoTags})}}
\par
{\bkmkstart AAAAAAADNK}
{\bkmkend AAAAAAADNK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i qValue} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i retryCount} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i toggleTarget} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i repeatUntilNoTags} \cell }{\cell }
{\row }
}
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v qValue\:CSLibrary::Structures::FixedQParms}
{\xe \v CSLibrary::Structures::FixedQParms\:qValue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt32 CSLibrary.Structures.FixedQParms.qValue = 0}}
\par
{\bkmkstart AAAAAAADNL}
{\bkmkend AAAAAAADNL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The Q value to use. Valid values are 0-15, inclusive. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v repeatUntilNoTags\:CSLibrary::Structures::FixedQParms}
{\xe \v CSLibrary::Structures::FixedQParms\:repeatUntilNoTags}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt32 CSLibrary.Structures.FixedQParms.repeatUntilNoTags = 0}}
\par
{\bkmkstart AAAAAAADNM}
{\bkmkend AAAAAAADNM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A flag that indicates whether or not the singulation algorithm should continue performing inventory rounds until no tags are singulated. A non-zero value indicates that, for each execution of the singulation algorithm, inventory rounds should be performed until no tags are singulated. A zero value indicates that a single inventory round should be performed for each execution of the singulation algorithm. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v retryCount\:CSLibrary::Structures::FixedQParms}
{\xe \v CSLibrary::Structures::FixedQParms\:retryCount}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt32 CSLibrary.Structures.FixedQParms.retryCount = 0}}
\par
{\bkmkstart AAAAAAADNN}
{\bkmkend AAAAAAADNN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Specifies the number of times to try another execution of the singulation algorithm for the specified session/target before either toggling the target (if toggleTarget is non-zero) or terminating the inventory/tag access operation. Valid values are 0- 255, inclusive. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v toggleTarget\:CSLibrary::Structures::FixedQParms}
{\xe \v CSLibrary::Structures::FixedQParms\:toggleTarget}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt32 CSLibrary.Structures.FixedQParms.toggleTarget = 0}}
\par
{\bkmkstart AAAAAAADNO}
{\bkmkend AAAAAAADNO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A flag that indicates if, after performing the inventory cycle for the specified target (i.e., A or B), if the target should be toggled (i.e., A to B or B to A) and another inventory cycle run. A non- zero value indicates that the target should be toggled. A zero value indicates that the target should not be toggled. Note that if the target is toggled, retryCount and repeatUntilNoTags will also apply to the new target. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
CSLibrary/RFIDReader/Structures/{\b Intel.Structures.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary.Structures.FrequencyBandParms Struct Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary.Structures.FrequencyBandParms}
{\xe \v CSLibrary.Structures.FrequencyBandParms}
{\bkmkstart AAAAAAADNP}
{\bkmkend AAAAAAADNP}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Frequency Band Parms }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ushort {\b AffinityBand}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
AffinityBand }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt32 {\b Band}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Frequency Band }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt16 {\b DivideRatio}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
DivideRation }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt16 {\b GuardBand}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
GuardBand }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt16 {\b MaximumDACBand}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
MaximumDACBand }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt16 {\b MinimumDACBand}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
MinimumDACBand }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt16 {\b MultiplyRatio}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
MultiplyRatio }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b BandState} {\b State}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
State }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b Frequency}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Frequency }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Frequency Band Parms \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v AffinityBand\:CSLibrary::Structures::FrequencyBandParms}
{\xe \v CSLibrary::Structures::FrequencyBandParms\:AffinityBand}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ushort CSLibrary.Structures.FrequencyBandParms.AffinityBand}}
\par
{\bkmkstart AAAAAAADNQ}
{\bkmkend AAAAAAADNQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
AffinityBand }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Band\:CSLibrary::Structures::FrequencyBandParms}
{\xe \v CSLibrary::Structures::FrequencyBandParms\:Band}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt32 CSLibrary.Structures.FrequencyBandParms.Band}}
\par
{\bkmkstart AAAAAAADNR}
{\bkmkend AAAAAAADNR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Frequency Band }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v DivideRatio\:CSLibrary::Structures::FrequencyBandParms}
{\xe \v CSLibrary::Structures::FrequencyBandParms\:DivideRatio}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt16 CSLibrary.Structures.FrequencyBandParms.DivideRatio}}
\par
{\bkmkstart AAAAAAADNS}
{\bkmkend AAAAAAADNS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
DivideRation }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Frequency\:CSLibrary::Structures::FrequencyBandParms}
{\xe \v CSLibrary::Structures::FrequencyBandParms\:Frequency}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double CSLibrary.Structures.FrequencyBandParms.Frequency}}
\par
{\bkmkstart AAAAAAADNT}
{\bkmkend AAAAAAADNT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Frequency }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v GuardBand\:CSLibrary::Structures::FrequencyBandParms}
{\xe \v CSLibrary::Structures::FrequencyBandParms\:GuardBand}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt16 CSLibrary.Structures.FrequencyBandParms.GuardBand}}
\par
{\bkmkstart AAAAAAADNU}
{\bkmkend AAAAAAADNU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
GuardBand }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v MaximumDACBand\:CSLibrary::Structures::FrequencyBandParms}
{\xe \v CSLibrary::Structures::FrequencyBandParms\:MaximumDACBand}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt16 CSLibrary.Structures.FrequencyBandParms.MaximumDACBand}}
\par
{\bkmkstart AAAAAAADNV}
{\bkmkend AAAAAAADNV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
MaximumDACBand }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v MinimumDACBand\:CSLibrary::Structures::FrequencyBandParms}
{\xe \v CSLibrary::Structures::FrequencyBandParms\:MinimumDACBand}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt16 CSLibrary.Structures.FrequencyBandParms.MinimumDACBand}}
\par
{\bkmkstart AAAAAAADNW}
{\bkmkend AAAAAAADNW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
MinimumDACBand }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v MultiplyRatio\:CSLibrary::Structures::FrequencyBandParms}
{\xe \v CSLibrary::Structures::FrequencyBandParms\:MultiplyRatio}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt16 CSLibrary.Structures.FrequencyBandParms.MultiplyRatio}}
\par
{\bkmkstart AAAAAAADNX}
{\bkmkend AAAAAAADNX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
MultiplyRatio }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v State\:CSLibrary::Structures::FrequencyBandParms}
{\xe \v CSLibrary::Structures::FrequencyBandParms\:State}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b BandState} CSLibrary.Structures.FrequencyBandParms.State}}
\par
{\bkmkstart AAAAAAADNY}
{\bkmkend AAAAAAADNY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
State }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
CSLibrary/RFIDReader/Structures/{\b CSLibrary.Structures.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary.GATT Class Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary.GATT}
{\xe \v CSLibrary.GATT}
{\bkmkstart AAAAAAAAEW}
{\bkmkend AAAAAAAAEW}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GATT} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
async void {\b Connect} (IDevice device)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b Disconnect} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Types\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b RESULT} \{ {\b RESULT.SUCCESS}, 
{\b RESULT.FAIL}, 
{\b RESULT.READYCONNECTED}
 \}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~GATT} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Enumeration Documentation\par
\pard\plain 
{\xe \v RESULT\:CSLibrary::GATT}
{\xe \v CSLibrary::GATT\:RESULT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b CSLibrary.GATT.RESULT}{\f2 [strong]}, {\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAEX}
{\bkmkend AAAAAAAAEX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v SUCCESS\:CSLibrary::GATT}
{\xe \v CSLibrary::GATT\:SUCCESS}
{\qr SUCCESS{\bkmkstart AAAAAAAAEY}
{\bkmkend AAAAAAAAEY}
\cell }{\cell }{\row }
{\xe \v FAIL\:CSLibrary::GATT}
{\xe \v CSLibrary::GATT\:FAIL}
{\qr FAIL{\bkmkstart AAAAAAAAEZ}
{\bkmkend AAAAAAAAEZ}
\cell }{\cell }{\row }
{\xe \v READYCONNECTED\:CSLibrary::GATT}
{\xe \v CSLibrary::GATT\:READYCONNECTED}
{\qr READYCONNECTED{\bkmkstart AAAAAAAAFA}
{\bkmkend AAAAAAAAFA}
\cell }{\cell }{\row }
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v GATT\:CSLibrary::GATT}
{\xe \v CSLibrary::GATT\:GATT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CSLibrary.GATT.GATT ()}}
\par
{\bkmkstart AAAAAAAAFB}
{\bkmkend AAAAAAAAFB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ~GATT\:CSLibrary::GATT}
{\xe \v CSLibrary::GATT\:~GATT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CSLibrary.GATT.~GATT (){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAFC}
{\bkmkend AAAAAAAAFC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Connect\:CSLibrary::GATT}
{\xe \v CSLibrary::GATT\:Connect}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
async void CSLibrary.GATT.Connect (IDevice  {\i device})}}
\par
{\bkmkstart AAAAAAAAFD}
{\bkmkend AAAAAAAAFD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Disconnect\:CSLibrary::GATT}
{\xe \v CSLibrary::GATT\:Disconnect}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool CSLibrary.GATT.Disconnect ()}}
\par
{\bkmkstart AAAAAAAAFE}
{\bkmkend AAAAAAAAFE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
CSLibrary/{\b BTConnect.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary.Tools.Hex Class Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary.Tools.Hex}
{\xe \v CSLibrary.Tools.Hex}
{\bkmkstart AAAAAAAEPT}
{\bkmkend AAAAAAAEPT}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
For Backward Compatibility }}\par
Inheritance diagram for CSLibrary.Tools.Hex:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_c_s_library_1_1_tools_1_1_hex.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
For Backward Compatibility \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
CSLibrary/Tools/{\b ClassHex.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary.Text.Hex Class Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary.Text.Hex}
{\xe \v CSLibrary.Text.Hex}
{\bkmkstart AAAAAAAEMZ}
{\bkmkend AAAAAAAEMZ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
For Backward Compatibility }}\par
Inheritance diagram for CSLibrary.Text.Hex:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_c_s_library_1_1_text_1_1_hex.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
For Backward Compatibility \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
CSLibrary/{\b HexEncoding.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary.Tools.HexEncoding Class Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary.Tools.HexEncoding}
{\xe \v CSLibrary.Tools.HexEncoding}
{\bkmkstart AAAAAAAEPU}
{\bkmkend AAAAAAAEPU}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Summary description for {\b HexEncoding}. }}\par
Inheritance diagram for CSLibrary.Tools.HexEncoding:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_c_s_library_1_1_tools_1_1_hex_encoding.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b ToBinary} (byte[] source, uint offset, uint length)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert to binary format }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static bool {\b IsHexDigit} (char c)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static byte [] {\b ToBytes} (string hexString)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a byte array from the hexadecimal string. Each two characters are combined to create one byte. First two hexadecimal characters become first byte in returned array. Non-hexadecimal characters are ignored. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static byte [] {\b GenSelectMask} (string hexString)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a byte array from the hexadecimal string. Each two characters are combined to create one byte. First two hexadecimal characters become first byte in returned array. Non-hexadecimal characters are ignored. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static byte [] {\b GenPostMatchMask} (string hexString)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a byte array from the hexadecimal string. Each two characters are combined to create one byte. First two hexadecimal characters become first byte in returned array. Non-hexadecimal characters are ignored. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static byte [] {\b ToBytes} (ushort[] data)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convent ushort array to byte array }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static byte [] {\b ToBytes} (ushort[] data, int count)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convent ushort array to byte array }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static byte {\b ToByte} (string hexString)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
return a byte from string }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static ushort {\b ToUshort} (string str)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
return ushort from byte string }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static ushort [] {\b ToUshorts} (byte[] Input)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
return ushort array from byte array }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static short [] {\b ToShorts} (byte[] Input)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
return short array from byte array }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static ushort [] {\b ToUshorts} (string Input)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
return ushort array from string input }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static string {\b ToString} (byte[] bytes)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Byte to String Conversion }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static string {\b ToString} (byte[] bytes, int length)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Byte to String Conversion }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static string {\b ToString} (byte[] bytes, uint offset, uint count)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Byte to String Conversion }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static string {\b ToString} (ushort[] data)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ushort to String Conversion }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static string {\b ToString} (ushort[] data, uint offset, uint count)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ushort to String Conversion }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static bool {\b IsHexFormat} (string hexString)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Determines if given string is in proper hexadecimal string format }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static bool {\b Compare} (string source, string target)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compare {\b Hex} String, ie, source = "11ffaa", target = "11FFaa", it will return true }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static bool {\b Compare} (Byte[] source, Byte[] target)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compare {\b Hex} }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static bool {\b Compare} (Byte[] source, Byte[] target, int size)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compare {\b Hex} }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static Int16 {\b ToInt16} (byte[] buffer, int offset)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert 2 Bytes to one short }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static UInt16 {\b ToUInt16} (byte[] buffer, int offset)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert 2 Bytes to one short }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static UInt32 {\b ToUInt32} (byte[] buffer, int offset)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert 4 Bytes to one uint32 }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static UInt32 {\b ToUInt32} (string hexString)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert string to one uint32 }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static UInt64 {\b ToUInt64} (byte[] buffer, int offset)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert 4 bytes to long }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static bool {\b IsHexDigit} (char c)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static long {\b HostToNetworkOrder} (long host)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b HostToNetworkOrder} (int host)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static short {\b HostToNetworkOrder} (short host)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static long {\b NetworkToHostOrder} (long network)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b NetworkToHostOrder} (int network)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static short {\b NetworkToHostOrder} (short network)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static byte [] {\b ToBytes} (string hexString)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a byte array from the hexadecimal string. Each two characters are combined to create one byte. First two hexadecimal characters become first byte in returned array. Non-hexadecimal characters are ignored. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static byte [] {\b GenSelectMask} (string hexString)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a byte array from the hexadecimal string. Each two characters are combined to create one byte. First two hexadecimal characters become first byte in returned array. Non-hexadecimal characters are ignored. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static byte [] {\b GenPostMatchMask} (string hexString)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a byte array from the hexadecimal string. Each two characters are combined to create one byte. First two hexadecimal characters become first byte in returned array. Non-hexadecimal characters are ignored. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static byte [] {\b ToBytes} (ushort[] data)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convent ushort array to byte array }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static byte [] {\b ToBytes} (ushort[] data, int count)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convent ushort array to byte array }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static byte {\b ToByte} (string hexString)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
return a byte from string }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static ushort {\b ToUshort} (string str)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
return ushort from byte string }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static ushort [] {\b ToUshorts} (byte[] Input)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
return ushort array from byte array }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static short [] {\b ToShorts} (byte[] Input)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
return short array from byte array }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static ushort [] {\b ToUshorts} (string Input)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
return ushort array from string input }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static string {\b ToString} (byte[] bytes, int offset=0, int count=-1)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Byte to String Conversion }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static string {\b ToString} (ushort[] data, int offset=0, int count=-1)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ushort to String Conversion }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static bool {\b IsHexFormat} (string hexString)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Determines if given string is in proper hexadecimal string format }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static bool {\b Compare} (string source, string target)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compare {\b Hex} String, ie, source = "11ffaa", target = "11FFaa", it will return true }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static bool {\b Compare} (Byte[] source, Byte[] target)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compare {\b Hex} }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static bool {\b Compare} (Byte[] source, Byte[] target, int size)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compare {\b Hex} }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static Int16 {\b ToInt16} (byte[] buffer, int offset)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert 2 Bytes to one short }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static UInt16 {\b ToUInt16} (byte[] buffer, int offset)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert 2 Bytes to one short }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static UInt32 {\b ToUInt32} (string hexString)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert string to one uint32 }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b Copy} (Byte[] src, Byte[] dst, int count)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Copy One array to another array }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b Copy} (Byte[] src, Byte[] dst, int dstIndex, int count)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Copy One array to another array }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b Copy} (Byte[] src, int srcIndex, Byte[] dst, int dstIndex, int count)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Copy One array to another array }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static bool {\b Compare< T >} (T[] a, T[] b)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Generic compare two array }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static UInt32 {\b GetBitCount} (string hexString)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get bit length from string }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static UInt32 {\b GetBitCount} (Byte[] bytes)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get bit length from string }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static ushort {\b GetWordCount} (string hexString)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get Word length from string }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b GetByteCount} (string hexString)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
GetByteCount }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Private Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static byte {\b HexToByte} (string hex)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Converts 1 or 2 character string into equivalant byte value }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static ushort {\b HexToUshort} (string hex)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static byte {\b HexToByte} (string hex)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Converts 1 or 2 character string into equivalant byte value }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static ushort {\b HexToUshort} (string hex)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Summary description for {\b HexEncoding}. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Compare\:CSLibrary::Tools::HexEncoding}
{\xe \v CSLibrary::Tools::HexEncoding\:Compare}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static bool CSLibrary.Tools.HexEncoding.Compare (string  {\i source}, string  {\i target}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAEPV}
{\bkmkend AAAAAAAEPV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compare {\b Hex} String, ie, source = "11ffaa", target = "11FFaa", it will return true }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i source} \cell }{Source {\b Hex} string\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i target} \cell }{Target comparing {\b Hex} string\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v Compare\:CSLibrary::Tools::HexEncoding}
{\xe \v CSLibrary::Tools::HexEncoding\:Compare}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static bool CSLibrary.Tools.HexEncoding.Compare (Byte []  {\i source}, Byte []  {\i target}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAEPW}
{\bkmkend AAAAAAAEPW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compare {\b Hex} }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i source} \cell }{Source {\b Hex}\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i target} \cell }{Target comparing {\b Hex}\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v Compare\:CSLibrary::Tools::HexEncoding}
{\xe \v CSLibrary::Tools::HexEncoding\:Compare}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static bool CSLibrary.Tools.HexEncoding.Compare (string  {\i source}, string  {\i target}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAEPV}
{\bkmkend AAAAAAAEPV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compare {\b Hex} String, ie, source = "11ffaa", target = "11FFaa", it will return true }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i source} \cell }{Source {\b Hex} string\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i target} \cell }{Target comparing {\b Hex} string\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v Compare\:CSLibrary::Tools::HexEncoding}
{\xe \v CSLibrary::Tools::HexEncoding\:Compare}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static bool CSLibrary.Tools.HexEncoding.Compare (Byte []  {\i source}, Byte []  {\i target}, int  {\i size}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAEPX}
{\bkmkend AAAAAAAEPX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compare {\b Hex} }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i source} \cell }{Source {\b Hex}\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i target} \cell }{Target comparing {\b Hex}\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i size} \cell }{Size to compare\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v Compare\:CSLibrary::Tools::HexEncoding}
{\xe \v CSLibrary::Tools::HexEncoding\:Compare}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static bool CSLibrary.Tools.HexEncoding.Compare (Byte []  {\i source}, Byte []  {\i target}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAEPW}
{\bkmkend AAAAAAAEPW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compare {\b Hex} }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i source} \cell }{Source {\b Hex}\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i target} \cell }{Target comparing {\b Hex}\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v Compare\:CSLibrary::Tools::HexEncoding}
{\xe \v CSLibrary::Tools::HexEncoding\:Compare}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static bool CSLibrary.Tools.HexEncoding.Compare (Byte []  {\i source}, Byte []  {\i target}, int  {\i size}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAEPX}
{\bkmkend AAAAAAAEPX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compare {\b Hex} }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i source} \cell }{Source {\b Hex}\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i target} \cell }{Target comparing {\b Hex}\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i size} \cell }{Size to compare\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v Compare< T >\:CSLibrary::Tools::HexEncoding}
{\xe \v CSLibrary::Tools::HexEncoding\:Compare< T >}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static bool {\b CSLibrary.Tools.HexEncoding.Compare}< T > (T []  {\i a}, T []  {\i b}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAEPY}
{\bkmkend AAAAAAAEPY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Generic compare two array }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Template Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i T} \cell }{Type of array\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i a} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i b} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v Copy\:CSLibrary::Tools::HexEncoding}
{\xe \v CSLibrary::Tools::HexEncoding\:Copy}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void CSLibrary.Tools.HexEncoding.Copy (Byte []  {\i src}, Byte []  {\i dst}, int  {\i count}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAEPZ}
{\bkmkend AAAAAAAEPZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Copy One array to another array }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i src} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i dst} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i count} \cell }{\cell }
{\row }
}
}}
{\xe \v Copy\:CSLibrary::Tools::HexEncoding}
{\xe \v CSLibrary::Tools::HexEncoding\:Copy}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void CSLibrary.Tools.HexEncoding.Copy (Byte []  {\i src}, Byte []  {\i dst}, int  {\i dstIndex}, int  {\i count}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAEQA}
{\bkmkend AAAAAAAEQA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Copy One array to another array }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i src} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i dst} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i dstIndex} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i count} \cell }{\cell }
{\row }
}
}}
{\xe \v Copy\:CSLibrary::Tools::HexEncoding}
{\xe \v CSLibrary::Tools::HexEncoding\:Copy}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void CSLibrary.Tools.HexEncoding.Copy (Byte []  {\i src}, int  {\i srcIndex}, Byte []  {\i dst}, int  {\i dstIndex}, int  {\i count}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAEQB}
{\bkmkend AAAAAAAEQB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Copy One array to another array }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i src} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i srcIndex} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i dst} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i dstIndex} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i count} \cell }{\cell }
{\row }
}
}}
{\xe \v GenPostMatchMask\:CSLibrary::Tools::HexEncoding}
{\xe \v CSLibrary::Tools::HexEncoding\:GenPostMatchMask}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static byte [] CSLibrary.Tools.HexEncoding.GenPostMatchMask (string  {\i hexString}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAEQC}
{\bkmkend AAAAAAAEQC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a byte array from the hexadecimal string. Each two characters are combined to create one byte. First two hexadecimal characters become first byte in returned array. Non-hexadecimal characters are ignored. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i hexString} \cell }{string to convert to byte array\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid byte array, in the same left-to-right order as the hexString\par
}}}
{\xe \v GenPostMatchMask\:CSLibrary::Tools::HexEncoding}
{\xe \v CSLibrary::Tools::HexEncoding\:GenPostMatchMask}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static byte [] CSLibrary.Tools.HexEncoding.GenPostMatchMask (string  {\i hexString}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAEQC}
{\bkmkend AAAAAAAEQC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a byte array from the hexadecimal string. Each two characters are combined to create one byte. First two hexadecimal characters become first byte in returned array. Non-hexadecimal characters are ignored. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i hexString} \cell }{string to convert to byte array\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid byte array, in the same left-to-right order as the hexString\par
}}}
{\xe \v GenSelectMask\:CSLibrary::Tools::HexEncoding}
{\xe \v CSLibrary::Tools::HexEncoding\:GenSelectMask}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static byte [] CSLibrary.Tools.HexEncoding.GenSelectMask (string  {\i hexString}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAEQD}
{\bkmkend AAAAAAAEQD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a byte array from the hexadecimal string. Each two characters are combined to create one byte. First two hexadecimal characters become first byte in returned array. Non-hexadecimal characters are ignored. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i hexString} \cell }{string to convert to byte array\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid byte array, in the same left-to-right order as the hexString\par
}}}
{\xe \v GenSelectMask\:CSLibrary::Tools::HexEncoding}
{\xe \v CSLibrary::Tools::HexEncoding\:GenSelectMask}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static byte [] CSLibrary.Tools.HexEncoding.GenSelectMask (string  {\i hexString}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAEQD}
{\bkmkend AAAAAAAEQD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a byte array from the hexadecimal string. Each two characters are combined to create one byte. First two hexadecimal characters become first byte in returned array. Non-hexadecimal characters are ignored. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i hexString} \cell }{string to convert to byte array\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid byte array, in the same left-to-right order as the hexString\par
}}}
{\xe \v GetBitCount\:CSLibrary::Tools::HexEncoding}
{\xe \v CSLibrary::Tools::HexEncoding\:GetBitCount}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static UInt32 CSLibrary.Tools.HexEncoding.GetBitCount (string  {\i hexString}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAEQE}
{\bkmkend AAAAAAAEQE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get bit length from string }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i hexString} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v GetBitCount\:CSLibrary::Tools::HexEncoding}
{\xe \v CSLibrary::Tools::HexEncoding\:GetBitCount}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static UInt32 CSLibrary.Tools.HexEncoding.GetBitCount (Byte []  {\i bytes}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAEQF}
{\bkmkend AAAAAAAEQF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get bit length from string }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i bytes} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v GetByteCount\:CSLibrary::Tools::HexEncoding}
{\xe \v CSLibrary::Tools::HexEncoding\:GetByteCount}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int CSLibrary.Tools.HexEncoding.GetByteCount (string  {\i hexString}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAEQG}
{\bkmkend AAAAAAAEQG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
GetByteCount }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i hexString} \cell }{Input {\b Hex} String\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Number of Byte Count\par
}}}
{\xe \v GetWordCount\:CSLibrary::Tools::HexEncoding}
{\xe \v CSLibrary::Tools::HexEncoding\:GetWordCount}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static ushort CSLibrary.Tools.HexEncoding.GetWordCount (string  {\i hexString}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAEQH}
{\bkmkend AAAAAAAEQH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get Word length from string }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i hexString} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v HexToByte\:CSLibrary::Tools::HexEncoding}
{\xe \v CSLibrary::Tools::HexEncoding\:HexToByte}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static byte CSLibrary.Tools.HexEncoding.HexToByte (string  {\i hex}){\f2 [static]}, {\f2 [private]}}}
\par
{\bkmkstart AAAAAAAEQI}
{\bkmkend AAAAAAAEQI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Converts 1 or 2 character string into equivalant byte value }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i hex} \cell }{1 or 2 character string\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid byte\par
}}}
{\xe \v HexToByte\:CSLibrary::Tools::HexEncoding}
{\xe \v CSLibrary::Tools::HexEncoding\:HexToByte}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static byte CSLibrary.Tools.HexEncoding.HexToByte (string  {\i hex}){\f2 [static]}, {\f2 [private]}}}
\par
{\bkmkstart AAAAAAAEQI}
{\bkmkend AAAAAAAEQI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Converts 1 or 2 character string into equivalant byte value }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i hex} \cell }{1 or 2 character string\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid byte\par
}}}
{\xe \v HexToUshort\:CSLibrary::Tools::HexEncoding}
{\xe \v CSLibrary::Tools::HexEncoding\:HexToUshort}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static ushort CSLibrary.Tools.HexEncoding.HexToUshort (string  {\i hex}){\f2 [static]}, {\f2 [private]}}}
\par
{\bkmkstart AAAAAAAEQJ}
{\bkmkend AAAAAAAEQJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v HexToUshort\:CSLibrary::Tools::HexEncoding}
{\xe \v CSLibrary::Tools::HexEncoding\:HexToUshort}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static ushort CSLibrary.Tools.HexEncoding.HexToUshort (string  {\i hex}){\f2 [static]}, {\f2 [private]}}}
\par
{\bkmkstart AAAAAAAEQJ}
{\bkmkend AAAAAAAEQJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v HostToNetworkOrder\:CSLibrary::Tools::HexEncoding}
{\xe \v CSLibrary::Tools::HexEncoding\:HostToNetworkOrder}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static long CSLibrary.Tools.HexEncoding.HostToNetworkOrder (long  {\i host}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAEQK}
{\bkmkend AAAAAAAEQK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v HostToNetworkOrder\:CSLibrary::Tools::HexEncoding}
{\xe \v CSLibrary::Tools::HexEncoding\:HostToNetworkOrder}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int CSLibrary.Tools.HexEncoding.HostToNetworkOrder (int  {\i host}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAEQL}
{\bkmkend AAAAAAAEQL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v HostToNetworkOrder\:CSLibrary::Tools::HexEncoding}
{\xe \v CSLibrary::Tools::HexEncoding\:HostToNetworkOrder}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static short CSLibrary.Tools.HexEncoding.HostToNetworkOrder (short  {\i host}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAEQM}
{\bkmkend AAAAAAAEQM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v IsHexDigit\:CSLibrary::Tools::HexEncoding}
{\xe \v CSLibrary::Tools::HexEncoding\:IsHexDigit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static bool CSLibrary.Tools.HexEncoding.IsHexDigit (char  {\i c}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAEQN}
{\bkmkend AAAAAAAEQN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v IsHexDigit\:CSLibrary::Tools::HexEncoding}
{\xe \v CSLibrary::Tools::HexEncoding\:IsHexDigit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static bool CSLibrary.Tools.HexEncoding.IsHexDigit (char  {\i c}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAEQN}
{\bkmkend AAAAAAAEQN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v IsHexFormat\:CSLibrary::Tools::HexEncoding}
{\xe \v CSLibrary::Tools::HexEncoding\:IsHexFormat}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static bool CSLibrary.Tools.HexEncoding.IsHexFormat (string  {\i hexString}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAEQO}
{\bkmkend AAAAAAAEQO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Determines if given string is in proper hexadecimal string format }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i hexString} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v IsHexFormat\:CSLibrary::Tools::HexEncoding}
{\xe \v CSLibrary::Tools::HexEncoding\:IsHexFormat}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static bool CSLibrary.Tools.HexEncoding.IsHexFormat (string  {\i hexString}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAEQO}
{\bkmkend AAAAAAAEQO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Determines if given string is in proper hexadecimal string format }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i hexString} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v NetworkToHostOrder\:CSLibrary::Tools::HexEncoding}
{\xe \v CSLibrary::Tools::HexEncoding\:NetworkToHostOrder}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static long CSLibrary.Tools.HexEncoding.NetworkToHostOrder (long  {\i network}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAEQP}
{\bkmkend AAAAAAAEQP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v NetworkToHostOrder\:CSLibrary::Tools::HexEncoding}
{\xe \v CSLibrary::Tools::HexEncoding\:NetworkToHostOrder}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int CSLibrary.Tools.HexEncoding.NetworkToHostOrder (int  {\i network}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAEQQ}
{\bkmkend AAAAAAAEQQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v NetworkToHostOrder\:CSLibrary::Tools::HexEncoding}
{\xe \v CSLibrary::Tools::HexEncoding\:NetworkToHostOrder}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static short CSLibrary.Tools.HexEncoding.NetworkToHostOrder (short  {\i network}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAEQR}
{\bkmkend AAAAAAAEQR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ToBinary\:CSLibrary::Tools::HexEncoding}
{\xe \v CSLibrary::Tools::HexEncoding\:ToBinary}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string CSLibrary.Tools.HexEncoding.ToBinary (byte []  {\i source}, uint  {\i offset}, uint  {\i length})}}
\par
{\bkmkstart AAAAAAAEQS}
{\bkmkend AAAAAAAEQS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert to binary format }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i source} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i offset} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i length} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v ToByte\:CSLibrary::Tools::HexEncoding}
{\xe \v CSLibrary::Tools::HexEncoding\:ToByte}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static byte CSLibrary.Tools.HexEncoding.ToByte (string  {\i hexString}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAEQT}
{\bkmkend AAAAAAAEQT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
return a byte from string }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i hexString} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v ToByte\:CSLibrary::Tools::HexEncoding}
{\xe \v CSLibrary::Tools::HexEncoding\:ToByte}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static byte CSLibrary.Tools.HexEncoding.ToByte (string  {\i hexString}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAEQT}
{\bkmkend AAAAAAAEQT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
return a byte from string }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i hexString} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v ToBytes\:CSLibrary::Tools::HexEncoding}
{\xe \v CSLibrary::Tools::HexEncoding\:ToBytes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static byte [] CSLibrary.Tools.HexEncoding.ToBytes (string  {\i hexString}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAEQU}
{\bkmkend AAAAAAAEQU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a byte array from the hexadecimal string. Each two characters are combined to create one byte. First two hexadecimal characters become first byte in returned array. Non-hexadecimal characters are ignored. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i hexString} \cell }{string to convert to byte array\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid byte array, in the same left-to-right order as the hexString\par
}}}
{\xe \v ToBytes\:CSLibrary::Tools::HexEncoding}
{\xe \v CSLibrary::Tools::HexEncoding\:ToBytes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static byte [] CSLibrary.Tools.HexEncoding.ToBytes (string  {\i hexString}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAEQU}
{\bkmkend AAAAAAAEQU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a byte array from the hexadecimal string. Each two characters are combined to create one byte. First two hexadecimal characters become first byte in returned array. Non-hexadecimal characters are ignored. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i hexString} \cell }{string to convert to byte array\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid byte array, in the same left-to-right order as the hexString\par
}}}
{\xe \v ToBytes\:CSLibrary::Tools::HexEncoding}
{\xe \v CSLibrary::Tools::HexEncoding\:ToBytes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static byte [] CSLibrary.Tools.HexEncoding.ToBytes (ushort []  {\i data}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAEQV}
{\bkmkend AAAAAAAEQV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convent ushort array to byte array }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i data} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v ToBytes\:CSLibrary::Tools::HexEncoding}
{\xe \v CSLibrary::Tools::HexEncoding\:ToBytes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static byte [] CSLibrary.Tools.HexEncoding.ToBytes (ushort []  {\i data}, int  {\i count}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAEQW}
{\bkmkend AAAAAAAEQW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convent ushort array to byte array }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i data} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i count} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v ToBytes\:CSLibrary::Tools::HexEncoding}
{\xe \v CSLibrary::Tools::HexEncoding\:ToBytes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static byte [] CSLibrary.Tools.HexEncoding.ToBytes (ushort []  {\i data}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAEQV}
{\bkmkend AAAAAAAEQV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convent ushort array to byte array }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i data} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v ToBytes\:CSLibrary::Tools::HexEncoding}
{\xe \v CSLibrary::Tools::HexEncoding\:ToBytes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static byte [] CSLibrary.Tools.HexEncoding.ToBytes (ushort []  {\i data}, int  {\i count}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAEQW}
{\bkmkend AAAAAAAEQW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convent ushort array to byte array }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i data} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i count} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v ToInt16\:CSLibrary::Tools::HexEncoding}
{\xe \v CSLibrary::Tools::HexEncoding\:ToInt16}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static Int16 CSLibrary.Tools.HexEncoding.ToInt16 (byte []  {\i buffer}, int  {\i offset}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAEQX}
{\bkmkend AAAAAAAEQX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert 2 Bytes to one short }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i buffer} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i offset} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v ToInt16\:CSLibrary::Tools::HexEncoding}
{\xe \v CSLibrary::Tools::HexEncoding\:ToInt16}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static Int16 CSLibrary.Tools.HexEncoding.ToInt16 (byte []  {\i buffer}, int  {\i offset}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAEQX}
{\bkmkend AAAAAAAEQX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert 2 Bytes to one short }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i buffer} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i offset} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v ToShorts\:CSLibrary::Tools::HexEncoding}
{\xe \v CSLibrary::Tools::HexEncoding\:ToShorts}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static short [] CSLibrary.Tools.HexEncoding.ToShorts (byte []  {\i Input}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAEQY}
{\bkmkend AAAAAAAEQY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
return short array from byte array }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i Input} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v ToShorts\:CSLibrary::Tools::HexEncoding}
{\xe \v CSLibrary::Tools::HexEncoding\:ToShorts}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static short [] CSLibrary.Tools.HexEncoding.ToShorts (byte []  {\i Input}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAEQY}
{\bkmkend AAAAAAAEQY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
return short array from byte array }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i Input} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v ToString\:CSLibrary::Tools::HexEncoding}
{\xe \v CSLibrary::Tools::HexEncoding\:ToString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static string CSLibrary.Tools.HexEncoding.ToString (byte []  {\i bytes}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAEQZ}
{\bkmkend AAAAAAAEQZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Byte to String Conversion }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i bytes} \cell }{Input Byte Array\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Return a String\par
}}}
{\xe \v ToString\:CSLibrary::Tools::HexEncoding}
{\xe \v CSLibrary::Tools::HexEncoding\:ToString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static string CSLibrary.Tools.HexEncoding.ToString (byte []  {\i bytes}, int  {\i length}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAERA}
{\bkmkend AAAAAAAERA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Byte to String Conversion }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i bytes} \cell }{Input Byte Array\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i length} \cell }{Input Byte length\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Return a String\par
}}}
{\xe \v ToString\:CSLibrary::Tools::HexEncoding}
{\xe \v CSLibrary::Tools::HexEncoding\:ToString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static string CSLibrary.Tools.HexEncoding.ToString (byte []  {\i bytes}, uint  {\i offset}, uint  {\i count}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAERB}
{\bkmkend AAAAAAAERB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Byte to String Conversion }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i bytes} \cell }{Input Byte Array\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i offset} \cell }{Start offset\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i count} \cell }{Number of Count to converse\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Return a String\par
}}}
{\xe \v ToString\:CSLibrary::Tools::HexEncoding}
{\xe \v CSLibrary::Tools::HexEncoding\:ToString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static string CSLibrary.Tools.HexEncoding.ToString (byte []  {\i bytes}, int  {\i offset} = {\f2 0}, int  {\i count} = {\f2 -1}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAERC}
{\bkmkend AAAAAAAERC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Byte to String Conversion }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i bytes} \cell }{Input Byte Array\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i offset} \cell }{Start offset\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i count} \cell }{Number of Count to converse\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Return a String\par
}}}
{\xe \v ToString\:CSLibrary::Tools::HexEncoding}
{\xe \v CSLibrary::Tools::HexEncoding\:ToString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static string CSLibrary.Tools.HexEncoding.ToString (ushort []  {\i data}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAERD}
{\bkmkend AAAAAAAERD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ushort to String Conversion }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i data} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v ToString\:CSLibrary::Tools::HexEncoding}
{\xe \v CSLibrary::Tools::HexEncoding\:ToString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static string CSLibrary.Tools.HexEncoding.ToString (ushort []  {\i data}, int  {\i offset} = {\f2 0}, int  {\i count} = {\f2 -1}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAERE}
{\bkmkend AAAAAAAERE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ushort to String Conversion }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i data} \cell }{source data\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i offset} \cell }{Start offset\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i count} \cell }{Number of Count to converse\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v ToString\:CSLibrary::Tools::HexEncoding}
{\xe \v CSLibrary::Tools::HexEncoding\:ToString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static string CSLibrary.Tools.HexEncoding.ToString (ushort []  {\i data}, uint  {\i offset}, uint  {\i count}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAERF}
{\bkmkend AAAAAAAERF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ushort to String Conversion }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i data} \cell }{source data\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i offset} \cell }{Start offset\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i count} \cell }{Number of Count to converse\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v ToUInt16\:CSLibrary::Tools::HexEncoding}
{\xe \v CSLibrary::Tools::HexEncoding\:ToUInt16}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static UInt16 CSLibrary.Tools.HexEncoding.ToUInt16 (byte []  {\i buffer}, int  {\i offset}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAERG}
{\bkmkend AAAAAAAERG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert 2 Bytes to one short }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i buffer} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i offset} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v ToUInt16\:CSLibrary::Tools::HexEncoding}
{\xe \v CSLibrary::Tools::HexEncoding\:ToUInt16}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static UInt16 CSLibrary.Tools.HexEncoding.ToUInt16 (byte []  {\i buffer}, int  {\i offset}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAERG}
{\bkmkend AAAAAAAERG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert 2 Bytes to one short }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i buffer} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i offset} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v ToUInt32\:CSLibrary::Tools::HexEncoding}
{\xe \v CSLibrary::Tools::HexEncoding\:ToUInt32}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static UInt32 CSLibrary.Tools.HexEncoding.ToUInt32 (byte []  {\i buffer}, int  {\i offset}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAERH}
{\bkmkend AAAAAAAERH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert 4 Bytes to one uint32 }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i buffer} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i offset} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v ToUInt32\:CSLibrary::Tools::HexEncoding}
{\xe \v CSLibrary::Tools::HexEncoding\:ToUInt32}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static UInt32 CSLibrary.Tools.HexEncoding.ToUInt32 (string  {\i hexString}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAERI}
{\bkmkend AAAAAAAERI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert string to one uint32 }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i hexString} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v ToUInt32\:CSLibrary::Tools::HexEncoding}
{\xe \v CSLibrary::Tools::HexEncoding\:ToUInt32}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static UInt32 CSLibrary.Tools.HexEncoding.ToUInt32 (string  {\i hexString}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAERI}
{\bkmkend AAAAAAAERI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert string to one uint32 }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i hexString} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v ToUInt64\:CSLibrary::Tools::HexEncoding}
{\xe \v CSLibrary::Tools::HexEncoding\:ToUInt64}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static UInt64 CSLibrary.Tools.HexEncoding.ToUInt64 (byte []  {\i buffer}, int  {\i offset}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAERJ}
{\bkmkend AAAAAAAERJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert 4 bytes to long }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i buffer} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i offset} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v ToUshort\:CSLibrary::Tools::HexEncoding}
{\xe \v CSLibrary::Tools::HexEncoding\:ToUshort}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static ushort CSLibrary.Tools.HexEncoding.ToUshort (string  {\i str}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAERK}
{\bkmkend AAAAAAAERK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
return ushort from byte string }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i str} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v ToUshort\:CSLibrary::Tools::HexEncoding}
{\xe \v CSLibrary::Tools::HexEncoding\:ToUshort}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static ushort CSLibrary.Tools.HexEncoding.ToUshort (string  {\i str}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAERK}
{\bkmkend AAAAAAAERK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
return ushort from byte string }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i str} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v ToUshorts\:CSLibrary::Tools::HexEncoding}
{\xe \v CSLibrary::Tools::HexEncoding\:ToUshorts}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static ushort [] CSLibrary.Tools.HexEncoding.ToUshorts (byte []  {\i Input}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAERL}
{\bkmkend AAAAAAAERL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
return ushort array from byte array }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i Input} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v ToUshorts\:CSLibrary::Tools::HexEncoding}
{\xe \v CSLibrary::Tools::HexEncoding\:ToUshorts}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static ushort [] CSLibrary.Tools.HexEncoding.ToUshorts (byte []  {\i Input}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAERL}
{\bkmkend AAAAAAAERL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
return ushort array from byte array }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i Input} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v ToUshorts\:CSLibrary::Tools::HexEncoding}
{\xe \v CSLibrary::Tools::HexEncoding\:ToUshorts}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static ushort [] CSLibrary.Tools.HexEncoding.ToUshorts (string  {\i Input}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAERM}
{\bkmkend AAAAAAAERM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
return ushort array from string input }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i Input} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v ToUshorts\:CSLibrary::Tools::HexEncoding}
{\xe \v CSLibrary::Tools::HexEncoding\:ToUshorts}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static ushort [] CSLibrary.Tools.HexEncoding.ToUshorts (string  {\i Input}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAERM}
{\bkmkend AAAAAAAERM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
return ushort array from string input }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i Input} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
CSLibrary/Tools/{\b ClassHex.cs}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
CSLibrary/Tools/{\b HexEncoding.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary.Text.HexEncoding Class Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary.Text.HexEncoding}
{\xe \v CSLibrary.Text.HexEncoding}
{\bkmkstart AAAAAAAENA}
{\bkmkend AAAAAAAENA}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Summary description for {\b HexEncoding}. }}\par
Inheritance diagram for CSLibrary.Text.HexEncoding:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_c_s_library_1_1_text_1_1_hex_encoding.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b ToBinary} (byte[] source, uint offset, uint length)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert to binary format }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static byte [] {\b ToBytes} (string hexString)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a byte array from the hexadecimal string. Each two characters are combined to create one byte. First two hexadecimal characters become first byte in returned array. Non-hexadecimal characters are ignored. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static byte [] {\b GenSelectMask} (string hexString)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a byte array from the hexadecimal string. Each two characters are combined to create one byte. First two hexadecimal characters become first byte in returned array. Non-hexadecimal characters are ignored. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static byte [] {\b GenPostMatchMask} (string hexString)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a byte array from the hexadecimal string. Each two characters are combined to create one byte. First two hexadecimal characters become first byte in returned array. Non-hexadecimal characters are ignored. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static byte [] {\b ToBytes} (ushort[] data)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convent ushort array to byte array }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static byte [] {\b ToBytes} (ushort[] data, int count)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convent ushort array to byte array }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static byte {\b ToByte} (string hexString)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
return a byte from string }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static ushort {\b ToUshort} (string str)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
return ushort from byte string }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static ushort [] {\b ToUshorts} (byte[] Input)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
return ushort array from byte array }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static short [] {\b ToShorts} (byte[] Input)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
return short array from byte array }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static ushort [] {\b ToUshorts} (string Input)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
return ushort array from string input }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static string {\b ToString} (byte[] bytes)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Byte to String Conversion }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static string {\b ToString} (byte[] bytes, int length)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Byte to String Conversion }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static string {\b ToString} (byte[] bytes, uint offset, uint count)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Byte to String Conversion }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static string {\b ToString} (ushort[] data)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ushort to String Conversion }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static string {\b ToString} (ushort[] data, uint offset, uint count)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ushort to String Conversion }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static bool {\b IsHexFormat} (string hexString)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Determines if given string is in proper hexadecimal string format }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static bool {\b Compare} (string source, string target)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compare {\b Hex} String, ie, source = "11ffaa", target = "11FFaa", it will return true }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static bool {\b Compare} (Byte[] source, Byte[] target)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compare {\b Hex} }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static bool {\b Compare} (Byte[] source, Byte[] target, int size)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compare {\b Hex} }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static Int16 {\b ToInt16} (byte[] buffer, int offset)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert 2 Bytes to one short }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static UInt16 {\b ToUInt16} (byte[] buffer, int offset)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert 2 Bytes to one short }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static UInt32 {\b ToUInt32} (byte[] buffer, int offset)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert 4 Bytes to one uint32 }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static UInt32 {\b ToUInt32} (string hexString)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert string to one uint32 }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static UInt64 {\b ToUInt64} (byte[] buffer, int offset)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert 4 bytes to long }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b Copy} ([In] Byte[] src, [In, Out] Byte[] dst, [In] int count)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Copy One array to another array }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b Copy} ([In] Byte[] src, [In, Out] Byte[] dst, [In] int dstIndex, [In] int count)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Copy One array to another array }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b Copy} ([In] Byte[] src, [In] int srcIndex, [In, Out] Byte[] dst, [In] int dstIndex, [In] int count)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Copy One array to another array }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static bool {\b Compare< T >} (T[] a, T[] b)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Generic compare two array }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static UInt32 {\b GetBitCount} (string hexString)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get bit length from string }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static UInt32 {\b GetBitCount} (Byte[] bytes)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get bit length from string }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static ushort {\b GetWordCount} (string hexString)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get Word length from string }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b GetByteCount} (string hexString)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
GetByteCount }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Private Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static byte {\b HexToByte} (string hex)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Converts 1 or 2 character string into equivalant byte value }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static ushort {\b HexToUshort} (string hex)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Summary description for {\b HexEncoding}. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Compare\:CSLibrary::Text::HexEncoding}
{\xe \v CSLibrary::Text::HexEncoding\:Compare}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static bool CSLibrary.Text.HexEncoding.Compare (string  {\i source}, string  {\i target}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAENB}
{\bkmkend AAAAAAAENB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compare {\b Hex} String, ie, source = "11ffaa", target = "11FFaa", it will return true }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i source} \cell }{Source {\b Hex} string\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i target} \cell }{Target comparing {\b Hex} string\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v Compare\:CSLibrary::Text::HexEncoding}
{\xe \v CSLibrary::Text::HexEncoding\:Compare}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static bool CSLibrary.Text.HexEncoding.Compare (Byte []  {\i source}, Byte []  {\i target}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAENC}
{\bkmkend AAAAAAAENC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compare {\b Hex} }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i source} \cell }{Source {\b Hex}\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i target} \cell }{Target comparing {\b Hex}\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v Compare\:CSLibrary::Text::HexEncoding}
{\xe \v CSLibrary::Text::HexEncoding\:Compare}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static bool CSLibrary.Text.HexEncoding.Compare (Byte []  {\i source}, Byte []  {\i target}, int  {\i size}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAEND}
{\bkmkend AAAAAAAEND}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compare {\b Hex} }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i source} \cell }{Source {\b Hex}\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i target} \cell }{Target comparing {\b Hex}\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i size} \cell }{Size to compare\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v Compare< T >\:CSLibrary::Text::HexEncoding}
{\xe \v CSLibrary::Text::HexEncoding\:Compare< T >}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static bool {\b CSLibrary.Text.HexEncoding.Compare}< T > (T []  {\i a}, T []  {\i b}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAENE}
{\bkmkend AAAAAAAENE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Generic compare two array }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Template Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i T} \cell }{Type of array\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i a} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i b} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v Copy\:CSLibrary::Text::HexEncoding}
{\xe \v CSLibrary::Text::HexEncoding\:Copy}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void CSLibrary.Text.HexEncoding.Copy ([In] Byte []  {\i src}, [In, Out] Byte []  {\i dst}, [In] int  {\i count}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAENF}
{\bkmkend AAAAAAAENF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Copy One array to another array }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i src} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i dst} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i count} \cell }{\cell }
{\row }
}
}}
{\xe \v Copy\:CSLibrary::Text::HexEncoding}
{\xe \v CSLibrary::Text::HexEncoding\:Copy}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void CSLibrary.Text.HexEncoding.Copy ([In] Byte []  {\i src}, [In, Out] Byte []  {\i dst}, [In] int  {\i dstIndex}, [In] int  {\i count}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAENG}
{\bkmkend AAAAAAAENG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Copy One array to another array }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i src} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i dst} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i dstIndex} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i count} \cell }{\cell }
{\row }
}
}}
{\xe \v Copy\:CSLibrary::Text::HexEncoding}
{\xe \v CSLibrary::Text::HexEncoding\:Copy}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void CSLibrary.Text.HexEncoding.Copy ([In] Byte []  {\i src}, [In] int  {\i srcIndex}, [In, Out] Byte []  {\i dst}, [In] int  {\i dstIndex}, [In] int  {\i count}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAENH}
{\bkmkend AAAAAAAENH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Copy One array to another array }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i src} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i srcIndex} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i dst} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i dstIndex} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i count} \cell }{\cell }
{\row }
}
}}
{\xe \v GenPostMatchMask\:CSLibrary::Text::HexEncoding}
{\xe \v CSLibrary::Text::HexEncoding\:GenPostMatchMask}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static byte [] CSLibrary.Text.HexEncoding.GenPostMatchMask (string  {\i hexString}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAENI}
{\bkmkend AAAAAAAENI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a byte array from the hexadecimal string. Each two characters are combined to create one byte. First two hexadecimal characters become first byte in returned array. Non-hexadecimal characters are ignored. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i hexString} \cell }{string to convert to byte array\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid byte array, in the same left-to-right order as the hexString\par
}}}
{\xe \v GenSelectMask\:CSLibrary::Text::HexEncoding}
{\xe \v CSLibrary::Text::HexEncoding\:GenSelectMask}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static byte [] CSLibrary.Text.HexEncoding.GenSelectMask (string  {\i hexString}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAENJ}
{\bkmkend AAAAAAAENJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a byte array from the hexadecimal string. Each two characters are combined to create one byte. First two hexadecimal characters become first byte in returned array. Non-hexadecimal characters are ignored. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i hexString} \cell }{string to convert to byte array\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid byte array, in the same left-to-right order as the hexString\par
}}}
{\xe \v GetBitCount\:CSLibrary::Text::HexEncoding}
{\xe \v CSLibrary::Text::HexEncoding\:GetBitCount}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static UInt32 CSLibrary.Text.HexEncoding.GetBitCount (string  {\i hexString}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAENK}
{\bkmkend AAAAAAAENK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get bit length from string }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i hexString} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v GetBitCount\:CSLibrary::Text::HexEncoding}
{\xe \v CSLibrary::Text::HexEncoding\:GetBitCount}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static UInt32 CSLibrary.Text.HexEncoding.GetBitCount (Byte []  {\i bytes}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAENL}
{\bkmkend AAAAAAAENL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get bit length from string }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i bytes} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v GetByteCount\:CSLibrary::Text::HexEncoding}
{\xe \v CSLibrary::Text::HexEncoding\:GetByteCount}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int CSLibrary.Text.HexEncoding.GetByteCount (string  {\i hexString}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAENM}
{\bkmkend AAAAAAAENM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
GetByteCount }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i hexString} \cell }{Input {\b Hex} String\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Number of Byte Count\par
}}}
{\xe \v GetWordCount\:CSLibrary::Text::HexEncoding}
{\xe \v CSLibrary::Text::HexEncoding\:GetWordCount}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static ushort CSLibrary.Text.HexEncoding.GetWordCount (string  {\i hexString}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAENN}
{\bkmkend AAAAAAAENN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get Word length from string }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i hexString} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v HexToByte\:CSLibrary::Text::HexEncoding}
{\xe \v CSLibrary::Text::HexEncoding\:HexToByte}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static byte CSLibrary.Text.HexEncoding.HexToByte (string  {\i hex}){\f2 [static]}, {\f2 [private]}}}
\par
{\bkmkstart AAAAAAAENO}
{\bkmkend AAAAAAAENO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Converts 1 or 2 character string into equivalant byte value }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i hex} \cell }{1 or 2 character string\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid byte\par
}}}
{\xe \v HexToUshort\:CSLibrary::Text::HexEncoding}
{\xe \v CSLibrary::Text::HexEncoding\:HexToUshort}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static ushort CSLibrary.Text.HexEncoding.HexToUshort (string  {\i hex}){\f2 [static]}, {\f2 [private]}}}
\par
{\bkmkstart AAAAAAAENP}
{\bkmkend AAAAAAAENP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v IsHexFormat\:CSLibrary::Text::HexEncoding}
{\xe \v CSLibrary::Text::HexEncoding\:IsHexFormat}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static bool CSLibrary.Text.HexEncoding.IsHexFormat (string  {\i hexString}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAENQ}
{\bkmkend AAAAAAAENQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Determines if given string is in proper hexadecimal string format }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i hexString} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v ToBinary\:CSLibrary::Text::HexEncoding}
{\xe \v CSLibrary::Text::HexEncoding\:ToBinary}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string CSLibrary.Text.HexEncoding.ToBinary (byte []  {\i source}, uint  {\i offset}, uint  {\i length})}}
\par
{\bkmkstart AAAAAAAENR}
{\bkmkend AAAAAAAENR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert to binary format }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i source} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i offset} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i length} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v ToByte\:CSLibrary::Text::HexEncoding}
{\xe \v CSLibrary::Text::HexEncoding\:ToByte}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static byte CSLibrary.Text.HexEncoding.ToByte (string  {\i hexString}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAENS}
{\bkmkend AAAAAAAENS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
return a byte from string }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i hexString} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v ToBytes\:CSLibrary::Text::HexEncoding}
{\xe \v CSLibrary::Text::HexEncoding\:ToBytes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static byte [] CSLibrary.Text.HexEncoding.ToBytes (string  {\i hexString}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAENT}
{\bkmkend AAAAAAAENT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a byte array from the hexadecimal string. Each two characters are combined to create one byte. First two hexadecimal characters become first byte in returned array. Non-hexadecimal characters are ignored. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i hexString} \cell }{string to convert to byte array\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid byte array, in the same left-to-right order as the hexString\par
}}}
{\xe \v ToBytes\:CSLibrary::Text::HexEncoding}
{\xe \v CSLibrary::Text::HexEncoding\:ToBytes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static byte [] CSLibrary.Text.HexEncoding.ToBytes (ushort []  {\i data}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAENU}
{\bkmkend AAAAAAAENU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convent ushort array to byte array }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i data} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v ToBytes\:CSLibrary::Text::HexEncoding}
{\xe \v CSLibrary::Text::HexEncoding\:ToBytes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static byte [] CSLibrary.Text.HexEncoding.ToBytes (ushort []  {\i data}, int  {\i count}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAENV}
{\bkmkend AAAAAAAENV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convent ushort array to byte array }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i data} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i count} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v ToInt16\:CSLibrary::Text::HexEncoding}
{\xe \v CSLibrary::Text::HexEncoding\:ToInt16}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static Int16 CSLibrary.Text.HexEncoding.ToInt16 (byte []  {\i buffer}, int  {\i offset}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAENW}
{\bkmkend AAAAAAAENW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert 2 Bytes to one short }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i buffer} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i offset} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v ToShorts\:CSLibrary::Text::HexEncoding}
{\xe \v CSLibrary::Text::HexEncoding\:ToShorts}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static short [] CSLibrary.Text.HexEncoding.ToShorts (byte []  {\i Input}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAENX}
{\bkmkend AAAAAAAENX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
return short array from byte array }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i Input} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v ToString\:CSLibrary::Text::HexEncoding}
{\xe \v CSLibrary::Text::HexEncoding\:ToString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static string CSLibrary.Text.HexEncoding.ToString (byte []  {\i bytes}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAENY}
{\bkmkend AAAAAAAENY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Byte to String Conversion }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i bytes} \cell }{Input Byte Array\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Return a String\par
}}}
{\xe \v ToString\:CSLibrary::Text::HexEncoding}
{\xe \v CSLibrary::Text::HexEncoding\:ToString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static string CSLibrary.Text.HexEncoding.ToString (byte []  {\i bytes}, int  {\i length}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAENZ}
{\bkmkend AAAAAAAENZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Byte to String Conversion }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i bytes} \cell }{Input Byte Array\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i length} \cell }{Input Byte length\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Return a String\par
}}}
{\xe \v ToString\:CSLibrary::Text::HexEncoding}
{\xe \v CSLibrary::Text::HexEncoding\:ToString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static string CSLibrary.Text.HexEncoding.ToString (byte []  {\i bytes}, uint  {\i offset}, uint  {\i count}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAEOA}
{\bkmkend AAAAAAAEOA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Byte to String Conversion }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i bytes} \cell }{Input Byte Array\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i offset} \cell }{Start offset\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i count} \cell }{Number of Count to converse\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Return a String\par
}}}
{\xe \v ToString\:CSLibrary::Text::HexEncoding}
{\xe \v CSLibrary::Text::HexEncoding\:ToString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static string CSLibrary.Text.HexEncoding.ToString (ushort []  {\i data}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAEOB}
{\bkmkend AAAAAAAEOB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ushort to String Conversion }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i data} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v ToString\:CSLibrary::Text::HexEncoding}
{\xe \v CSLibrary::Text::HexEncoding\:ToString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static string CSLibrary.Text.HexEncoding.ToString (ushort []  {\i data}, uint  {\i offset}, uint  {\i count}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAEOC}
{\bkmkend AAAAAAAEOC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ushort to String Conversion }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i data} \cell }{source data\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i offset} \cell }{Start offset\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i count} \cell }{Number of Count to converse\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v ToUInt16\:CSLibrary::Text::HexEncoding}
{\xe \v CSLibrary::Text::HexEncoding\:ToUInt16}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static UInt16 CSLibrary.Text.HexEncoding.ToUInt16 (byte []  {\i buffer}, int  {\i offset}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAEOD}
{\bkmkend AAAAAAAEOD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert 2 Bytes to one short }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i buffer} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i offset} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v ToUInt32\:CSLibrary::Text::HexEncoding}
{\xe \v CSLibrary::Text::HexEncoding\:ToUInt32}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static UInt32 CSLibrary.Text.HexEncoding.ToUInt32 (byte []  {\i buffer}, int  {\i offset}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAEOE}
{\bkmkend AAAAAAAEOE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert 4 Bytes to one uint32 }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i buffer} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i offset} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v ToUInt32\:CSLibrary::Text::HexEncoding}
{\xe \v CSLibrary::Text::HexEncoding\:ToUInt32}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static UInt32 CSLibrary.Text.HexEncoding.ToUInt32 (string  {\i hexString}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAEOF}
{\bkmkend AAAAAAAEOF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert string to one uint32 }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i hexString} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v ToUInt64\:CSLibrary::Text::HexEncoding}
{\xe \v CSLibrary::Text::HexEncoding\:ToUInt64}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static UInt64 CSLibrary.Text.HexEncoding.ToUInt64 (byte []  {\i buffer}, int  {\i offset}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAEOG}
{\bkmkend AAAAAAAEOG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert 4 bytes to long }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i buffer} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i offset} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v ToUshort\:CSLibrary::Text::HexEncoding}
{\xe \v CSLibrary::Text::HexEncoding\:ToUshort}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static ushort CSLibrary.Text.HexEncoding.ToUshort (string  {\i str}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAEOH}
{\bkmkend AAAAAAAEOH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
return ushort from byte string }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i str} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v ToUshorts\:CSLibrary::Text::HexEncoding}
{\xe \v CSLibrary::Text::HexEncoding\:ToUshorts}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static ushort [] CSLibrary.Text.HexEncoding.ToUshorts (byte []  {\i Input}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAEOI}
{\bkmkend AAAAAAAEOI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
return ushort array from byte array }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i Input} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v ToUshorts\:CSLibrary::Text::HexEncoding}
{\xe \v CSLibrary::Text::HexEncoding\:ToUshorts}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static ushort [] CSLibrary.Text.HexEncoding.ToUshorts (string  {\i Input}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAEOJ}
{\bkmkend AAAAAAAEOJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
return ushort array from string input }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i Input} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
CSLibrary/{\b HexEncoding.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary.HighLevelInterface Class Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary.HighLevelInterface}
{\xe \v CSLibrary.HighLevelInterface}
{\bkmkstart AAAAAAAAFF}
{\bkmkend AAAAAAAAFF}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b DOWNLINKCMD}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b SENDBUFFER}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b UPLINKCMD}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Types\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b READERSTATE} \{ {\b READERSTATE.DISCONNECT}, 
{\b READERSTATE.IDLE}, 
{\b READERSTATE.BUSY}, 
{\b READERSTATE.READYFORDISCONNECT}
 \}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b HighLevelInterface} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
async Task< bool > {\b ConnectAsync} (IAdapter adapter, IDevice device)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
async void {\b ConnectLostAsync} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
async void {\b DisconnectAsync} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b ProcessAPIPacket} (byte [] data)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Properties\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b BLEBusy}{\f2  [get]}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b READERSTATE} {\b Status}{\f2  [get]}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SiliconLabIC} {\b siliconlabIC}{\f2  [get]}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RFIDReader} {\b rfid}{\f2  [get]}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b BarcodeReader} {\b barcode}{\f2  [get]}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Notification} {\b notification}{\f2  [get]}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b BluetoothIC} {\b bluetoothIC}{\f2  [get]}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b ReaderName}{\f2  [get]}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Events\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b CSLibrary.Events.OnReaderStateChangedEventArgs} > {\b OnReaderStateChanged}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reader Operation State Event }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Types\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b BARCODECOMMANDRESPONSETYPE} \{ {\b BARCODECOMMANDRESPONSETYPE.CONTROLCOMMAND}, 
{\b BARCODECOMMANDRESPONSETYPE.DATA}, 
{\b BARCODECOMMANDRESPONSETYPE.NOTIFICATION}, 
{\b BARCODECOMMANDRESPONSETYPE.ERROR}
 \}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b CharacteristicOnValueUpdated} (object sender, CharacteristicUpdatedEventArgs characteristicUpdatedEventArgs)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b CheckAPIHeader} (byte[] data)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b CheckSingalPacket} (byte[] data)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b FirstAssemblePacketMohod} (byte[] recvData)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b BackupAssemblePacketMohod} (byte[] recvData)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b CharacteristicOnWriteUpdated} (object sender, CharacteristicUpdatedEventArgs characteristicUpdatedEventArgs)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
async void {\b BLERWEngineTimer} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~HighLevelInterface} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b HardwareInit} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b OnStateChanged} (object sender, BluetoothStateChangedArgs e)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b OnDeviceConnectionLost} (object sender, DeviceErrorEventArgs e)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
async Task {\b ClearConnection} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b WhenBLEFinish} (Func< Task > nextTask)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ExecuteFinishBLETask} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b TimerFunc} (object o)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b BARCODECOMMANDRESPONSETYPE} {\b RecvBarcodePacket} (byte[] recvData)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b FireReaderStateChangedEvent} ({\b CSLibrary.Events.OnReaderStateChangedEventArgs} args)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte [] {\b _recvBuffer} = new byte[8 + 255 + 20]\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b _currentRecvBufferSize} = 0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte [] {\b _recvBufferBackup} = new byte[8 + 255 + 20]\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b _currentRecvBufferSizeBackup} = 0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte {\b _blePacketRunningNumber} = 0x82\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
readonly byte [] {\b destinationsID} = \{ 0xc2, 0x6a, 0xd9, 0xe8, 0x5f \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
List< SENDBUFFER > {\b _sendBuffer} = new List<SENDBUFFER>()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint {\b _PROTOCOL_RetryCount} = 0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
object {\b _bleEngineLock} = new object()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
DateTime {\b _packetResponseTimeout}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
DateTime {\b _packetDelayTimeout}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
BTWAITCOMMANDRESPONSETYPE {\b _NeedCommandResponseType}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
BTWAITCOMMANDRESPONSETYPE {\b _currentCommandResponse}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IAdapter {\b _adapter}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IDevice {\b _device}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IService {\b _service}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ICharacteristic {\b _characteristicWrite}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ICharacteristic {\b _characteristicUpdate}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b READERSTATE} {\b _readerState} = {\b READERSTATE.DISCONNECT}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SiliconLabIC} {\b _handleSiliconLabIC} = null\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RFIDReader} {\b _handlerRFIDReader} = null\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b BarcodeReader} {\b _handleBarCodeReader} = null\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Notification} {\b _handleNotification} = null\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b BluetoothIC} {\b _handleBluetoothIC} = null\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
CSLibrary.Timer {\b BTTimer}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Func< Task > {\b _afterFinishBLETask} = null\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Enumeration Documentation\par
\pard\plain 
{\xe \v BARCODECOMMANDRESPONSETYPE\:CSLibrary::HighLevelInterface}
{\xe \v CSLibrary::HighLevelInterface\:BARCODECOMMANDRESPONSETYPE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b CSLibrary.HighLevelInterface.BARCODECOMMANDRESPONSETYPE}{\f2 [strong]}, {\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAFG}
{\bkmkend AAAAAAAAFG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v CONTROLCOMMAND\:CSLibrary::HighLevelInterface}
{\xe \v CSLibrary::HighLevelInterface\:CONTROLCOMMAND}
{\qr CONTROLCOMMAND{\bkmkstart AAAAAAAAFH}
{\bkmkend AAAAAAAAFH}
\cell }{\cell }{\row }
{\xe \v DATA\:CSLibrary::HighLevelInterface}
{\xe \v CSLibrary::HighLevelInterface\:DATA}
{\qr DATA{\bkmkstart AAAAAAAAFI}
{\bkmkend AAAAAAAAFI}
\cell }{\cell }{\row }
{\xe \v NOTIFICATION\:CSLibrary::HighLevelInterface}
{\xe \v CSLibrary::HighLevelInterface\:NOTIFICATION}
{\qr NOTIFICATION{\bkmkstart AAAAAAAAFJ}
{\bkmkend AAAAAAAAFJ}
\cell }{\cell }{\row }
{\xe \v ERROR\:CSLibrary::HighLevelInterface}
{\xe \v CSLibrary::HighLevelInterface\:ERROR}
{\qr ERROR{\bkmkstart AAAAAAAAFK}
{\bkmkend AAAAAAAAFK}
\cell }{\cell }{\row }
}
}
{\xe \v READERSTATE\:CSLibrary::HighLevelInterface}
{\xe \v CSLibrary::HighLevelInterface\:READERSTATE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b CSLibrary.HighLevelInterface.READERSTATE}{\f2 [strong]}}}
\par
{\bkmkstart AAAAAAAAFL}
{\bkmkend AAAAAAAAFL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v DISCONNECT\:CSLibrary::HighLevelInterface}
{\xe \v CSLibrary::HighLevelInterface\:DISCONNECT}
{\qr DISCONNECT{\bkmkstart AAAAAAAAFM}
{\bkmkend AAAAAAAAFM}
\cell }{\cell }{\row }
{\xe \v IDLE\:CSLibrary::HighLevelInterface}
{\xe \v CSLibrary::HighLevelInterface\:IDLE}
{\qr IDLE{\bkmkstart AAAAAAAAFN}
{\bkmkend AAAAAAAAFN}
\cell }{\cell }{\row }
{\xe \v BUSY\:CSLibrary::HighLevelInterface}
{\xe \v CSLibrary::HighLevelInterface\:BUSY}
{\qr BUSY{\bkmkstart AAAAAAAAFO}
{\bkmkend AAAAAAAAFO}
\cell }{\cell }{\row }
{\xe \v READYFORDISCONNECT\:CSLibrary::HighLevelInterface}
{\xe \v CSLibrary::HighLevelInterface\:READYFORDISCONNECT}
{\qr READYFORDISCONNECT{\bkmkstart AAAAAAAAFP}
{\bkmkend AAAAAAAAFP}
\cell }{\cell }{\row }
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v HighLevelInterface\:CSLibrary::HighLevelInterface}
{\xe \v CSLibrary::HighLevelInterface\:HighLevelInterface}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CSLibrary.HighLevelInterface.HighLevelInterface ()}}
\par
{\bkmkstart AAAAAAAAFQ}
{\bkmkend AAAAAAAAFQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ~HighLevelInterface\:CSLibrary::HighLevelInterface}
{\xe \v CSLibrary::HighLevelInterface\:~HighLevelInterface}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CSLibrary.HighLevelInterface.~HighLevelInterface (){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAFR}
{\bkmkend AAAAAAAAFR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v BackupAssemblePacketMohod\:CSLibrary::HighLevelInterface}
{\xe \v CSLibrary::HighLevelInterface\:BackupAssemblePacketMohod}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool CSLibrary.HighLevelInterface.BackupAssemblePacketMohod (byte []  {\i recvData}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAFS}
{\bkmkend AAAAAAAAFS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v BLERWEngineTimer\:CSLibrary::HighLevelInterface}
{\xe \v CSLibrary::HighLevelInterface\:BLERWEngineTimer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
async void CSLibrary.HighLevelInterface.BLERWEngineTimer (){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAFT}
{\bkmkend AAAAAAAAFT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v CharacteristicOnValueUpdated\:CSLibrary::HighLevelInterface}
{\xe \v CSLibrary::HighLevelInterface\:CharacteristicOnValueUpdated}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CSLibrary.HighLevelInterface.CharacteristicOnValueUpdated (object  {\i sender}, CharacteristicUpdatedEventArgs  {\i characteristicUpdatedEventArgs}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAFU}
{\bkmkend AAAAAAAAFU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v CharacteristicOnWriteUpdated\:CSLibrary::HighLevelInterface}
{\xe \v CSLibrary::HighLevelInterface\:CharacteristicOnWriteUpdated}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CSLibrary.HighLevelInterface.CharacteristicOnWriteUpdated (object  {\i sender}, CharacteristicUpdatedEventArgs  {\i characteristicUpdatedEventArgs}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAFV}
{\bkmkend AAAAAAAAFV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v CheckAPIHeader\:CSLibrary::HighLevelInterface}
{\xe \v CSLibrary::HighLevelInterface\:CheckAPIHeader}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool CSLibrary.HighLevelInterface.CheckAPIHeader (byte []  {\i data}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAFW}
{\bkmkend AAAAAAAAFW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v CheckSingalPacket\:CSLibrary::HighLevelInterface}
{\xe \v CSLibrary::HighLevelInterface\:CheckSingalPacket}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool CSLibrary.HighLevelInterface.CheckSingalPacket (byte []  {\i data}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAFX}
{\bkmkend AAAAAAAAFX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ClearConnection\:CSLibrary::HighLevelInterface}
{\xe \v CSLibrary::HighLevelInterface\:ClearConnection}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
async Task CSLibrary.HighLevelInterface.ClearConnection (){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAFY}
{\bkmkend AAAAAAAAFY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ConnectAsync\:CSLibrary::HighLevelInterface}
{\xe \v CSLibrary::HighLevelInterface\:ConnectAsync}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
async Task<bool> CSLibrary.HighLevelInterface.ConnectAsync (IAdapter  {\i adapter}, IDevice  {\i device})}}
\par
{\bkmkstart AAAAAAAAFZ}
{\bkmkend AAAAAAAAFZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ConnectLostAsync\:CSLibrary::HighLevelInterface}
{\xe \v CSLibrary::HighLevelInterface\:ConnectLostAsync}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
async void CSLibrary.HighLevelInterface.ConnectLostAsync ()}}
\par
{\bkmkstart AAAAAAAAGA}
{\bkmkend AAAAAAAAGA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DisconnectAsync\:CSLibrary::HighLevelInterface}
{\xe \v CSLibrary::HighLevelInterface\:DisconnectAsync}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
async void CSLibrary.HighLevelInterface.DisconnectAsync ()}}
\par
{\bkmkstart AAAAAAAAGB}
{\bkmkend AAAAAAAAGB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ExecuteFinishBLETask\:CSLibrary::HighLevelInterface}
{\xe \v CSLibrary::HighLevelInterface\:ExecuteFinishBLETask}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CSLibrary.HighLevelInterface.ExecuteFinishBLETask (){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAGC}
{\bkmkend AAAAAAAAGC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v FireReaderStateChangedEvent\:CSLibrary::HighLevelInterface}
{\xe \v CSLibrary::HighLevelInterface\:FireReaderStateChangedEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CSLibrary.HighLevelInterface.FireReaderStateChangedEvent ({\b CSLibrary.Events.OnReaderStateChangedEventArgs}  {\i args}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAGD}
{\bkmkend AAAAAAAAGD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v FirstAssemblePacketMohod\:CSLibrary::HighLevelInterface}
{\xe \v CSLibrary::HighLevelInterface\:FirstAssemblePacketMohod}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool CSLibrary.HighLevelInterface.FirstAssemblePacketMohod (byte []  {\i recvData}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAGE}
{\bkmkend AAAAAAAAGE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v HardwareInit\:CSLibrary::HighLevelInterface}
{\xe \v CSLibrary::HighLevelInterface\:HardwareInit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CSLibrary.HighLevelInterface.HardwareInit (){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAGF}
{\bkmkend AAAAAAAAGF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v OnDeviceConnectionLost\:CSLibrary::HighLevelInterface}
{\xe \v CSLibrary::HighLevelInterface\:OnDeviceConnectionLost}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CSLibrary.HighLevelInterface.OnDeviceConnectionLost (object  {\i sender}, DeviceErrorEventArgs  {\i e}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAGG}
{\bkmkend AAAAAAAAGG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v OnStateChanged\:CSLibrary::HighLevelInterface}
{\xe \v CSLibrary::HighLevelInterface\:OnStateChanged}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CSLibrary.HighLevelInterface.OnStateChanged (object  {\i sender}, BluetoothStateChangedArgs  {\i e}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAGH}
{\bkmkend AAAAAAAAGH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ProcessAPIPacket\:CSLibrary::HighLevelInterface}
{\xe \v CSLibrary::HighLevelInterface\:ProcessAPIPacket}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool CSLibrary.HighLevelInterface.ProcessAPIPacket (byte []  {\i data})}}
\par
{\bkmkstart AAAAAAAAGI}
{\bkmkend AAAAAAAAGI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
}}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i packetData} \cell }{\cell }
{\row }
}
}}
{\xe \v RecvBarcodePacket\:CSLibrary::HighLevelInterface}
{\xe \v CSLibrary::HighLevelInterface\:RecvBarcodePacket}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b BARCODECOMMANDRESPONSETYPE} CSLibrary.HighLevelInterface.RecvBarcodePacket (byte []  {\i recvData}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAGJ}
{\bkmkend AAAAAAAAGJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v TimerFunc\:CSLibrary::HighLevelInterface}
{\xe \v CSLibrary::HighLevelInterface\:TimerFunc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CSLibrary.HighLevelInterface.TimerFunc (object  {\i o}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAGK}
{\bkmkend AAAAAAAAGK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v WhenBLEFinish\:CSLibrary::HighLevelInterface}
{\xe \v CSLibrary::HighLevelInterface\:WhenBLEFinish}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CSLibrary.HighLevelInterface.WhenBLEFinish (Func< Task >  {\i nextTask}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAGL}
{\bkmkend AAAAAAAAGL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v _adapter\:CSLibrary::HighLevelInterface}
{\xe \v CSLibrary::HighLevelInterface\:_adapter}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IAdapter CSLibrary.HighLevelInterface._adapter{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAGM}
{\bkmkend AAAAAAAAGM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v _afterFinishBLETask\:CSLibrary::HighLevelInterface}
{\xe \v CSLibrary::HighLevelInterface\:_afterFinishBLETask}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Func<Task> CSLibrary.HighLevelInterface._afterFinishBLETask = null{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAGN}
{\bkmkend AAAAAAAAGN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v _bleEngineLock\:CSLibrary::HighLevelInterface}
{\xe \v CSLibrary::HighLevelInterface\:_bleEngineLock}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
object CSLibrary.HighLevelInterface._bleEngineLock = new object(){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAGO}
{\bkmkend AAAAAAAAGO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v _blePacketRunningNumber\:CSLibrary::HighLevelInterface}
{\xe \v CSLibrary::HighLevelInterface\:_blePacketRunningNumber}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte CSLibrary.HighLevelInterface._blePacketRunningNumber = 0x82{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAGP}
{\bkmkend AAAAAAAAGP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v _characteristicUpdate\:CSLibrary::HighLevelInterface}
{\xe \v CSLibrary::HighLevelInterface\:_characteristicUpdate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ICharacteristic CSLibrary.HighLevelInterface._characteristicUpdate{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAGQ}
{\bkmkend AAAAAAAAGQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v _characteristicWrite\:CSLibrary::HighLevelInterface}
{\xe \v CSLibrary::HighLevelInterface\:_characteristicWrite}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ICharacteristic CSLibrary.HighLevelInterface._characteristicWrite{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAGR}
{\bkmkend AAAAAAAAGR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v _currentCommandResponse\:CSLibrary::HighLevelInterface}
{\xe \v CSLibrary::HighLevelInterface\:_currentCommandResponse}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
BTWAITCOMMANDRESPONSETYPE CSLibrary.HighLevelInterface._currentCommandResponse{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAGS}
{\bkmkend AAAAAAAAGS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v _currentRecvBufferSize\:CSLibrary::HighLevelInterface}
{\xe \v CSLibrary::HighLevelInterface\:_currentRecvBufferSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int CSLibrary.HighLevelInterface._currentRecvBufferSize = 0{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAGT}
{\bkmkend AAAAAAAAGT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v _currentRecvBufferSizeBackup\:CSLibrary::HighLevelInterface}
{\xe \v CSLibrary::HighLevelInterface\:_currentRecvBufferSizeBackup}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int CSLibrary.HighLevelInterface._currentRecvBufferSizeBackup = 0{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAGU}
{\bkmkend AAAAAAAAGU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v _device\:CSLibrary::HighLevelInterface}
{\xe \v CSLibrary::HighLevelInterface\:_device}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IDevice CSLibrary.HighLevelInterface._device{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAGV}
{\bkmkend AAAAAAAAGV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v _handleBarCodeReader\:CSLibrary::HighLevelInterface}
{\xe \v CSLibrary::HighLevelInterface\:_handleBarCodeReader}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b BarcodeReader} CSLibrary.HighLevelInterface._handleBarCodeReader = null{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAGW}
{\bkmkend AAAAAAAAGW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v _handleBluetoothIC\:CSLibrary::HighLevelInterface}
{\xe \v CSLibrary::HighLevelInterface\:_handleBluetoothIC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b BluetoothIC} CSLibrary.HighLevelInterface._handleBluetoothIC = null{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAGX}
{\bkmkend AAAAAAAAGX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v _handleNotification\:CSLibrary::HighLevelInterface}
{\xe \v CSLibrary::HighLevelInterface\:_handleNotification}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Notification} CSLibrary.HighLevelInterface._handleNotification = null{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAGY}
{\bkmkend AAAAAAAAGY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v _handlerRFIDReader\:CSLibrary::HighLevelInterface}
{\xe \v CSLibrary::HighLevelInterface\:_handlerRFIDReader}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RFIDReader} CSLibrary.HighLevelInterface._handlerRFIDReader = null{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAGZ}
{\bkmkend AAAAAAAAGZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v _handleSiliconLabIC\:CSLibrary::HighLevelInterface}
{\xe \v CSLibrary::HighLevelInterface\:_handleSiliconLabIC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b SiliconLabIC} CSLibrary.HighLevelInterface._handleSiliconLabIC = null{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAHA}
{\bkmkend AAAAAAAAHA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v _NeedCommandResponseType\:CSLibrary::HighLevelInterface}
{\xe \v CSLibrary::HighLevelInterface\:_NeedCommandResponseType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
BTWAITCOMMANDRESPONSETYPE CSLibrary.HighLevelInterface._NeedCommandResponseType{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAHB}
{\bkmkend AAAAAAAAHB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v _packetDelayTimeout\:CSLibrary::HighLevelInterface}
{\xe \v CSLibrary::HighLevelInterface\:_packetDelayTimeout}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
DateTime CSLibrary.HighLevelInterface._packetDelayTimeout{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAHC}
{\bkmkend AAAAAAAAHC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v _packetResponseTimeout\:CSLibrary::HighLevelInterface}
{\xe \v CSLibrary::HighLevelInterface\:_packetResponseTimeout}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
DateTime CSLibrary.HighLevelInterface._packetResponseTimeout{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAHD}
{\bkmkend AAAAAAAAHD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v _PROTOCOL_RetryCount\:CSLibrary::HighLevelInterface}
{\xe \v CSLibrary::HighLevelInterface\:_PROTOCOL_RetryCount}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint CSLibrary.HighLevelInterface._PROTOCOL_RetryCount = 0{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAHE}
{\bkmkend AAAAAAAAHE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v _readerState\:CSLibrary::HighLevelInterface}
{\xe \v CSLibrary::HighLevelInterface\:_readerState}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b READERSTATE} CSLibrary.HighLevelInterface._readerState = {\b READERSTATE.DISCONNECT}{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAHF}
{\bkmkend AAAAAAAAHF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v _recvBuffer\:CSLibrary::HighLevelInterface}
{\xe \v CSLibrary::HighLevelInterface\:_recvBuffer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte [] CSLibrary.HighLevelInterface._recvBuffer = new byte[8 + 255 + 20]{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAHG}
{\bkmkend AAAAAAAAHG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v _recvBufferBackup\:CSLibrary::HighLevelInterface}
{\xe \v CSLibrary::HighLevelInterface\:_recvBufferBackup}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte [] CSLibrary.HighLevelInterface._recvBufferBackup = new byte[8 + 255 + 20]{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAHH}
{\bkmkend AAAAAAAAHH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v _sendBuffer\:CSLibrary::HighLevelInterface}
{\xe \v CSLibrary::HighLevelInterface\:_sendBuffer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
List<SENDBUFFER> CSLibrary.HighLevelInterface._sendBuffer = new List<SENDBUFFER>(){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAHI}
{\bkmkend AAAAAAAAHI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v _service\:CSLibrary::HighLevelInterface}
{\xe \v CSLibrary::HighLevelInterface\:_service}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IService CSLibrary.HighLevelInterface._service{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAHJ}
{\bkmkend AAAAAAAAHJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v BTTimer\:CSLibrary::HighLevelInterface}
{\xe \v CSLibrary::HighLevelInterface\:BTTimer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CSLibrary.Timer CSLibrary.HighLevelInterface.BTTimer{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAHK}
{\bkmkend AAAAAAAAHK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v destinationsID\:CSLibrary::HighLevelInterface}
{\xe \v CSLibrary::HighLevelInterface\:destinationsID}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly byte [] CSLibrary.HighLevelInterface.destinationsID = \{ 0xc2, 0x6a, 0xd9, 0xe8, 0x5f \}{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAHL}
{\bkmkend AAAAAAAAHL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Property Documentation\par
\pard\plain 
{\xe \v barcode\:CSLibrary::HighLevelInterface}
{\xe \v CSLibrary::HighLevelInterface\:barcode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b BarcodeReader} CSLibrary.HighLevelInterface.barcode{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAHM}
{\bkmkend AAAAAAAAHM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v BLEBusy\:CSLibrary::HighLevelInterface}
{\xe \v CSLibrary::HighLevelInterface\:BLEBusy}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool CSLibrary.HighLevelInterface.BLEBusy{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAHN}
{\bkmkend AAAAAAAAHN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v bluetoothIC\:CSLibrary::HighLevelInterface}
{\xe \v CSLibrary::HighLevelInterface\:bluetoothIC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b BluetoothIC} CSLibrary.HighLevelInterface.bluetoothIC{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAHO}
{\bkmkend AAAAAAAAHO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v notification\:CSLibrary::HighLevelInterface}
{\xe \v CSLibrary::HighLevelInterface\:notification}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Notification} CSLibrary.HighLevelInterface.notification{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAHP}
{\bkmkend AAAAAAAAHP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ReaderName\:CSLibrary::HighLevelInterface}
{\xe \v CSLibrary::HighLevelInterface\:ReaderName}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string CSLibrary.HighLevelInterface.ReaderName{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAHQ}
{\bkmkend AAAAAAAAHQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v rfid\:CSLibrary::HighLevelInterface}
{\xe \v CSLibrary::HighLevelInterface\:rfid}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RFIDReader} CSLibrary.HighLevelInterface.rfid{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAHR}
{\bkmkend AAAAAAAAHR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v siliconlabIC\:CSLibrary::HighLevelInterface}
{\xe \v CSLibrary::HighLevelInterface\:siliconlabIC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b SiliconLabIC} CSLibrary.HighLevelInterface.siliconlabIC{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAHS}
{\bkmkend AAAAAAAAHS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Status\:CSLibrary::HighLevelInterface}
{\xe \v CSLibrary::HighLevelInterface\:Status}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b READERSTATE} CSLibrary.HighLevelInterface.Status{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAHT}
{\bkmkend AAAAAAAAHT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Event Documentation\par
\pard\plain 
{\xe \v OnReaderStateChanged\:CSLibrary::HighLevelInterface}
{\xe \v CSLibrary::HighLevelInterface\:OnReaderStateChanged}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
EventHandler<{\b CSLibrary.Events.OnReaderStateChangedEventArgs}> CSLibrary.HighLevelInterface.OnReaderStateChanged}}
\par
{\bkmkstart AAAAAAAAHU}
{\bkmkend AAAAAAAAHU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reader Operation State Event }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
CSLibrary/{\b BTReceive.cs}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
CSLibrary/{\b BTSend.cs}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
CSLibrary/{\b CSLibrary.cs}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
CSLibrary/{\b CSLibrary.Private.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary.Notification.HotKeyEventArgs Class Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary.Notification.HotKeyEventArgs}
{\xe \v CSLibrary.Notification.HotKeyEventArgs}
{\bkmkstart AAAAAAAAJK}
{\bkmkend AAAAAAAAJK}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
HotKey Event Argument }}\par
Inheritance diagram for CSLibrary.Notification.HotKeyEventArgs:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_c_s_library_1_1_notification_1_1_hot_key_event_args.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b HotKeyEventArgs} ({\b Key} {\b KeyCode}, bool {\b KeyDown})\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Properties\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Key} {\b KeyCode}{\f2  [get]}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b KeyDown}{\f2  [get]}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Key} {\b m_KeyCode} = {\b Key.BUTTON}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b m_KeyDown} = false\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
HotKey Event Argument \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v HotKeyEventArgs\:CSLibrary::Notification::HotKeyEventArgs}
{\xe \v CSLibrary::Notification::HotKeyEventArgs\:HotKeyEventArgs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CSLibrary.Notification.HotKeyEventArgs.HotKeyEventArgs ({\b Key}  {\i KeyCode}, bool  {\i KeyDown})}}
\par
{\bkmkstart AAAAAAAAJL}
{\bkmkend AAAAAAAAJL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v m_KeyCode\:CSLibrary::Notification::HotKeyEventArgs}
{\xe \v CSLibrary::Notification::HotKeyEventArgs\:m_KeyCode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Key} CSLibrary.Notification.HotKeyEventArgs.m_KeyCode = {\b Key.BUTTON}{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAJM}
{\bkmkend AAAAAAAAJM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v m_KeyDown\:CSLibrary::Notification::HotKeyEventArgs}
{\xe \v CSLibrary::Notification::HotKeyEventArgs\:m_KeyDown}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool CSLibrary.Notification.HotKeyEventArgs.m_KeyDown = false{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAJN}
{\bkmkend AAAAAAAAJN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Property Documentation\par
\pard\plain 
{\xe \v KeyCode\:CSLibrary::Notification::HotKeyEventArgs}
{\xe \v CSLibrary::Notification::HotKeyEventArgs\:KeyCode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Key} CSLibrary.Notification.HotKeyEventArgs.KeyCode{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAJO}
{\bkmkend AAAAAAAAJO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v KeyDown\:CSLibrary::Notification::HotKeyEventArgs}
{\xe \v CSLibrary::Notification::HotKeyEventArgs\:KeyDown}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool CSLibrary.Notification.HotKeyEventArgs.KeyDown{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAJP}
{\bkmkend AAAAAAAAJP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
CSLibrary/Notification/{\b ClassNotification.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary.Structures.IBANK Interface Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary.Structures.IBANK}
{\xe \v CSLibrary.Structures.IBANK}
{\bkmkstart AAAAAAADNZ}
{\bkmkend AAAAAAADNZ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
}}\par
Inheritance diagram for CSLibrary.Structures.IBANK:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "interface_c_s_library_1_1_structures_1_1_i_b_a_n_k.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ushort [] {\b ToUshorts} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert Value to ushort array }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
short [] {\b ToShorts} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert Value to short array }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte [] {\b ToBytes} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert Value to Byte array }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b ToString} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert Data to Hex String }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Int32 {\b GetLength} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get Data Length, Data in Ushort format }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v GetLength\:CSLibrary::Structures::IBANK}
{\xe \v CSLibrary::Structures::IBANK\:GetLength}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Int32 CSLibrary.Structures.IBANK.GetLength ()}}
\par
{\bkmkstart AAAAAAADOA}
{\bkmkend AAAAAAADOA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get Data Length, Data in Ushort format }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}{
Implemented in {\b CSLibrary.Structures.S_MASK} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADOB \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b CSLibrary.Structures.S_DATA} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADOC \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b CSLibrary.Structures.S_PWD} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADOD \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b CSLibrary.Structures.S_TID} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADOE \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b CSLibrary.Structures.S_XPC_W2} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADOF \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b CSLibrary.Structures.S_XPC_W1} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADOG \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b CSLibrary.Structures.S_PC} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADOH \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b CSLibrary.Structures.S_EPC} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADOI \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v ToBytes\:CSLibrary::Structures::IBANK}
{\xe \v CSLibrary::Structures::IBANK\:ToBytes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte [] CSLibrary.Structures.IBANK.ToBytes ()}}
\par
{\bkmkstart AAAAAAADOJ}
{\bkmkend AAAAAAADOJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert Value to Byte array }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Implemented in {\b CSLibrary.Structures.S_MASK} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADOK \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b CSLibrary.Structures.S_DATA} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADOL \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b CSLibrary.Structures.S_PWD} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADOM \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b CSLibrary.Structures.S_TID} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADON \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b CSLibrary.Structures.S_XPC_W2} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADOO \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b CSLibrary.Structures.S_XPC_W1} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADOP \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b CSLibrary.Structures.S_PC} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADOQ \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b CSLibrary.Structures.S_EPC} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADOR \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v ToShorts\:CSLibrary::Structures::IBANK}
{\xe \v CSLibrary::Structures::IBANK\:ToShorts}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
short [] CSLibrary.Structures.IBANK.ToShorts ()}}
\par
{\bkmkstart AAAAAAADOS}
{\bkmkend AAAAAAADOS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert Value to short array }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Implemented in {\b CSLibrary.Structures.S_MASK} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADOT \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b CSLibrary.Structures.S_DATA} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADOU \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b CSLibrary.Structures.S_PWD} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADOV \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b CSLibrary.Structures.S_TID} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADOW \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b CSLibrary.Structures.S_XPC_W2} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADOX \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b CSLibrary.Structures.S_XPC_W1} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADOY \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b CSLibrary.Structures.S_PC} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADOZ \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b CSLibrary.Structures.S_EPC} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADPA \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v ToString\:CSLibrary::Structures::IBANK}
{\xe \v CSLibrary::Structures::IBANK\:ToString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string CSLibrary.Structures.IBANK.ToString ()}}
\par
{\bkmkstart AAAAAAADPB}
{\bkmkend AAAAAAADPB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert Data to Hex String }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}{
Implemented in {\b CSLibrary.Structures.S_MASK} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADPC \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b CSLibrary.Structures.S_DATA} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADPD \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b CSLibrary.Structures.S_PWD} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADPE \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b CSLibrary.Structures.S_TID} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADPF \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b CSLibrary.Structures.S_XPC_W2} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADPG \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b CSLibrary.Structures.S_XPC_W1} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADPH \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b CSLibrary.Structures.S_PC} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADPI \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b CSLibrary.Structures.S_EPC} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADPJ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v ToUshorts\:CSLibrary::Structures::IBANK}
{\xe \v CSLibrary::Structures::IBANK\:ToUshorts}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ushort [] CSLibrary.Structures.IBANK.ToUshorts ()}}
\par
{\bkmkstart AAAAAAADPK}
{\bkmkend AAAAAAADPK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert Value to ushort array }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Implemented in {\b CSLibrary.Structures.S_MASK} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADPL \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b CSLibrary.Structures.S_DATA} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADPM \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b CSLibrary.Structures.S_PWD} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADPN \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b CSLibrary.Structures.S_TID} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADPO \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b CSLibrary.Structures.S_XPC_W2} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADPP \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b CSLibrary.Structures.S_XPC_W1} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADPQ \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b CSLibrary.Structures.S_PC} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADPR \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b CSLibrary.Structures.S_EPC} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADPS \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this interface was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
CSLibrary/RFIDReader/Structures/{\b CSLibrary.Structures.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary.Structures.ImageAcquisitionParms Class Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary.Structures.ImageAcquisitionParms}
{\xe \v CSLibrary.Structures.ImageAcquisitionParms}
{\bkmkstart AAAAAAADPT}
{\bkmkend AAAAAAADPT}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Image Acquisition structure /summary> }}\par
Inheritance diagram for CSLibrary.Structures.ImageAcquisitionParms:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_c_s_library_1_1_barcode_1_1_structures_1_1_image_acquisition_parms.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ImageAcquisitionParms} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ImgAcquisitionMask} {\b dwMask} = ImgAcquisitionMask.CAPTURE_MASK_ALL\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mask of active items. Notes: You can use OR to enable multiple items }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint {\b dwWhiteValue}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Target "white pixel" value. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint {\b dwWhiteWindow}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Acceptable delta from white value. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint {\b dwMaxNumExposures}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Max frame capture tries for white value. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DutyCycle} {\b illuminatCycle}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Illumination duty cycle (never on, on during imaging). }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DutyCycle} {\b aimerCycle}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Aimer duty cycle (never on, on during imaging). }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gain} {\b fixedGain}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
If manual capture mode, gain value for capture. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint {\b dwFixedExposure}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
If manual capture mode, exposure time for capture.(1-7874) }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FrameRate} {\b frameRate}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
If manual capture mode, frame rate for capture. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b AutoExposure} {\b captureMode}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Autoexposure (AGC) Capture mode: barcode, photo or manual. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b bVgaCompatibleImage}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
640x480 Max Image Size. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b bWaitForTrigger}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Wait for hardware or software trigger before capturing image. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b bPreviewImage}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Capture a preview image. These are subsample 3, full window, JPEG transfer images. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Image Acquisition structure /summary> \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v ImageAcquisitionParms\:CSLibrary::Barcode::Structures::ImageAcquisitionParms}
{\xe \v CSLibrary::Barcode::Structures::ImageAcquisitionParms\:ImageAcquisitionParms}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CSLibrary.Structures.ImageAcquisitionParms.ImageAcquisitionParms ()}}
\par
{\bkmkstart AAAAAAADPU}
{\bkmkend AAAAAAADPU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v aimerCycle\:CSLibrary::Barcode::Structures::ImageAcquisitionParms}
{\xe \v CSLibrary::Barcode::Structures::ImageAcquisitionParms\:aimerCycle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b DutyCycle} CSLibrary.Structures.ImageAcquisitionParms.aimerCycle}}
\par
{\bkmkstart AAAAAAADPV}
{\bkmkend AAAAAAADPV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Aimer duty cycle (never on, on during imaging). }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v bPreviewImage\:CSLibrary::Barcode::Structures::ImageAcquisitionParms}
{\xe \v CSLibrary::Barcode::Structures::ImageAcquisitionParms\:bPreviewImage}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool CSLibrary.Structures.ImageAcquisitionParms.bPreviewImage}}
\par
{\bkmkstart AAAAAAADPW}
{\bkmkend AAAAAAADPW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Capture a preview image. These are subsample 3, full window, JPEG transfer images. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v bVgaCompatibleImage\:CSLibrary::Barcode::Structures::ImageAcquisitionParms}
{\xe \v CSLibrary::Barcode::Structures::ImageAcquisitionParms\:bVgaCompatibleImage}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool CSLibrary.Structures.ImageAcquisitionParms.bVgaCompatibleImage}}
\par
{\bkmkstart AAAAAAADPX}
{\bkmkend AAAAAAADPX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
640x480 Max Image Size. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v bWaitForTrigger\:CSLibrary::Barcode::Structures::ImageAcquisitionParms}
{\xe \v CSLibrary::Barcode::Structures::ImageAcquisitionParms\:bWaitForTrigger}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool CSLibrary.Structures.ImageAcquisitionParms.bWaitForTrigger}}
\par
{\bkmkstart AAAAAAADPY}
{\bkmkend AAAAAAADPY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Wait for hardware or software trigger before capturing image. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v captureMode\:CSLibrary::Barcode::Structures::ImageAcquisitionParms}
{\xe \v CSLibrary::Barcode::Structures::ImageAcquisitionParms\:captureMode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b AutoExposure} CSLibrary.Structures.ImageAcquisitionParms.captureMode}}
\par
{\bkmkstart AAAAAAADPZ}
{\bkmkend AAAAAAADPZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Autoexposure (AGC) Capture mode: barcode, photo or manual. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v dwFixedExposure\:CSLibrary::Barcode::Structures::ImageAcquisitionParms}
{\xe \v CSLibrary::Barcode::Structures::ImageAcquisitionParms\:dwFixedExposure}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint CSLibrary.Structures.ImageAcquisitionParms.dwFixedExposure}}
\par
{\bkmkstart AAAAAAADQA}
{\bkmkend AAAAAAADQA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
If manual capture mode, exposure time for capture.(1-7874) }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v dwMask\:CSLibrary::Barcode::Structures::ImageAcquisitionParms}
{\xe \v CSLibrary::Barcode::Structures::ImageAcquisitionParms\:dwMask}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b ImgAcquisitionMask} CSLibrary.Structures.ImageAcquisitionParms.dwMask = ImgAcquisitionMask.CAPTURE_MASK_ALL}}
\par
{\bkmkstart AAAAAAADQB}
{\bkmkend AAAAAAADQB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mask of active items. Notes: You can use OR to enable multiple items }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v dwMaxNumExposures\:CSLibrary::Barcode::Structures::ImageAcquisitionParms}
{\xe \v CSLibrary::Barcode::Structures::ImageAcquisitionParms\:dwMaxNumExposures}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint CSLibrary.Structures.ImageAcquisitionParms.dwMaxNumExposures}}
\par
{\bkmkstart AAAAAAADQC}
{\bkmkend AAAAAAADQC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Max frame capture tries for white value. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v dwWhiteValue\:CSLibrary::Barcode::Structures::ImageAcquisitionParms}
{\xe \v CSLibrary::Barcode::Structures::ImageAcquisitionParms\:dwWhiteValue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint CSLibrary.Structures.ImageAcquisitionParms.dwWhiteValue}}
\par
{\bkmkstart AAAAAAADQD}
{\bkmkend AAAAAAADQD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Target "white pixel" value. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v dwWhiteWindow\:CSLibrary::Barcode::Structures::ImageAcquisitionParms}
{\xe \v CSLibrary::Barcode::Structures::ImageAcquisitionParms\:dwWhiteWindow}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint CSLibrary.Structures.ImageAcquisitionParms.dwWhiteWindow}}
\par
{\bkmkstart AAAAAAADQE}
{\bkmkend AAAAAAADQE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Acceptable delta from white value. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v fixedGain\:CSLibrary::Barcode::Structures::ImageAcquisitionParms}
{\xe \v CSLibrary::Barcode::Structures::ImageAcquisitionParms\:fixedGain}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gain} CSLibrary.Structures.ImageAcquisitionParms.fixedGain}}
\par
{\bkmkstart AAAAAAADQF}
{\bkmkend AAAAAAADQF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
If manual capture mode, gain value for capture. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v frameRate\:CSLibrary::Barcode::Structures::ImageAcquisitionParms}
{\xe \v CSLibrary::Barcode::Structures::ImageAcquisitionParms\:frameRate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FrameRate} CSLibrary.Structures.ImageAcquisitionParms.frameRate}}
\par
{\bkmkstart AAAAAAADQG}
{\bkmkend AAAAAAADQG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
If manual capture mode, frame rate for capture. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v illuminatCycle\:CSLibrary::Barcode::Structures::ImageAcquisitionParms}
{\xe \v CSLibrary::Barcode::Structures::ImageAcquisitionParms\:illuminatCycle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b DutyCycle} CSLibrary.Structures.ImageAcquisitionParms.illuminatCycle}}
\par
{\bkmkstart AAAAAAADQH}
{\bkmkend AAAAAAADQH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Illumination duty cycle (never on, on during imaging). }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
CSLibrary/BarcodeReader/Structures/{\b CSLibrary.Barcode.Structures.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary.Structures.ImageMessage Class Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary.Structures.ImageMessage}
{\xe \v CSLibrary.Structures.ImageMessage}
{\bkmkstart AAAAAAADQI}
{\bkmkend AAAAAAADQI}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Image information structure /summary> }}\par
Inheritance diagram for CSLibrary.Structures.ImageMessage:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_c_s_library_1_1_barcode_1_1_structures_1_1_image_message.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ImageMessage} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b puchBuffer}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pointer Buffer for image }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Int32 {\b nBufferSize}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Size of buffer in bytes }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ImgFormat} {\b imageFormat}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Image Format for returned data }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint {\b dwJpegQFactor} = 80\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
JPEG Quality Factor, default 80% }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Int32 {\b nBytesReturned}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Number of bytes returned. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SIZE} {\b imgSize}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Size of image returned. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Int32 {\b nCapturedFrames}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Number of frames captured prior to this image }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Int32 {\b nGain}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gain value used to capture this image }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Int32 {\b nExposureTime}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Exposure time used to capture this image }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Int32 {\b nUnderexposedPixels}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Number of underexposed pixels in image }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Int32 {\b nOverexposedPixels}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Number of overexposed pixels in image }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Image information structure /summary> \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v ImageMessage\:CSLibrary::Barcode::Structures::ImageMessage}
{\xe \v CSLibrary::Barcode::Structures::ImageMessage\:ImageMessage}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CSLibrary.Structures.ImageMessage.ImageMessage ()}}
\par
{\bkmkstart AAAAAAADQJ}
{\bkmkend AAAAAAADQJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v dwJpegQFactor\:CSLibrary::Barcode::Structures::ImageMessage}
{\xe \v CSLibrary::Barcode::Structures::ImageMessage\:dwJpegQFactor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint CSLibrary.Structures.ImageMessage.dwJpegQFactor = 80}}
\par
{\bkmkstart AAAAAAADQK}
{\bkmkend AAAAAAADQK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
JPEG Quality Factor, default 80% }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v imageFormat\:CSLibrary::Barcode::Structures::ImageMessage}
{\xe \v CSLibrary::Barcode::Structures::ImageMessage\:imageFormat}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b ImgFormat} CSLibrary.Structures.ImageMessage.imageFormat}}
\par
{\bkmkstart AAAAAAADQL}
{\bkmkend AAAAAAADQL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Image Format for returned data }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v imgSize\:CSLibrary::Barcode::Structures::ImageMessage}
{\xe \v CSLibrary::Barcode::Structures::ImageMessage\:imgSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b SIZE} CSLibrary.Structures.ImageMessage.imgSize}}
\par
{\bkmkstart AAAAAAADQM}
{\bkmkend AAAAAAADQM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Size of image returned. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v nBufferSize\:CSLibrary::Barcode::Structures::ImageMessage}
{\xe \v CSLibrary::Barcode::Structures::ImageMessage\:nBufferSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Int32 CSLibrary.Structures.ImageMessage.nBufferSize}}
\par
{\bkmkstart AAAAAAADQN}
{\bkmkend AAAAAAADQN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Size of buffer in bytes }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v nBytesReturned\:CSLibrary::Barcode::Structures::ImageMessage}
{\xe \v CSLibrary::Barcode::Structures::ImageMessage\:nBytesReturned}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Int32 CSLibrary.Structures.ImageMessage.nBytesReturned}}
\par
{\bkmkstart AAAAAAADQO}
{\bkmkend AAAAAAADQO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Number of bytes returned. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v nCapturedFrames\:CSLibrary::Barcode::Structures::ImageMessage}
{\xe \v CSLibrary::Barcode::Structures::ImageMessage\:nCapturedFrames}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Int32 CSLibrary.Structures.ImageMessage.nCapturedFrames}}
\par
{\bkmkstart AAAAAAADQP}
{\bkmkend AAAAAAADQP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Number of frames captured prior to this image }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v nExposureTime\:CSLibrary::Barcode::Structures::ImageMessage}
{\xe \v CSLibrary::Barcode::Structures::ImageMessage\:nExposureTime}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Int32 CSLibrary.Structures.ImageMessage.nExposureTime}}
\par
{\bkmkstart AAAAAAADQQ}
{\bkmkend AAAAAAADQQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Exposure time used to capture this image }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v nGain\:CSLibrary::Barcode::Structures::ImageMessage}
{\xe \v CSLibrary::Barcode::Structures::ImageMessage\:nGain}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Int32 CSLibrary.Structures.ImageMessage.nGain}}
\par
{\bkmkstart AAAAAAADQR}
{\bkmkend AAAAAAADQR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gain value used to capture this image }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v nOverexposedPixels\:CSLibrary::Barcode::Structures::ImageMessage}
{\xe \v CSLibrary::Barcode::Structures::ImageMessage\:nOverexposedPixels}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Int32 CSLibrary.Structures.ImageMessage.nOverexposedPixels}}
\par
{\bkmkstart AAAAAAADQS}
{\bkmkend AAAAAAADQS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Number of overexposed pixels in image }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v nUnderexposedPixels\:CSLibrary::Barcode::Structures::ImageMessage}
{\xe \v CSLibrary::Barcode::Structures::ImageMessage\:nUnderexposedPixels}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Int32 CSLibrary.Structures.ImageMessage.nUnderexposedPixels}}
\par
{\bkmkstart AAAAAAADQT}
{\bkmkend AAAAAAADQT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Number of underexposed pixels in image }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v puchBuffer\:CSLibrary::Barcode::Structures::ImageMessage}
{\xe \v CSLibrary::Barcode::Structures::ImageMessage\:puchBuffer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr CSLibrary.Structures.ImageMessage.puchBuffer}}
\par
{\bkmkstart AAAAAAADQU}
{\bkmkend AAAAAAADQU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pointer Buffer for image }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
CSLibrary/BarcodeReader/Structures/{\b CSLibrary.Barcode.Structures.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary.Structures.ImagerCapabilitiesParms Class Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary.Structures.ImagerCapabilitiesParms}
{\xe \v CSLibrary.Structures.ImagerCapabilitiesParms}
{\bkmkstart AAAAAAADQV}
{\bkmkend AAAAAAADQV}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Imager capabilities structure }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SIZE} {\b fullImgSize}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Size of image captured by imager before cropping and subsampling. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt32 {\b dwImgrBpp}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Bits per pixel of image captured by imager. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DecoderType} {\b decoderType}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Level of symbology support in the imager's decoder. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ImagerType} {\b imagerType}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Decoded Out Serial, Decoded Out USB, Non-Decoded Out. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt32 {\b dwStructSize} = 24\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure size }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Imager capabilities structure \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v decoderType\:CSLibrary::Barcode::Structures::ImagerCapabilitiesParms}
{\xe \v CSLibrary::Barcode::Structures::ImagerCapabilitiesParms\:decoderType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b DecoderType} CSLibrary.Structures.ImagerCapabilitiesParms.decoderType}}
\par
{\bkmkstart AAAAAAADQW}
{\bkmkend AAAAAAADQW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Level of symbology support in the imager's decoder. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v dwImgrBpp\:CSLibrary::Barcode::Structures::ImagerCapabilitiesParms}
{\xe \v CSLibrary::Barcode::Structures::ImagerCapabilitiesParms\:dwImgrBpp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt32 CSLibrary.Structures.ImagerCapabilitiesParms.dwImgrBpp}}
\par
{\bkmkstart AAAAAAADQX}
{\bkmkend AAAAAAADQX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Bits per pixel of image captured by imager. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v dwStructSize\:CSLibrary::Barcode::Structures::ImagerCapabilitiesParms}
{\xe \v CSLibrary::Barcode::Structures::ImagerCapabilitiesParms\:dwStructSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt32 CSLibrary.Structures.ImagerCapabilitiesParms.dwStructSize = 24{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADQY}
{\bkmkend AAAAAAADQY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure size }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v fullImgSize\:CSLibrary::Barcode::Structures::ImagerCapabilitiesParms}
{\xe \v CSLibrary::Barcode::Structures::ImagerCapabilitiesParms\:fullImgSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b SIZE} CSLibrary.Structures.ImagerCapabilitiesParms.fullImgSize}}
\par
{\bkmkstart AAAAAAADQZ}
{\bkmkend AAAAAAADQZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Size of image captured by imager before cropping and subsampling. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v imagerType\:CSLibrary::Barcode::Structures::ImagerCapabilitiesParms}
{\xe \v CSLibrary::Barcode::Structures::ImagerCapabilitiesParms\:imagerType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b ImagerType} CSLibrary.Structures.ImagerCapabilitiesParms.imagerType}}
\par
{\bkmkstart AAAAAAADRA}
{\bkmkend AAAAAAADRA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Decoded Out Serial, Decoded Out USB, Non-Decoded Out. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
CSLibrary/BarcodeReader/Structures/{\b CSLibrary.Barcode.Structures.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary.Structures.ImageTransferParms Class Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary.Structures.ImageTransferParms}
{\xe \v CSLibrary.Structures.ImageTransferParms}
{\bkmkstart AAAAAAADRB}
{\bkmkend AAAAAAADRB}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Image Transfer structure /summary> }}\par
Inheritance diagram for CSLibrary.Structures.ImageTransferParms:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_c_s_library_1_1_barcode_1_1_structures_1_1_image_transfer_parms.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ImageTransferParms} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ImgTransferMask} {\b dwMask} = ImgTransferMask.TRANSFER_MASK_ALL\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mask of active items. Notes: You can use OR to enable multiple items }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint {\b dwBitsPerPixel}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Bits per pixel for transferred image (1 or 8 bits only). }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint {\b dwSubSample}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Subsample value. This means take every dwSubSample pixels of every dwSubSample row. The default is 1.(1-10) }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RECT} {\b boundingRect}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Rectangle describing a window within the image. All pixels outside this rectangle are omitted from the transferred image. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b bHistogramStretch}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Scaled frequency of total image pixels. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Compression} {\b compressionMode}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
How image is compressed on transfer. Compression reduces the amount of data to transfer but can reduce image quality (Lossy compression) and does take a finite length of time. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint {\b dwCompressionFactor}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Lossy compression is JPEG lossy. If lossy compression, this value specifies the image quality percentage from 100 (virtually no loss) to 1 (very poor). Image size drops with decrease in image quality. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint {\b dwEdgeEhancement}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A sharpening filter used to sharpen light/dark edges within the image. The valid range of values is 0 (no edge enhancement) to 23 (maximum edge enhancement). }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint {\b dwGammaCorrection}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Applies gamma correction to the image. The valid range is 0 (no gamma correction) to 1000 (maximum correction). }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint {\b dwTextEnhancement}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This filter is an edge sharpening filter optimized for text. The valid range is 0 (no text enhancement) to 255 (maximum enhancement). }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b bInfinityFilter}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is a boolean flag (TRUE or FALSE) that applies a filter to the image that sharpens objects beyond the normal focal dis- tance of the imager. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b bFlipImage}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is a boolean flag (TRUE or FALSE) that flips the image 180\'A1\'E3 }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b bNoiseFilter}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is a boolean flag (TRUE or FALSE) that enables or dis- ables the imager smoothing filter. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b hTransferNotifyHwnd}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The user-defined window message. WM_ID.WM_SDK_PROGRESS_HWND_MSG (wParam is bytes so far, lParam is bytes to send) will be sent if this member mask speci- fied and its value is a valid windows handle. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b pdwTransferPercent}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
If non-NULL and specified in MASK, the percent complete of the transfer is placed here. It is up to the caller to check the value in a thread or timer callback. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Image Transfer structure /summary> \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v ImageTransferParms\:CSLibrary::Barcode::Structures::ImageTransferParms}
{\xe \v CSLibrary::Barcode::Structures::ImageTransferParms\:ImageTransferParms}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CSLibrary.Structures.ImageTransferParms.ImageTransferParms ()}}
\par
{\bkmkstart AAAAAAADRC}
{\bkmkend AAAAAAADRC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v bFlipImage\:CSLibrary::Barcode::Structures::ImageTransferParms}
{\xe \v CSLibrary::Barcode::Structures::ImageTransferParms\:bFlipImage}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool CSLibrary.Structures.ImageTransferParms.bFlipImage}}
\par
{\bkmkstart AAAAAAADRD}
{\bkmkend AAAAAAADRD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is a boolean flag (TRUE or FALSE) that flips the image 180\'A1\'E3 }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v bHistogramStretch\:CSLibrary::Barcode::Structures::ImageTransferParms}
{\xe \v CSLibrary::Barcode::Structures::ImageTransferParms\:bHistogramStretch}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool CSLibrary.Structures.ImageTransferParms.bHistogramStretch}}
\par
{\bkmkstart AAAAAAADRE}
{\bkmkend AAAAAAADRE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Scaled frequency of total image pixels. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v bInfinityFilter\:CSLibrary::Barcode::Structures::ImageTransferParms}
{\xe \v CSLibrary::Barcode::Structures::ImageTransferParms\:bInfinityFilter}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool CSLibrary.Structures.ImageTransferParms.bInfinityFilter}}
\par
{\bkmkstart AAAAAAADRF}
{\bkmkend AAAAAAADRF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is a boolean flag (TRUE or FALSE) that applies a filter to the image that sharpens objects beyond the normal focal dis- tance of the imager. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v bNoiseFilter\:CSLibrary::Barcode::Structures::ImageTransferParms}
{\xe \v CSLibrary::Barcode::Structures::ImageTransferParms\:bNoiseFilter}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool CSLibrary.Structures.ImageTransferParms.bNoiseFilter}}
\par
{\bkmkstart AAAAAAADRG}
{\bkmkend AAAAAAADRG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is a boolean flag (TRUE or FALSE) that enables or dis- ables the imager smoothing filter. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v boundingRect\:CSLibrary::Barcode::Structures::ImageTransferParms}
{\xe \v CSLibrary::Barcode::Structures::ImageTransferParms\:boundingRect}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RECT} CSLibrary.Structures.ImageTransferParms.boundingRect}}
\par
{\bkmkstart AAAAAAADRH}
{\bkmkend AAAAAAADRH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Rectangle describing a window within the image. All pixels outside this rectangle are omitted from the transferred image. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v compressionMode\:CSLibrary::Barcode::Structures::ImageTransferParms}
{\xe \v CSLibrary::Barcode::Structures::ImageTransferParms\:compressionMode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Compression} CSLibrary.Structures.ImageTransferParms.compressionMode}}
\par
{\bkmkstart AAAAAAADRI}
{\bkmkend AAAAAAADRI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
How image is compressed on transfer. Compression reduces the amount of data to transfer but can reduce image quality (Lossy compression) and does take a finite length of time. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v dwBitsPerPixel\:CSLibrary::Barcode::Structures::ImageTransferParms}
{\xe \v CSLibrary::Barcode::Structures::ImageTransferParms\:dwBitsPerPixel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint CSLibrary.Structures.ImageTransferParms.dwBitsPerPixel}}
\par
{\bkmkstart AAAAAAADRJ}
{\bkmkend AAAAAAADRJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Bits per pixel for transferred image (1 or 8 bits only). }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v dwCompressionFactor\:CSLibrary::Barcode::Structures::ImageTransferParms}
{\xe \v CSLibrary::Barcode::Structures::ImageTransferParms\:dwCompressionFactor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint CSLibrary.Structures.ImageTransferParms.dwCompressionFactor}}
\par
{\bkmkstart AAAAAAADRK}
{\bkmkend AAAAAAADRK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Lossy compression is JPEG lossy. If lossy compression, this value specifies the image quality percentage from 100 (virtually no loss) to 1 (very poor). Image size drops with decrease in image quality. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v dwEdgeEhancement\:CSLibrary::Barcode::Structures::ImageTransferParms}
{\xe \v CSLibrary::Barcode::Structures::ImageTransferParms\:dwEdgeEhancement}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint CSLibrary.Structures.ImageTransferParms.dwEdgeEhancement}}
\par
{\bkmkstart AAAAAAADRL}
{\bkmkend AAAAAAADRL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A sharpening filter used to sharpen light/dark edges within the image. The valid range of values is 0 (no edge enhancement) to 23 (maximum edge enhancement). }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v dwGammaCorrection\:CSLibrary::Barcode::Structures::ImageTransferParms}
{\xe \v CSLibrary::Barcode::Structures::ImageTransferParms\:dwGammaCorrection}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint CSLibrary.Structures.ImageTransferParms.dwGammaCorrection}}
\par
{\bkmkstart AAAAAAADRM}
{\bkmkend AAAAAAADRM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Applies gamma correction to the image. The valid range is 0 (no gamma correction) to 1000 (maximum correction). }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v dwMask\:CSLibrary::Barcode::Structures::ImageTransferParms}
{\xe \v CSLibrary::Barcode::Structures::ImageTransferParms\:dwMask}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b ImgTransferMask} CSLibrary.Structures.ImageTransferParms.dwMask = ImgTransferMask.TRANSFER_MASK_ALL}}
\par
{\bkmkstart AAAAAAADRN}
{\bkmkend AAAAAAADRN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mask of active items. Notes: You can use OR to enable multiple items }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v dwSubSample\:CSLibrary::Barcode::Structures::ImageTransferParms}
{\xe \v CSLibrary::Barcode::Structures::ImageTransferParms\:dwSubSample}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint CSLibrary.Structures.ImageTransferParms.dwSubSample}}
\par
{\bkmkstart AAAAAAADRO}
{\bkmkend AAAAAAADRO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Subsample value. This means take every dwSubSample pixels of every dwSubSample row. The default is 1.(1-10) }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v dwTextEnhancement\:CSLibrary::Barcode::Structures::ImageTransferParms}
{\xe \v CSLibrary::Barcode::Structures::ImageTransferParms\:dwTextEnhancement}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint CSLibrary.Structures.ImageTransferParms.dwTextEnhancement}}
\par
{\bkmkstart AAAAAAADRP}
{\bkmkend AAAAAAADRP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This filter is an edge sharpening filter optimized for text. The valid range is 0 (no text enhancement) to 255 (maximum enhancement). }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v hTransferNotifyHwnd\:CSLibrary::Barcode::Structures::ImageTransferParms}
{\xe \v CSLibrary::Barcode::Structures::ImageTransferParms\:hTransferNotifyHwnd}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr CSLibrary.Structures.ImageTransferParms.hTransferNotifyHwnd}}
\par
{\bkmkstart AAAAAAADRQ}
{\bkmkend AAAAAAADRQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The user-defined window message. WM_ID.WM_SDK_PROGRESS_HWND_MSG (wParam is bytes so far, lParam is bytes to send) will be sent if this member mask speci- fied and its value is a valid windows handle. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v pdwTransferPercent\:CSLibrary::Barcode::Structures::ImageTransferParms}
{\xe \v CSLibrary::Barcode::Structures::ImageTransferParms\:pdwTransferPercent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr CSLibrary.Structures.ImageTransferParms.pdwTransferPercent}}
\par
{\bkmkstart AAAAAAADRR}
{\bkmkend AAAAAAADRR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
If non-NULL and specified in MASK, the percent complete of the transfer is placed here. It is up to the caller to check the value in a thread or timer callback. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
CSLibrary/BarcodeReader/Structures/{\b CSLibrary.Barcode.Structures.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary.Structures.IntelligentImage Class Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary.Structures.IntelligentImage}
{\xe \v CSLibrary.Structures.IntelligentImage}
{\bkmkstart AAAAAAADRS}
{\bkmkend AAAAAAADRS}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Intelligent Image Capture }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt32 {\b dwAspectRatio}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ratio of barcode height to narrow element width }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Int64 {\b nOffsetX}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
offset in X direction, relative to barcode center }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Int64 {\b nOffsetY}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
offset in Y direction }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt32 {\b dwWidth}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
width of image in IntellBarcodeUnits }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt32 {\b dwHeight}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
height of image }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SIZE} {\b maxImgSize}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Maximum width and height for intell image }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b bSendBinary}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Have reader binarize data before transfer. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt32 {\b dwStructSize} = 36\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure size }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Intelligent Image Capture \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v bSendBinary\:CSLibrary::Barcode::Structures::IntelligentImage}
{\xe \v CSLibrary::Barcode::Structures::IntelligentImage\:bSendBinary}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool CSLibrary.Structures.IntelligentImage.bSendBinary}}
\par
{\bkmkstart AAAAAAADRT}
{\bkmkend AAAAAAADRT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Have reader binarize data before transfer. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v dwAspectRatio\:CSLibrary::Barcode::Structures::IntelligentImage}
{\xe \v CSLibrary::Barcode::Structures::IntelligentImage\:dwAspectRatio}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt32 CSLibrary.Structures.IntelligentImage.dwAspectRatio}}
\par
{\bkmkstart AAAAAAADRU}
{\bkmkend AAAAAAADRU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ratio of barcode height to narrow element width }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v dwHeight\:CSLibrary::Barcode::Structures::IntelligentImage}
{\xe \v CSLibrary::Barcode::Structures::IntelligentImage\:dwHeight}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt32 CSLibrary.Structures.IntelligentImage.dwHeight}}
\par
{\bkmkstart AAAAAAADRV}
{\bkmkend AAAAAAADRV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
height of image }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v dwStructSize\:CSLibrary::Barcode::Structures::IntelligentImage}
{\xe \v CSLibrary::Barcode::Structures::IntelligentImage\:dwStructSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt32 CSLibrary.Structures.IntelligentImage.dwStructSize = 36{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADRW}
{\bkmkend AAAAAAADRW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure size }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v dwWidth\:CSLibrary::Barcode::Structures::IntelligentImage}
{\xe \v CSLibrary::Barcode::Structures::IntelligentImage\:dwWidth}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt32 CSLibrary.Structures.IntelligentImage.dwWidth}}
\par
{\bkmkstart AAAAAAADRX}
{\bkmkend AAAAAAADRX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
width of image in IntellBarcodeUnits }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v maxImgSize\:CSLibrary::Barcode::Structures::IntelligentImage}
{\xe \v CSLibrary::Barcode::Structures::IntelligentImage\:maxImgSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b SIZE} CSLibrary.Structures.IntelligentImage.maxImgSize}}
\par
{\bkmkstart AAAAAAADRY}
{\bkmkend AAAAAAADRY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Maximum width and height for intell image }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v nOffsetX\:CSLibrary::Barcode::Structures::IntelligentImage}
{\xe \v CSLibrary::Barcode::Structures::IntelligentImage\:nOffsetX}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Int64 CSLibrary.Structures.IntelligentImage.nOffsetX}}
\par
{\bkmkstart AAAAAAADRZ}
{\bkmkend AAAAAAADRZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
offset in X direction, relative to barcode center }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v nOffsetY\:CSLibrary::Barcode::Structures::IntelligentImage}
{\xe \v CSLibrary::Barcode::Structures::IntelligentImage\:nOffsetY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Int64 CSLibrary.Structures.IntelligentImage.nOffsetY}}
\par
{\bkmkstart AAAAAAADSA}
{\bkmkend AAAAAAADSA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
offset in Y direction }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
CSLibrary/BarcodeReader/Structures/{\b CSLibrary.Barcode.Structures.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary.Structures.InternalCustCmdEASParms Class Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary.Structures.InternalCustCmdEASParms}
{\xe \v CSLibrary.Structures.InternalCustCmdEASParms}
{\bkmkstart AAAAAAADSB}
{\bkmkend AAAAAAADSB}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b InternalCustCmdEASParms} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
constructor }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b enable} = false\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enable EAS }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt32 {\b accessPassword} = 0\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The access password for the tags. A value of zero indicates no access password. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt32 {\b retry} = 0\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Retry count }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt32 {\b length} = 16\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure size }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v InternalCustCmdEASParms\:CSLibrary::Structures::InternalCustCmdEASParms}
{\xe \v CSLibrary::Structures::InternalCustCmdEASParms\:InternalCustCmdEASParms}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CSLibrary.Structures.InternalCustCmdEASParms.InternalCustCmdEASParms ()}}
\par
{\bkmkstart AAAAAAADSC}
{\bkmkend AAAAAAADSC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
constructor }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v accessPassword\:CSLibrary::Structures::InternalCustCmdEASParms}
{\xe \v CSLibrary::Structures::InternalCustCmdEASParms\:accessPassword}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt32 CSLibrary.Structures.InternalCustCmdEASParms.accessPassword = 0}}
\par
{\bkmkstart AAAAAAADSD}
{\bkmkend AAAAAAADSD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The access password for the tags. A value of zero indicates no access password. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v enable\:CSLibrary::Structures::InternalCustCmdEASParms}
{\xe \v CSLibrary::Structures::InternalCustCmdEASParms\:enable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool CSLibrary.Structures.InternalCustCmdEASParms.enable = false}}
\par
{\bkmkstart AAAAAAADSE}
{\bkmkend AAAAAAADSE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enable EAS }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v length\:CSLibrary::Structures::InternalCustCmdEASParms}
{\xe \v CSLibrary::Structures::InternalCustCmdEASParms\:length}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt32 CSLibrary.Structures.InternalCustCmdEASParms.length = 16{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADSF}
{\bkmkend AAAAAAADSF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure size }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v retry\:CSLibrary::Structures::InternalCustCmdEASParms}
{\xe \v CSLibrary::Structures::InternalCustCmdEASParms\:retry}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt32 CSLibrary.Structures.InternalCustCmdEASParms.retry = 0}}
\par
{\bkmkstart AAAAAAADSG}
{\bkmkend AAAAAAADSG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Retry count }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
CSLibrary/RFIDReader/Structures/{\b Intel.Structures.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary.Structures.InternalCustCmdTagReadProtectParms Class Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary.Structures.InternalCustCmdTagReadProtectParms}
{\xe \v CSLibrary.Structures.InternalCustCmdTagReadProtectParms}
{\bkmkstart AAAAAAADSH}
{\bkmkend AAAAAAADSH}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b InternalCustCmdTagReadProtectParms} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
constructor }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt32 {\b length_} = (UInt32)(4 + (4 + IntPtr.Size * 3) + 4)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure size }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt32 {\b accessPassword} = 0\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The access password for the tags. A value of zero indicates no access password. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt32 {\b retry} = 0\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Retry count }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v InternalCustCmdTagReadProtectParms\:CSLibrary::Structures::InternalCustCmdTagReadProtectParms}
{\xe \v CSLibrary::Structures::InternalCustCmdTagReadProtectParms\:InternalCustCmdTagReadProtectParms}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CSLibrary.Structures.InternalCustCmdTagReadProtectParms.InternalCustCmdTagReadProtectParms ()}}
\par
{\bkmkstart AAAAAAADSI}
{\bkmkend AAAAAAADSI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
constructor }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v accessPassword\:CSLibrary::Structures::InternalCustCmdTagReadProtectParms}
{\xe \v CSLibrary::Structures::InternalCustCmdTagReadProtectParms\:accessPassword}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt32 CSLibrary.Structures.InternalCustCmdTagReadProtectParms.accessPassword = 0}}
\par
{\bkmkstart AAAAAAADSJ}
{\bkmkend AAAAAAADSJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The access password for the tags. A value of zero indicates no access password. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v length_\:CSLibrary::Structures::InternalCustCmdTagReadProtectParms}
{\xe \v CSLibrary::Structures::InternalCustCmdTagReadProtectParms\:length_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt32 CSLibrary.Structures.InternalCustCmdTagReadProtectParms.length_ = (UInt32)(4 + (4 + IntPtr.Size * 3) + 4)}}
\par
{\bkmkstart AAAAAAADSK}
{\bkmkend AAAAAAADSK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure size }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v retry\:CSLibrary::Structures::InternalCustCmdTagReadProtectParms}
{\xe \v CSLibrary::Structures::InternalCustCmdTagReadProtectParms\:retry}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt32 CSLibrary.Structures.InternalCustCmdTagReadProtectParms.retry = 0}}
\par
{\bkmkstart AAAAAAADSL}
{\bkmkend AAAAAAADSL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Retry count }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
CSLibrary/RFIDReader/Structures/{\b Intel.Structures.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary.Structures.InternalTagInventoryParms Class Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary.Structures.InternalTagInventoryParms}
{\xe \v CSLibrary.Structures.InternalTagInventoryParms}
{\bkmkstart AAAAAAADSM}
{\bkmkend AAAAAAADSM}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b InternalTagInventoryParms} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
callback pointer }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
readonly UInt32 {\b length} = (UInt32)(10 + IntPtr.Size)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SelectFlags} {\b flags} = {\b SelectFlags.UNKNOWN}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Flag - Zero or combination of Select or Post-Match }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ushort {\b tagStopCount} = 0\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v InternalTagInventoryParms\:CSLibrary::Structures::InternalTagInventoryParms}
{\xe \v CSLibrary::Structures::InternalTagInventoryParms\:InternalTagInventoryParms}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CSLibrary.Structures.InternalTagInventoryParms.InternalTagInventoryParms ()}}
\par
{\bkmkstart AAAAAAADSN}
{\bkmkend AAAAAAADSN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
callback pointer }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
constructor \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v flags\:CSLibrary::Structures::InternalTagInventoryParms}
{\xe \v CSLibrary::Structures::InternalTagInventoryParms\:flags}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b SelectFlags} CSLibrary.Structures.InternalTagInventoryParms.flags = {\b SelectFlags.UNKNOWN}}}
\par
{\bkmkstart AAAAAAADSO}
{\bkmkend AAAAAAADSO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Flag - Zero or combination of Select or Post-Match }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v length\:CSLibrary::Structures::InternalTagInventoryParms}
{\xe \v CSLibrary::Structures::InternalTagInventoryParms\:length}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly UInt32 CSLibrary.Structures.InternalTagInventoryParms.length = (UInt32)(10 + IntPtr.Size)}}
\par
{\bkmkstart AAAAAAADSP}
{\bkmkend AAAAAAADSP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v tagStopCount\:CSLibrary::Structures::InternalTagInventoryParms}
{\xe \v CSLibrary::Structures::InternalTagInventoryParms\:tagStopCount}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ushort CSLibrary.Structures.InternalTagInventoryParms.tagStopCount = 0}}
\par
{\bkmkstart AAAAAAADSQ}
{\bkmkend AAAAAAADSQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
}}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The maximum number of tags to which the tag-protocol operation will be \par
applied. If this number is zero, then the operation is applied to all \par
tags that match the selection, and optionally post-singulation, match \par
criteria. If this number is non-zero, the antenna-port dwell-time and \par
inventory-round-count constraints still apply, however the operation \par
will be prematurely terminated if the maximum number of tags have the \par
tag-protocol operation applied to them. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
CSLibrary/RFIDReader/Structures/{\b Intel.Structures.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary.Structures.InternalTagRangingParms Class Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary.Structures.InternalTagRangingParms}
{\xe \v CSLibrary.Structures.InternalTagRangingParms}
{\bkmkstart AAAAAAADSR}
{\bkmkend AAAAAAADSR}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b InternalTagRangingParms} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
callback pointer }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
readonly UInt32 {\b length} = (UInt32)(10 + IntPtr.Size)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure size }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SelectFlags} {\b flags} = {\b SelectFlags.UNKNOWN}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Flag - Zero or combination of Select or Post-Match }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ushort {\b tagStopCount} = 0\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v InternalTagRangingParms\:CSLibrary::Structures::InternalTagRangingParms}
{\xe \v CSLibrary::Structures::InternalTagRangingParms\:InternalTagRangingParms}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CSLibrary.Structures.InternalTagRangingParms.InternalTagRangingParms ()}}
\par
{\bkmkstart AAAAAAADSS}
{\bkmkend AAAAAAADSS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
callback pointer }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
constructor \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v flags\:CSLibrary::Structures::InternalTagRangingParms}
{\xe \v CSLibrary::Structures::InternalTagRangingParms\:flags}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b SelectFlags} CSLibrary.Structures.InternalTagRangingParms.flags = {\b SelectFlags.UNKNOWN}}}
\par
{\bkmkstart AAAAAAADST}
{\bkmkend AAAAAAADST}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Flag - Zero or combination of Select or Post-Match }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v length\:CSLibrary::Structures::InternalTagRangingParms}
{\xe \v CSLibrary::Structures::InternalTagRangingParms\:length}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly UInt32 CSLibrary.Structures.InternalTagRangingParms.length = (UInt32)(10 + IntPtr.Size)}}
\par
{\bkmkstart AAAAAAADSU}
{\bkmkend AAAAAAADSU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure size }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v tagStopCount\:CSLibrary::Structures::InternalTagRangingParms}
{\xe \v CSLibrary::Structures::InternalTagRangingParms\:tagStopCount}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ushort CSLibrary.Structures.InternalTagRangingParms.tagStopCount = 0}}
\par
{\bkmkstart AAAAAAADSV}
{\bkmkend AAAAAAADSV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
}}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The maximum number of tags to which the tag-protocol operation will be \par
applied. If this number is zero, then the operation is applied to all \par
tags that match the selection, and optionally post-singulation, match \par
criteria. If this number is non-zero, the antenna-port dwell-time and \par
inventory-round-count constraints still apply, however the operation \par
will be prematurely terminated if the maximum number of tags have the \par
tag-protocol operation applied to them. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
CSLibrary/RFIDReader/Structures/{\b Intel.Structures.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary.Structures.InternalTagReadProtectParms Class Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary.Structures.InternalTagReadProtectParms}
{\xe \v CSLibrary.Structures.InternalTagReadProtectParms}
{\bkmkstart AAAAAAADSW}
{\bkmkend AAAAAAADSW}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b InternalTagReadProtectParms} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
constructor }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt32 {\b length_} = (UInt32)(4 + (4 + IntPtr.Size * 3) + 4)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure size }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CommonParms} {\b common}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The common tag-protocol operation parameters. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt32 {\b accessPassword} = 0\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The access password for the tags. A value of zero indicates no access password. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v InternalTagReadProtectParms\:CSLibrary::Structures::InternalTagReadProtectParms}
{\xe \v CSLibrary::Structures::InternalTagReadProtectParms\:InternalTagReadProtectParms}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CSLibrary.Structures.InternalTagReadProtectParms.InternalTagReadProtectParms ()}}
\par
{\bkmkstart AAAAAAADSX}
{\bkmkend AAAAAAADSX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
constructor }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v accessPassword\:CSLibrary::Structures::InternalTagReadProtectParms}
{\xe \v CSLibrary::Structures::InternalTagReadProtectParms\:accessPassword}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt32 CSLibrary.Structures.InternalTagReadProtectParms.accessPassword = 0}}
\par
{\bkmkstart AAAAAAADSY}
{\bkmkend AAAAAAADSY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The access password for the tags. A value of zero indicates no access password. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v common\:CSLibrary::Structures::InternalTagReadProtectParms}
{\xe \v CSLibrary::Structures::InternalTagReadProtectParms\:common}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b CommonParms} CSLibrary.Structures.InternalTagReadProtectParms.common}}
\par
{\bkmkstart AAAAAAADSZ}
{\bkmkend AAAAAAADSZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The common tag-protocol operation parameters. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v length_\:CSLibrary::Structures::InternalTagReadProtectParms}
{\xe \v CSLibrary::Structures::InternalTagReadProtectParms\:length_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt32 CSLibrary.Structures.InternalTagReadProtectParms.length_ = (UInt32)(4 + (4 + IntPtr.Size * 3) + 4)}}
\par
{\bkmkstart AAAAAAADTA}
{\bkmkend AAAAAAADTA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure size }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
CSLibrary/RFIDReader/Structures/{\b Intel.Structures.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary.Structures.InternalTagSearchOneParms Class Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary.Structures.InternalTagSearchOneParms}
{\xe \v CSLibrary.Structures.InternalTagSearchOneParms}
{\bkmkstart AAAAAAADTB}
{\bkmkend AAAAAAADTB}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b InternalTagSearchOneParms} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
readonly UInt32 {\b length} = (UInt32)(8 + IntPtr.Size)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure size }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Boolean {\b avgRssi}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v InternalTagSearchOneParms\:CSLibrary::Structures::InternalTagSearchOneParms}
{\xe \v CSLibrary::Structures::InternalTagSearchOneParms\:InternalTagSearchOneParms}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CSLibrary.Structures.InternalTagSearchOneParms.InternalTagSearchOneParms ()}}
\par
{\bkmkstart AAAAAAADTC}
{\bkmkend AAAAAAADTC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
}}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
constructor \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v avgRssi\:CSLibrary::Structures::InternalTagSearchOneParms}
{\xe \v CSLibrary::Structures::InternalTagSearchOneParms\:avgRssi}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Boolean CSLibrary.Structures.InternalTagSearchOneParms.avgRssi}}
\par
{\bkmkstart AAAAAAADTD}
{\bkmkend AAAAAAADTD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
}}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v length\:CSLibrary::Structures::InternalTagSearchOneParms}
{\xe \v CSLibrary::Structures::InternalTagSearchOneParms\:length}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly UInt32 CSLibrary.Structures.InternalTagSearchOneParms.length = (UInt32)(8 + IntPtr.Size)}}
\par
{\bkmkstart AAAAAAADTE}
{\bkmkend AAAAAAADTE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure size }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
CSLibrary/RFIDReader/Structures/{\b Intel.Structures.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary.Structures.INVENTORY_PKT Struct Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary.Structures.INVENTORY_PKT}
{\xe \v CSLibrary.Structures.INVENTORY_PKT}
{\bkmkstart AAAAAAADTF}
{\bkmkend AAAAAAADTF}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tag Access Packet }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt32 {\b ms_ctr}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Current millisecond timer/counter }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Single {\b rssi}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The Receive Signal Strength Indicator (RSSI). }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt16 {\b ana_ctrl}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt16 {\b ana_port}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Antenna port number currently using. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b isTruncate}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EPC is truncated. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b pc}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Protocol Control }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b epc}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Electronic Product Code }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt32 {\b flags}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Private Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static readonly int {\b ISO_18000_6C_CRCInvalidFlag}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tag Access Packet \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v ana_ctrl\:CSLibrary::Structures::INVENTORY_PKT}
{\xe \v CSLibrary::Structures::INVENTORY_PKT\:ana_ctrl}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt16 CSLibrary.Structures.INVENTORY_PKT.ana_ctrl}}
\par
{\bkmkstart AAAAAAADTG}
{\bkmkend AAAAAAADTG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
}}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The value of the R1000\'92s ANA_CTRL1 register at time the RSSI \par
measurement was taken - contains the IF LNA\'92s gain info for RSSI. \par
Bits 15:6: reserved for future use \par
Bits 5:4: IF LNA gain. 0=24dB, 1=18dB, 3=12dB \par
Bits 3:0: reserved for future use \par
}}
{\xe \v ana_port\:CSLibrary::Structures::INVENTORY_PKT}
{\xe \v CSLibrary::Structures::INVENTORY_PKT\:ana_port}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt16 CSLibrary.Structures.INVENTORY_PKT.ana_port}}
\par
{\bkmkstart AAAAAAADTH}
{\bkmkend AAAAAAADTH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Antenna port number currently using. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v epc\:CSLibrary::Structures::INVENTORY_PKT}
{\xe \v CSLibrary::Structures::INVENTORY_PKT\:epc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string CSLibrary.Structures.INVENTORY_PKT.epc}}
\par
{\bkmkstart AAAAAAADTI}
{\bkmkend AAAAAAADTI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Electronic Product Code }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v flags\:CSLibrary::Structures::INVENTORY_PKT}
{\xe \v CSLibrary::Structures::INVENTORY_PKT\:flags}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt32 CSLibrary.Structures.INVENTORY_PKT.flags{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADTJ}
{\bkmkend AAAAAAADTJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ISO_18000_6C_CRCInvalidFlag\:CSLibrary::Structures::INVENTORY_PKT}
{\xe \v CSLibrary::Structures::INVENTORY_PKT\:ISO_18000_6C_CRCInvalidFlag}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly int CSLibrary.Structures.INVENTORY_PKT.ISO_18000_6C_CRCInvalidFlag{\f2 [static]}, {\f2 [private]}}}
\par
{\bkmkstart AAAAAAADTK}
{\bkmkend AAAAAAADTK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v isTruncate\:CSLibrary::Structures::INVENTORY_PKT}
{\xe \v CSLibrary::Structures::INVENTORY_PKT\:isTruncate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool CSLibrary.Structures.INVENTORY_PKT.isTruncate}}
\par
{\bkmkstart AAAAAAADTL}
{\bkmkend AAAAAAADTL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EPC is truncated. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v ms_ctr\:CSLibrary::Structures::INVENTORY_PKT}
{\xe \v CSLibrary::Structures::INVENTORY_PKT\:ms_ctr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt32 CSLibrary.Structures.INVENTORY_PKT.ms_ctr}}
\par
{\bkmkstart AAAAAAADTM}
{\bkmkend AAAAAAADTM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Current millisecond timer/counter }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v pc\:CSLibrary::Structures::INVENTORY_PKT}
{\xe \v CSLibrary::Structures::INVENTORY_PKT\:pc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string CSLibrary.Structures.INVENTORY_PKT.pc}}
\par
{\bkmkstart AAAAAAADTN}
{\bkmkend AAAAAAADTN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Protocol Control }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v rssi\:CSLibrary::Structures::INVENTORY_PKT}
{\xe \v CSLibrary::Structures::INVENTORY_PKT\:rssi}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Single CSLibrary.Structures.INVENTORY_PKT.rssi}}
\par
{\bkmkstart AAAAAAADTO}
{\bkmkend AAAAAAADTO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The Receive Signal Strength Indicator (RSSI). }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
CSLibrary/RFIDReader/Structures/{\b CSLibrary.Structures.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary.Structures.LibraryVersion Class Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary.Structures.LibraryVersion}
{\xe \v CSLibrary.Structures.LibraryVersion}
{\bkmkstart AAAAAAADTP}
{\bkmkend AAAAAAADTP}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Library {\b Version} Structure }}\par
Inheritance diagram for CSLibrary.Structures.LibraryVersion:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_c_s_library_1_1_structures_1_1_library_version.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LibraryVersion} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Library {\b Version} Structure \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v LibraryVersion\:CSLibrary::Structures::LibraryVersion}
{\xe \v CSLibrary::Structures::LibraryVersion\:LibraryVersion}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CSLibrary.Structures.LibraryVersion.LibraryVersion ()}}
\par
{\bkmkstart AAAAAAADTQ}
{\bkmkend AAAAAAADTQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
CSLibrary/RFIDReader/Structures/{\b Intel.Structures.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary.Structures.MacVersion Class Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary.Structures.MacVersion}
{\xe \v CSLibrary.Structures.MacVersion}
{\bkmkstart AAAAAAADTR}
{\bkmkend AAAAAAADTR}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mac {\b Version} Structure }}\par
Inheritance diagram for CSLibrary.Structures.MacVersion:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_c_s_library_1_1_structures_1_1_mac_version.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b MacVersion} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b MacVersion} (UInt32 {\b major}, UInt32 {\b minor}, UInt32 {\b patch})\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mac {\b Version} Structure \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v MacVersion\:CSLibrary::Structures::MacVersion}
{\xe \v CSLibrary::Structures::MacVersion\:MacVersion}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CSLibrary.Structures.MacVersion.MacVersion ()}}
\par
{\bkmkstart AAAAAAADTS}
{\bkmkend AAAAAAADTS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v MacVersion\:CSLibrary::Structures::MacVersion}
{\xe \v CSLibrary::Structures::MacVersion\:MacVersion}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CSLibrary.Structures.MacVersion.MacVersion (UInt32  {\i major}, UInt32  {\i minor}, UInt32  {\i patch})}}
\par
{\bkmkstart AAAAAAADTT}
{\bkmkend AAAAAAADTT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i major} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i minor} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i patch} \cell }{\cell }
{\row }
}
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
CSLibrary/RFIDReader/Structures/{\b Intel.Structures.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary.Structures.MessageBase Class Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary.Structures.MessageBase}
{\xe \v CSLibrary.Structures.MessageBase}
{\bkmkstart AAAAAAADTU}
{\bkmkend AAAAAAADTU}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Barcode} Message base class }}\par
Inheritance diagram for CSLibrary.Structures.MessageBase:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_c_s_library_1_1_barcode_1_1_structures_1_1_message_base.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b MessageBase} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Barcode} Message base class \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v MessageBase\:CSLibrary::Barcode::Structures::MessageBase}
{\xe \v CSLibrary::Barcode::Structures::MessageBase\:MessageBase}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CSLibrary.Structures.MessageBase.MessageBase ()}}
\par
{\bkmkstart AAAAAAADTV}
{\bkmkend AAAAAAADTV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
CSLibrary/BarcodeReader/Structures/{\b CSLibrary.Barcode.Structures.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary.Net.NetFinder Class Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary.Net.NetFinder}
{\xe \v CSLibrary.Net.NetFinder}
{\bkmkstart AAAAAAADGO}
{\bkmkend AAAAAAADGO}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b DeviceFinderArgs}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
DeviceFinder Argument }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b DeviceInfomation}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Netfinder information return from device }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ResultArgs}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Result Argument }}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Types\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b AssignResult} \{ {\b AssignResult.ACCEPTED}, 
{\b AssignResult.REJECTED}, 
{\b AssignResult.TIMEOUT}, 
{\b AssignResult.STARTED}, 
{\b AssignResult.UNKNOWN}
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Result }}}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b SearchDevice} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Stop} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
readonly Plugin.BLE.Abstractions.Contracts.IAdapter {\b Adapter}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Events\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b DeviceFinderArgs} > {\b OnSearchCompleted}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Search device callback event }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b ResultArgs} > {\b OnAssignCompleted}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Assign device callback event }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b RaiseEvent< T >} (EventHandler< T > eventHandler, object sender, T e)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b OnDeviceDiscovered} (object sender, Plugin.BLE.Abstractions.EventArgs.DeviceEventArgs args)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Enumeration Documentation\par
\pard\plain 
{\xe \v AssignResult\:CSLibrary::Net::NetFinder}
{\xe \v CSLibrary::Net::NetFinder\:AssignResult}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b CSLibrary.Net.NetFinder.AssignResult}{\f2 [strong]}}}
\par
{\bkmkstart AAAAAAADGP}
{\bkmkend AAAAAAADGP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Result }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v ACCEPTED\:CSLibrary::Net::NetFinder}
{\xe \v CSLibrary::Net::NetFinder\:ACCEPTED}
{\qr ACCEPTED{\bkmkstart AAAAAAADGQ}
{\bkmkend AAAAAAADGQ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Accepted from device \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v REJECTED\:CSLibrary::Net::NetFinder}
{\xe \v CSLibrary::Net::NetFinder\:REJECTED}
{\qr REJECTED{\bkmkstart AAAAAAADGR}
{\bkmkend AAAAAAADGR}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Rejected from device \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v TIMEOUT\:CSLibrary::Net::NetFinder}
{\xe \v CSLibrary::Net::NetFinder\:TIMEOUT}
{\qr TIMEOUT{\bkmkstart AAAAAAADGS}
{\bkmkend AAAAAAADGS}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
response timeout \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v STARTED\:CSLibrary::Net::NetFinder}
{\xe \v CSLibrary::Net::NetFinder\:STARTED}
{\qr STARTED{\bkmkstart AAAAAAADGT}
{\bkmkend AAAAAAADGT}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
assignment started, please wait to finished \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
{\xe \v UNKNOWN\:CSLibrary::Net::NetFinder}
{\xe \v CSLibrary::Net::NetFinder\:UNKNOWN}
{\qr UNKNOWN{\bkmkstart AAAAAAADGU}
{\bkmkend AAAAAAADGU}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Unknown \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v OnDeviceDiscovered\:CSLibrary::Net::NetFinder}
{\xe \v CSLibrary::Net::NetFinder\:OnDeviceDiscovered}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CSLibrary.Net.NetFinder.OnDeviceDiscovered (object  {\i sender}, Plugin.BLE.Abstractions.EventArgs.DeviceEventArgs  {\i args}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAADGV}
{\bkmkend AAAAAAADGV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v RaiseEvent< T >\:CSLibrary::Net::NetFinder}
{\xe \v CSLibrary::Net::NetFinder\:RaiseEvent< T >}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CSLibrary.Net.NetFinder.RaiseEvent< T > (EventHandler< T >  {\i eventHandler}, object  {\i sender}, T  {\i e}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAADGW}
{\bkmkend AAAAAAADGW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{{{\b \par
Type Constraints}}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i T} : {\i EventArgs} \par
\par
}}
{\xe \v SearchDevice\:CSLibrary::Net::NetFinder}
{\xe \v CSLibrary::Net::NetFinder\:SearchDevice}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CSLibrary.Net.NetFinder.SearchDevice ()}}
\par
{\bkmkstart AAAAAAADGX}
{\bkmkend AAAAAAADGX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Stop\:CSLibrary::Net::NetFinder}
{\xe \v CSLibrary::Net::NetFinder\:Stop}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CSLibrary.Net.NetFinder.Stop ()}}
\par
{\bkmkstart AAAAAAADGY}
{\bkmkend AAAAAAADGY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v Adapter\:CSLibrary::Net::NetFinder}
{\xe \v CSLibrary::Net::NetFinder\:Adapter}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly Plugin.BLE.Abstractions.Contracts.IAdapter CSLibrary.Net.NetFinder.Adapter{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADGZ}
{\bkmkend AAAAAAADGZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Event Documentation\par
\pard\plain 
{\xe \v OnAssignCompleted\:CSLibrary::Net::NetFinder}
{\xe \v CSLibrary::Net::NetFinder\:OnAssignCompleted}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
EventHandler<{\b ResultArgs}> CSLibrary.Net.NetFinder.OnAssignCompleted}}
\par
{\bkmkstart AAAAAAADHA}
{\bkmkend AAAAAAADHA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Assign device callback event }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v OnSearchCompleted\:CSLibrary::Net::NetFinder}
{\xe \v CSLibrary::Net::NetFinder\:OnSearchCompleted}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
EventHandler<{\b DeviceFinderArgs}> CSLibrary.Net.NetFinder.OnSearchCompleted}}
\par
{\bkmkstart AAAAAAADHB}
{\bkmkend AAAAAAADHB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Search device callback event }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
CSLibrary/{\b ClassNetfinder.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary.Structures.NonVolatileMemoryBlock Class Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary.Structures.NonVolatileMemoryBlock}
{\xe \v CSLibrary.Structures.NonVolatileMemoryBlock}
{\bkmkstart AAAAAAADTW}
{\bkmkend AAAAAAADTW}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The ISO 18000-6C tag-lock operation lock specific command parameters. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b NonVolatileMemoryBlock} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt32 {\b address} = 0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt32 {\b length} = 0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b pData} = IntPtr.Zero\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt32 {\b flags} = 0\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The ISO 18000-6C tag-lock operation lock specific command parameters. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b NonVolatileMemoryBlock} - for future use \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v NonVolatileMemoryBlock\:CSLibrary::Structures::NonVolatileMemoryBlock}
{\xe \v CSLibrary::Structures::NonVolatileMemoryBlock\:NonVolatileMemoryBlock}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CSLibrary.Structures.NonVolatileMemoryBlock.NonVolatileMemoryBlock ()}}
\par
{\bkmkstart AAAAAAADTX}
{\bkmkend AAAAAAADTX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
}}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v address\:CSLibrary::Structures::NonVolatileMemoryBlock}
{\xe \v CSLibrary::Structures::NonVolatileMemoryBlock\:address}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt32 CSLibrary.Structures.NonVolatileMemoryBlock.address = 0}}
\par
{\bkmkstart AAAAAAADTY}
{\bkmkend AAAAAAADTY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
}}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v flags\:CSLibrary::Structures::NonVolatileMemoryBlock}
{\xe \v CSLibrary::Structures::NonVolatileMemoryBlock\:flags}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt32 CSLibrary.Structures.NonVolatileMemoryBlock.flags = 0}}
\par
{\bkmkstart AAAAAAADTZ}
{\bkmkend AAAAAAADTZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
}}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v length\:CSLibrary::Structures::NonVolatileMemoryBlock}
{\xe \v CSLibrary::Structures::NonVolatileMemoryBlock\:length}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt32 CSLibrary.Structures.NonVolatileMemoryBlock.length = 0}}
\par
{\bkmkstart AAAAAAADUA}
{\bkmkend AAAAAAADUA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
}}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v pData\:CSLibrary::Structures::NonVolatileMemoryBlock}
{\xe \v CSLibrary::Structures::NonVolatileMemoryBlock\:pData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr CSLibrary.Structures.NonVolatileMemoryBlock.pData = IntPtr.Zero}}
\par
{\bkmkstart AAAAAAADUB}
{\bkmkend AAAAAAADUB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
}}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
CSLibrary/RFIDReader/Structures/{\b Intel.Structures.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary.Notification Class Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary.Notification}
{\xe \v CSLibrary.Notification}
{\bkmkstart AAAAAAAAIX}
{\bkmkend AAAAAAAAIX}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b DOWNLINKCMD}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b HotKeyEventArgs}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
HotKey Event Argument }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b VoltageEventArgs}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Types\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b Key} : uint \{ {\b Key.BUTTON}
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Current Supported Virtual Key }}}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint {\b GetCurrentBatteryLevel} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Events\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b VoltageEventArgs} > {\b OnVoltageEvent}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b HotKeyEventArgs} > {\b OnKeyEvent}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint {\b _batteryLevel} = 0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b HighLevelInterface} {\b _deviceHandler}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Enumeration Documentation\par
\pard\plain 
{\xe \v Key\:CSLibrary::Notification}
{\xe \v CSLibrary::Notification\:Key}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b CSLibrary.Notification.Key} : uint{\f2 [strong]}}}
\par
{\bkmkstart AAAAAAAAIY}
{\bkmkend AAAAAAAAIY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Current Supported Virtual Key }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v BUTTON\:CSLibrary::Notification}
{\xe \v CSLibrary::Notification\:BUTTON}
{\qr BUTTON{\bkmkstart AAAAAAAAIZ}
{\bkmkend AAAAAAAAIZ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Button \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\cell }{\row }
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v GetCurrentBatteryLevel\:CSLibrary::Notification}
{\xe \v CSLibrary::Notification\:GetCurrentBatteryLevel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint CSLibrary.Notification.GetCurrentBatteryLevel ()}}
\par
{\bkmkstart AAAAAAAAJA}
{\bkmkend AAAAAAAAJA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v _batteryLevel\:CSLibrary::Notification}
{\xe \v CSLibrary::Notification\:_batteryLevel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint CSLibrary.Notification._batteryLevel = 0{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAJB}
{\bkmkend AAAAAAAAJB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v _deviceHandler\:CSLibrary::Notification}
{\xe \v CSLibrary::Notification\:_deviceHandler}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b HighLevelInterface} CSLibrary.Notification._deviceHandler{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAJC}
{\bkmkend AAAAAAAAJC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Event Documentation\par
\pard\plain 
{\xe \v OnKeyEvent\:CSLibrary::Notification}
{\xe \v CSLibrary::Notification\:OnKeyEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
EventHandler<{\b HotKeyEventArgs}> CSLibrary.Notification.OnKeyEvent}}
\par
{\bkmkstart AAAAAAAAJD}
{\bkmkend AAAAAAAAJD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v OnVoltageEvent\:CSLibrary::Notification}
{\xe \v CSLibrary::Notification\:OnVoltageEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
EventHandler<{\b VoltageEventArgs}> CSLibrary.Notification.OnVoltageEvent}}
\par
{\bkmkstart AAAAAAAAJE}
{\bkmkend AAAAAAAAJE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
CSLibrary/Notification/{\b ClassNotification.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary.Text.oldHex Class Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary.Text.oldHex}
{\xe \v CSLibrary.Text.oldHex}
{\bkmkstart AAAAAAAEOK}
{\bkmkend AAAAAAAEOK}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Summary description for {\b HexEncoding}. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static byte [] {\b ToBytes} (string hexString)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a byte array from the hexadecimal string. Each two characters are combined to create one byte. First two hexadecimal characters become first byte in returned array. Non-hexadecimal characters are ignored. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static byte [] {\b GenSelectMask} (string hexString)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a byte array from the hexadecimal string. Each two characters are combined to create one byte. First two hexadecimal characters become first byte in returned array. Non-hexadecimal characters are ignored. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static byte [] {\b GenPostMatchMask} (string hexString)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a byte array from the hexadecimal string. Each two characters are combined to create one byte. First two hexadecimal characters become first byte in returned array. Non-hexadecimal characters are ignored. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static byte [] {\b ToBytes} (ushort[] data)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convent ushort array to byte array }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static byte {\b ToByte} (string hexString)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
return a byte from string }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static ushort {\b ToUshort} (string str)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
return ushort from byte string }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static ushort [] {\b ToUshorts} (byte[] Input)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
return ushort array from byte array }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static ushort [] {\b ToUshorts} (string Input)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
return ushort array from string input }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static string {\b ToString} (byte[] bytes)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Byte to String Conversion }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static string {\b ToString} (byte[] bytes, uint offset, uint count)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Byte to String Conversion }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static string {\b ToString} (ushort[] data)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ushort to String Conversion }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static string {\b ToString} (ushort[] data, uint offset, uint count)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ushort to String Conversion }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static bool {\b IsHexFormat} (string hexString)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Determines if given string is in proper hexadecimal string format }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static bool {\b Compare} (string source, string target)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compare {\b Hex} String, ie, source = "11ffaa", target = "11FFaa", it will return true }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static bool {\b Compare} (Byte[] source, Byte[] target)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compare {\b Hex} }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static bool {\b Compare} (Byte[] source, Byte[] target, int size)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compare {\b Hex} }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static Int16 {\b ToInt16} (byte[] buffer, int offset)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert 2 Bytes to one short }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static UInt16 {\b ToUInt16} (byte[] buffer, int offset)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert 2 Bytes to one short }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static UInt32 {\b ToUInt32} (byte[] buffer, int offset)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert 4 Bytes to one uint32 }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static UInt32 {\b ToUInt32} (string hexString)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert string to one uint32 }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static UInt64 {\b ToUInt64} (byte[] buffer, int offset)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert 4 bytes to long }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b Copy} (Byte[] src, Byte[] dst, int count)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Copy One array to another array }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b Copy} (Byte[] src, Byte[] dst, int dstIndex, int count)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Copy One array to another array }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b Copy} (Byte[] src, int srcIndex, Byte[] dst, int dstIndex, int count)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Copy One array to another array }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static bool {\b Compare< T >} (T[] a, T[] b)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Generic compare two array }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static UInt32 {\b GetBitCount} (string hexString)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get bit length from string }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static UInt32 {\b GetBitCount} (Byte[] bytes)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get bit length from string }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static ushort {\b GetWordCount} (string hexString)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get Word length from string }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b GetByteCount} (string hexString)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
GetByteCount }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static string {\b ToBinary} (byte[] source, uint offset, uint length)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static bool {\b IsHexDigit} (char c)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Private Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static byte {\b HexToByte} (string hex)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Converts 1 or 2 character string into equivalant byte value }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static ushort {\b HexToUshort} (string hex)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Summary description for {\b HexEncoding}. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Compare\:CSLibrary::Text::oldHex}
{\xe \v CSLibrary::Text::oldHex\:Compare}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static bool CSLibrary.Text.oldHex.Compare (string  {\i source}, string  {\i target}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAEOL}
{\bkmkend AAAAAAAEOL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compare {\b Hex} String, ie, source = "11ffaa", target = "11FFaa", it will return true }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i source} \cell }{Source {\b Hex} string\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i target} \cell }{Target comparing {\b Hex} string\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v Compare\:CSLibrary::Text::oldHex}
{\xe \v CSLibrary::Text::oldHex\:Compare}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static bool CSLibrary.Text.oldHex.Compare (Byte []  {\i source}, Byte []  {\i target}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAEOM}
{\bkmkend AAAAAAAEOM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compare {\b Hex} }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i source} \cell }{Source {\b Hex}\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i target} \cell }{Target comparing {\b Hex}\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v Compare\:CSLibrary::Text::oldHex}
{\xe \v CSLibrary::Text::oldHex\:Compare}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static bool CSLibrary.Text.oldHex.Compare (Byte []  {\i source}, Byte []  {\i target}, int  {\i size}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAEON}
{\bkmkend AAAAAAAEON}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compare {\b Hex} }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i source} \cell }{Source {\b Hex}\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i target} \cell }{Target comparing {\b Hex}\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i size} \cell }{Size to compare\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v Compare< T >\:CSLibrary::Text::oldHex}
{\xe \v CSLibrary::Text::oldHex\:Compare< T >}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static bool {\b CSLibrary.Text.oldHex.Compare}< T > (T []  {\i a}, T []  {\i b}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAEOO}
{\bkmkend AAAAAAAEOO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Generic compare two array }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Template Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i T} \cell }{Type of array\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i a} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i b} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v Copy\:CSLibrary::Text::oldHex}
{\xe \v CSLibrary::Text::oldHex\:Copy}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void CSLibrary.Text.oldHex.Copy (Byte []  {\i src}, Byte []  {\i dst}, int  {\i count}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAEOP}
{\bkmkend AAAAAAAEOP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Copy One array to another array }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i src} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i dst} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i count} \cell }{\cell }
{\row }
}
}}
{\xe \v Copy\:CSLibrary::Text::oldHex}
{\xe \v CSLibrary::Text::oldHex\:Copy}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void CSLibrary.Text.oldHex.Copy (Byte []  {\i src}, Byte []  {\i dst}, int  {\i dstIndex}, int  {\i count}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAEOQ}
{\bkmkend AAAAAAAEOQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Copy One array to another array }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i src} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i dst} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i dstIndex} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i count} \cell }{\cell }
{\row }
}
}}
{\xe \v Copy\:CSLibrary::Text::oldHex}
{\xe \v CSLibrary::Text::oldHex\:Copy}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void CSLibrary.Text.oldHex.Copy (Byte []  {\i src}, int  {\i srcIndex}, Byte []  {\i dst}, int  {\i dstIndex}, int  {\i count}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAEOR}
{\bkmkend AAAAAAAEOR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Copy One array to another array }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i src} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i srcIndex} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i dst} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i dstIndex} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i count} \cell }{\cell }
{\row }
}
}}
{\xe \v GenPostMatchMask\:CSLibrary::Text::oldHex}
{\xe \v CSLibrary::Text::oldHex\:GenPostMatchMask}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static byte [] CSLibrary.Text.oldHex.GenPostMatchMask (string  {\i hexString}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAEOS}
{\bkmkend AAAAAAAEOS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a byte array from the hexadecimal string. Each two characters are combined to create one byte. First two hexadecimal characters become first byte in returned array. Non-hexadecimal characters are ignored. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i hexString} \cell }{string to convert to byte array\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid byte array, in the same left-to-right order as the hexString\par
}}}
{\xe \v GenSelectMask\:CSLibrary::Text::oldHex}
{\xe \v CSLibrary::Text::oldHex\:GenSelectMask}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static byte [] CSLibrary.Text.oldHex.GenSelectMask (string  {\i hexString}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAEOT}
{\bkmkend AAAAAAAEOT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a byte array from the hexadecimal string. Each two characters are combined to create one byte. First two hexadecimal characters become first byte in returned array. Non-hexadecimal characters are ignored. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i hexString} \cell }{string to convert to byte array\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid byte array, in the same left-to-right order as the hexString\par
}}}
{\xe \v GetBitCount\:CSLibrary::Text::oldHex}
{\xe \v CSLibrary::Text::oldHex\:GetBitCount}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static UInt32 CSLibrary.Text.oldHex.GetBitCount (string  {\i hexString}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAEOU}
{\bkmkend AAAAAAAEOU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get bit length from string }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i hexString} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v GetBitCount\:CSLibrary::Text::oldHex}
{\xe \v CSLibrary::Text::oldHex\:GetBitCount}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static UInt32 CSLibrary.Text.oldHex.GetBitCount (Byte []  {\i bytes}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAEOV}
{\bkmkend AAAAAAAEOV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get bit length from string }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i bytes} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v GetByteCount\:CSLibrary::Text::oldHex}
{\xe \v CSLibrary::Text::oldHex\:GetByteCount}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int CSLibrary.Text.oldHex.GetByteCount (string  {\i hexString}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAEOW}
{\bkmkend AAAAAAAEOW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
GetByteCount }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i hexString} \cell }{Input {\b Hex} String\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Number of Byte Count\par
}}}
{\xe \v GetWordCount\:CSLibrary::Text::oldHex}
{\xe \v CSLibrary::Text::oldHex\:GetWordCount}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static ushort CSLibrary.Text.oldHex.GetWordCount (string  {\i hexString}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAEOX}
{\bkmkend AAAAAAAEOX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get Word length from string }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i hexString} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v HexToByte\:CSLibrary::Text::oldHex}
{\xe \v CSLibrary::Text::oldHex\:HexToByte}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static byte CSLibrary.Text.oldHex.HexToByte (string  {\i hex}){\f2 [static]}, {\f2 [private]}}}
\par
{\bkmkstart AAAAAAAEOY}
{\bkmkend AAAAAAAEOY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Converts 1 or 2 character string into equivalant byte value }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i hex} \cell }{1 or 2 character string\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid byte\par
}}}
{\xe \v HexToUshort\:CSLibrary::Text::oldHex}
{\xe \v CSLibrary::Text::oldHex\:HexToUshort}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static ushort CSLibrary.Text.oldHex.HexToUshort (string  {\i hex}){\f2 [static]}, {\f2 [private]}}}
\par
{\bkmkstart AAAAAAAEOZ}
{\bkmkend AAAAAAAEOZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v IsHexDigit\:CSLibrary::Text::oldHex}
{\xe \v CSLibrary::Text::oldHex\:IsHexDigit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static bool CSLibrary.Text.oldHex.IsHexDigit (char  {\i c}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAEPA}
{\bkmkend AAAAAAAEPA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v IsHexFormat\:CSLibrary::Text::oldHex}
{\xe \v CSLibrary::Text::oldHex\:IsHexFormat}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static bool CSLibrary.Text.oldHex.IsHexFormat (string  {\i hexString}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAEPB}
{\bkmkend AAAAAAAEPB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Determines if given string is in proper hexadecimal string format }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i hexString} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v ToBinary\:CSLibrary::Text::oldHex}
{\xe \v CSLibrary::Text::oldHex\:ToBinary}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static string CSLibrary.Text.oldHex.ToBinary (byte []  {\i source}, uint  {\i offset}, uint  {\i length}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAEPC}
{\bkmkend AAAAAAAEPC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ToByte\:CSLibrary::Text::oldHex}
{\xe \v CSLibrary::Text::oldHex\:ToByte}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static byte CSLibrary.Text.oldHex.ToByte (string  {\i hexString}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAEPD}
{\bkmkend AAAAAAAEPD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
return a byte from string }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i hexString} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v ToBytes\:CSLibrary::Text::oldHex}
{\xe \v CSLibrary::Text::oldHex\:ToBytes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static byte [] CSLibrary.Text.oldHex.ToBytes (string  {\i hexString}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAEPE}
{\bkmkend AAAAAAAEPE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a byte array from the hexadecimal string. Each two characters are combined to create one byte. First two hexadecimal characters become first byte in returned array. Non-hexadecimal characters are ignored. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i hexString} \cell }{string to convert to byte array\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid byte array, in the same left-to-right order as the hexString\par
}}}
{\xe \v ToBytes\:CSLibrary::Text::oldHex}
{\xe \v CSLibrary::Text::oldHex\:ToBytes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static byte [] CSLibrary.Text.oldHex.ToBytes (ushort []  {\i data}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAEPF}
{\bkmkend AAAAAAAEPF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convent ushort array to byte array }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i data} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v ToInt16\:CSLibrary::Text::oldHex}
{\xe \v CSLibrary::Text::oldHex\:ToInt16}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static Int16 CSLibrary.Text.oldHex.ToInt16 (byte []  {\i buffer}, int  {\i offset}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAEPG}
{\bkmkend AAAAAAAEPG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert 2 Bytes to one short }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i buffer} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i offset} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v ToString\:CSLibrary::Text::oldHex}
{\xe \v CSLibrary::Text::oldHex\:ToString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static string CSLibrary.Text.oldHex.ToString (byte []  {\i bytes}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAEPH}
{\bkmkend AAAAAAAEPH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Byte to String Conversion }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i bytes} \cell }{Input Byte Array\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Return a String\par
}}}
{\xe \v ToString\:CSLibrary::Text::oldHex}
{\xe \v CSLibrary::Text::oldHex\:ToString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static string CSLibrary.Text.oldHex.ToString (byte []  {\i bytes}, uint  {\i offset}, uint  {\i count}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAEPI}
{\bkmkend AAAAAAAEPI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Byte to String Conversion }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i bytes} \cell }{Input Byte Array\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i offset} \cell }{Start offset\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i count} \cell }{Number of Count to converse\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Return a String\par
}}}
{\xe \v ToString\:CSLibrary::Text::oldHex}
{\xe \v CSLibrary::Text::oldHex\:ToString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static string CSLibrary.Text.oldHex.ToString (ushort []  {\i data}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAEPJ}
{\bkmkend AAAAAAAEPJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ushort to String Conversion }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i data} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v ToString\:CSLibrary::Text::oldHex}
{\xe \v CSLibrary::Text::oldHex\:ToString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static string CSLibrary.Text.oldHex.ToString (ushort []  {\i data}, uint  {\i offset}, uint  {\i count}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAEPK}
{\bkmkend AAAAAAAEPK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ushort to String Conversion }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i data} \cell }{source data\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i offset} \cell }{Start offset\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i count} \cell }{Number of Count to converse\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v ToUInt16\:CSLibrary::Text::oldHex}
{\xe \v CSLibrary::Text::oldHex\:ToUInt16}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static UInt16 CSLibrary.Text.oldHex.ToUInt16 (byte []  {\i buffer}, int  {\i offset}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAEPL}
{\bkmkend AAAAAAAEPL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert 2 Bytes to one short }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i buffer} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i offset} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v ToUInt32\:CSLibrary::Text::oldHex}
{\xe \v CSLibrary::Text::oldHex\:ToUInt32}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static UInt32 CSLibrary.Text.oldHex.ToUInt32 (byte []  {\i buffer}, int  {\i offset}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAEPM}
{\bkmkend AAAAAAAEPM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert 4 Bytes to one uint32 }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i buffer} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i offset} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v ToUInt32\:CSLibrary::Text::oldHex}
{\xe \v CSLibrary::Text::oldHex\:ToUInt32}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static UInt32 CSLibrary.Text.oldHex.ToUInt32 (string  {\i hexString}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAEPN}
{\bkmkend AAAAAAAEPN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert string to one uint32 }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i hexString} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v ToUInt64\:CSLibrary::Text::oldHex}
{\xe \v CSLibrary::Text::oldHex\:ToUInt64}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static UInt64 CSLibrary.Text.oldHex.ToUInt64 (byte []  {\i buffer}, int  {\i offset}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAEPO}
{\bkmkend AAAAAAAEPO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert 4 bytes to long }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i buffer} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i offset} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v ToUshort\:CSLibrary::Text::oldHex}
{\xe \v CSLibrary::Text::oldHex\:ToUshort}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static ushort CSLibrary.Text.oldHex.ToUshort (string  {\i str}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAEPP}
{\bkmkend AAAAAAAEPP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
return ushort from byte string }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i str} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v ToUshorts\:CSLibrary::Text::oldHex}
{\xe \v CSLibrary::Text::oldHex\:ToUshorts}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static ushort [] CSLibrary.Text.oldHex.ToUshorts (byte []  {\i Input}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAEPQ}
{\bkmkend AAAAAAAEPQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
return ushort array from byte array }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i Input} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v ToUshorts\:CSLibrary::Text::oldHex}
{\xe \v CSLibrary::Text::oldHex\:ToUshorts}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static ushort [] CSLibrary.Text.oldHex.ToUshorts (string  {\i Input}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAEPR}
{\bkmkend AAAAAAAEPR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
return ushort array from string input }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i Input} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
CSLibrary/{\b CSLibrary.Text.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary.SiliconLabIC.Events.OnAccessCompletedEventArgs Class Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary.SiliconLabIC.Events.OnAccessCompletedEventArgs}
{\xe \v CSLibrary.SiliconLabIC.Events.OnAccessCompletedEventArgs}
{\bkmkstart AAAAAAABKN}
{\bkmkend AAAAAAABKN}
Inheritance diagram for CSLibrary.SiliconLabIC.Events.OnAccessCompletedEventArgs:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_c_s_library_1_1_silicon_lab_i_c_1_1_events_1_1_on_access_completed_event_args.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b OnAccessCompletedEventArgs} (object {\b info}, {\b Constants.AccessCompletedCallbackType} {\b type})\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
readonly object {\b info}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
readonly {\b Constants.AccessCompletedCallbackType} {\b type} = {\b Constants.AccessCompletedCallbackType.UNKNOWN}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v OnAccessCompletedEventArgs\:CSLibrary::SiliconLabIC::Events::OnAccessCompletedEventArgs}
{\xe \v CSLibrary::SiliconLabIC::Events::OnAccessCompletedEventArgs\:OnAccessCompletedEventArgs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CSLibrary.SiliconLabIC.Events.OnAccessCompletedEventArgs.OnAccessCompletedEventArgs (object  {\i info}, {\b Constants.AccessCompletedCallbackType}  {\i type})}}
\par
{\bkmkstart AAAAAAABKO}
{\bkmkend AAAAAAABKO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v info\:CSLibrary::SiliconLabIC::Events::OnAccessCompletedEventArgs}
{\xe \v CSLibrary::SiliconLabIC::Events::OnAccessCompletedEventArgs\:info}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly object CSLibrary.SiliconLabIC.Events.OnAccessCompletedEventArgs.info}}
\par
{\bkmkstart AAAAAAABKP}
{\bkmkend AAAAAAABKP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v type\:CSLibrary::SiliconLabIC::Events::OnAccessCompletedEventArgs}
{\xe \v CSLibrary::SiliconLabIC::Events::OnAccessCompletedEventArgs\:type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly {\b Constants.AccessCompletedCallbackType} CSLibrary.SiliconLabIC.Events.OnAccessCompletedEventArgs.type = {\b Constants.AccessCompletedCallbackType.UNKNOWN}}}
\par
{\bkmkstart AAAAAAABKQ}
{\bkmkend AAAAAAABKQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
CSLibrary/SiliconLabIC/{\b ClassEvent.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary.Events.OnAccessCompletedEventArgs Class Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary.Events.OnAccessCompletedEventArgs}
{\xe \v CSLibrary.Events.OnAccessCompletedEventArgs}
{\bkmkstart AAAAAAADFW}
{\bkmkend AAAAAAADFW}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tag Access Completed Argument }}\par
Inheritance diagram for CSLibrary.Events.OnAccessCompletedEventArgs:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_c_s_library_1_1_events_1_1_on_access_completed_event_args.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b OnAccessCompletedEventArgs} (bool {\b success}, {\b Bank} {\b bank}, {\b TagAccess} {\b access}, {\b IBANK} {\b data})\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
readonly bool {\b success} = false\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access Result }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
readonly {\b Bank} {\b bank} = {\b Bank.UNKNOWN}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access bank }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
readonly {\b TagAccess} {\b access} = {\b TagAccess.UNKNOWN}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access Type }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
readonly {\b IBANK} {\b data}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access Data only use for Tag Read operation }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tag Access Completed Argument \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v OnAccessCompletedEventArgs\:CSLibrary::Events::OnAccessCompletedEventArgs}
{\xe \v CSLibrary::Events::OnAccessCompletedEventArgs\:OnAccessCompletedEventArgs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CSLibrary.Events.OnAccessCompletedEventArgs.OnAccessCompletedEventArgs (bool  {\i success}, {\b Bank}  {\i bank}, {\b TagAccess}  {\i access}, {\b IBANK}  {\i data})}}
\par
{\bkmkstart AAAAAAADFX}
{\bkmkend AAAAAAADFX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i success} \cell }{Access Result\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i bank} \cell }{Access bank\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i access} \cell }{Access type\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i data} \cell }{Access Data only use for Tag Read operation\cell }
{\row }
}
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v access\:CSLibrary::Events::OnAccessCompletedEventArgs}
{\xe \v CSLibrary::Events::OnAccessCompletedEventArgs\:access}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly {\b TagAccess} CSLibrary.Events.OnAccessCompletedEventArgs.access = {\b TagAccess.UNKNOWN}}}
\par
{\bkmkstart AAAAAAADFY}
{\bkmkend AAAAAAADFY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access Type }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v bank\:CSLibrary::Events::OnAccessCompletedEventArgs}
{\xe \v CSLibrary::Events::OnAccessCompletedEventArgs\:bank}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly {\b Bank} CSLibrary.Events.OnAccessCompletedEventArgs.bank = {\b Bank.UNKNOWN}}}
\par
{\bkmkstart AAAAAAADFZ}
{\bkmkend AAAAAAADFZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access bank }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v data\:CSLibrary::Events::OnAccessCompletedEventArgs}
{\xe \v CSLibrary::Events::OnAccessCompletedEventArgs\:data}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly {\b IBANK} CSLibrary.Events.OnAccessCompletedEventArgs.data}}
\par
{\bkmkstart AAAAAAADGA}
{\bkmkend AAAAAAADGA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access Data only use for Tag Read operation }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v success\:CSLibrary::Events::OnAccessCompletedEventArgs}
{\xe \v CSLibrary::Events::OnAccessCompletedEventArgs\:success}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly bool CSLibrary.Events.OnAccessCompletedEventArgs.success = false}}
\par
{\bkmkstart AAAAAAADGB}
{\bkmkend AAAAAAADGB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access Result }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
CSLibrary/RFIDReader/Events/{\b CSLibrary.Events.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary.Events.OnAsyncCallbackEventArgs Class Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary.Events.OnAsyncCallbackEventArgs}
{\xe \v CSLibrary.Events.OnAsyncCallbackEventArgs}
{\bkmkstart AAAAAAADGC}
{\bkmkend AAAAAAADGC}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inventory or tag search callback event argument }}\par
Inheritance diagram for CSLibrary.Events.OnAsyncCallbackEventArgs:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_c_s_library_1_1_events_1_1_on_async_callback_event_args.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b OnAsyncCallbackEventArgs} ({\b TagCallbackInfo} {\b info}, {\b CallbackType} {\b type})\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
readonly {\b TagCallbackInfo} {\b info} = new {\b TagCallbackInfo}()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Callback Tag Information }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
readonly {\b CallbackType} {\b type} = {\b CallbackType.UNKNOWN}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Async callback data type }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inventory or tag search callback event argument \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v OnAsyncCallbackEventArgs\:CSLibrary::Events::OnAsyncCallbackEventArgs}
{\xe \v CSLibrary::Events::OnAsyncCallbackEventArgs\:OnAsyncCallbackEventArgs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CSLibrary.Events.OnAsyncCallbackEventArgs.OnAsyncCallbackEventArgs ({\b TagCallbackInfo}  {\i info}, {\b CallbackType}  {\i type})}}
\par
{\bkmkstart AAAAAAADGD}
{\bkmkend AAAAAAADGD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i info} \cell }{Tag Information\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i type} \cell }{Callback Type\cell }
{\row }
}
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v info\:CSLibrary::Events::OnAsyncCallbackEventArgs}
{\xe \v CSLibrary::Events::OnAsyncCallbackEventArgs\:info}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly {\b TagCallbackInfo} CSLibrary.Events.OnAsyncCallbackEventArgs.info = new {\b TagCallbackInfo}()}}
\par
{\bkmkstart AAAAAAADGE}
{\bkmkend AAAAAAADGE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Callback Tag Information }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v type\:CSLibrary::Events::OnAsyncCallbackEventArgs}
{\xe \v CSLibrary::Events::OnAsyncCallbackEventArgs\:type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly {\b CallbackType} CSLibrary.Events.OnAsyncCallbackEventArgs.type = {\b CallbackType.UNKNOWN}}}
\par
{\bkmkstart AAAAAAADGF}
{\bkmkend AAAAAAADGF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Async callback data type }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
CSLibrary/RFIDReader/Events/{\b CSLibrary.Events.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary.Events.OnReaderStateChangedEventArgs Class Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary.Events.OnReaderStateChangedEventArgs}
{\xe \v CSLibrary.Events.OnReaderStateChangedEventArgs}
{\bkmkstart AAAAAAADGG}
{\bkmkend AAAAAAADGG}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reader status callback event argument }}\par
Inheritance diagram for CSLibrary.Events.OnReaderStateChangedEventArgs:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_c_s_library_1_1_events_1_1_on_reader_state_changed_event_args.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b OnReaderStateChangedEventArgs} (object {\b info}, {\b ReaderCallbackType} {\b type})\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
readonly object {\b info}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Callback Tag Information }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
readonly {\b ReaderCallbackType} {\b type} = {\b ReaderCallbackType.UNKNOWN}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Async callback data type }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reader status callback event argument \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v OnReaderStateChangedEventArgs\:CSLibrary::Events::OnReaderStateChangedEventArgs}
{\xe \v CSLibrary::Events::OnReaderStateChangedEventArgs\:OnReaderStateChangedEventArgs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CSLibrary.Events.OnReaderStateChangedEventArgs.OnReaderStateChangedEventArgs (object  {\i info}, {\b ReaderCallbackType}  {\i type})}}
\par
{\bkmkstart AAAAAAADGH}
{\bkmkend AAAAAAADGH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i info} \cell }{Tag Information\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i type} \cell }{Callback Type\cell }
{\row }
}
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v info\:CSLibrary::Events::OnReaderStateChangedEventArgs}
{\xe \v CSLibrary::Events::OnReaderStateChangedEventArgs\:info}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly object CSLibrary.Events.OnReaderStateChangedEventArgs.info}}
\par
{\bkmkstart AAAAAAADGI}
{\bkmkend AAAAAAADGI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Callback Tag Information }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v type\:CSLibrary::Events::OnReaderStateChangedEventArgs}
{\xe \v CSLibrary::Events::OnReaderStateChangedEventArgs\:type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly {\b ReaderCallbackType} CSLibrary.Events.OnReaderStateChangedEventArgs.type = {\b ReaderCallbackType.UNKNOWN}}}
\par
{\bkmkstart AAAAAAADGJ}
{\bkmkend AAAAAAADGJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Async callback data type }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
CSLibrary/RFIDReader/Events/{\b CSLibrary.Events.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary.Events.OnStateChangedEventArgs Class Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary.Events.OnStateChangedEventArgs}
{\xe \v CSLibrary.Events.OnStateChangedEventArgs}
{\bkmkstart AAAAAAADGK}
{\bkmkend AAAAAAADGK}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reader Operation changed EventArgs }}\par
Inheritance diagram for CSLibrary.Events.OnStateChangedEventArgs:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_c_s_library_1_1_events_1_1_on_state_changed_event_args.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b OnStateChangedEventArgs} ({\b RFState} {\b state})\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
readonly {\b RFState} {\b state} = {\b RFState.IDLE}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Current operation state }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reader Operation changed EventArgs \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v OnStateChangedEventArgs\:CSLibrary::Events::OnStateChangedEventArgs}
{\xe \v CSLibrary::Events::OnStateChangedEventArgs\:OnStateChangedEventArgs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CSLibrary.Events.OnStateChangedEventArgs.OnStateChangedEventArgs ({\b RFState}  {\i state})}}
\par
{\bkmkstart AAAAAAADGL}
{\bkmkend AAAAAAADGL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i state} \cell }{\cell }
{\row }
}
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v state\:CSLibrary::Events::OnStateChangedEventArgs}
{\xe \v CSLibrary::Events::OnStateChangedEventArgs\:state}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly {\b RFState} CSLibrary.Events.OnStateChangedEventArgs.state = {\b RFState.IDLE}}}
\par
{\bkmkstart AAAAAAADGM}
{\bkmkend AAAAAAADGM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Current operation state }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
CSLibrary/RFIDReader/Events/{\b CSLibrary.Events.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary.Structures.PowerParms Class Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary.Structures.PowerParms}
{\xe \v CSLibrary.Structures.PowerParms}
{\bkmkstart AAAAAAADUC}
{\bkmkend AAAAAAADUC}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Matrix Products Power management structure }}\par
Inheritance diagram for CSLibrary.Structures.PowerParms:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_c_s_library_1_1_barcode_1_1_structures_1_1_power_parms.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b PowerParms} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b PowerMask} {\b dwMask} = PowerMask.ALL\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mask of active items. Notes: You can use OR to enable multiple items }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TriggerMode} {\b TriggerMode}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Trigger mode (same as per trigger struct) }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint {\b dwTriggerTimeout}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
0 -> 300000 (milliseconds) }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint {\b dwLowPowerTimeout}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
0 -> 300 (seconds) }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint {\b dwLEDIntensityPercent}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
0 -> 100% }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SystemSpeed} {\b systemClockSpeed}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Clock speed for reset of system (except RS232) }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b AimerModes} {\b AimerMode}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Aimer Mode }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint {\b dwAimerDuration}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
0 -> 240000 (milliseconds) }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint {\b dwAimerDelay}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
0 -> 4000 (milliseconds) }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint {\b dwAutoAimerTimeout}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
0 -> 30000 (milliseconds) }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint {\b dwImagerIdleTimeout}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
0 -> 999999 (milliseconds) }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint {\b dwRS232LowPwrTimeout}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
0 -> 300 (seconds)RS232 inactivity timeout used to enter sleep mode. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b hPowerOffHandle}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
These are used to notify on suspend (WinCE Suspend) }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IntPtr {\b hPowerOffHwnd}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Matrix Products Power management structure \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v PowerParms\:CSLibrary::Barcode::Structures::PowerParms}
{\xe \v CSLibrary::Barcode::Structures::PowerParms\:PowerParms}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CSLibrary.Structures.PowerParms.PowerParms ()}}
\par
{\bkmkstart AAAAAAADUD}
{\bkmkend AAAAAAADUD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v AimerMode\:CSLibrary::Barcode::Structures::PowerParms}
{\xe \v CSLibrary::Barcode::Structures::PowerParms\:AimerMode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b AimerModes} CSLibrary.Structures.PowerParms.AimerMode}}
\par
{\bkmkstart AAAAAAADUE}
{\bkmkend AAAAAAADUE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Aimer Mode }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v dwAimerDelay\:CSLibrary::Barcode::Structures::PowerParms}
{\xe \v CSLibrary::Barcode::Structures::PowerParms\:dwAimerDelay}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint CSLibrary.Structures.PowerParms.dwAimerDelay}}
\par
{\bkmkstart AAAAAAADUF}
{\bkmkend AAAAAAADUF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
0 -> 4000 (milliseconds) }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v dwAimerDuration\:CSLibrary::Barcode::Structures::PowerParms}
{\xe \v CSLibrary::Barcode::Structures::PowerParms\:dwAimerDuration}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint CSLibrary.Structures.PowerParms.dwAimerDuration}}
\par
{\bkmkstart AAAAAAADUG}
{\bkmkend AAAAAAADUG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
0 -> 240000 (milliseconds) }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v dwAutoAimerTimeout\:CSLibrary::Barcode::Structures::PowerParms}
{\xe \v CSLibrary::Barcode::Structures::PowerParms\:dwAutoAimerTimeout}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint CSLibrary.Structures.PowerParms.dwAutoAimerTimeout}}
\par
{\bkmkstart AAAAAAADUH}
{\bkmkend AAAAAAADUH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
0 -> 30000 (milliseconds) }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v dwImagerIdleTimeout\:CSLibrary::Barcode::Structures::PowerParms}
{\xe \v CSLibrary::Barcode::Structures::PowerParms\:dwImagerIdleTimeout}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint CSLibrary.Structures.PowerParms.dwImagerIdleTimeout}}
\par
{\bkmkstart AAAAAAADUI}
{\bkmkend AAAAAAADUI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
0 -> 999999 (milliseconds) }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v dwLEDIntensityPercent\:CSLibrary::Barcode::Structures::PowerParms}
{\xe \v CSLibrary::Barcode::Structures::PowerParms\:dwLEDIntensityPercent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint CSLibrary.Structures.PowerParms.dwLEDIntensityPercent}}
\par
{\bkmkstart AAAAAAADUJ}
{\bkmkend AAAAAAADUJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
0 -> 100% }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v dwLowPowerTimeout\:CSLibrary::Barcode::Structures::PowerParms}
{\xe \v CSLibrary::Barcode::Structures::PowerParms\:dwLowPowerTimeout}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint CSLibrary.Structures.PowerParms.dwLowPowerTimeout}}
\par
{\bkmkstart AAAAAAADUK}
{\bkmkend AAAAAAADUK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
0 -> 300 (seconds) }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v dwMask\:CSLibrary::Barcode::Structures::PowerParms}
{\xe \v CSLibrary::Barcode::Structures::PowerParms\:dwMask}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b PowerMask} CSLibrary.Structures.PowerParms.dwMask = PowerMask.ALL}}
\par
{\bkmkstart AAAAAAADUL}
{\bkmkend AAAAAAADUL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mask of active items. Notes: You can use OR to enable multiple items }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v dwRS232LowPwrTimeout\:CSLibrary::Barcode::Structures::PowerParms}
{\xe \v CSLibrary::Barcode::Structures::PowerParms\:dwRS232LowPwrTimeout}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint CSLibrary.Structures.PowerParms.dwRS232LowPwrTimeout}}
\par
{\bkmkstart AAAAAAADUM}
{\bkmkend AAAAAAADUM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
0 -> 300 (seconds)RS232 inactivity timeout used to enter sleep mode. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v dwTriggerTimeout\:CSLibrary::Barcode::Structures::PowerParms}
{\xe \v CSLibrary::Barcode::Structures::PowerParms\:dwTriggerTimeout}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint CSLibrary.Structures.PowerParms.dwTriggerTimeout}}
\par
{\bkmkstart AAAAAAADUN}
{\bkmkend AAAAAAADUN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
0 -> 300000 (milliseconds) }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v hPowerOffHandle\:CSLibrary::Barcode::Structures::PowerParms}
{\xe \v CSLibrary::Barcode::Structures::PowerParms\:hPowerOffHandle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr CSLibrary.Structures.PowerParms.hPowerOffHandle}}
\par
{\bkmkstart AAAAAAADUO}
{\bkmkend AAAAAAADUO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
These are used to notify on suspend (WinCE Suspend) }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v hPowerOffHwnd\:CSLibrary::Barcode::Structures::PowerParms}
{\xe \v CSLibrary::Barcode::Structures::PowerParms\:hPowerOffHwnd}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IntPtr CSLibrary.Structures.PowerParms.hPowerOffHwnd}}
\par
{\bkmkstart AAAAAAADUP}
{\bkmkend AAAAAAADUP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
}}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v systemClockSpeed\:CSLibrary::Barcode::Structures::PowerParms}
{\xe \v CSLibrary::Barcode::Structures::PowerParms\:systemClockSpeed}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b SystemSpeed} CSLibrary.Structures.PowerParms.systemClockSpeed}}
\par
{\bkmkstart AAAAAAADUQ}
{\bkmkend AAAAAAADUQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Clock speed for reset of system (except RS232) }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v TriggerMode\:CSLibrary::Barcode::Structures::PowerParms}
{\xe \v CSLibrary::Barcode::Structures::PowerParms\:TriggerMode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b TriggerMode} CSLibrary.Structures.PowerParms.TriggerMode}}
\par
{\bkmkstart AAAAAAADUR}
{\bkmkend AAAAAAADUR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Trigger mode (same as per trigger struct) }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
CSLibrary/BarcodeReader/Structures/{\b CSLibrary.Barcode.Structures.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary.Structures.ProfileConfig Class Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary.Structures.ProfileConfig}
{\xe \v CSLibrary.Structures.ProfileConfig}
{\bkmkstart AAAAAAADUS}
{\bkmkend AAAAAAADUS}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Link Profile Configuration Structure }}\par
Inheritance diagram for CSLibrary.Structures.ProfileConfig:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_c_s_library_1_1_structures_1_1_profile_config.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ProfileConfig} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt32 {\b length_} = 4\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure size }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Properties\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt32 {\b length}{\f2  [get]}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure size }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Link Profile Configuration Structure \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v ProfileConfig\:CSLibrary::Structures::ProfileConfig}
{\xe \v CSLibrary::Structures::ProfileConfig\:ProfileConfig}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CSLibrary.Structures.ProfileConfig.ProfileConfig ()}}
\par
{\bkmkstart AAAAAAADUT}
{\bkmkend AAAAAAADUT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v length_\:CSLibrary::Structures::ProfileConfig}
{\xe \v CSLibrary::Structures::ProfileConfig\:length_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt32 CSLibrary.Structures.ProfileConfig.length_ = 4{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADUU}
{\bkmkend AAAAAAADUU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure size }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Property Documentation\par
\pard\plain 
{\xe \v length\:CSLibrary::Structures::ProfileConfig}
{\xe \v CSLibrary::Structures::ProfileConfig\:length}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt32 CSLibrary.Structures.ProfileConfig.length{\f2 [get]}}}
\par
{\bkmkstart AAAAAAADUV}
{\bkmkend AAAAAAADUV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure size }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
CSLibrary/RFIDReader/Structures/{\b Intel.Structures.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary.Structures.QueryParms Class Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary.Structures.QueryParms}
{\xe \v CSLibrary.Structures.QueryParms}
{\bkmkstart AAAAAAADUW}
{\bkmkend AAAAAAADUW}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Once the tag population has been partitioned into disjoint groups, a subsequent tag-protocol operation (i.e., an inventory operation or access command) is then applied to one of the tag groups. A tag group is specified using the following: }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QueryParms} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TagGroup} {\b tagGroup} = new {\b TagGroup}()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Once the tag population has been partitioned into disjoint groups, a subsequent tag-protocol operation (i.e., an inventory operation or access command) is then applied to one of the tag groups. A tag group is specified using the following: }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SingulationAlgorithmParms} {\b singulationParms} = new {\b SingulationAlgorithmParms}()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Based upon usage scenarios, different singulation algorithms (i.e., Q-adjustment, etc.) may be desired. This document simply documents the mechanisms by which an application can choose and configure singulation algorithms. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Once the tag population has been partitioned into disjoint groups, a subsequent tag-protocol operation (i.e., an inventory operation or access command) is then applied to one of the tag groups. A tag group is specified using the following: \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v QueryParms\:CSLibrary::Structures::QueryParms}
{\xe \v CSLibrary::Structures::QueryParms\:QueryParms}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CSLibrary.Structures.QueryParms.QueryParms ()}}
\par
{\bkmkstart AAAAAAADUX}
{\bkmkend AAAAAAADUX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v singulationParms\:CSLibrary::Structures::QueryParms}
{\xe \v CSLibrary::Structures::QueryParms\:singulationParms}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b SingulationAlgorithmParms} CSLibrary.Structures.QueryParms.singulationParms = new {\b SingulationAlgorithmParms}()}}
\par
{\bkmkstart AAAAAAADUY}
{\bkmkend AAAAAAADUY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Based upon usage scenarios, different singulation algorithms (i.e., Q-adjustment, etc.) may be desired. This document simply documents the mechanisms by which an application can choose and configure singulation algorithms. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v tagGroup\:CSLibrary::Structures::QueryParms}
{\xe \v CSLibrary::Structures::QueryParms\:tagGroup}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b TagGroup} CSLibrary.Structures.QueryParms.tagGroup = new {\b TagGroup}()}}
\par
{\bkmkstart AAAAAAADUZ}
{\bkmkend AAAAAAADUZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Once the tag population has been partitioned into disjoint groups, a subsequent tag-protocol operation (i.e., an inventory operation or access command) is then applied to one of the tag groups. A tag group is specified using the following: }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
CSLibrary/RFIDReader/Structures/{\b Intel.Structures.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary.Tools.Queue Class Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary.Tools.Queue}
{\xe \v CSLibrary.Tools.Queue}
{\bkmkstart AAAAAAAERN}
{\bkmkend AAAAAAAERN}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Queue} (int size=1024)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Clear} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b ReSize} (int size)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
all data will be clear }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b DataIn} (byte[] data, int offset=0, int size=-1)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b DataDel} (int dataDelectLength)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte [] {\b DataPreOut} (int outDataLength=1)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte [] {\b DataOut} (int outDataLength=1)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b IndexOf} (byte [] data)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
find data in array }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b IndexOf} (byte data)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
find data in array }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b IndexOfValidInventoryResponsePacket} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Special function for Inventory }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b IndexOfTagResponsePacket} (int offSet=0)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Special function for Inventory }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Skip} (int skipSize)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Properties\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b length}{\f2  [get]}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~Queue} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Defragment} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b MAXBUFFERSIZE}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte [] {\b _dataStream}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
object {\b _dataStreamLock} = new object()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b _dataStreamStartPoint} = 0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b _dataStreamSize} = 0\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v Queue\:CSLibrary::Tools::Queue}
{\xe \v CSLibrary::Tools::Queue\:Queue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CSLibrary.Tools.Queue.Queue (int  {\i size} = {\f2 1024})}}
\par
{\bkmkstart AAAAAAAERO}
{\bkmkend AAAAAAAERO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ~Queue\:CSLibrary::Tools::Queue}
{\xe \v CSLibrary::Tools::Queue\:~Queue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CSLibrary.Tools.Queue.~Queue (){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAERP}
{\bkmkend AAAAAAAERP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Clear\:CSLibrary::Tools::Queue}
{\xe \v CSLibrary::Tools::Queue\:Clear}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CSLibrary.Tools.Queue.Clear ()}}
\par
{\bkmkstart AAAAAAAERQ}
{\bkmkend AAAAAAAERQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DataDel\:CSLibrary::Tools::Queue}
{\xe \v CSLibrary::Tools::Queue\:DataDel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool CSLibrary.Tools.Queue.DataDel (int  {\i dataDelectLength})}}
\par
{\bkmkstart AAAAAAAERR}
{\bkmkend AAAAAAAERR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DataIn\:CSLibrary::Tools::Queue}
{\xe \v CSLibrary::Tools::Queue\:DataIn}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool CSLibrary.Tools.Queue.DataIn (byte []  {\i data}, int  {\i offset} = {\f2 0}, int  {\i size} = {\f2 -1})}}
\par
{\bkmkstart AAAAAAAERS}
{\bkmkend AAAAAAAERS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DataOut\:CSLibrary::Tools::Queue}
{\xe \v CSLibrary::Tools::Queue\:DataOut}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte [] CSLibrary.Tools.Queue.DataOut (int  {\i outDataLength} = {\f2 1})}}
\par
{\bkmkstart AAAAAAAERT}
{\bkmkend AAAAAAAERT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DataPreOut\:CSLibrary::Tools::Queue}
{\xe \v CSLibrary::Tools::Queue\:DataPreOut}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte [] CSLibrary.Tools.Queue.DataPreOut (int  {\i outDataLength} = {\f2 1})}}
\par
{\bkmkstart AAAAAAAERU}
{\bkmkend AAAAAAAERU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Defragment\:CSLibrary::Tools::Queue}
{\xe \v CSLibrary::Tools::Queue\:Defragment}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CSLibrary.Tools.Queue.Defragment (){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAERV}
{\bkmkend AAAAAAAERV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v IndexOf\:CSLibrary::Tools::Queue}
{\xe \v CSLibrary::Tools::Queue\:IndexOf}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int CSLibrary.Tools.Queue.IndexOf (byte []  {\i data})}}
\par
{\bkmkstart AAAAAAAERW}
{\bkmkend AAAAAAAERW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
find data in array }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i data} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v IndexOf\:CSLibrary::Tools::Queue}
{\xe \v CSLibrary::Tools::Queue\:IndexOf}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int CSLibrary.Tools.Queue.IndexOf (byte  {\i data})}}
\par
{\bkmkstart AAAAAAAERX}
{\bkmkend AAAAAAAERX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
find data in array }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i data} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v IndexOfTagResponsePacket\:CSLibrary::Tools::Queue}
{\xe \v CSLibrary::Tools::Queue\:IndexOfTagResponsePacket}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int CSLibrary.Tools.Queue.IndexOfTagResponsePacket (int  {\i offSet} = {\f2 0})}}
\par
{\bkmkstart AAAAAAAERY}
{\bkmkend AAAAAAAERY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Special function for Inventory }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v IndexOfValidInventoryResponsePacket\:CSLibrary::Tools::Queue}
{\xe \v CSLibrary::Tools::Queue\:IndexOfValidInventoryResponsePacket}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int CSLibrary.Tools.Queue.IndexOfValidInventoryResponsePacket ()}}
\par
{\bkmkstart AAAAAAAERZ}
{\bkmkend AAAAAAAERZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Special function for Inventory }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v ReSize\:CSLibrary::Tools::Queue}
{\xe \v CSLibrary::Tools::Queue\:ReSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool CSLibrary.Tools.Queue.ReSize (int  {\i size})}}
\par
{\bkmkstart AAAAAAAESA}
{\bkmkend AAAAAAAESA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
all data will be clear }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i size} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v Skip\:CSLibrary::Tools::Queue}
{\xe \v CSLibrary::Tools::Queue\:Skip}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CSLibrary.Tools.Queue.Skip (int  {\i skipSize})}}
\par
{\bkmkstart AAAAAAAESB}
{\bkmkend AAAAAAAESB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v _dataStream\:CSLibrary::Tools::Queue}
{\xe \v CSLibrary::Tools::Queue\:_dataStream}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte [] CSLibrary.Tools.Queue._dataStream{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAESC}
{\bkmkend AAAAAAAESC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v _dataStreamLock\:CSLibrary::Tools::Queue}
{\xe \v CSLibrary::Tools::Queue\:_dataStreamLock}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
object CSLibrary.Tools.Queue._dataStreamLock = new object(){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAESD}
{\bkmkend AAAAAAAESD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v _dataStreamSize\:CSLibrary::Tools::Queue}
{\xe \v CSLibrary::Tools::Queue\:_dataStreamSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int CSLibrary.Tools.Queue._dataStreamSize = 0{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAESE}
{\bkmkend AAAAAAAESE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v _dataStreamStartPoint\:CSLibrary::Tools::Queue}
{\xe \v CSLibrary::Tools::Queue\:_dataStreamStartPoint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int CSLibrary.Tools.Queue._dataStreamStartPoint = 0{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAESF}
{\bkmkend AAAAAAAESF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v MAXBUFFERSIZE\:CSLibrary::Tools::Queue}
{\xe \v CSLibrary::Tools::Queue\:MAXBUFFERSIZE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int CSLibrary.Tools.Queue.MAXBUFFERSIZE{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAESG}
{\bkmkend AAAAAAAESG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Property Documentation\par
\pard\plain 
{\xe \v length\:CSLibrary::Tools::Queue}
{\xe \v CSLibrary::Tools::Queue\:length}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int CSLibrary.Tools.Queue.length{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAESH}
{\bkmkend AAAAAAAESH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
CSLibrary/Tools/{\b ClassFIFIQueue.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary.Structures.RadioInformation Class Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary.Structures.RadioInformation}
{\xe \v CSLibrary.Structures.RadioInformation}
{\bkmkstart AAAAAAADVA}
{\bkmkend AAAAAAADVA}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
When detecting the attached RFID radio modules, the structures for retrieving the information for the attached RFID radio modules are as follows: }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RadioInformation} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt32 {\b length} = 0\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure size }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DriverVersion} {\b driverVersion} = new {\b DriverVersion}()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The version information for the bus driver that is used to communicate with the radio module. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt32 {\b cookie} = 0\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A unique cookie for the particular radio. This cookie will be provided to the RFID_RadioOpen function when the application wishes to take control of the radio. Note that cookies are guaranteed to only be valid for as long as (1) the corresponding RFID radio module is attached to the host system, (2) the corresponding RFID radio module is not power cycled, (3) the corresponding RFID radio module's MAC firmware is not reset, and (4) the RFID Reader Library is not shut down. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt32 {\b idLength} = 0\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The length, in bytes, of the radio's unique ID (aka, serial number) including the null terminator. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Byte [] {\b uniqueId} = new Byte[0]\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A pointer to an array of bytes that contains the unique ID (aka, serial number) for the radio represented as a null terminated ASCII character string. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
When detecting the attached RFID radio modules, the structures for retrieving the information for the attached RFID radio modules are as follows: \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v RadioInformation\:CSLibrary::Structures::RadioInformation}
{\xe \v CSLibrary::Structures::RadioInformation\:RadioInformation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CSLibrary.Structures.RadioInformation.RadioInformation ()}}
\par
{\bkmkstart AAAAAAADVB}
{\bkmkend AAAAAAADVB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v cookie\:CSLibrary::Structures::RadioInformation}
{\xe \v CSLibrary::Structures::RadioInformation\:cookie}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt32 CSLibrary.Structures.RadioInformation.cookie = 0}}
\par
{\bkmkstart AAAAAAADVC}
{\bkmkend AAAAAAADVC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A unique cookie for the particular radio. This cookie will be provided to the RFID_RadioOpen function when the application wishes to take control of the radio. Note that cookies are guaranteed to only be valid for as long as (1) the corresponding RFID radio module is attached to the host system, (2) the corresponding RFID radio module is not power cycled, (3) the corresponding RFID radio module's MAC firmware is not reset, and (4) the RFID Reader Library is not shut down. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v driverVersion\:CSLibrary::Structures::RadioInformation}
{\xe \v CSLibrary::Structures::RadioInformation\:driverVersion}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b DriverVersion} CSLibrary.Structures.RadioInformation.driverVersion = new {\b DriverVersion}()}}
\par
{\bkmkstart AAAAAAADVD}
{\bkmkend AAAAAAADVD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The version information for the bus driver that is used to communicate with the radio module. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v idLength\:CSLibrary::Structures::RadioInformation}
{\xe \v CSLibrary::Structures::RadioInformation\:idLength}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt32 CSLibrary.Structures.RadioInformation.idLength = 0}}
\par
{\bkmkstart AAAAAAADVE}
{\bkmkend AAAAAAADVE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The length, in bytes, of the radio's unique ID (aka, serial number) including the null terminator. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v length\:CSLibrary::Structures::RadioInformation}
{\xe \v CSLibrary::Structures::RadioInformation\:length}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt32 CSLibrary.Structures.RadioInformation.length = 0}}
\par
{\bkmkstart AAAAAAADVF}
{\bkmkend AAAAAAADVF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure size }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v uniqueId\:CSLibrary::Structures::RadioInformation}
{\xe \v CSLibrary::Structures::RadioInformation\:uniqueId}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Byte [] CSLibrary.Structures.RadioInformation.uniqueId = new Byte[0]}}
\par
{\bkmkstart AAAAAAADVG}
{\bkmkend AAAAAAADVG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A pointer to an array of bytes that contains the unique ID (aka, serial number) for the radio represented as a null terminated ASCII character string. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
CSLibrary/RFIDReader/Structures/{\b Intel.Structures.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary.Structures.RadioLinkProfile Class Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary.Structures.RadioLinkProfile}
{\xe \v CSLibrary.Structures.RadioLinkProfile}
{\bkmkstart AAAAAAADVH}
{\bkmkend AAAAAAADVH}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b RadioLinkProfile} Structure }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RadioLinkProfile} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt32 {\b enabled} = 0\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Indicates if the profile is the active one. A non-zero value indicates that the profile is active. A zero value indicates that the profile is inactive. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt64 {\b profileId} = 0\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The identifier used for the link profile. This field combined with profileVersion provides a unique identifier for the link profile. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt32 {\b profileVersion} = 0\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The version of the link profile. This field combined with profileId provides a unique identifier for the link profile. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt32 {\b denseReaderMode} = 0\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Indicates if this is a dense-reader-mode (DRM) profile. A non-zero value indicates that the profile is a DRM profile. A zero value indicates that the profile is not a DRM profile. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt32 {\b widebandRssiSamples} = 0\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Number of samples over which the wide band Receive Signal Strength Indication (RSSI) will be averaged. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt32 {\b narrowbandRssiSamples} = 0\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Number of samples over which the narrow band RSSI will be averaged. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt32 {\b realtimeRssiEnabled} = 0\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reserved for future use. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt32 {\b realtimeWidebandRssiSamples} = 0\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reserved for future use. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt32 {\b realtimeNarrowbandRssiSamples} = 0\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reserved for future use. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt32 {\b length_} = (UInt32)(48 + 56)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure size }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RadioProtocol} {\b profileProtocol_} = RadioProtocol.ISO18K6C\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The tag protocol for which this link profile has been configured. The value of this field determines which of the structures within the profileConfig contains the link profile configuration information. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ProfileConfig} {\b profileConfig_} = new {\b RadioLinkProfileConfig}()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The link profile configuration information. This is a discriminated union, with profileProtocol as the discriminator (i.e., determines which structure within the union is used). For example, if profileProtocol is RFID_RADIO_PROTOCOL_ISO18K6C, the iso18K6C field is used. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Properties\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt32 {\b length}{\f2  [get]}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure size }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RadioProtocol} {\b profileProtocol}{\f2  [get, set]}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The tag protocol for which this link profile has been configured. The value of this field determines which of the structures within the profileConfig contains the link profile configuration information. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ProfileConfig} {\b profileConfig}{\f2  [get, set]}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The link profile configuration information. This is a discriminated union, with profileProtocol as the discriminator (i.e., determines which structure within the union is used). For example, if profileProtocol is RFID_RADIO_PROTOCOL_ISO18K6C, the iso18K6C field is used. /// }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b RadioLinkProfile} Structure \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v RadioLinkProfile\:CSLibrary::Structures::RadioLinkProfile}
{\xe \v CSLibrary::Structures::RadioLinkProfile\:RadioLinkProfile}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CSLibrary.Structures.RadioLinkProfile.RadioLinkProfile ()}}
\par
{\bkmkstart AAAAAAADVI}
{\bkmkend AAAAAAADVI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v denseReaderMode\:CSLibrary::Structures::RadioLinkProfile}
{\xe \v CSLibrary::Structures::RadioLinkProfile\:denseReaderMode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt32 CSLibrary.Structures.RadioLinkProfile.denseReaderMode = 0}}
\par
{\bkmkstart AAAAAAADVJ}
{\bkmkend AAAAAAADVJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Indicates if this is a dense-reader-mode (DRM) profile. A non-zero value indicates that the profile is a DRM profile. A zero value indicates that the profile is not a DRM profile. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v enabled\:CSLibrary::Structures::RadioLinkProfile}
{\xe \v CSLibrary::Structures::RadioLinkProfile\:enabled}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt32 CSLibrary.Structures.RadioLinkProfile.enabled = 0}}
\par
{\bkmkstart AAAAAAADVK}
{\bkmkend AAAAAAADVK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Indicates if the profile is the active one. A non-zero value indicates that the profile is active. A zero value indicates that the profile is inactive. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v length_\:CSLibrary::Structures::RadioLinkProfile}
{\xe \v CSLibrary::Structures::RadioLinkProfile\:length_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt32 CSLibrary.Structures.RadioLinkProfile.length_ = (UInt32)(48 + 56){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADVL}
{\bkmkend AAAAAAADVL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure size }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v narrowbandRssiSamples\:CSLibrary::Structures::RadioLinkProfile}
{\xe \v CSLibrary::Structures::RadioLinkProfile\:narrowbandRssiSamples}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt32 CSLibrary.Structures.RadioLinkProfile.narrowbandRssiSamples = 0}}
\par
{\bkmkstart AAAAAAADVM}
{\bkmkend AAAAAAADVM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Number of samples over which the narrow band RSSI will be averaged. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v profileConfig_\:CSLibrary::Structures::RadioLinkProfile}
{\xe \v CSLibrary::Structures::RadioLinkProfile\:profileConfig_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b ProfileConfig} CSLibrary.Structures.RadioLinkProfile.profileConfig_ = new {\b RadioLinkProfileConfig}(){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADVN}
{\bkmkend AAAAAAADVN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The link profile configuration information. This is a discriminated union, with profileProtocol as the discriminator (i.e., determines which structure within the union is used). For example, if profileProtocol is RFID_RADIO_PROTOCOL_ISO18K6C, the iso18K6C field is used. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v profileId\:CSLibrary::Structures::RadioLinkProfile}
{\xe \v CSLibrary::Structures::RadioLinkProfile\:profileId}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt64 CSLibrary.Structures.RadioLinkProfile.profileId = 0}}
\par
{\bkmkstart AAAAAAADVO}
{\bkmkend AAAAAAADVO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The identifier used for the link profile. This field combined with profileVersion provides a unique identifier for the link profile. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v profileProtocol_\:CSLibrary::Structures::RadioLinkProfile}
{\xe \v CSLibrary::Structures::RadioLinkProfile\:profileProtocol_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RadioProtocol} CSLibrary.Structures.RadioLinkProfile.profileProtocol_ = RadioProtocol.ISO18K6C{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADVP}
{\bkmkend AAAAAAADVP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The tag protocol for which this link profile has been configured. The value of this field determines which of the structures within the profileConfig contains the link profile configuration information. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v profileVersion\:CSLibrary::Structures::RadioLinkProfile}
{\xe \v CSLibrary::Structures::RadioLinkProfile\:profileVersion}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt32 CSLibrary.Structures.RadioLinkProfile.profileVersion = 0}}
\par
{\bkmkstart AAAAAAADVQ}
{\bkmkend AAAAAAADVQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The version of the link profile. This field combined with profileId provides a unique identifier for the link profile. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v realtimeNarrowbandRssiSamples\:CSLibrary::Structures::RadioLinkProfile}
{\xe \v CSLibrary::Structures::RadioLinkProfile\:realtimeNarrowbandRssiSamples}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt32 CSLibrary.Structures.RadioLinkProfile.realtimeNarrowbandRssiSamples = 0}}
\par
{\bkmkstart AAAAAAADVR}
{\bkmkend AAAAAAADVR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reserved for future use. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v realtimeRssiEnabled\:CSLibrary::Structures::RadioLinkProfile}
{\xe \v CSLibrary::Structures::RadioLinkProfile\:realtimeRssiEnabled}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt32 CSLibrary.Structures.RadioLinkProfile.realtimeRssiEnabled = 0}}
\par
{\bkmkstart AAAAAAADVS}
{\bkmkend AAAAAAADVS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reserved for future use. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v realtimeWidebandRssiSamples\:CSLibrary::Structures::RadioLinkProfile}
{\xe \v CSLibrary::Structures::RadioLinkProfile\:realtimeWidebandRssiSamples}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt32 CSLibrary.Structures.RadioLinkProfile.realtimeWidebandRssiSamples = 0}}
\par
{\bkmkstart AAAAAAADVT}
{\bkmkend AAAAAAADVT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reserved for future use. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v widebandRssiSamples\:CSLibrary::Structures::RadioLinkProfile}
{\xe \v CSLibrary::Structures::RadioLinkProfile\:widebandRssiSamples}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt32 CSLibrary.Structures.RadioLinkProfile.widebandRssiSamples = 0}}
\par
{\bkmkstart AAAAAAADVU}
{\bkmkend AAAAAAADVU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Number of samples over which the wide band Receive Signal Strength Indication (RSSI) will be averaged. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Property Documentation\par
\pard\plain 
{\xe \v length\:CSLibrary::Structures::RadioLinkProfile}
{\xe \v CSLibrary::Structures::RadioLinkProfile\:length}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt32 CSLibrary.Structures.RadioLinkProfile.length{\f2 [get]}}}
\par
{\bkmkstart AAAAAAADVV}
{\bkmkend AAAAAAADVV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure size }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v profileConfig\:CSLibrary::Structures::RadioLinkProfile}
{\xe \v CSLibrary::Structures::RadioLinkProfile\:profileConfig}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b ProfileConfig} CSLibrary.Structures.RadioLinkProfile.profileConfig{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAADVW}
{\bkmkend AAAAAAADVW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The link profile configuration information. This is a discriminated union, with profileProtocol as the discriminator (i.e., determines which structure within the union is used). For example, if profileProtocol is RFID_RADIO_PROTOCOL_ISO18K6C, the iso18K6C field is used. /// }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v profileProtocol\:CSLibrary::Structures::RadioLinkProfile}
{\xe \v CSLibrary::Structures::RadioLinkProfile\:profileProtocol}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RadioProtocol} CSLibrary.Structures.RadioLinkProfile.profileProtocol{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAADVX}
{\bkmkend AAAAAAADVX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The tag protocol for which this link profile has been configured. The value of this field determines which of the structures within the profileConfig contains the link profile configuration information. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
CSLibrary/RFIDReader/Structures/{\b Intel.Structures.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary.Structures.RadioLinkProfileConfig Class Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary.Structures.RadioLinkProfileConfig}
{\xe \v CSLibrary.Structures.RadioLinkProfileConfig}
{\bkmkstart AAAAAAADVY}
{\bkmkend AAAAAAADVY}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
}}\par
Inheritance diagram for CSLibrary.Structures.RadioLinkProfileConfig:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_c_s_library_1_1_structures_1_1_radio_link_profile_config.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RadioLinkProfileConfig} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ModulationType} {\b modulationType} = {\b ModulationType.UNKNOWN}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The modulation type that is used by the profile. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt32 {\b tari} = 0\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The duration of the Tari in nanoseconds. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DataDifference} {\b data01Difference} = {\b DataDifference.UNKNOWN}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The difference, in Tari, between an data zero and a data one. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt32 {\b pulseWidth} = 0\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The duration of the low-going portion of the interrogator-to- tag PIE symbol (i.e., pulse width) in nanoseconds. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt32 {\b rtCalibration} = 0\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The width of the interrogator (i.e., radio) to tag calibration (i.e., RTCal) in nanoseconds. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt32 {\b trCalibration} = 0\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The width of the tag to interrogator calibration (i.e., TRCal) in nanoseconds. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DivideRatio} {\b divideRatio} = {\b DivideRatio.UNKNOWN}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The tag-to-interrogator divide ratio that is sent as part of the Query command. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b MillerNumber} {\b millerNumber} = {\b MillerNumber.UNKNOWN}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The miller number (i.e., cycles per symbol) that is sent as part of the Query command. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt32 {\b trLinkFrequency} = 0\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The tag-to-interrogator link frequency in Hz. Note that this is not the link data-rate. The link data rate can be computed by dividing this value by 2millerNumber. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt32 {\b varT2Delay} = 0\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The delay, in microseconds, that is inserted to ensure meeting the minimum ISO 18000-6C T2 timing. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt32 {\b rxDelay} = 0\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The amount of time, measured in 48MHz clock cycles, after transmitting that the radio module will wait before attempting to receive backscattered signals from tags. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt32 {\b minT2Delay} = 0\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The minimum ISO 18000-6C T2 time, in microseconds, after receiving tag responses before a radio may transmit again. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt32 {\b txPropagationDelay} = 0\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The number of microseconds it takes for a signal to propagate through the radio's transmit chain. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v RadioLinkProfileConfig\:CSLibrary::Structures::RadioLinkProfileConfig}
{\xe \v CSLibrary::Structures::RadioLinkProfileConfig\:RadioLinkProfileConfig}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CSLibrary.Structures.RadioLinkProfileConfig.RadioLinkProfileConfig ()}}
\par
{\bkmkstart AAAAAAADVZ}
{\bkmkend AAAAAAADVZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v data01Difference\:CSLibrary::Structures::RadioLinkProfileConfig}
{\xe \v CSLibrary::Structures::RadioLinkProfileConfig\:data01Difference}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b DataDifference} CSLibrary.Structures.RadioLinkProfileConfig.data01Difference = {\b DataDifference.UNKNOWN}}}
\par
{\bkmkstart AAAAAAADWA}
{\bkmkend AAAAAAADWA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The difference, in Tari, between an data zero and a data one. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v divideRatio\:CSLibrary::Structures::RadioLinkProfileConfig}
{\xe \v CSLibrary::Structures::RadioLinkProfileConfig\:divideRatio}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b DivideRatio} CSLibrary.Structures.RadioLinkProfileConfig.divideRatio = {\b DivideRatio.UNKNOWN}}}
\par
{\bkmkstart AAAAAAADWB}
{\bkmkend AAAAAAADWB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The tag-to-interrogator divide ratio that is sent as part of the Query command. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v millerNumber\:CSLibrary::Structures::RadioLinkProfileConfig}
{\xe \v CSLibrary::Structures::RadioLinkProfileConfig\:millerNumber}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b MillerNumber} CSLibrary.Structures.RadioLinkProfileConfig.millerNumber = {\b MillerNumber.UNKNOWN}}}
\par
{\bkmkstart AAAAAAADWC}
{\bkmkend AAAAAAADWC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The miller number (i.e., cycles per symbol) that is sent as part of the Query command. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v minT2Delay\:CSLibrary::Structures::RadioLinkProfileConfig}
{\xe \v CSLibrary::Structures::RadioLinkProfileConfig\:minT2Delay}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt32 CSLibrary.Structures.RadioLinkProfileConfig.minT2Delay = 0}}
\par
{\bkmkstart AAAAAAADWD}
{\bkmkend AAAAAAADWD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The minimum ISO 18000-6C T2 time, in microseconds, after receiving tag responses before a radio may transmit again. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v modulationType\:CSLibrary::Structures::RadioLinkProfileConfig}
{\xe \v CSLibrary::Structures::RadioLinkProfileConfig\:modulationType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b ModulationType} CSLibrary.Structures.RadioLinkProfileConfig.modulationType = {\b ModulationType.UNKNOWN}}}
\par
{\bkmkstart AAAAAAADWE}
{\bkmkend AAAAAAADWE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The modulation type that is used by the profile. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v pulseWidth\:CSLibrary::Structures::RadioLinkProfileConfig}
{\xe \v CSLibrary::Structures::RadioLinkProfileConfig\:pulseWidth}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt32 CSLibrary.Structures.RadioLinkProfileConfig.pulseWidth = 0}}
\par
{\bkmkstart AAAAAAADWF}
{\bkmkend AAAAAAADWF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The duration of the low-going portion of the interrogator-to- tag PIE symbol (i.e., pulse width) in nanoseconds. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v rtCalibration\:CSLibrary::Structures::RadioLinkProfileConfig}
{\xe \v CSLibrary::Structures::RadioLinkProfileConfig\:rtCalibration}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt32 CSLibrary.Structures.RadioLinkProfileConfig.rtCalibration = 0}}
\par
{\bkmkstart AAAAAAADWG}
{\bkmkend AAAAAAADWG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The width of the interrogator (i.e., radio) to tag calibration (i.e., RTCal) in nanoseconds. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v rxDelay\:CSLibrary::Structures::RadioLinkProfileConfig}
{\xe \v CSLibrary::Structures::RadioLinkProfileConfig\:rxDelay}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt32 CSLibrary.Structures.RadioLinkProfileConfig.rxDelay = 0}}
\par
{\bkmkstart AAAAAAADWH}
{\bkmkend AAAAAAADWH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The amount of time, measured in 48MHz clock cycles, after transmitting that the radio module will wait before attempting to receive backscattered signals from tags. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v tari\:CSLibrary::Structures::RadioLinkProfileConfig}
{\xe \v CSLibrary::Structures::RadioLinkProfileConfig\:tari}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt32 CSLibrary.Structures.RadioLinkProfileConfig.tari = 0}}
\par
{\bkmkstart AAAAAAADWI}
{\bkmkend AAAAAAADWI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The duration of the Tari in nanoseconds. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v trCalibration\:CSLibrary::Structures::RadioLinkProfileConfig}
{\xe \v CSLibrary::Structures::RadioLinkProfileConfig\:trCalibration}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt32 CSLibrary.Structures.RadioLinkProfileConfig.trCalibration = 0}}
\par
{\bkmkstart AAAAAAADWJ}
{\bkmkend AAAAAAADWJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The width of the tag to interrogator calibration (i.e., TRCal) in nanoseconds. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v trLinkFrequency\:CSLibrary::Structures::RadioLinkProfileConfig}
{\xe \v CSLibrary::Structures::RadioLinkProfileConfig\:trLinkFrequency}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt32 CSLibrary.Structures.RadioLinkProfileConfig.trLinkFrequency = 0}}
\par
{\bkmkstart AAAAAAADWK}
{\bkmkend AAAAAAADWK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The tag-to-interrogator link frequency in Hz. Note that this is not the link data-rate. The link data rate can be computed by dividing this value by 2millerNumber. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v txPropagationDelay\:CSLibrary::Structures::RadioLinkProfileConfig}
{\xe \v CSLibrary::Structures::RadioLinkProfileConfig\:txPropagationDelay}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt32 CSLibrary.Structures.RadioLinkProfileConfig.txPropagationDelay = 0}}
\par
{\bkmkstart AAAAAAADWL}
{\bkmkend AAAAAAADWL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The number of microseconds it takes for a signal to propagate through the radio's transmit chain. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v varT2Delay\:CSLibrary::Structures::RadioLinkProfileConfig}
{\xe \v CSLibrary::Structures::RadioLinkProfileConfig\:varT2Delay}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt32 CSLibrary.Structures.RadioLinkProfileConfig.varT2Delay = 0}}
\par
{\bkmkstart AAAAAAADWM}
{\bkmkend AAAAAAADWM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The delay, in microseconds, that is inserted to ensure meeting the minimum ISO 18000-6C T2 timing. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
CSLibrary/RFIDReader/Structures/{\b Intel.Structures.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary.Structures.RawDecodeMessage Class Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary.Structures.RawDecodeMessage}
{\xe \v CSLibrary.Structures.RawDecodeMessage}
{\bkmkstart AAAAAAADWN}
{\bkmkend AAAAAAADWN}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Raw decode structure }}\par
Inheritance diagram for CSLibrary.Structures.RawDecodeMessage:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_c_s_library_1_1_barcode_1_1_structures_1_1_raw_decode_message.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte [] {\b pchMessage}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
decoded message data }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Raw decode structure \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v pchMessage\:CSLibrary::Barcode::Structures::RawDecodeMessage}
{\xe \v CSLibrary::Barcode::Structures::RawDecodeMessage\:pchMessage}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte [] CSLibrary.Structures.RawDecodeMessage.pchMessage}}
\par
{\bkmkstart AAAAAAADWO}
{\bkmkend AAAAAAADWO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
decoded message data }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
CSLibrary/BarcodeReader/Structures/{\b CSLibrary.Barcode.Structures.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary.Structures.RECT Struct Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary.Structures.RECT}
{\xe \v CSLibrary.Structures.RECT}
{\bkmkstart AAAAAAADWP}
{\bkmkend AAAAAAADWP}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Image Size }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Int32 {\b left}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
left position }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Int32 {\b top}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
top position }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Int32 {\b right}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
right position }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Int32 {\b bottom}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
bottom position }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Image Size \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v bottom\:CSLibrary::Barcode::Structures::RECT}
{\xe \v CSLibrary::Barcode::Structures::RECT\:bottom}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Int32 CSLibrary.Structures.RECT.bottom}}
\par
{\bkmkstart AAAAAAADWQ}
{\bkmkend AAAAAAADWQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
bottom position }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v left\:CSLibrary::Barcode::Structures::RECT}
{\xe \v CSLibrary::Barcode::Structures::RECT\:left}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Int32 CSLibrary.Structures.RECT.left}}
\par
{\bkmkstart AAAAAAADWR}
{\bkmkend AAAAAAADWR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
left position }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v right\:CSLibrary::Barcode::Structures::RECT}
{\xe \v CSLibrary::Barcode::Structures::RECT\:right}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Int32 CSLibrary.Structures.RECT.right}}
\par
{\bkmkstart AAAAAAADWS}
{\bkmkend AAAAAAADWS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
right position }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v top\:CSLibrary::Barcode::Structures::RECT}
{\xe \v CSLibrary::Barcode::Structures::RECT\:top}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Int32 CSLibrary.Structures.RECT.top}}
\par
{\bkmkstart AAAAAAADWT}
{\bkmkend AAAAAAADWT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
top position }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
CSLibrary/BarcodeReader/Structures/{\b CSLibrary.Barcode.Structures.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary.Net.NetFinder.ResultArgs Class Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary.Net.NetFinder.ResultArgs}
{\xe \v CSLibrary.Net.NetFinder.ResultArgs}
{\bkmkstart AAAAAAADHK}
{\bkmkend AAAAAAADHK}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Result Argument }}\par
Inheritance diagram for CSLibrary.Net.NetFinder.ResultArgs:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_c_s_library_1_1_net_1_1_net_finder_1_1_result_args.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ResultArgs} ({\b AssignResult} {\b Result})\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Properties\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b AssignResult} {\b Result}{\f2  [get, set]}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Result }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b AssignResult} {\b m_Result}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Result Argument \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v ResultArgs\:CSLibrary::Net::NetFinder::ResultArgs}
{\xe \v CSLibrary::Net::NetFinder::ResultArgs\:ResultArgs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CSLibrary.Net.NetFinder.ResultArgs.ResultArgs ({\b AssignResult}  {\i Result})}}
\par
{\bkmkstart AAAAAAADHL}
{\bkmkend AAAAAAADHL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i Result} \cell }{\cell }
{\row }
}
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v m_Result\:CSLibrary::Net::NetFinder::ResultArgs}
{\xe \v CSLibrary::Net::NetFinder::ResultArgs\:m_Result}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b AssignResult} CSLibrary.Net.NetFinder.ResultArgs.m_Result{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADHM}
{\bkmkend AAAAAAADHM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Property Documentation\par
\pard\plain 
{\xe \v Result\:CSLibrary::Net::NetFinder::ResultArgs}
{\xe \v CSLibrary::Net::NetFinder::ResultArgs\:Result}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b AssignResult} CSLibrary.Net.NetFinder.ResultArgs.Result{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAADHN}
{\bkmkend AAAAAAADHN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Result }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
CSLibrary/{\b ClassNetfinder.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary.RFIDReader Class Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary.RFIDReader}
{\xe \v CSLibrary.RFIDReader}
{\bkmkstart AAAAAAAAJU}
{\bkmkend AAAAAAAAJU}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b DOWNLINKCMD}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Types\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b MACREGISTER} : UInt16 \{ {\b MACREGISTER.MAC_VER} = 0x0000, 
{\b MACREGISTER.MAC_INFO} = 0x0001, 
{\b MACREGISTER.MAC_RFTRANSINFO} = 0x0002, 
{\b MACREGISTER.MAC_DBG1} = 0x0003, 
{\b MACREGISTER.MAC_DBG2} = 0x0004, 
{\b MACREGISTER.MAC_ERROR} = 0x0005, 
{\b MACREGISTER.HST_ENGTST_ARG0} = 0x0100, 
{\b MACREGISTER.HST_ENGTST_ARG1} = 0x0101, 
{\b MACREGISTER.HST_DBG1} = 0x0102, 
{\b MACREGISTER.HST_EMU} = 0x0103, 
{\b MACREGISTER.HST_PWRMGMT} = 0x0200, 
{\b MACREGISTER.HST_CMNDIAGS} = 0x0201, 
{\b MACREGISTER.MAC_BLK02RES1} = 0x0202, 
{\b MACREGISTER.HST_CTR_GCFG} = 0x0203, 
{\b MACREGISTER.HST_CTR1_CFG} = 0x0204, 
{\b MACREGISTER.MAC_CTR1_VAL} = 0x0205, 
{\b MACREGISTER.HST_CTR2_CFG} = 0x0206, 
{\b MACREGISTER.MAC_CTR2_VAL} = 0x0207, 
{\b MACREGISTER.HST_CTR3_CFG} = 0x0208, 
{\b MACREGISTER.MAC_CTR3_VAL} = 0x0209, 
{\b MACREGISTER.HST_CTR4_CFG} = 0x020A, 
{\b MACREGISTER.MAC_CTR4_VAL} = 0x020B, 
{\b MACREGISTER.HST_PROTSCH_SMIDX} = 0x0300, 
{\b MACREGISTER.HST_PROTSCH_SMCFG} = 0x0301, 
{\b MACREGISTER.HST_PROTSCH_FTIME_SEL} = 0x0302, 
{\b MACREGISTER.HST_PROTSCH_FTIME} = 0x0303, 
{\b MACREGISTER.HST_PROTSCH_SMCFG_SEL} = 0x0304, 
{\b MACREGISTER.HST_PROTSCH_TXTIME_SEL} = 0x0305, 
{\b MACREGISTER.HST_PROTSCH_TXTIME_ON} = 0x0306, 
{\b MACREGISTER.HST_PROTSCH_TXTIME_OFF} = 0x0307, 
{\b MACREGISTER.HST_PROTSCH_CYCCFG_SEL} = 0x0308, 
{\b MACREGISTER.HST_PROTSCH_CYCCFG_DESC_ADJ1} = 0x0309, 
{\b MACREGISTER.HST_PROTSCH_ADJCW} = 0x030A, 
{\b MACREGISTER.HST_MBP_ADDR} = 0x0400, 
{\b MACREGISTER.HST_MBP_DATA} = 0x0401, 
{\b MACREGISTER.HST_MBP_RFU_0x0402} = 0x0402, 
{\b MACREGISTER.HST_MBP_RFU_0x0403} = 0x0403, 
{\b MACREGISTER.HST_MBP_RFU_0x0404} = 0x0404, 
{\b MACREGISTER.HST_MBP_RFU_0x0405} = 0x0405, 
{\b MACREGISTER.HST_MBP_RFU_0x0406} = 0x0406, 
{\b MACREGISTER.HST_MBP_RFU_0x0407} = 0x0407, 
{\b MACREGISTER.HST_LPROF_SEL} = 0x0408, 
{\b MACREGISTER.HST_LPROF_ADDR} = 0x0409, 
{\b MACREGISTER.HST_LPROF_DATA} = 0x040A, 
{\b MACREGISTER.HST_OEM_ADDR} = 0x0500, 
{\b MACREGISTER.HST_OEM_DATA} = 0x0501, 
{\b MACREGISTER.HST_GPIO_INMSK} = 0x0600, 
{\b MACREGISTER.HST_GPIO_OUTMSK} = 0x0601, 
{\b MACREGISTER.HST_GPIO_OUTVAL} = 0x0602, 
{\b MACREGISTER.HST_GPIO_CFG} = 0x0603, 
{\b MACREGISTER.HST_ANT_CYCLES} = 0x0700, 
{\b MACREGISTER.HST_ANT_DESC_SEL} = 0x0701, 
{\b MACREGISTER.HST_ANT_DESC_CFG} = 0x0702, 
{\b MACREGISTER.MAC_ANT_DESC_STAT} = 0x0703, 
{\b MACREGISTER.HST_ANT_DESC_PORTDEF} = 0x0704, 
{\b MACREGISTER.HST_ANT_DESC_DWELL} = 0x0705, 
{\b MACREGISTER.HST_ANT_DESC_RFPOWER} = 0x0706, 
{\b MACREGISTER.HST_ANT_DESC_INV_CNT} = 0x0707, 
{\b MACREGISTER.HST_TAGMSK_DESC_SEL} = 0x0800, 
{\b MACREGISTER.HST_TAGMSK_DESC_CFG} = 0x0801, 
{\b MACREGISTER.HST_TAGMSK_BANK} = 0x0802, 
{\b MACREGISTER.HST_TAGMSK_PTR} = 0x0803, 
{\b MACREGISTER.HST_TAGMSK_LEN} = 0x0804, 
{\b MACREGISTER.HST_TAGMSK_0_3} = 0x0805, 
{\b MACREGISTER.HST_TAGMSK_4_7} = 0x0806, 
{\b MACREGISTER.HST_TAGMSK_8_11} = 0x0807, 
{\b MACREGISTER.HST_TAGMSK_12_15} = 0x0808, 
{\b MACREGISTER.HST_TAGMSK_16_19} = 0x0809, 
{\b MACREGISTER.HST_TAGMSK_20_23} = 0x080A, 
{\b MACREGISTER.HST_TAGMSK_24_27} = 0x080B, 
{\b MACREGISTER.HST_TAGMSK_28_31} = 0x080C, 
{\b MACREGISTER.HST_QUERY_CFG} = 0x0900, 
{\b MACREGISTER.HST_INV_CFG} = 0x0901, 
{\b MACREGISTER.HST_INV_SEL} = 0x0902, 
{\b MACREGISTER.HST_INV_ALG_PARM_0} = 0x0903, 
{\b MACREGISTER.HST_INV_ALG_PARM_1} = 0x0904, 
{\b MACREGISTER.HST_INV_ALG_PARM_2} = 0x0905, 
{\b MACREGISTER.HST_INV_ALG_PARM_3} = 0x0906, 
{\b MACREGISTER.HST_INV_RFU_0x0907} = 0x0907, 
{\b MACREGISTER.HST_INV_RFU_0x0908} = 0x0908, 
{\b MACREGISTER.HST_INV_RFU_0x0909} = 0x0909, 
{\b MACREGISTER.HST_INV_RFU_0x090A} = 0x090A, 
{\b MACREGISTER.HST_INV_RFU_0x090B} = 0x090B, 
{\b MACREGISTER.HST_INV_RFU_0x090C} = 0x090C, 
{\b MACREGISTER.HST_INV_RFU_0x090D} = 0x090D, 
{\b MACREGISTER.HST_INV_RFU_0x090E} = 0x090E, 
{\b MACREGISTER.HST_INV_RFU_0x090F} = 0x090F, 
{\b MACREGISTER.HST_INV_EPC_MATCH_SEL} = 0x0910, 
{\b MACREGISTER.HST_INV_EPC_MATCH_CFG} = 0x0911, 
{\b MACREGISTER.HST_INV_EPCDAT_0_3} = 0x0912, 
{\b MACREGISTER.HST_INV_EPCDAT_4_7} = 0x0913, 
{\b MACREGISTER.HST_INV_EPCDAT_8_11} = 0x0914, 
{\b MACREGISTER.HST_INV_EPCDAT_12_15} = 0x0915, 
{\b MACREGISTER.HST_INV_EPCDAT_16_19} = 0x0916, 
{\b MACREGISTER.HST_INV_EPCDAT_20_23} = 0x0917, 
{\b MACREGISTER.HST_INV_EPCDAT_24_27} = 0x0918, 
{\b MACREGISTER.HST_INV_EPCDAT_28_31} = 0x0919, 
{\b MACREGISTER.HST_INV_EPCDAT_32_35} = 0x091A, 
{\b MACREGISTER.HST_INV_EPCDAT_36_39} = 0x091B, 
{\b MACREGISTER.HST_INV_EPCDAT_40_43} = 0x091C, 
{\b MACREGISTER.HST_INV_EPCDAT_44_47} = 0x091D, 
{\b MACREGISTER.HST_INV_EPCDAT_48_51} = 0x091E, 
{\b MACREGISTER.HST_INV_EPCDAT_52_55} = 0x091F, 
{\b MACREGISTER.HST_INV_EPCDAT_56_59} = 0x0920, 
{\b MACREGISTER.HST_INV_EPCDAT_60_63} = 0x0921, 
{\b MACREGISTER.HST_TAGACC_DESC_SEL} = 0x0A00, 
{\b MACREGISTER.HST_TAGACC_DESC_CFG} = 0x0A01, 
{\b MACREGISTER.HST_TAGACC_BANK} = 0x0A02, 
{\b MACREGISTER.HST_TAGACC_PTR} = 0x0A03, 
{\b MACREGISTER.HST_TAGACC_CNT} = 0x0A04, 
{\b MACREGISTER.HST_TAGACC_LOCKCFG} = 0x0A05, 
{\b MACREGISTER.HST_TAGACC_ACCPWD} = 0x0A06, 
{\b MACREGISTER.HST_TAGACC_KILLPWD} = 0x0A07, 
{\b MACREGISTER.HST_TAGWRDAT_SEL} = 0x0A08, 
{\b MACREGISTER.HST_TAGWRDAT_0} = 0x0A09, 
{\b MACREGISTER.HST_TAGWRDAT_1} = 0x0A0A, 
{\b MACREGISTER.HST_TAGWRDAT_2} = 0x0A0B, 
{\b MACREGISTER.HST_TAGWRDAT_3} = 0x0A0C, 
{\b MACREGISTER.HST_TAGWRDAT_4} = 0x0A0D, 
{\b MACREGISTER.HST_TAGWRDAT_5} = 0x0A0E, 
{\b MACREGISTER.HST_TAGWRDAT_6} = 0x0A0F, 
{\b MACREGISTER.HST_TAGWRDAT_7} = 0x0A10, 
{\b MACREGISTER.HST_TAGWRDAT_8} = 0x0A11, 
{\b MACREGISTER.HST_TAGWRDAT_9} = 0x0A12, 
{\b MACREGISTER.HST_TAGWRDAT_10} = 0x0A13, 
{\b MACREGISTER.HST_TAGWRDAT_11} = 0x0A14, 
{\b MACREGISTER.HST_TAGWRDAT_12} = 0x0A15, 
{\b MACREGISTER.HST_TAGWRDAT_13} = 0x0A16, 
{\b MACREGISTER.HST_TAGWRDAT_14} = 0x0A17, 
{\b MACREGISTER.HST_TAGWRDAT_15} = 0x0A18, 
{\b MACREGISTER.MAC_RFTC_PAPWRLEV} = 0x0B00, 
{\b MACREGISTER.HST_RFTC_PAPWRCTL_PGAIN} = 0x0B01, 
{\b MACREGISTER.HST_RFTC_PAPWRCTL_IGAIN} = 0x0B02, 
{\b MACREGISTER.HST_RFTC_PAPWRCTL_DGAIN} = 0x0B03, 
{\b MACREGISTER.MAC_RFTC_REVPWRLEV} = 0x0B04, 
{\b MACREGISTER.HST_RFTC_REVPWRTHRSH} = 0x0B05, 
{\b MACREGISTER.MAC_RFTC_AMBIENTTEMP} = 0x0B06, 
{\b MACREGISTER.HST_RFTC_AMBIENTTEMPTHRSH} = 0x0B07, 
{\b MACREGISTER.MAC_RFTC_XCVRTEMP} = 0x0B08, 
{\b MACREGISTER.HST_RFTC_XCVRTEMPTHRSH} = 0x0B09, 
{\b MACREGISTER.MAC_RFTC_PATEMP} = 0x0B0A, 
{\b MACREGISTER.HST_RFTC_PATEMPTHRSH} = 0x0B0B, 
{\b MACREGISTER.HST_RFTC_PADELTATEMPTHRSH} = 0x0B0C, 
{\b MACREGISTER.HST_RFTC_PAPWRCTL_AIWDELAY} = 0x0B0D, 
{\b MACREGISTER.MAC_RFTC_PAPWRCTL_STAT0} = 0x0B0E, 
{\b MACREGISTER.MAC_RFTC_PAPWRCTL_STAT1} = 0x0B0F, 
{\b MACREGISTER.MAC_RFTC_PAPWRCTL_STAT2} = 0x0B10, 
{\b MACREGISTER.MAC_RFTC_PAPWRCTL_STAT3} = 0x0B11, 
{\b MACREGISTER.HST_RFTC_ANTSENSRESTHRSH} = 0x0B12, 
{\b MACREGISTER.HST_RFTC_IFLNAAGCRANGE} = 0x0B13, 
{\b MACREGISTER.MAC_RFTC_LAST_ANACTRL1} = 0x0B14, 
{\b MACREGISTER.HST_RFTC_OPENLOOPPWRCTRL} = 0x0B15, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B16} = 0x0B16, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B17} = 0x0B17, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B18} = 0x0B18, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B19} = 0x0B19, 
{\b MACREGISTER.HST_RFTC_PREDIST_COEFF0} = 0x0B1A, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B1B} = 0x0B1B, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B1C} = 0x0B1C, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B1D} = 0x0B1D, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B1E} = 0x0B1E, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B1F} = 0x0B1F, 
{\b MACREGISTER.HST_RFTC_CAL_GGNEG7} = 0x0B20, 
{\b MACREGISTER.HST_RFTC_CAL_GGNEG5} = 0x0B21, 
{\b MACREGISTER.HST_RFTC_CAL_GGNEG3} = 0x0B22, 
{\b MACREGISTER.HST_RFTC_CAL_GGNEG1} = 0x0B23, 
{\b MACREGISTER.HST_RFTC_CAL_GGPLUS1} = 0x0B24, 
{\b MACREGISTER.HST_RFTC_CAL_GGPLUS3} = 0x0B25, 
{\b MACREGISTER.HST_RFTC_CAL_GGPLUS5} = 0x0B26, 
{\b MACREGISTER.HST_RFTC_CAL_GGPLUS7} = 0x0B27, 
{\b MACREGISTER.HST_RFTC_CAL_MACADCREFV} = 0x0B28, 
{\b MACREGISTER.HST_RFTC_CAL_RFFWDPWR_C0} = 0x0B29, 
{\b MACREGISTER.HST_RFTC_CAL_RFFWDPWR_C1} = 0x0B2A, 
{\b MACREGISTER.HST_RFTC_CAL_RFFWDPWR_C2} = 0x0B2B, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B2C} = 0x0B2C, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B2D} = 0x0B2D, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B2E} = 0x0B2E, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B2F} = 0x0B2F, 
{\b MACREGISTER.HST_RFTC_CLKDBLR_CFG} = 0x0B30, 
{\b MACREGISTER.HST_RFTC_CLKDBLR_SEL} = 0x0B31, 
{\b MACREGISTER.HST_RFTC_CLKDBLR_LUTENTRY} = 0x0B32, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B33} = 0x0B33, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B34} = 0x0B34, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B35} = 0x0B35, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B36} = 0x0B36, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B37} = 0x0B37, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B38} = 0x0B38, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B39} = 0x0B39, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B3A} = 0x0B3A, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B3B} = 0x0B3B, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B3C} = 0x0B3C, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B3D} = 0x0B3D, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B3E} = 0x0B3E, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B3F} = 0x0B3F, 
{\b MACREGISTER.HST_RFTC_FRQHOPMODE} = 0x0B40, 
{\b MACREGISTER.HST_RFTC_FRQHOPENTRYCNT} = 0x0B41, 
{\b MACREGISTER.HST_RFTC_FRQHOPTABLEINDEX} = 0x0B42, 
{\b MACREGISTER.MAC_RFTC_HOPCNT} = 0x0B43, 
{\b MACREGISTER.HST_RFTC_MINHOPDUR} = 0x0B44, 
{\b MACREGISTER.HST_RFTC_MAXHOPDUR} = 0x0B45, 
{\b MACREGISTER.HST_RFTC_FRQHOPRANDSEED} = 0x0B46, 
{\b MACREGISTER.MAC_RFTC_FRQHOPSHFTREGVAL} = 0x0B47, 
{\b MACREGISTER.MAC_RFTC_FRQHOPRANDNUMCNT} = 0x0B48, 
{\b MACREGISTER.HST_RFTC_FRQCHINDEX} = 0x0B49, 
{\b MACREGISTER.HST_RFTC_PLLLOCKTIMEOUT} = 0x0B4A, 
{\b MACREGISTER.HST_RFTC_PLLLOCK_DET_THRSH} = 0x0B4B, 
{\b MACREGISTER.HST_RFTC_PLLLOCK_DET_CNT} = 0x0B4C, 
{\b MACREGISTER.HST_RFTC_PLLLOCK_TO} = 0x0B4D, 
{\b MACREGISTER.HST_RFTC_BERREADDELAY} = 0x0B4E, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B4F} = 0x0B4F, 
{\b MACREGISTER.MAC_RFTC_FWDRFPWRRAWADC} = 0x0B50, 
{\b MACREGISTER.MAC_RFTC_REVRFPWRRAWADC} = 0x0B51, 
{\b MACREGISTER.MAC_RFTC_ANTSENSERAWADC} = 0x0B52, 
{\b MACREGISTER.MAC_RFTC_AMBTEMPRAWADC} = 0x0B53, 
{\b MACREGISTER.MAC_RFTC_PATEMPRAWADC} = 0x0B54, 
{\b MACREGISTER.MAC_RFTC_XCVRTEMPRAWADC} = 0x0B55, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B56} = 0x0B56, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B57} = 0x0B57, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B58} = 0x0B58, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B59} = 0x0B59, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B5A} = 0x0B5A, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B5B} = 0x0B5B, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B5C} = 0x0B5C, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B5D} = 0x0B5D, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B5E} = 0x0B5E, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B5F} = 0x0B5F, 
{\b MACREGISTER.HST_RFTC_CURRENT_PROFILE} = 0x0B60, 
{\b MACREGISTER.HST_RFTC_PROF_SEL} = 0x0B61, 
{\b MACREGISTER.MAC_RFTC_PROF_CFG} = 0x0B62, 
{\b MACREGISTER.MAC_RFTC_PROF_ID_HIGH} = 0x0B63, 
{\b MACREGISTER.MAC_RFTC_PROF_ID_LOW} = 0x0B64, 
{\b MACREGISTER.MAC_RFTC_PROF_IDVER} = 0x0B65, 
{\b MACREGISTER.MAC_RFTC_PROF_PROTOCOL} = 0x0B66, 
{\b MACREGISTER.MAC_RFTC_PROF_R2TMODTYPE} = 0x0B67, 
{\b MACREGISTER.MAC_RFTC_PROF_TARI} = 0x0B68, 
{\b MACREGISTER.MAC_RFTC_PROF_X} = 0x0B69, 
{\b MACREGISTER.MAC_RFTC_PROF_PW} = 0x0B6A, 
{\b MACREGISTER.MAC_RFTC_PROF_RTCAL} = 0x0B6B, 
{\b MACREGISTER.MAC_RFTC_PROF_TRCAL} = 0x0B6C, 
{\b MACREGISTER.MAC_RFTC_PROF_DIVIDERATIO} = 0x0B6D, 
{\b MACREGISTER.MAC_RFTC_PROF_MILLERNUM} = 0x0B6E, 
{\b MACREGISTER.MAC_RFTC_PROF_T2RLINKFREQ} = 0x0B6F, 
{\b MACREGISTER.MAC_RFTC_PROF_VART2DELAY} = 0x0B70, 
{\b MACREGISTER.MAC_RFTC_PROF_RXDELAY} = 0x0B71, 
{\b MACREGISTER.MAC_RFTC_PROF_MINTOTT2DELAY} = 0x0B72, 
{\b MACREGISTER.MAC_RFTC_PROF_TXPROPDELAY} = 0x0B73, 
{\b MACREGISTER.MAC_RFTC_PROF_RSSIAVECFG} = 0x0B74, 
{\b MACREGISTER.MAC_RFTC_PROF_PREAMCMD} = 0x0B75, 
{\b MACREGISTER.MAC_RFTC_PROF_FSYNCCMD} = 0x0B76, 
{\b MACREGISTER.MAC_RFTC_PROF_T2WAITCMD} = 0x0B77, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B78} = 0x0B78, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B79} = 0x0B79, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B7A} = 0x0B7A, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B7B} = 0x0B7B, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B7C} = 0x0B7C, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B7D} = 0x0B7D, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B7E} = 0x0B7E, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B7F} = 0x0B7F, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B80} = 0x0B80, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B81} = 0x0B81, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B82} = 0x0B82, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B83} = 0x0B83, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B84} = 0x0B84, 
{\b MACREGISTER.HST_RFTC_FRQCH_ENTRYCNT} = 0x0C00, 
{\b MACREGISTER.HST_RFTC_FRQCH_SEL} = 0x0C01, 
{\b MACREGISTER.HST_RFTC_FRQCH_CFG} = 0x0C02, 
{\b MACREGISTER.HST_RFTC_FRQCH_DESC_PLLDIVMULT} = 0x0C03, 
{\b MACREGISTER.HST_RFTC_FRQCH_DESC_PLLDACCTL} = 0x0C04, 
{\b MACREGISTER.MAC_RFTC_FRQCH_DESC_PLLLOCKSTAT0} = 0x0C05, 
{\b MACREGISTER.MAC_RFTC_FRQCH_DESC_PLLLOCKSTAT1} = 0x0C06, 
{\b MACREGISTER.HST_RFTC_FRQCH_DESC_PARFU3} = 0x0C07, 
{\b MACREGISTER.HST_RFTC_FRQCH_CMDSTART} = 0x0C08, 
{\b MACREGISTER.HST_CMD} = 0xF000, 
{\b MACREGISTER.MAC_VER} = 0x0000, 
{\b MACREGISTER.MAC_INFO} = 0x0001, 
{\b MACREGISTER.MAC_RFTRANSINFO} = 0x0002, 
{\b MACREGISTER.MAC_DBG1} = 0x0003, 
{\b MACREGISTER.MAC_DBG2} = 0x0004, 
{\b MACREGISTER.MAC_ERROR} = 0x0005, 
{\b MACREGISTER.HST_ENGTST_ARG0} = 0x0100, 
{\b MACREGISTER.HST_ENGTST_ARG1} = 0x0101, 
{\b MACREGISTER.HST_DBG1} = 0x0102, 
{\b MACREGISTER.HST_EMU} = 0x0103, 
{\b MACREGISTER.HST_PWRMGMT} = 0x0200, 
{\b MACREGISTER.HST_CMNDIAGS} = 0x0201, 
{\b MACREGISTER.MAC_BLK02RES1} = 0x0202, 
{\b MACREGISTER.HST_CTR_GCFG} = 0x0203, 
{\b MACREGISTER.HST_CTR1_CFG} = 0x0204, 
{\b MACREGISTER.MAC_CTR1_VAL} = 0x0205, 
{\b MACREGISTER.HST_CTR2_CFG} = 0x0206, 
{\b MACREGISTER.MAC_CTR2_VAL} = 0x0207, 
{\b MACREGISTER.HST_CTR3_CFG} = 0x0208, 
{\b MACREGISTER.MAC_CTR3_VAL} = 0x0209, 
{\b MACREGISTER.HST_CTR4_CFG} = 0x020A, 
{\b MACREGISTER.MAC_CTR4_VAL} = 0x020B, 
{\b MACREGISTER.HST_PROTSCH_SMIDX} = 0x0300, 
{\b MACREGISTER.HST_PROTSCH_SMCFG} = 0x0301, 
{\b MACREGISTER.HST_PROTSCH_FTIME_SEL} = 0x0302, 
{\b MACREGISTER.HST_PROTSCH_FTIME} = 0x0303, 
{\b MACREGISTER.HST_PROTSCH_SMCFG_SEL} = 0x0304, 
{\b MACREGISTER.HST_PROTSCH_TXTIME_SEL} = 0x0305, 
{\b MACREGISTER.HST_PROTSCH_TXTIME_ON} = 0x0306, 
{\b MACREGISTER.HST_PROTSCH_TXTIME_OFF} = 0x0307, 
{\b MACREGISTER.HST_PROTSCH_CYCCFG_SEL} = 0x0308, 
{\b MACREGISTER.HST_PROTSCH_CYCCFG_DESC_ADJ1} = 0x0309, 
{\b MACREGISTER.HST_PROTSCH_ADJCW} = 0x030A, 
{\b MACREGISTER.HST_MBP_ADDR} = 0x0400, 
{\b MACREGISTER.HST_MBP_DATA} = 0x0401, 
{\b MACREGISTER.HST_MBP_RFU_0x0402} = 0x0402, 
{\b MACREGISTER.HST_MBP_RFU_0x0403} = 0x0403, 
{\b MACREGISTER.HST_MBP_RFU_0x0404} = 0x0404, 
{\b MACREGISTER.HST_MBP_RFU_0x0405} = 0x0405, 
{\b MACREGISTER.HST_MBP_RFU_0x0406} = 0x0406, 
{\b MACREGISTER.HST_MBP_RFU_0x0407} = 0x0407, 
{\b MACREGISTER.HST_LPROF_SEL} = 0x0408, 
{\b MACREGISTER.HST_LPROF_ADDR} = 0x0409, 
{\b MACREGISTER.HST_LPROF_DATA} = 0x040A, 
{\b MACREGISTER.HST_OEM_ADDR} = 0x0500, 
{\b MACREGISTER.HST_OEM_DATA} = 0x0501, 
{\b MACREGISTER.HST_GPIO_INMSK} = 0x0600, 
{\b MACREGISTER.HST_GPIO_OUTMSK} = 0x0601, 
{\b MACREGISTER.HST_GPIO_OUTVAL} = 0x0602, 
{\b MACREGISTER.HST_GPIO_CFG} = 0x0603, 
{\b MACREGISTER.HST_ANT_CYCLES} = 0x0700, 
{\b MACREGISTER.HST_ANT_DESC_SEL} = 0x0701, 
{\b MACREGISTER.HST_ANT_DESC_CFG} = 0x0702, 
{\b MACREGISTER.MAC_ANT_DESC_STAT} = 0x0703, 
{\b MACREGISTER.HST_ANT_DESC_PORTDEF} = 0x0704, 
{\b MACREGISTER.HST_ANT_DESC_DWELL} = 0x0705, 
{\b MACREGISTER.HST_ANT_DESC_RFPOWER} = 0x0706, 
{\b MACREGISTER.HST_ANT_DESC_INV_CNT} = 0x0707, 
{\b MACREGISTER.HST_TAGMSK_DESC_SEL} = 0x0800, 
{\b MACREGISTER.HST_TAGMSK_DESC_CFG} = 0x0801, 
{\b MACREGISTER.HST_TAGMSK_BANK} = 0x0802, 
{\b MACREGISTER.HST_TAGMSK_PTR} = 0x0803, 
{\b MACREGISTER.HST_TAGMSK_LEN} = 0x0804, 
{\b MACREGISTER.HST_TAGMSK_0_3} = 0x0805, 
{\b MACREGISTER.HST_TAGMSK_4_7} = 0x0806, 
{\b MACREGISTER.HST_TAGMSK_8_11} = 0x0807, 
{\b MACREGISTER.HST_TAGMSK_12_15} = 0x0808, 
{\b MACREGISTER.HST_TAGMSK_16_19} = 0x0809, 
{\b MACREGISTER.HST_TAGMSK_20_23} = 0x080A, 
{\b MACREGISTER.HST_TAGMSK_24_27} = 0x080B, 
{\b MACREGISTER.HST_TAGMSK_28_31} = 0x080C, 
{\b MACREGISTER.HST_QUERY_CFG} = 0x0900, 
{\b MACREGISTER.HST_INV_CFG} = 0x0901, 
{\b MACREGISTER.HST_INV_SEL} = 0x0902, 
{\b MACREGISTER.HST_INV_ALG_PARM_0} = 0x0903, 
{\b MACREGISTER.HST_INV_ALG_PARM_1} = 0x0904, 
{\b MACREGISTER.HST_INV_ALG_PARM_2} = 0x0905, 
{\b MACREGISTER.HST_INV_ALG_PARM_3} = 0x0906, 
{\b MACREGISTER.HST_INV_RFU_0x0907} = 0x0907, 
{\b MACREGISTER.HST_INV_RFU_0x0908} = 0x0908, 
{\b MACREGISTER.HST_INV_RFU_0x0909} = 0x0909, 
{\b MACREGISTER.HST_INV_RFU_0x090A} = 0x090A, 
{\b MACREGISTER.HST_INV_RFU_0x090B} = 0x090B, 
{\b MACREGISTER.HST_INV_RFU_0x090C} = 0x090C, 
{\b MACREGISTER.HST_INV_RFU_0x090D} = 0x090D, 
{\b MACREGISTER.HST_INV_RFU_0x090E} = 0x090E, 
{\b MACREGISTER.HST_INV_RFU_0x090F} = 0x090F, 
{\b MACREGISTER.HST_INV_EPC_MATCH_SEL} = 0x0910, 
{\b MACREGISTER.HST_INV_EPC_MATCH_CFG} = 0x0911, 
{\b MACREGISTER.HST_INV_EPCDAT_0_3} = 0x0912, 
{\b MACREGISTER.HST_INV_EPCDAT_4_7} = 0x0913, 
{\b MACREGISTER.HST_INV_EPCDAT_8_11} = 0x0914, 
{\b MACREGISTER.HST_INV_EPCDAT_12_15} = 0x0915, 
{\b MACREGISTER.HST_INV_EPCDAT_16_19} = 0x0916, 
{\b MACREGISTER.HST_INV_EPCDAT_20_23} = 0x0917, 
{\b MACREGISTER.HST_INV_EPCDAT_24_27} = 0x0918, 
{\b MACREGISTER.HST_INV_EPCDAT_28_31} = 0x0919, 
{\b MACREGISTER.HST_INV_EPCDAT_32_35} = 0x091A, 
{\b MACREGISTER.HST_INV_EPCDAT_36_39} = 0x091B, 
{\b MACREGISTER.HST_INV_EPCDAT_40_43} = 0x091C, 
{\b MACREGISTER.HST_INV_EPCDAT_44_47} = 0x091D, 
{\b MACREGISTER.HST_INV_EPCDAT_48_51} = 0x091E, 
{\b MACREGISTER.HST_INV_EPCDAT_52_55} = 0x091F, 
{\b MACREGISTER.HST_INV_EPCDAT_56_59} = 0x0920, 
{\b MACREGISTER.HST_INV_EPCDAT_60_63} = 0x0921, 
{\b MACREGISTER.HST_TAGACC_DESC_SEL} = 0x0A00, 
{\b MACREGISTER.HST_TAGACC_DESC_CFG} = 0x0A01, 
{\b MACREGISTER.HST_TAGACC_BANK} = 0x0A02, 
{\b MACREGISTER.HST_TAGACC_PTR} = 0x0A03, 
{\b MACREGISTER.HST_TAGACC_CNT} = 0x0A04, 
{\b MACREGISTER.HST_TAGACC_LOCKCFG} = 0x0A05, 
{\b MACREGISTER.HST_TAGACC_ACCPWD} = 0x0A06, 
{\b MACREGISTER.HST_TAGACC_KILLPWD} = 0x0A07, 
{\b MACREGISTER.HST_TAGWRDAT_SEL} = 0x0A08, 
{\b MACREGISTER.HST_TAGWRDAT_0} = 0x0A09, 
{\b MACREGISTER.HST_TAGWRDAT_1} = 0x0A0A, 
{\b MACREGISTER.HST_TAGWRDAT_2} = 0x0A0B, 
{\b MACREGISTER.HST_TAGWRDAT_3} = 0x0A0C, 
{\b MACREGISTER.HST_TAGWRDAT_4} = 0x0A0D, 
{\b MACREGISTER.HST_TAGWRDAT_5} = 0x0A0E, 
{\b MACREGISTER.HST_TAGWRDAT_6} = 0x0A0F, 
{\b MACREGISTER.HST_TAGWRDAT_7} = 0x0A10, 
{\b MACREGISTER.HST_TAGWRDAT_8} = 0x0A11, 
{\b MACREGISTER.HST_TAGWRDAT_9} = 0x0A12, 
{\b MACREGISTER.HST_TAGWRDAT_10} = 0x0A13, 
{\b MACREGISTER.HST_TAGWRDAT_11} = 0x0A14, 
{\b MACREGISTER.HST_TAGWRDAT_12} = 0x0A15, 
{\b MACREGISTER.HST_TAGWRDAT_13} = 0x0A16, 
{\b MACREGISTER.HST_TAGWRDAT_14} = 0x0A17, 
{\b MACREGISTER.HST_TAGWRDAT_15} = 0x0A18, 
{\b MACREGISTER.MAC_RFTC_PAPWRLEV} = 0x0B00, 
{\b MACREGISTER.HST_RFTC_PAPWRCTL_PGAIN} = 0x0B01, 
{\b MACREGISTER.HST_RFTC_PAPWRCTL_IGAIN} = 0x0B02, 
{\b MACREGISTER.HST_RFTC_PAPWRCTL_DGAIN} = 0x0B03, 
{\b MACREGISTER.MAC_RFTC_REVPWRLEV} = 0x0B04, 
{\b MACREGISTER.HST_RFTC_REVPWRTHRSH} = 0x0B05, 
{\b MACREGISTER.MAC_RFTC_AMBIENTTEMP} = 0x0B06, 
{\b MACREGISTER.HST_RFTC_AMBIENTTEMPTHRSH} = 0x0B07, 
{\b MACREGISTER.MAC_RFTC_XCVRTEMP} = 0x0B08, 
{\b MACREGISTER.HST_RFTC_XCVRTEMPTHRSH} = 0x0B09, 
{\b MACREGISTER.MAC_RFTC_PATEMP} = 0x0B0A, 
{\b MACREGISTER.HST_RFTC_PATEMPTHRSH} = 0x0B0B, 
{\b MACREGISTER.HST_RFTC_PADELTATEMPTHRSH} = 0x0B0C, 
{\b MACREGISTER.HST_RFTC_PAPWRCTL_AIWDELAY} = 0x0B0D, 
{\b MACREGISTER.MAC_RFTC_PAPWRCTL_STAT0} = 0x0B0E, 
{\b MACREGISTER.MAC_RFTC_PAPWRCTL_STAT1} = 0x0B0F, 
{\b MACREGISTER.MAC_RFTC_PAPWRCTL_STAT2} = 0x0B10, 
{\b MACREGISTER.MAC_RFTC_PAPWRCTL_STAT3} = 0x0B11, 
{\b MACREGISTER.HST_RFTC_ANTSENSRESTHRSH} = 0x0B12, 
{\b MACREGISTER.HST_RFTC_IFLNAAGCRANGE} = 0x0B13, 
{\b MACREGISTER.MAC_RFTC_LAST_ANACTRL1} = 0x0B14, 
{\b MACREGISTER.HST_RFTC_OPENLOOPPWRCTRL} = 0x0B15, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B16} = 0x0B16, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B17} = 0x0B17, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B18} = 0x0B18, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B19} = 0x0B19, 
{\b MACREGISTER.HST_RFTC_PREDIST_COEFF0} = 0x0B1A, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B1B} = 0x0B1B, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B1C} = 0x0B1C, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B1D} = 0x0B1D, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B1E} = 0x0B1E, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B1F} = 0x0B1F, 
{\b MACREGISTER.HST_RFTC_CAL_GGNEG7} = 0x0B20, 
{\b MACREGISTER.HST_RFTC_CAL_GGNEG5} = 0x0B21, 
{\b MACREGISTER.HST_RFTC_CAL_GGNEG3} = 0x0B22, 
{\b MACREGISTER.HST_RFTC_CAL_GGNEG1} = 0x0B23, 
{\b MACREGISTER.HST_RFTC_CAL_GGPLUS1} = 0x0B24, 
{\b MACREGISTER.HST_RFTC_CAL_GGPLUS3} = 0x0B25, 
{\b MACREGISTER.HST_RFTC_CAL_GGPLUS5} = 0x0B26, 
{\b MACREGISTER.HST_RFTC_CAL_GGPLUS7} = 0x0B27, 
{\b MACREGISTER.HST_RFTC_CAL_MACADCREFV} = 0x0B28, 
{\b MACREGISTER.HST_RFTC_CAL_RFFWDPWR_C0} = 0x0B29, 
{\b MACREGISTER.HST_RFTC_CAL_RFFWDPWR_C1} = 0x0B2A, 
{\b MACREGISTER.HST_RFTC_CAL_RFFWDPWR_C2} = 0x0B2B, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B2C} = 0x0B2C, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B2D} = 0x0B2D, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B2E} = 0x0B2E, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B2F} = 0x0B2F, 
{\b MACREGISTER.HST_RFTC_CLKDBLR_CFG} = 0x0B30, 
{\b MACREGISTER.HST_RFTC_CLKDBLR_SEL} = 0x0B31, 
{\b MACREGISTER.HST_RFTC_CLKDBLR_LUTENTRY} = 0x0B32, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B33} = 0x0B33, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B34} = 0x0B34, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B35} = 0x0B35, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B36} = 0x0B36, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B37} = 0x0B37, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B38} = 0x0B38, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B39} = 0x0B39, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B3A} = 0x0B3A, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B3B} = 0x0B3B, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B3C} = 0x0B3C, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B3D} = 0x0B3D, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B3E} = 0x0B3E, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B3F} = 0x0B3F, 
{\b MACREGISTER.HST_RFTC_FRQHOPMODE} = 0x0B40, 
{\b MACREGISTER.HST_RFTC_FRQHOPENTRYCNT} = 0x0B41, 
{\b MACREGISTER.HST_RFTC_FRQHOPTABLEINDEX} = 0x0B42, 
{\b MACREGISTER.MAC_RFTC_HOPCNT} = 0x0B43, 
{\b MACREGISTER.HST_RFTC_MINHOPDUR} = 0x0B44, 
{\b MACREGISTER.HST_RFTC_MAXHOPDUR} = 0x0B45, 
{\b MACREGISTER.HST_RFTC_FRQHOPRANDSEED} = 0x0B46, 
{\b MACREGISTER.MAC_RFTC_FRQHOPSHFTREGVAL} = 0x0B47, 
{\b MACREGISTER.MAC_RFTC_FRQHOPRANDNUMCNT} = 0x0B48, 
{\b MACREGISTER.HST_RFTC_FRQCHINDEX} = 0x0B49, 
{\b MACREGISTER.HST_RFTC_PLLLOCKTIMEOUT} = 0x0B4A, 
{\b MACREGISTER.HST_RFTC_PLLLOCK_DET_THRSH} = 0x0B4B, 
{\b MACREGISTER.HST_RFTC_PLLLOCK_DET_CNT} = 0x0B4C, 
{\b MACREGISTER.HST_RFTC_PLLLOCK_TO} = 0x0B4D, 
{\b MACREGISTER.HST_RFTC_BERREADDELAY} = 0x0B4E, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B4F} = 0x0B4F, 
{\b MACREGISTER.MAC_RFTC_FWDRFPWRRAWADC} = 0x0B50, 
{\b MACREGISTER.MAC_RFTC_REVRFPWRRAWADC} = 0x0B51, 
{\b MACREGISTER.MAC_RFTC_ANTSENSERAWADC} = 0x0B52, 
{\b MACREGISTER.MAC_RFTC_AMBTEMPRAWADC} = 0x0B53, 
{\b MACREGISTER.MAC_RFTC_PATEMPRAWADC} = 0x0B54, 
{\b MACREGISTER.MAC_RFTC_XCVRTEMPRAWADC} = 0x0B55, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B56} = 0x0B56, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B57} = 0x0B57, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B58} = 0x0B58, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B59} = 0x0B59, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B5A} = 0x0B5A, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B5B} = 0x0B5B, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B5C} = 0x0B5C, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B5D} = 0x0B5D, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B5E} = 0x0B5E, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B5F} = 0x0B5F, 
{\b MACREGISTER.HST_RFTC_CURRENT_PROFILE} = 0x0B60, 
{\b MACREGISTER.HST_RFTC_PROF_SEL} = 0x0B61, 
{\b MACREGISTER.MAC_RFTC_PROF_CFG} = 0x0B62, 
{\b MACREGISTER.MAC_RFTC_PROF_ID_HIGH} = 0x0B63, 
{\b MACREGISTER.MAC_RFTC_PROF_ID_LOW} = 0x0B64, 
{\b MACREGISTER.MAC_RFTC_PROF_IDVER} = 0x0B65, 
{\b MACREGISTER.MAC_RFTC_PROF_PROTOCOL} = 0x0B66, 
{\b MACREGISTER.MAC_RFTC_PROF_R2TMODTYPE} = 0x0B67, 
{\b MACREGISTER.MAC_RFTC_PROF_TARI} = 0x0B68, 
{\b MACREGISTER.MAC_RFTC_PROF_X} = 0x0B69, 
{\b MACREGISTER.MAC_RFTC_PROF_PW} = 0x0B6A, 
{\b MACREGISTER.MAC_RFTC_PROF_RTCAL} = 0x0B6B, 
{\b MACREGISTER.MAC_RFTC_PROF_TRCAL} = 0x0B6C, 
{\b MACREGISTER.MAC_RFTC_PROF_DIVIDERATIO} = 0x0B6D, 
{\b MACREGISTER.MAC_RFTC_PROF_MILLERNUM} = 0x0B6E, 
{\b MACREGISTER.MAC_RFTC_PROF_T2RLINKFREQ} = 0x0B6F, 
{\b MACREGISTER.MAC_RFTC_PROF_VART2DELAY} = 0x0B70, 
{\b MACREGISTER.MAC_RFTC_PROF_RXDELAY} = 0x0B71, 
{\b MACREGISTER.MAC_RFTC_PROF_MINTOTT2DELAY} = 0x0B72, 
{\b MACREGISTER.MAC_RFTC_PROF_TXPROPDELAY} = 0x0B73, 
{\b MACREGISTER.MAC_RFTC_PROF_RSSIAVECFG} = 0x0B74, 
{\b MACREGISTER.MAC_RFTC_PROF_PREAMCMD} = 0x0B75, 
{\b MACREGISTER.MAC_RFTC_PROF_FSYNCCMD} = 0x0B76, 
{\b MACREGISTER.MAC_RFTC_PROF_T2WAITCMD} = 0x0B77, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B78} = 0x0B78, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B79} = 0x0B79, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B7A} = 0x0B7A, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B7B} = 0x0B7B, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B7C} = 0x0B7C, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B7D} = 0x0B7D, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B7E} = 0x0B7E, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B7F} = 0x0B7F, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B80} = 0x0B80, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B81} = 0x0B81, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B82} = 0x0B82, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B83} = 0x0B83, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B84} = 0x0B84, 
{\b MACREGISTER.HST_RFTC_FRQCH_ENTRYCNT} = 0x0C00, 
{\b MACREGISTER.HST_RFTC_FRQCH_SEL} = 0x0C01, 
{\b MACREGISTER.HST_RFTC_FRQCH_CFG} = 0x0C02, 
{\b MACREGISTER.HST_RFTC_FRQCH_DESC_PLLDIVMULT} = 0x0C03, 
{\b MACREGISTER.HST_RFTC_FRQCH_DESC_PLLDACCTL} = 0x0C04, 
{\b MACREGISTER.MAC_RFTC_FRQCH_DESC_PLLLOCKSTAT0} = 0x0C05, 
{\b MACREGISTER.MAC_RFTC_FRQCH_DESC_PLLLOCKSTAT1} = 0x0C06, 
{\b MACREGISTER.HST_RFTC_FRQCH_DESC_PARFU3} = 0x0C07, 
{\b MACREGISTER.HST_RFTC_FRQCH_CMDSTART} = 0x0C08, 
{\b MACREGISTER.HST_CMD} = 0xF000
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
REGISTER NAME/ADDRESS CONSTANTS }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b MACREGISTER} : UInt16 \{ {\b MACREGISTER.MAC_VER} = 0x0000, 
{\b MACREGISTER.MAC_INFO} = 0x0001, 
{\b MACREGISTER.MAC_RFTRANSINFO} = 0x0002, 
{\b MACREGISTER.MAC_DBG1} = 0x0003, 
{\b MACREGISTER.MAC_DBG2} = 0x0004, 
{\b MACREGISTER.MAC_ERROR} = 0x0005, 
{\b MACREGISTER.HST_ENGTST_ARG0} = 0x0100, 
{\b MACREGISTER.HST_ENGTST_ARG1} = 0x0101, 
{\b MACREGISTER.HST_DBG1} = 0x0102, 
{\b MACREGISTER.HST_EMU} = 0x0103, 
{\b MACREGISTER.HST_PWRMGMT} = 0x0200, 
{\b MACREGISTER.HST_CMNDIAGS} = 0x0201, 
{\b MACREGISTER.MAC_BLK02RES1} = 0x0202, 
{\b MACREGISTER.HST_CTR_GCFG} = 0x0203, 
{\b MACREGISTER.HST_CTR1_CFG} = 0x0204, 
{\b MACREGISTER.MAC_CTR1_VAL} = 0x0205, 
{\b MACREGISTER.HST_CTR2_CFG} = 0x0206, 
{\b MACREGISTER.MAC_CTR2_VAL} = 0x0207, 
{\b MACREGISTER.HST_CTR3_CFG} = 0x0208, 
{\b MACREGISTER.MAC_CTR3_VAL} = 0x0209, 
{\b MACREGISTER.HST_CTR4_CFG} = 0x020A, 
{\b MACREGISTER.MAC_CTR4_VAL} = 0x020B, 
{\b MACREGISTER.HST_PROTSCH_SMIDX} = 0x0300, 
{\b MACREGISTER.HST_PROTSCH_SMCFG} = 0x0301, 
{\b MACREGISTER.HST_PROTSCH_FTIME_SEL} = 0x0302, 
{\b MACREGISTER.HST_PROTSCH_FTIME} = 0x0303, 
{\b MACREGISTER.HST_PROTSCH_SMCFG_SEL} = 0x0304, 
{\b MACREGISTER.HST_PROTSCH_TXTIME_SEL} = 0x0305, 
{\b MACREGISTER.HST_PROTSCH_TXTIME_ON} = 0x0306, 
{\b MACREGISTER.HST_PROTSCH_TXTIME_OFF} = 0x0307, 
{\b MACREGISTER.HST_PROTSCH_CYCCFG_SEL} = 0x0308, 
{\b MACREGISTER.HST_PROTSCH_CYCCFG_DESC_ADJ1} = 0x0309, 
{\b MACREGISTER.HST_PROTSCH_ADJCW} = 0x030A, 
{\b MACREGISTER.HST_MBP_ADDR} = 0x0400, 
{\b MACREGISTER.HST_MBP_DATA} = 0x0401, 
{\b MACREGISTER.HST_MBP_RFU_0x0402} = 0x0402, 
{\b MACREGISTER.HST_MBP_RFU_0x0403} = 0x0403, 
{\b MACREGISTER.HST_MBP_RFU_0x0404} = 0x0404, 
{\b MACREGISTER.HST_MBP_RFU_0x0405} = 0x0405, 
{\b MACREGISTER.HST_MBP_RFU_0x0406} = 0x0406, 
{\b MACREGISTER.HST_MBP_RFU_0x0407} = 0x0407, 
{\b MACREGISTER.HST_LPROF_SEL} = 0x0408, 
{\b MACREGISTER.HST_LPROF_ADDR} = 0x0409, 
{\b MACREGISTER.HST_LPROF_DATA} = 0x040A, 
{\b MACREGISTER.HST_OEM_ADDR} = 0x0500, 
{\b MACREGISTER.HST_OEM_DATA} = 0x0501, 
{\b MACREGISTER.HST_GPIO_INMSK} = 0x0600, 
{\b MACREGISTER.HST_GPIO_OUTMSK} = 0x0601, 
{\b MACREGISTER.HST_GPIO_OUTVAL} = 0x0602, 
{\b MACREGISTER.HST_GPIO_CFG} = 0x0603, 
{\b MACREGISTER.HST_ANT_CYCLES} = 0x0700, 
{\b MACREGISTER.HST_ANT_DESC_SEL} = 0x0701, 
{\b MACREGISTER.HST_ANT_DESC_CFG} = 0x0702, 
{\b MACREGISTER.MAC_ANT_DESC_STAT} = 0x0703, 
{\b MACREGISTER.HST_ANT_DESC_PORTDEF} = 0x0704, 
{\b MACREGISTER.HST_ANT_DESC_DWELL} = 0x0705, 
{\b MACREGISTER.HST_ANT_DESC_RFPOWER} = 0x0706, 
{\b MACREGISTER.HST_ANT_DESC_INV_CNT} = 0x0707, 
{\b MACREGISTER.HST_TAGMSK_DESC_SEL} = 0x0800, 
{\b MACREGISTER.HST_TAGMSK_DESC_CFG} = 0x0801, 
{\b MACREGISTER.HST_TAGMSK_BANK} = 0x0802, 
{\b MACREGISTER.HST_TAGMSK_PTR} = 0x0803, 
{\b MACREGISTER.HST_TAGMSK_LEN} = 0x0804, 
{\b MACREGISTER.HST_TAGMSK_0_3} = 0x0805, 
{\b MACREGISTER.HST_TAGMSK_4_7} = 0x0806, 
{\b MACREGISTER.HST_TAGMSK_8_11} = 0x0807, 
{\b MACREGISTER.HST_TAGMSK_12_15} = 0x0808, 
{\b MACREGISTER.HST_TAGMSK_16_19} = 0x0809, 
{\b MACREGISTER.HST_TAGMSK_20_23} = 0x080A, 
{\b MACREGISTER.HST_TAGMSK_24_27} = 0x080B, 
{\b MACREGISTER.HST_TAGMSK_28_31} = 0x080C, 
{\b MACREGISTER.HST_QUERY_CFG} = 0x0900, 
{\b MACREGISTER.HST_INV_CFG} = 0x0901, 
{\b MACREGISTER.HST_INV_SEL} = 0x0902, 
{\b MACREGISTER.HST_INV_ALG_PARM_0} = 0x0903, 
{\b MACREGISTER.HST_INV_ALG_PARM_1} = 0x0904, 
{\b MACREGISTER.HST_INV_ALG_PARM_2} = 0x0905, 
{\b MACREGISTER.HST_INV_ALG_PARM_3} = 0x0906, 
{\b MACREGISTER.HST_INV_RFU_0x0907} = 0x0907, 
{\b MACREGISTER.HST_INV_RFU_0x0908} = 0x0908, 
{\b MACREGISTER.HST_INV_RFU_0x0909} = 0x0909, 
{\b MACREGISTER.HST_INV_RFU_0x090A} = 0x090A, 
{\b MACREGISTER.HST_INV_RFU_0x090B} = 0x090B, 
{\b MACREGISTER.HST_INV_RFU_0x090C} = 0x090C, 
{\b MACREGISTER.HST_INV_RFU_0x090D} = 0x090D, 
{\b MACREGISTER.HST_INV_RFU_0x090E} = 0x090E, 
{\b MACREGISTER.HST_INV_RFU_0x090F} = 0x090F, 
{\b MACREGISTER.HST_INV_EPC_MATCH_SEL} = 0x0910, 
{\b MACREGISTER.HST_INV_EPC_MATCH_CFG} = 0x0911, 
{\b MACREGISTER.HST_INV_EPCDAT_0_3} = 0x0912, 
{\b MACREGISTER.HST_INV_EPCDAT_4_7} = 0x0913, 
{\b MACREGISTER.HST_INV_EPCDAT_8_11} = 0x0914, 
{\b MACREGISTER.HST_INV_EPCDAT_12_15} = 0x0915, 
{\b MACREGISTER.HST_INV_EPCDAT_16_19} = 0x0916, 
{\b MACREGISTER.HST_INV_EPCDAT_20_23} = 0x0917, 
{\b MACREGISTER.HST_INV_EPCDAT_24_27} = 0x0918, 
{\b MACREGISTER.HST_INV_EPCDAT_28_31} = 0x0919, 
{\b MACREGISTER.HST_INV_EPCDAT_32_35} = 0x091A, 
{\b MACREGISTER.HST_INV_EPCDAT_36_39} = 0x091B, 
{\b MACREGISTER.HST_INV_EPCDAT_40_43} = 0x091C, 
{\b MACREGISTER.HST_INV_EPCDAT_44_47} = 0x091D, 
{\b MACREGISTER.HST_INV_EPCDAT_48_51} = 0x091E, 
{\b MACREGISTER.HST_INV_EPCDAT_52_55} = 0x091F, 
{\b MACREGISTER.HST_INV_EPCDAT_56_59} = 0x0920, 
{\b MACREGISTER.HST_INV_EPCDAT_60_63} = 0x0921, 
{\b MACREGISTER.HST_TAGACC_DESC_SEL} = 0x0A00, 
{\b MACREGISTER.HST_TAGACC_DESC_CFG} = 0x0A01, 
{\b MACREGISTER.HST_TAGACC_BANK} = 0x0A02, 
{\b MACREGISTER.HST_TAGACC_PTR} = 0x0A03, 
{\b MACREGISTER.HST_TAGACC_CNT} = 0x0A04, 
{\b MACREGISTER.HST_TAGACC_LOCKCFG} = 0x0A05, 
{\b MACREGISTER.HST_TAGACC_ACCPWD} = 0x0A06, 
{\b MACREGISTER.HST_TAGACC_KILLPWD} = 0x0A07, 
{\b MACREGISTER.HST_TAGWRDAT_SEL} = 0x0A08, 
{\b MACREGISTER.HST_TAGWRDAT_0} = 0x0A09, 
{\b MACREGISTER.HST_TAGWRDAT_1} = 0x0A0A, 
{\b MACREGISTER.HST_TAGWRDAT_2} = 0x0A0B, 
{\b MACREGISTER.HST_TAGWRDAT_3} = 0x0A0C, 
{\b MACREGISTER.HST_TAGWRDAT_4} = 0x0A0D, 
{\b MACREGISTER.HST_TAGWRDAT_5} = 0x0A0E, 
{\b MACREGISTER.HST_TAGWRDAT_6} = 0x0A0F, 
{\b MACREGISTER.HST_TAGWRDAT_7} = 0x0A10, 
{\b MACREGISTER.HST_TAGWRDAT_8} = 0x0A11, 
{\b MACREGISTER.HST_TAGWRDAT_9} = 0x0A12, 
{\b MACREGISTER.HST_TAGWRDAT_10} = 0x0A13, 
{\b MACREGISTER.HST_TAGWRDAT_11} = 0x0A14, 
{\b MACREGISTER.HST_TAGWRDAT_12} = 0x0A15, 
{\b MACREGISTER.HST_TAGWRDAT_13} = 0x0A16, 
{\b MACREGISTER.HST_TAGWRDAT_14} = 0x0A17, 
{\b MACREGISTER.HST_TAGWRDAT_15} = 0x0A18, 
{\b MACREGISTER.MAC_RFTC_PAPWRLEV} = 0x0B00, 
{\b MACREGISTER.HST_RFTC_PAPWRCTL_PGAIN} = 0x0B01, 
{\b MACREGISTER.HST_RFTC_PAPWRCTL_IGAIN} = 0x0B02, 
{\b MACREGISTER.HST_RFTC_PAPWRCTL_DGAIN} = 0x0B03, 
{\b MACREGISTER.MAC_RFTC_REVPWRLEV} = 0x0B04, 
{\b MACREGISTER.HST_RFTC_REVPWRTHRSH} = 0x0B05, 
{\b MACREGISTER.MAC_RFTC_AMBIENTTEMP} = 0x0B06, 
{\b MACREGISTER.HST_RFTC_AMBIENTTEMPTHRSH} = 0x0B07, 
{\b MACREGISTER.MAC_RFTC_XCVRTEMP} = 0x0B08, 
{\b MACREGISTER.HST_RFTC_XCVRTEMPTHRSH} = 0x0B09, 
{\b MACREGISTER.MAC_RFTC_PATEMP} = 0x0B0A, 
{\b MACREGISTER.HST_RFTC_PATEMPTHRSH} = 0x0B0B, 
{\b MACREGISTER.HST_RFTC_PADELTATEMPTHRSH} = 0x0B0C, 
{\b MACREGISTER.HST_RFTC_PAPWRCTL_AIWDELAY} = 0x0B0D, 
{\b MACREGISTER.MAC_RFTC_PAPWRCTL_STAT0} = 0x0B0E, 
{\b MACREGISTER.MAC_RFTC_PAPWRCTL_STAT1} = 0x0B0F, 
{\b MACREGISTER.MAC_RFTC_PAPWRCTL_STAT2} = 0x0B10, 
{\b MACREGISTER.MAC_RFTC_PAPWRCTL_STAT3} = 0x0B11, 
{\b MACREGISTER.HST_RFTC_ANTSENSRESTHRSH} = 0x0B12, 
{\b MACREGISTER.HST_RFTC_IFLNAAGCRANGE} = 0x0B13, 
{\b MACREGISTER.MAC_RFTC_LAST_ANACTRL1} = 0x0B14, 
{\b MACREGISTER.HST_RFTC_OPENLOOPPWRCTRL} = 0x0B15, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B16} = 0x0B16, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B17} = 0x0B17, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B18} = 0x0B18, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B19} = 0x0B19, 
{\b MACREGISTER.HST_RFTC_PREDIST_COEFF0} = 0x0B1A, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B1B} = 0x0B1B, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B1C} = 0x0B1C, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B1D} = 0x0B1D, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B1E} = 0x0B1E, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B1F} = 0x0B1F, 
{\b MACREGISTER.HST_RFTC_CAL_GGNEG7} = 0x0B20, 
{\b MACREGISTER.HST_RFTC_CAL_GGNEG5} = 0x0B21, 
{\b MACREGISTER.HST_RFTC_CAL_GGNEG3} = 0x0B22, 
{\b MACREGISTER.HST_RFTC_CAL_GGNEG1} = 0x0B23, 
{\b MACREGISTER.HST_RFTC_CAL_GGPLUS1} = 0x0B24, 
{\b MACREGISTER.HST_RFTC_CAL_GGPLUS3} = 0x0B25, 
{\b MACREGISTER.HST_RFTC_CAL_GGPLUS5} = 0x0B26, 
{\b MACREGISTER.HST_RFTC_CAL_GGPLUS7} = 0x0B27, 
{\b MACREGISTER.HST_RFTC_CAL_MACADCREFV} = 0x0B28, 
{\b MACREGISTER.HST_RFTC_CAL_RFFWDPWR_C0} = 0x0B29, 
{\b MACREGISTER.HST_RFTC_CAL_RFFWDPWR_C1} = 0x0B2A, 
{\b MACREGISTER.HST_RFTC_CAL_RFFWDPWR_C2} = 0x0B2B, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B2C} = 0x0B2C, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B2D} = 0x0B2D, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B2E} = 0x0B2E, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B2F} = 0x0B2F, 
{\b MACREGISTER.HST_RFTC_CLKDBLR_CFG} = 0x0B30, 
{\b MACREGISTER.HST_RFTC_CLKDBLR_SEL} = 0x0B31, 
{\b MACREGISTER.HST_RFTC_CLKDBLR_LUTENTRY} = 0x0B32, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B33} = 0x0B33, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B34} = 0x0B34, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B35} = 0x0B35, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B36} = 0x0B36, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B37} = 0x0B37, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B38} = 0x0B38, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B39} = 0x0B39, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B3A} = 0x0B3A, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B3B} = 0x0B3B, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B3C} = 0x0B3C, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B3D} = 0x0B3D, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B3E} = 0x0B3E, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B3F} = 0x0B3F, 
{\b MACREGISTER.HST_RFTC_FRQHOPMODE} = 0x0B40, 
{\b MACREGISTER.HST_RFTC_FRQHOPENTRYCNT} = 0x0B41, 
{\b MACREGISTER.HST_RFTC_FRQHOPTABLEINDEX} = 0x0B42, 
{\b MACREGISTER.MAC_RFTC_HOPCNT} = 0x0B43, 
{\b MACREGISTER.HST_RFTC_MINHOPDUR} = 0x0B44, 
{\b MACREGISTER.HST_RFTC_MAXHOPDUR} = 0x0B45, 
{\b MACREGISTER.HST_RFTC_FRQHOPRANDSEED} = 0x0B46, 
{\b MACREGISTER.MAC_RFTC_FRQHOPSHFTREGVAL} = 0x0B47, 
{\b MACREGISTER.MAC_RFTC_FRQHOPRANDNUMCNT} = 0x0B48, 
{\b MACREGISTER.HST_RFTC_FRQCHINDEX} = 0x0B49, 
{\b MACREGISTER.HST_RFTC_PLLLOCKTIMEOUT} = 0x0B4A, 
{\b MACREGISTER.HST_RFTC_PLLLOCK_DET_THRSH} = 0x0B4B, 
{\b MACREGISTER.HST_RFTC_PLLLOCK_DET_CNT} = 0x0B4C, 
{\b MACREGISTER.HST_RFTC_PLLLOCK_TO} = 0x0B4D, 
{\b MACREGISTER.HST_RFTC_BERREADDELAY} = 0x0B4E, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B4F} = 0x0B4F, 
{\b MACREGISTER.MAC_RFTC_FWDRFPWRRAWADC} = 0x0B50, 
{\b MACREGISTER.MAC_RFTC_REVRFPWRRAWADC} = 0x0B51, 
{\b MACREGISTER.MAC_RFTC_ANTSENSERAWADC} = 0x0B52, 
{\b MACREGISTER.MAC_RFTC_AMBTEMPRAWADC} = 0x0B53, 
{\b MACREGISTER.MAC_RFTC_PATEMPRAWADC} = 0x0B54, 
{\b MACREGISTER.MAC_RFTC_XCVRTEMPRAWADC} = 0x0B55, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B56} = 0x0B56, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B57} = 0x0B57, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B58} = 0x0B58, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B59} = 0x0B59, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B5A} = 0x0B5A, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B5B} = 0x0B5B, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B5C} = 0x0B5C, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B5D} = 0x0B5D, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B5E} = 0x0B5E, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B5F} = 0x0B5F, 
{\b MACREGISTER.HST_RFTC_CURRENT_PROFILE} = 0x0B60, 
{\b MACREGISTER.HST_RFTC_PROF_SEL} = 0x0B61, 
{\b MACREGISTER.MAC_RFTC_PROF_CFG} = 0x0B62, 
{\b MACREGISTER.MAC_RFTC_PROF_ID_HIGH} = 0x0B63, 
{\b MACREGISTER.MAC_RFTC_PROF_ID_LOW} = 0x0B64, 
{\b MACREGISTER.MAC_RFTC_PROF_IDVER} = 0x0B65, 
{\b MACREGISTER.MAC_RFTC_PROF_PROTOCOL} = 0x0B66, 
{\b MACREGISTER.MAC_RFTC_PROF_R2TMODTYPE} = 0x0B67, 
{\b MACREGISTER.MAC_RFTC_PROF_TARI} = 0x0B68, 
{\b MACREGISTER.MAC_RFTC_PROF_X} = 0x0B69, 
{\b MACREGISTER.MAC_RFTC_PROF_PW} = 0x0B6A, 
{\b MACREGISTER.MAC_RFTC_PROF_RTCAL} = 0x0B6B, 
{\b MACREGISTER.MAC_RFTC_PROF_TRCAL} = 0x0B6C, 
{\b MACREGISTER.MAC_RFTC_PROF_DIVIDERATIO} = 0x0B6D, 
{\b MACREGISTER.MAC_RFTC_PROF_MILLERNUM} = 0x0B6E, 
{\b MACREGISTER.MAC_RFTC_PROF_T2RLINKFREQ} = 0x0B6F, 
{\b MACREGISTER.MAC_RFTC_PROF_VART2DELAY} = 0x0B70, 
{\b MACREGISTER.MAC_RFTC_PROF_RXDELAY} = 0x0B71, 
{\b MACREGISTER.MAC_RFTC_PROF_MINTOTT2DELAY} = 0x0B72, 
{\b MACREGISTER.MAC_RFTC_PROF_TXPROPDELAY} = 0x0B73, 
{\b MACREGISTER.MAC_RFTC_PROF_RSSIAVECFG} = 0x0B74, 
{\b MACREGISTER.MAC_RFTC_PROF_PREAMCMD} = 0x0B75, 
{\b MACREGISTER.MAC_RFTC_PROF_FSYNCCMD} = 0x0B76, 
{\b MACREGISTER.MAC_RFTC_PROF_T2WAITCMD} = 0x0B77, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B78} = 0x0B78, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B79} = 0x0B79, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B7A} = 0x0B7A, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B7B} = 0x0B7B, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B7C} = 0x0B7C, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B7D} = 0x0B7D, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B7E} = 0x0B7E, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B7F} = 0x0B7F, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B80} = 0x0B80, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B81} = 0x0B81, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B82} = 0x0B82, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B83} = 0x0B83, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B84} = 0x0B84, 
{\b MACREGISTER.HST_RFTC_FRQCH_ENTRYCNT} = 0x0C00, 
{\b MACREGISTER.HST_RFTC_FRQCH_SEL} = 0x0C01, 
{\b MACREGISTER.HST_RFTC_FRQCH_CFG} = 0x0C02, 
{\b MACREGISTER.HST_RFTC_FRQCH_DESC_PLLDIVMULT} = 0x0C03, 
{\b MACREGISTER.HST_RFTC_FRQCH_DESC_PLLDACCTL} = 0x0C04, 
{\b MACREGISTER.MAC_RFTC_FRQCH_DESC_PLLLOCKSTAT0} = 0x0C05, 
{\b MACREGISTER.MAC_RFTC_FRQCH_DESC_PLLLOCKSTAT1} = 0x0C06, 
{\b MACREGISTER.HST_RFTC_FRQCH_DESC_PARFU3} = 0x0C07, 
{\b MACREGISTER.HST_RFTC_FRQCH_CMDSTART} = 0x0C08, 
{\b MACREGISTER.HST_CMD} = 0xF000, 
{\b MACREGISTER.MAC_VER} = 0x0000, 
{\b MACREGISTER.MAC_INFO} = 0x0001, 
{\b MACREGISTER.MAC_RFTRANSINFO} = 0x0002, 
{\b MACREGISTER.MAC_DBG1} = 0x0003, 
{\b MACREGISTER.MAC_DBG2} = 0x0004, 
{\b MACREGISTER.MAC_ERROR} = 0x0005, 
{\b MACREGISTER.HST_ENGTST_ARG0} = 0x0100, 
{\b MACREGISTER.HST_ENGTST_ARG1} = 0x0101, 
{\b MACREGISTER.HST_DBG1} = 0x0102, 
{\b MACREGISTER.HST_EMU} = 0x0103, 
{\b MACREGISTER.HST_PWRMGMT} = 0x0200, 
{\b MACREGISTER.HST_CMNDIAGS} = 0x0201, 
{\b MACREGISTER.MAC_BLK02RES1} = 0x0202, 
{\b MACREGISTER.HST_CTR_GCFG} = 0x0203, 
{\b MACREGISTER.HST_CTR1_CFG} = 0x0204, 
{\b MACREGISTER.MAC_CTR1_VAL} = 0x0205, 
{\b MACREGISTER.HST_CTR2_CFG} = 0x0206, 
{\b MACREGISTER.MAC_CTR2_VAL} = 0x0207, 
{\b MACREGISTER.HST_CTR3_CFG} = 0x0208, 
{\b MACREGISTER.MAC_CTR3_VAL} = 0x0209, 
{\b MACREGISTER.HST_CTR4_CFG} = 0x020A, 
{\b MACREGISTER.MAC_CTR4_VAL} = 0x020B, 
{\b MACREGISTER.HST_PROTSCH_SMIDX} = 0x0300, 
{\b MACREGISTER.HST_PROTSCH_SMCFG} = 0x0301, 
{\b MACREGISTER.HST_PROTSCH_FTIME_SEL} = 0x0302, 
{\b MACREGISTER.HST_PROTSCH_FTIME} = 0x0303, 
{\b MACREGISTER.HST_PROTSCH_SMCFG_SEL} = 0x0304, 
{\b MACREGISTER.HST_PROTSCH_TXTIME_SEL} = 0x0305, 
{\b MACREGISTER.HST_PROTSCH_TXTIME_ON} = 0x0306, 
{\b MACREGISTER.HST_PROTSCH_TXTIME_OFF} = 0x0307, 
{\b MACREGISTER.HST_PROTSCH_CYCCFG_SEL} = 0x0308, 
{\b MACREGISTER.HST_PROTSCH_CYCCFG_DESC_ADJ1} = 0x0309, 
{\b MACREGISTER.HST_PROTSCH_ADJCW} = 0x030A, 
{\b MACREGISTER.HST_MBP_ADDR} = 0x0400, 
{\b MACREGISTER.HST_MBP_DATA} = 0x0401, 
{\b MACREGISTER.HST_MBP_RFU_0x0402} = 0x0402, 
{\b MACREGISTER.HST_MBP_RFU_0x0403} = 0x0403, 
{\b MACREGISTER.HST_MBP_RFU_0x0404} = 0x0404, 
{\b MACREGISTER.HST_MBP_RFU_0x0405} = 0x0405, 
{\b MACREGISTER.HST_MBP_RFU_0x0406} = 0x0406, 
{\b MACREGISTER.HST_MBP_RFU_0x0407} = 0x0407, 
{\b MACREGISTER.HST_LPROF_SEL} = 0x0408, 
{\b MACREGISTER.HST_LPROF_ADDR} = 0x0409, 
{\b MACREGISTER.HST_LPROF_DATA} = 0x040A, 
{\b MACREGISTER.HST_OEM_ADDR} = 0x0500, 
{\b MACREGISTER.HST_OEM_DATA} = 0x0501, 
{\b MACREGISTER.HST_GPIO_INMSK} = 0x0600, 
{\b MACREGISTER.HST_GPIO_OUTMSK} = 0x0601, 
{\b MACREGISTER.HST_GPIO_OUTVAL} = 0x0602, 
{\b MACREGISTER.HST_GPIO_CFG} = 0x0603, 
{\b MACREGISTER.HST_ANT_CYCLES} = 0x0700, 
{\b MACREGISTER.HST_ANT_DESC_SEL} = 0x0701, 
{\b MACREGISTER.HST_ANT_DESC_CFG} = 0x0702, 
{\b MACREGISTER.MAC_ANT_DESC_STAT} = 0x0703, 
{\b MACREGISTER.HST_ANT_DESC_PORTDEF} = 0x0704, 
{\b MACREGISTER.HST_ANT_DESC_DWELL} = 0x0705, 
{\b MACREGISTER.HST_ANT_DESC_RFPOWER} = 0x0706, 
{\b MACREGISTER.HST_ANT_DESC_INV_CNT} = 0x0707, 
{\b MACREGISTER.HST_TAGMSK_DESC_SEL} = 0x0800, 
{\b MACREGISTER.HST_TAGMSK_DESC_CFG} = 0x0801, 
{\b MACREGISTER.HST_TAGMSK_BANK} = 0x0802, 
{\b MACREGISTER.HST_TAGMSK_PTR} = 0x0803, 
{\b MACREGISTER.HST_TAGMSK_LEN} = 0x0804, 
{\b MACREGISTER.HST_TAGMSK_0_3} = 0x0805, 
{\b MACREGISTER.HST_TAGMSK_4_7} = 0x0806, 
{\b MACREGISTER.HST_TAGMSK_8_11} = 0x0807, 
{\b MACREGISTER.HST_TAGMSK_12_15} = 0x0808, 
{\b MACREGISTER.HST_TAGMSK_16_19} = 0x0809, 
{\b MACREGISTER.HST_TAGMSK_20_23} = 0x080A, 
{\b MACREGISTER.HST_TAGMSK_24_27} = 0x080B, 
{\b MACREGISTER.HST_TAGMSK_28_31} = 0x080C, 
{\b MACREGISTER.HST_QUERY_CFG} = 0x0900, 
{\b MACREGISTER.HST_INV_CFG} = 0x0901, 
{\b MACREGISTER.HST_INV_SEL} = 0x0902, 
{\b MACREGISTER.HST_INV_ALG_PARM_0} = 0x0903, 
{\b MACREGISTER.HST_INV_ALG_PARM_1} = 0x0904, 
{\b MACREGISTER.HST_INV_ALG_PARM_2} = 0x0905, 
{\b MACREGISTER.HST_INV_ALG_PARM_3} = 0x0906, 
{\b MACREGISTER.HST_INV_RFU_0x0907} = 0x0907, 
{\b MACREGISTER.HST_INV_RFU_0x0908} = 0x0908, 
{\b MACREGISTER.HST_INV_RFU_0x0909} = 0x0909, 
{\b MACREGISTER.HST_INV_RFU_0x090A} = 0x090A, 
{\b MACREGISTER.HST_INV_RFU_0x090B} = 0x090B, 
{\b MACREGISTER.HST_INV_RFU_0x090C} = 0x090C, 
{\b MACREGISTER.HST_INV_RFU_0x090D} = 0x090D, 
{\b MACREGISTER.HST_INV_RFU_0x090E} = 0x090E, 
{\b MACREGISTER.HST_INV_RFU_0x090F} = 0x090F, 
{\b MACREGISTER.HST_INV_EPC_MATCH_SEL} = 0x0910, 
{\b MACREGISTER.HST_INV_EPC_MATCH_CFG} = 0x0911, 
{\b MACREGISTER.HST_INV_EPCDAT_0_3} = 0x0912, 
{\b MACREGISTER.HST_INV_EPCDAT_4_7} = 0x0913, 
{\b MACREGISTER.HST_INV_EPCDAT_8_11} = 0x0914, 
{\b MACREGISTER.HST_INV_EPCDAT_12_15} = 0x0915, 
{\b MACREGISTER.HST_INV_EPCDAT_16_19} = 0x0916, 
{\b MACREGISTER.HST_INV_EPCDAT_20_23} = 0x0917, 
{\b MACREGISTER.HST_INV_EPCDAT_24_27} = 0x0918, 
{\b MACREGISTER.HST_INV_EPCDAT_28_31} = 0x0919, 
{\b MACREGISTER.HST_INV_EPCDAT_32_35} = 0x091A, 
{\b MACREGISTER.HST_INV_EPCDAT_36_39} = 0x091B, 
{\b MACREGISTER.HST_INV_EPCDAT_40_43} = 0x091C, 
{\b MACREGISTER.HST_INV_EPCDAT_44_47} = 0x091D, 
{\b MACREGISTER.HST_INV_EPCDAT_48_51} = 0x091E, 
{\b MACREGISTER.HST_INV_EPCDAT_52_55} = 0x091F, 
{\b MACREGISTER.HST_INV_EPCDAT_56_59} = 0x0920, 
{\b MACREGISTER.HST_INV_EPCDAT_60_63} = 0x0921, 
{\b MACREGISTER.HST_TAGACC_DESC_SEL} = 0x0A00, 
{\b MACREGISTER.HST_TAGACC_DESC_CFG} = 0x0A01, 
{\b MACREGISTER.HST_TAGACC_BANK} = 0x0A02, 
{\b MACREGISTER.HST_TAGACC_PTR} = 0x0A03, 
{\b MACREGISTER.HST_TAGACC_CNT} = 0x0A04, 
{\b MACREGISTER.HST_TAGACC_LOCKCFG} = 0x0A05, 
{\b MACREGISTER.HST_TAGACC_ACCPWD} = 0x0A06, 
{\b MACREGISTER.HST_TAGACC_KILLPWD} = 0x0A07, 
{\b MACREGISTER.HST_TAGWRDAT_SEL} = 0x0A08, 
{\b MACREGISTER.HST_TAGWRDAT_0} = 0x0A09, 
{\b MACREGISTER.HST_TAGWRDAT_1} = 0x0A0A, 
{\b MACREGISTER.HST_TAGWRDAT_2} = 0x0A0B, 
{\b MACREGISTER.HST_TAGWRDAT_3} = 0x0A0C, 
{\b MACREGISTER.HST_TAGWRDAT_4} = 0x0A0D, 
{\b MACREGISTER.HST_TAGWRDAT_5} = 0x0A0E, 
{\b MACREGISTER.HST_TAGWRDAT_6} = 0x0A0F, 
{\b MACREGISTER.HST_TAGWRDAT_7} = 0x0A10, 
{\b MACREGISTER.HST_TAGWRDAT_8} = 0x0A11, 
{\b MACREGISTER.HST_TAGWRDAT_9} = 0x0A12, 
{\b MACREGISTER.HST_TAGWRDAT_10} = 0x0A13, 
{\b MACREGISTER.HST_TAGWRDAT_11} = 0x0A14, 
{\b MACREGISTER.HST_TAGWRDAT_12} = 0x0A15, 
{\b MACREGISTER.HST_TAGWRDAT_13} = 0x0A16, 
{\b MACREGISTER.HST_TAGWRDAT_14} = 0x0A17, 
{\b MACREGISTER.HST_TAGWRDAT_15} = 0x0A18, 
{\b MACREGISTER.MAC_RFTC_PAPWRLEV} = 0x0B00, 
{\b MACREGISTER.HST_RFTC_PAPWRCTL_PGAIN} = 0x0B01, 
{\b MACREGISTER.HST_RFTC_PAPWRCTL_IGAIN} = 0x0B02, 
{\b MACREGISTER.HST_RFTC_PAPWRCTL_DGAIN} = 0x0B03, 
{\b MACREGISTER.MAC_RFTC_REVPWRLEV} = 0x0B04, 
{\b MACREGISTER.HST_RFTC_REVPWRTHRSH} = 0x0B05, 
{\b MACREGISTER.MAC_RFTC_AMBIENTTEMP} = 0x0B06, 
{\b MACREGISTER.HST_RFTC_AMBIENTTEMPTHRSH} = 0x0B07, 
{\b MACREGISTER.MAC_RFTC_XCVRTEMP} = 0x0B08, 
{\b MACREGISTER.HST_RFTC_XCVRTEMPTHRSH} = 0x0B09, 
{\b MACREGISTER.MAC_RFTC_PATEMP} = 0x0B0A, 
{\b MACREGISTER.HST_RFTC_PATEMPTHRSH} = 0x0B0B, 
{\b MACREGISTER.HST_RFTC_PADELTATEMPTHRSH} = 0x0B0C, 
{\b MACREGISTER.HST_RFTC_PAPWRCTL_AIWDELAY} = 0x0B0D, 
{\b MACREGISTER.MAC_RFTC_PAPWRCTL_STAT0} = 0x0B0E, 
{\b MACREGISTER.MAC_RFTC_PAPWRCTL_STAT1} = 0x0B0F, 
{\b MACREGISTER.MAC_RFTC_PAPWRCTL_STAT2} = 0x0B10, 
{\b MACREGISTER.MAC_RFTC_PAPWRCTL_STAT3} = 0x0B11, 
{\b MACREGISTER.HST_RFTC_ANTSENSRESTHRSH} = 0x0B12, 
{\b MACREGISTER.HST_RFTC_IFLNAAGCRANGE} = 0x0B13, 
{\b MACREGISTER.MAC_RFTC_LAST_ANACTRL1} = 0x0B14, 
{\b MACREGISTER.HST_RFTC_OPENLOOPPWRCTRL} = 0x0B15, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B16} = 0x0B16, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B17} = 0x0B17, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B18} = 0x0B18, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B19} = 0x0B19, 
{\b MACREGISTER.HST_RFTC_PREDIST_COEFF0} = 0x0B1A, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B1B} = 0x0B1B, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B1C} = 0x0B1C, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B1D} = 0x0B1D, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B1E} = 0x0B1E, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B1F} = 0x0B1F, 
{\b MACREGISTER.HST_RFTC_CAL_GGNEG7} = 0x0B20, 
{\b MACREGISTER.HST_RFTC_CAL_GGNEG5} = 0x0B21, 
{\b MACREGISTER.HST_RFTC_CAL_GGNEG3} = 0x0B22, 
{\b MACREGISTER.HST_RFTC_CAL_GGNEG1} = 0x0B23, 
{\b MACREGISTER.HST_RFTC_CAL_GGPLUS1} = 0x0B24, 
{\b MACREGISTER.HST_RFTC_CAL_GGPLUS3} = 0x0B25, 
{\b MACREGISTER.HST_RFTC_CAL_GGPLUS5} = 0x0B26, 
{\b MACREGISTER.HST_RFTC_CAL_GGPLUS7} = 0x0B27, 
{\b MACREGISTER.HST_RFTC_CAL_MACADCREFV} = 0x0B28, 
{\b MACREGISTER.HST_RFTC_CAL_RFFWDPWR_C0} = 0x0B29, 
{\b MACREGISTER.HST_RFTC_CAL_RFFWDPWR_C1} = 0x0B2A, 
{\b MACREGISTER.HST_RFTC_CAL_RFFWDPWR_C2} = 0x0B2B, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B2C} = 0x0B2C, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B2D} = 0x0B2D, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B2E} = 0x0B2E, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B2F} = 0x0B2F, 
{\b MACREGISTER.HST_RFTC_CLKDBLR_CFG} = 0x0B30, 
{\b MACREGISTER.HST_RFTC_CLKDBLR_SEL} = 0x0B31, 
{\b MACREGISTER.HST_RFTC_CLKDBLR_LUTENTRY} = 0x0B32, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B33} = 0x0B33, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B34} = 0x0B34, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B35} = 0x0B35, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B36} = 0x0B36, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B37} = 0x0B37, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B38} = 0x0B38, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B39} = 0x0B39, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B3A} = 0x0B3A, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B3B} = 0x0B3B, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B3C} = 0x0B3C, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B3D} = 0x0B3D, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B3E} = 0x0B3E, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B3F} = 0x0B3F, 
{\b MACREGISTER.HST_RFTC_FRQHOPMODE} = 0x0B40, 
{\b MACREGISTER.HST_RFTC_FRQHOPENTRYCNT} = 0x0B41, 
{\b MACREGISTER.HST_RFTC_FRQHOPTABLEINDEX} = 0x0B42, 
{\b MACREGISTER.MAC_RFTC_HOPCNT} = 0x0B43, 
{\b MACREGISTER.HST_RFTC_MINHOPDUR} = 0x0B44, 
{\b MACREGISTER.HST_RFTC_MAXHOPDUR} = 0x0B45, 
{\b MACREGISTER.HST_RFTC_FRQHOPRANDSEED} = 0x0B46, 
{\b MACREGISTER.MAC_RFTC_FRQHOPSHFTREGVAL} = 0x0B47, 
{\b MACREGISTER.MAC_RFTC_FRQHOPRANDNUMCNT} = 0x0B48, 
{\b MACREGISTER.HST_RFTC_FRQCHINDEX} = 0x0B49, 
{\b MACREGISTER.HST_RFTC_PLLLOCKTIMEOUT} = 0x0B4A, 
{\b MACREGISTER.HST_RFTC_PLLLOCK_DET_THRSH} = 0x0B4B, 
{\b MACREGISTER.HST_RFTC_PLLLOCK_DET_CNT} = 0x0B4C, 
{\b MACREGISTER.HST_RFTC_PLLLOCK_TO} = 0x0B4D, 
{\b MACREGISTER.HST_RFTC_BERREADDELAY} = 0x0B4E, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B4F} = 0x0B4F, 
{\b MACREGISTER.MAC_RFTC_FWDRFPWRRAWADC} = 0x0B50, 
{\b MACREGISTER.MAC_RFTC_REVRFPWRRAWADC} = 0x0B51, 
{\b MACREGISTER.MAC_RFTC_ANTSENSERAWADC} = 0x0B52, 
{\b MACREGISTER.MAC_RFTC_AMBTEMPRAWADC} = 0x0B53, 
{\b MACREGISTER.MAC_RFTC_PATEMPRAWADC} = 0x0B54, 
{\b MACREGISTER.MAC_RFTC_XCVRTEMPRAWADC} = 0x0B55, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B56} = 0x0B56, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B57} = 0x0B57, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B58} = 0x0B58, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B59} = 0x0B59, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B5A} = 0x0B5A, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B5B} = 0x0B5B, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B5C} = 0x0B5C, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B5D} = 0x0B5D, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B5E} = 0x0B5E, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B5F} = 0x0B5F, 
{\b MACREGISTER.HST_RFTC_CURRENT_PROFILE} = 0x0B60, 
{\b MACREGISTER.HST_RFTC_PROF_SEL} = 0x0B61, 
{\b MACREGISTER.MAC_RFTC_PROF_CFG} = 0x0B62, 
{\b MACREGISTER.MAC_RFTC_PROF_ID_HIGH} = 0x0B63, 
{\b MACREGISTER.MAC_RFTC_PROF_ID_LOW} = 0x0B64, 
{\b MACREGISTER.MAC_RFTC_PROF_IDVER} = 0x0B65, 
{\b MACREGISTER.MAC_RFTC_PROF_PROTOCOL} = 0x0B66, 
{\b MACREGISTER.MAC_RFTC_PROF_R2TMODTYPE} = 0x0B67, 
{\b MACREGISTER.MAC_RFTC_PROF_TARI} = 0x0B68, 
{\b MACREGISTER.MAC_RFTC_PROF_X} = 0x0B69, 
{\b MACREGISTER.MAC_RFTC_PROF_PW} = 0x0B6A, 
{\b MACREGISTER.MAC_RFTC_PROF_RTCAL} = 0x0B6B, 
{\b MACREGISTER.MAC_RFTC_PROF_TRCAL} = 0x0B6C, 
{\b MACREGISTER.MAC_RFTC_PROF_DIVIDERATIO} = 0x0B6D, 
{\b MACREGISTER.MAC_RFTC_PROF_MILLERNUM} = 0x0B6E, 
{\b MACREGISTER.MAC_RFTC_PROF_T2RLINKFREQ} = 0x0B6F, 
{\b MACREGISTER.MAC_RFTC_PROF_VART2DELAY} = 0x0B70, 
{\b MACREGISTER.MAC_RFTC_PROF_RXDELAY} = 0x0B71, 
{\b MACREGISTER.MAC_RFTC_PROF_MINTOTT2DELAY} = 0x0B72, 
{\b MACREGISTER.MAC_RFTC_PROF_TXPROPDELAY} = 0x0B73, 
{\b MACREGISTER.MAC_RFTC_PROF_RSSIAVECFG} = 0x0B74, 
{\b MACREGISTER.MAC_RFTC_PROF_PREAMCMD} = 0x0B75, 
{\b MACREGISTER.MAC_RFTC_PROF_FSYNCCMD} = 0x0B76, 
{\b MACREGISTER.MAC_RFTC_PROF_T2WAITCMD} = 0x0B77, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B78} = 0x0B78, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B79} = 0x0B79, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B7A} = 0x0B7A, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B7B} = 0x0B7B, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B7C} = 0x0B7C, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B7D} = 0x0B7D, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B7E} = 0x0B7E, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B7F} = 0x0B7F, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B80} = 0x0B80, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B81} = 0x0B81, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B82} = 0x0B82, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B83} = 0x0B83, 
{\b MACREGISTER.HST_RFTC_RFU_0x0B84} = 0x0B84, 
{\b MACREGISTER.HST_RFTC_FRQCH_ENTRYCNT} = 0x0C00, 
{\b MACREGISTER.HST_RFTC_FRQCH_SEL} = 0x0C01, 
{\b MACREGISTER.HST_RFTC_FRQCH_CFG} = 0x0C02, 
{\b MACREGISTER.HST_RFTC_FRQCH_DESC_PLLDIVMULT} = 0x0C03, 
{\b MACREGISTER.HST_RFTC_FRQCH_DESC_PLLDACCTL} = 0x0C04, 
{\b MACREGISTER.MAC_RFTC_FRQCH_DESC_PLLLOCKSTAT0} = 0x0C05, 
{\b MACREGISTER.MAC_RFTC_FRQCH_DESC_PLLLOCKSTAT1} = 0x0C06, 
{\b MACREGISTER.HST_RFTC_FRQCH_DESC_PARFU3} = 0x0C07, 
{\b MACREGISTER.HST_RFTC_FRQCH_CMDSTART} = 0x0C08, 
{\b MACREGISTER.HST_CMD} = 0xF000
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
REGISTER NAME/ADDRESS CONSTANTS }}}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b DeviceRecvData} (byte[] recvData)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Transfer BT API packet to R2000 packet }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b PowerOn} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b PowerOff} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b SetPowerLevel} (UInt32 pwrlevel)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint [] {\b GetActiveLinkProfile} (uint region=0)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b SetCurrentLinkProfile} (uint profile)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
0 = Success }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt32 {\b GetPowerLevel} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b SetInventoryTimeDelay} (UInt32 ms)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b StartOperation} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RFIDReader} ({\b HighLevelInterface} deviceHandler)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Connect} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Reconnect} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b GetFirmwareVersion} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt32 {\b GetInventoryDelayTime} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b GetOperationMode} (ref {\b RadioOperationMode} mode)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Retrieves the operation mode for the RFID radio module. The operation mode cannot be retrieved while a radio module is executing a tag-protocol operation. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b SetOperationMode} ({\b RadioOperationMode} mode)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the operation mode of RFID radio module. By default, when an application opens a radio, the RFID Reader Library sets the reporting mode to non-continuous. An RFID radio module's operation mode will remain in effect until it is explicitly changed via RFID_RadioSetOperationMode, or the radio is closed and re- opened (at which point it will be set to non-continuous mode). The operation mode may not be changed while a radio module is executing a tag-protocol operation. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b SetOperationMode} (ushort cycles, {\b Events.AntennaSequenceMode} mode, uint sequenceSize)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the operation mode of RFID radio module. By default, when an application opens a radio, the RFID Reader Library sets the reporting mode to non-continuous. An RFID radio module's operation mode will remain in effect until it is explicitly changed via RFID_RadioSetOperationMode, or the radio is closed and re- opened (at which point it will be set to non-continuous mode). The operation mode may not be changed while a radio module is executing a tag-protocol operation. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b StartInventory} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b StopOperation} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b test} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b Start18K6CRead} (uint bank, uint offset, uint count, UInt16[] data, uint accessPassword, uint retry, {\b SelectFlags} flags)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b Start18K6CWrite} (uint bank, uint offset, uint count, UInt16[] data, uint accessPassword, uint retry, UInt16 flags)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b MacReadRegister} ({\b MACREGISTER} add)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
async void {\b MacReadRegister} (UInt16 add)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b GetModelName} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b GetCountryCode} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ClearBuffer} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Result} {\b SetSelectCriteria} ({\b SelectCriterion}[] critlist)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Configures the tag-selection criteria for the ISO 18000-6C select command. The supplied tag-selection criteria will be used for any tag-protocol operations (i.e., Inventory, etc.) in which the application specifies that an ISO 18000-6C select command should be issued prior to executing the tag-protocol operation (i.e., the SelectFlags.SELECT flag is provided to the appropriate RFID_18K6CTag* function). The tag-selection criteria will stay in effect until the next call to SetSelectCriteria. Tag-selection criteria may not be changed while a radio module is executing a tag-protocol operation. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Result} {\b SetPostMatchCriteria} ({\b SingulationCriterion}[] postmatch)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Configures the post-singulation match criteria to be used by the RFID radio module. The supplied post-singulation match criteria will be used for any tag-protocol operations (i.e., Inventory, etc.) in which the application specifies that a post-singulation match should be performed on the tags that are singulated by the tag-protocol operation (i.e., the SelectFlags.POST_MATCH flag is provided to the appropriate RFID_18K6CTag* function). The post-singulation match criteria will stay in effect until the next call to SetPostMatchCriteria. Post-singulation match criteria may not be changed while a radio module is executing a tag-protocol operation. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Result} {\b SetTagGroup} ({\b Selected} gpSelect, {\b Session} gpSession, {\b SessionTarget} gpSessionTarget)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Once the tag population has been partitioned into disjoint groups, a subsequent tag-protocol operation (i.e., an inventory operation or access command) is then applied to one of the tag groups. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Result} {\b SetTagGroup} ({\b TagGroup} tagGroup)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Once the tag population has been partitioned into disjoint groups, a subsequent tag-protocol operation (i.e., an inventory operation or access command) is then applied to one of the tag groups. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Result} {\b GetTagGroup} ({\b TagGroup} tagGroup)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get Tag Group }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b SetInventoryTimeDelay} (UInt32 ms)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt32 {\b GetFirmwareVersion} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt32 {\b GetInventoryDelayTime} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Result} {\b GetOperationMode} (ref ushort cycles, ref {\b AntennaSequenceMode} mode, ref uint sequenceSize)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Retrieves the operation mode for the RFID radio module. The operation mode cannot be retrieved while a radio module is executing a tag-protocol operation. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b GetOperationMode} (ref {\b RadioOperationMode} mode)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Retrieves the operation mode for the RFID radio module. The operation mode cannot be retrieved while a radio module is executing a tag-protocol operation. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Result} {\b SetOperationMode} ({\b RadioOperationMode} mode)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the operation mode of RFID radio module. By default, when an application opens a radio, the RFID Reader Library sets the reporting mode to non-continuous. An RFID radio module's operation mode will remain in effect until it is explicitly changed via RFID_RadioSetOperationMode, or the radio is closed and re- opened (at which point it will be set to non-continuous mode). The operation mode may not be changed while a radio module is executing a tag-protocol operation. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Result} {\b SetOperationMode} (UInt16 cycles)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the operation mode of RFID radio module. By default, when an application opens a radio, the RFID Reader Library sets the reporting mode to non-continuous. An RFID radio module's operation mode will remain in effect until it is explicitly changed via RFID_RadioSetOperationMode, or the radio is closed and re- opened (at which point it will be set to non-continuous mode). The operation mode may not be changed while a radio module is executing a tag-protocol operation. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Result} {\b SetOperationMode} (ushort cycles, {\b Events.AntennaSequenceMode} mode=AntennaSequenceMode.NORMAL, uint sequenceSize=0)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the operation mode of RFID radio module. By default, when an application opens a radio, the RFID Reader Library sets the reporting mode to non-continuous. An RFID radio module's operation mode will remain in effect until it is explicitly changed via RFID_RadioSetOperationMode, or the radio is closed and re- opened (at which point it will be set to non-continuous mode). The operation mode may not be changed while a radio module is executing a tag-protocol operation. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Result} {\b SetInventoryDuration} (uint duration, uint antennaPort=0)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is used to set inventory duration }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double [] {\b GetAvailableFrequencyTable} ({\b RegionCode} region)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get frequency table on specific region }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double [] {\b GetAvailableFrequencyTable} ({\b RegionCode} region)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get frequency table on specific region }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b Start18K6CRead} (uint bank, uint offset, uint count, UInt16[] data, uint accessPassword, uint retry, {\b CSLibrary.Constants.SelectFlags} flags)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Result} {\b SetCurrentSingulationAlgorithm} ({\b SingulationAlgorithm} {\b SingulationAlgorithm})\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Allows the application to set the currently-active singulation algorithm (i.e., the one that is used when performing a tag- protocol operation (e.g., inventory, tag read, etc.)). The currently-active singulation algorithm may not be changed while a radio module is executing a tag-protocol operation. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Result} {\b GetCurrentSingulationAlgorithm} (ref {\b SingulationAlgorithm} {\b SingulationAlgorithm})\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get Current Singulation Algorithm }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Result} {\b SetSingulationAlgorithmParms} ({\b SingulationAlgorithm} alg, {\b SingulationAlgorithmParms} parms)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SetSingulationAlgorithmParms }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Result} {\b GetSingulationAlgorithmParms} ({\b SingulationAlgorithm} alg, {\b SingulationAlgorithmParms} parms)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
GetSingulationAlgorithmParms }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Result} {\b GetFixedQParms} ({\b FixedQParms} fixedQ)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get FixedQ Singulation Algorithm }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Result} {\b SetFixedQParms} (uint QValue, uint RetryCount, uint ToggleTarget, uint RepeatUnitNoTags)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The parameters for the fixed-Q algorithm, MAC singulation algorithm 0 If running a same operation, it only need to config once times }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Result} {\b SetFixedQParms} ({\b FixedQParms} fixedQParm)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The parameters for the fixed-Q algorithm, MAC singulation algorithm 0 If running a same operation, it only need to config once times }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Result} {\b SetFixedQParms} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The parameters for the fixed-Q algorithm, MAC singulation algorithm 0 If running a same operation, it only need to config once times }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Result} {\b GetDynamicQParms} ({\b DynamicQParms} parms)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get DynamicQ Singulation Algorithm }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Result} {\b SetDynamicQParms} (uint StartQValue, uint MinQValue, uint MaxQValue, uint RetryCount, uint ThresholdMultiplier, uint ToggleTarget)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The parameters for the dynamic-Q algorithm with application-controlled Q-adjustment-threshold, MAC singulation algorithm 3 }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Result} {\b SetDynamicQParms} ({\b DynamicQParms} dynParm)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The parameters for the dynamic-Q algorithm with application-controlled Q-adjustment-threshold, MAC singulation algorithm 3 }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Result} {\b SetDynamicQParms} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The parameters for the dynamic-Q algorithm with application-controlled Q-adjustment-threshold, MAC singulation algorithm 3 }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Result} {\b GetCountryCode} (ref uint code)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
GetCountryCode }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
List< {\b RegionCode} > {\b GetActiveRegionCode} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Available region you can use }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Result} {\b SetFixedChannel} ({\b RegionCode} prof=RegionCode.CURRENT, uint channel=0)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set Fixed Frequency Channel All region can be used to set a fixed channel }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Result} {\b SetHoppingChannels} ({\b RegionCode} prof)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set to the specific frequency profile }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Result} {\b SetHoppingChannels} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reset current frequency profile }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Result} {\b SetAgileChannels} ({\b RegionCode} prof)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set to frequency agile mode }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Result} {\b SetDefaultChannel} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b StopOperation} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Result} {\b StartOperation} ({\b Operation} opertion)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint {\b GetActiveMaxPowerLevel} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Available Maximum Power you can set on specific region }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Result} {\b GetPowerLevel} (ref uint pwrlvl)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get Power Level }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b SetPowerLevel} (UInt32 pwrlevel)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint [] {\b GetActiveLinkProfile} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Result} {\b SetCurrentLinkProfile} (uint profile)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Allows the application to set the current link profile for the radio module. A link profile will remain in effect until changed by a subsequent call to RFID_RadioSetCurrentLinkProfile. The current link profile cannot be set while a radio module is executing a tag-protocol operation. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt32 {\b LastMacErrorCode}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Properties\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CSLibraryOperationParms} {\b Options}{\f2  [get, set]}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b CSLibrary} Operation parameters Notes : you must config this parameters before perform any operation }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RFState} {\b State}{\f2  [get, private set]}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Current Operation State }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ChipSetID} {\b OEMChipSetID}{\f2  [get]}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint {\b GetOEMCountryCode}{\f2  [get]}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b IsHoppingChannelOnly}{\f2  [get]}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
If true, it can only set to hopping channel. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b IsFixedChannelOnly}{\f2  [get]}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
If true, it can only set to fixed channel. Otherwise, both fixed and hopping can be set. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b IsFixedChannel}{\f2  [get]}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get Fixed frequency channel }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RegionCode} {\b SelectedRegionCode}{\f2  [get]}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get Region Profile }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint {\b SelectedChannel}{\f2  [get]}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get Current Selected Frequency Channel }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Events\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b CSLibrary.Events.OnStateChangedEventArgs} > {\b OnStateChanged}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reader Operation State Event }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b CSLibrary.Events.OnAsyncCallbackEventArgs} > {\b OnAsyncCallback}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tag Inventory(including Inventory and search) callback event }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b CSLibrary.Events.OnAccessCompletedEventArgs} > {\b OnAccessCompleted}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tag Access (including Tag read/write/kill/lock) completed event }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Types\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b RFIDREADERCMDSTATUS} \{ {\b RFIDREADERCMDSTATUS.IDLE}, 
{\b RFIDREADERCMDSTATUS.GETREGISTER}, 
{\b RFIDREADERCMDSTATUS.EXECCMD}, 
{\b RFIDREADERCMDSTATUS.INVENTORY}, 
{\b RFIDREADERCMDSTATUS.ABORT}, 
{\b RFIDREADERCMDSTATUS.IDLE}, 
{\b RFIDREADERCMDSTATUS.GETREGISTER}, 
{\b RFIDREADERCMDSTATUS.EXECCMD}, 
{\b RFIDREADERCMDSTATUS.INVENTORY}, 
{\b RFIDREADERCMDSTATUS.ABORT}
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b SENDREMARK} \{ {\b SENDREMARK.GENERAL}, 
{\b SENDREMARK.GETREGISTER}, 
{\b SENDREMARK.INVENTORY}, 
{\b SENDREMARK.EXECCMD}
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b HST_CMD} : uint \{ {\b HST_CMD.NV_MEM_UPDATE} = 0x00000001, 
{\b HST_CMD.WROEM} = 0x00000002, 
{\b HST_CMD.RDOEM} = 0x00000003, 
{\b HST_CMD.ENGTST1} = 0x00000004, 
{\b HST_CMD.MBPRDREG} = 0x00000005, 
{\b HST_CMD.MBPWRREG} = 0x00000006, 
{\b HST_CMD.RDGPIO} = 0x0000000C, 
{\b HST_CMD.WRGPIO} = 0x0000000D, 
{\b HST_CMD.CFGGPIO} = 0x0000000E, 
{\b HST_CMD.INV} = 0x0000000F, 
{\b HST_CMD.READ} = 0x00000010, 
{\b HST_CMD.WRITE} = 0x00000011, 
{\b HST_CMD.LOCK} = 0x00000012, 
{\b HST_CMD.KILL} = 0x00000013, 
{\b HST_CMD.SETPWRMGMTCFG} = 0x00000014, 
{\b HST_CMD.CLRERR} = 0x00000015, 
{\b HST_CMD.CWON} = 0x00000017, 
{\b HST_CMD.CWOFF} = 0x00000018, 
{\b HST_CMD.UPDATELINKPROFILE} = 0x00000019, 
{\b HST_CMD.CALIBRATE_GG} = 0x0000001B, 
{\b HST_CMD.LPROF_RDXCVRREG} = 0x0000001C, 
{\b HST_CMD.LPROF_WRXCVRREG} = 0x0000001D, 
{\b HST_CMD.BLOCKERASE} = 0x0000001e, 
{\b HST_CMD.BLOCKWRITE} = 0x0000001f, 
{\b HST_CMD.POPULATE_SPURWATABLE} = 0x00000020, 
{\b HST_CMD.POPRFTCSENSLUTS} = 0x00000021, 
{\b HST_CMD.BLOCKPERMALOCK}, 
{\b HST_CMD.CUSTOMM4QT}, 
{\b HST_CMD.CUSTOMG2XREADPROTECT}, 
{\b HST_CMD.CUSTOMG2XRESETREADPROTECT}, 
{\b HST_CMD.CUSTOMG2XCHANGEEAS}, 
{\b HST_CMD.CUSTOMG2XEASALARM}, 
{\b HST_CMD.CUSTOMG2XCHANGECONFIG}, 
{\b HST_CMD.CUSTOMSLSETPASSWORD}, 
{\b HST_CMD.CUSTOMSLSETLOGMODE}, 
{\b HST_CMD.CUSTOMSLSETLOGLIMITS}, 
{\b HST_CMD.CUSTOMSLGETMEASUREMENTSETUP}, 
{\b HST_CMD.CUSTOMSLSETSFEPARA}, 
{\b HST_CMD.CUSTOMSLSETCALDATA}, 
{\b HST_CMD.CUSTOMSLENDLOG}, 
{\b HST_CMD.CUSTOMSLSTARTLOG}, 
{\b HST_CMD.CUSTOMSLGETLOGSTATE}, 
{\b HST_CMD.CUSTOMSLGETCALDATA}, 
{\b HST_CMD.CUSTOMSLGETBATLV}, 
{\b HST_CMD.CUSTOMSLSETSHELFLIFE}, 
{\b HST_CMD.CUSTOMSLINIT}, 
{\b HST_CMD.CUSTOMSLGETSENSORVALUE}, 
{\b HST_CMD.CUSTOMSLOPENAREA}, 
{\b HST_CMD.CUSTOMSLACCESSFIFO}, 
{\b HST_CMD.CUSTOMEM4324GETUID}, 
{\b HST_CMD.CUSTOMEM4325GETUID}, 
{\b HST_CMD.CUSTOMEMGETSENSORDATA}, 
{\b HST_CMD.CUSTOMEMRESETALARMS}, 
{\b HST_CMD.CUSTOMEMSENDSPI}, 
{\b HST_CMD.CMD_END}, 
{\b HST_CMD.NV_MEM_UPDATE} = 0x00000001, 
{\b HST_CMD.WROEM} = 0x00000002, 
{\b HST_CMD.RDOEM} = 0x00000003, 
{\b HST_CMD.ENGTST1} = 0x00000004, 
{\b HST_CMD.MBPRDREG} = 0x00000005, 
{\b HST_CMD.MBPWRREG} = 0x00000006, 
{\b HST_CMD.RDGPIO} = 0x0000000C, 
{\b HST_CMD.WRGPIO} = 0x0000000D, 
{\b HST_CMD.CFGGPIO} = 0x0000000E, 
{\b HST_CMD.INV} = 0x0000000F, 
{\b HST_CMD.READ} = 0x00000010, 
{\b HST_CMD.WRITE} = 0x00000011, 
{\b HST_CMD.LOCK} = 0x00000012, 
{\b HST_CMD.KILL} = 0x00000013, 
{\b HST_CMD.SETPWRMGMTCFG} = 0x00000014, 
{\b HST_CMD.CLRERR} = 0x00000015, 
{\b HST_CMD.CWON} = 0x00000017, 
{\b HST_CMD.CWOFF} = 0x00000018, 
{\b HST_CMD.UPDATELINKPROFILE} = 0x00000019, 
{\b HST_CMD.CALIBRATE_GG} = 0x0000001B, 
{\b HST_CMD.LPROF_RDXCVRREG} = 0x0000001C, 
{\b HST_CMD.LPROF_WRXCVRREG} = 0x0000001D, 
{\b HST_CMD.BLOCKERASE} = 0x0000001e, 
{\b HST_CMD.BLOCKWRITE} = 0x0000001f, 
{\b HST_CMD.POPULATE_SPURWATABLE} = 0x00000020, 
{\b HST_CMD.POPRFTCSENSLUTS} = 0x00000021, 
{\b HST_CMD.BLOCKPERMALOCK}, 
{\b HST_CMD.CUSTOMM4QT}, 
{\b HST_CMD.CUSTOMG2XREADPROTECT}, 
{\b HST_CMD.CUSTOMG2XRESETREADPROTECT}, 
{\b HST_CMD.CUSTOMG2XCHANGEEAS}, 
{\b HST_CMD.CUSTOMG2XEASALARM}, 
{\b HST_CMD.CUSTOMG2XCHANGECONFIG}, 
{\b HST_CMD.CUSTOMSLSETPASSWORD}, 
{\b HST_CMD.CUSTOMSLSETLOGMODE}, 
{\b HST_CMD.CUSTOMSLSETLOGLIMITS}, 
{\b HST_CMD.CUSTOMSLGETMEASUREMENTSETUP}, 
{\b HST_CMD.CUSTOMSLSETSFEPARA}, 
{\b HST_CMD.CUSTOMSLSETCALDATA}, 
{\b HST_CMD.CUSTOMSLENDLOG}, 
{\b HST_CMD.CUSTOMSLSTARTLOG}, 
{\b HST_CMD.CUSTOMSLGETLOGSTATE}, 
{\b HST_CMD.CUSTOMSLGETCALDATA}, 
{\b HST_CMD.CUSTOMSLGETBATLV}, 
{\b HST_CMD.CUSTOMSLSETSHELFLIFE}, 
{\b HST_CMD.CUSTOMSLINIT}, 
{\b HST_CMD.CUSTOMSLGETSENSORVALUE}, 
{\b HST_CMD.CUSTOMSLOPENAREA}, 
{\b HST_CMD.CUSTOMSLACCESSFIFO}, 
{\b HST_CMD.CUSTOMEM4324GETUID}, 
{\b HST_CMD.CUSTOMEM4325GETUID}, 
{\b HST_CMD.CUSTOMEMGETSENSORDATA}, 
{\b HST_CMD.CUSTOMEMRESETALARMS}, 
{\b HST_CMD.CUSTOMEMSENDSPI}, 
{\b HST_CMD.CMD_END}
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b RFIDREADERCMDSTATUS} \{ {\b RFIDREADERCMDSTATUS.IDLE}, 
{\b RFIDREADERCMDSTATUS.GETREGISTER}, 
{\b RFIDREADERCMDSTATUS.EXECCMD}, 
{\b RFIDREADERCMDSTATUS.INVENTORY}, 
{\b RFIDREADERCMDSTATUS.ABORT}, 
{\b RFIDREADERCMDSTATUS.IDLE}, 
{\b RFIDREADERCMDSTATUS.GETREGISTER}, 
{\b RFIDREADERCMDSTATUS.EXECCMD}, 
{\b RFIDREADERCMDSTATUS.INVENTORY}, 
{\b RFIDREADERCMDSTATUS.ABORT}
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b HST_CMD} : uint \{ {\b HST_CMD.NV_MEM_UPDATE} = 0x00000001, 
{\b HST_CMD.WROEM} = 0x00000002, 
{\b HST_CMD.RDOEM} = 0x00000003, 
{\b HST_CMD.ENGTST1} = 0x00000004, 
{\b HST_CMD.MBPRDREG} = 0x00000005, 
{\b HST_CMD.MBPWRREG} = 0x00000006, 
{\b HST_CMD.RDGPIO} = 0x0000000C, 
{\b HST_CMD.WRGPIO} = 0x0000000D, 
{\b HST_CMD.CFGGPIO} = 0x0000000E, 
{\b HST_CMD.INV} = 0x0000000F, 
{\b HST_CMD.READ} = 0x00000010, 
{\b HST_CMD.WRITE} = 0x00000011, 
{\b HST_CMD.LOCK} = 0x00000012, 
{\b HST_CMD.KILL} = 0x00000013, 
{\b HST_CMD.SETPWRMGMTCFG} = 0x00000014, 
{\b HST_CMD.CLRERR} = 0x00000015, 
{\b HST_CMD.CWON} = 0x00000017, 
{\b HST_CMD.CWOFF} = 0x00000018, 
{\b HST_CMD.UPDATELINKPROFILE} = 0x00000019, 
{\b HST_CMD.CALIBRATE_GG} = 0x0000001B, 
{\b HST_CMD.LPROF_RDXCVRREG} = 0x0000001C, 
{\b HST_CMD.LPROF_WRXCVRREG} = 0x0000001D, 
{\b HST_CMD.BLOCKERASE} = 0x0000001e, 
{\b HST_CMD.BLOCKWRITE} = 0x0000001f, 
{\b HST_CMD.POPULATE_SPURWATABLE} = 0x00000020, 
{\b HST_CMD.POPRFTCSENSLUTS} = 0x00000021, 
{\b HST_CMD.BLOCKPERMALOCK}, 
{\b HST_CMD.CUSTOMM4QT}, 
{\b HST_CMD.CUSTOMG2XREADPROTECT}, 
{\b HST_CMD.CUSTOMG2XRESETREADPROTECT}, 
{\b HST_CMD.CUSTOMG2XCHANGEEAS}, 
{\b HST_CMD.CUSTOMG2XEASALARM}, 
{\b HST_CMD.CUSTOMG2XCHANGECONFIG}, 
{\b HST_CMD.CUSTOMSLSETPASSWORD}, 
{\b HST_CMD.CUSTOMSLSETLOGMODE}, 
{\b HST_CMD.CUSTOMSLSETLOGLIMITS}, 
{\b HST_CMD.CUSTOMSLGETMEASUREMENTSETUP}, 
{\b HST_CMD.CUSTOMSLSETSFEPARA}, 
{\b HST_CMD.CUSTOMSLSETCALDATA}, 
{\b HST_CMD.CUSTOMSLENDLOG}, 
{\b HST_CMD.CUSTOMSLSTARTLOG}, 
{\b HST_CMD.CUSTOMSLGETLOGSTATE}, 
{\b HST_CMD.CUSTOMSLGETCALDATA}, 
{\b HST_CMD.CUSTOMSLGETBATLV}, 
{\b HST_CMD.CUSTOMSLSETSHELFLIFE}, 
{\b HST_CMD.CUSTOMSLINIT}, 
{\b HST_CMD.CUSTOMSLGETSENSORVALUE}, 
{\b HST_CMD.CUSTOMSLOPENAREA}, 
{\b HST_CMD.CUSTOMSLACCESSFIFO}, 
{\b HST_CMD.CUSTOMEM4324GETUID}, 
{\b HST_CMD.CUSTOMEM4325GETUID}, 
{\b HST_CMD.CUSTOMEMGETSENSORDATA}, 
{\b HST_CMD.CUSTOMEMRESETALARMS}, 
{\b HST_CMD.CUSTOMEMSENDSPI}, 
{\b HST_CMD.CMD_END}, 
{\b HST_CMD.NV_MEM_UPDATE} = 0x00000001, 
{\b HST_CMD.WROEM} = 0x00000002, 
{\b HST_CMD.RDOEM} = 0x00000003, 
{\b HST_CMD.ENGTST1} = 0x00000004, 
{\b HST_CMD.MBPRDREG} = 0x00000005, 
{\b HST_CMD.MBPWRREG} = 0x00000006, 
{\b HST_CMD.RDGPIO} = 0x0000000C, 
{\b HST_CMD.WRGPIO} = 0x0000000D, 
{\b HST_CMD.CFGGPIO} = 0x0000000E, 
{\b HST_CMD.INV} = 0x0000000F, 
{\b HST_CMD.READ} = 0x00000010, 
{\b HST_CMD.WRITE} = 0x00000011, 
{\b HST_CMD.LOCK} = 0x00000012, 
{\b HST_CMD.KILL} = 0x00000013, 
{\b HST_CMD.SETPWRMGMTCFG} = 0x00000014, 
{\b HST_CMD.CLRERR} = 0x00000015, 
{\b HST_CMD.CWON} = 0x00000017, 
{\b HST_CMD.CWOFF} = 0x00000018, 
{\b HST_CMD.UPDATELINKPROFILE} = 0x00000019, 
{\b HST_CMD.CALIBRATE_GG} = 0x0000001B, 
{\b HST_CMD.LPROF_RDXCVRREG} = 0x0000001C, 
{\b HST_CMD.LPROF_WRXCVRREG} = 0x0000001D, 
{\b HST_CMD.BLOCKERASE} = 0x0000001e, 
{\b HST_CMD.BLOCKWRITE} = 0x0000001f, 
{\b HST_CMD.POPULATE_SPURWATABLE} = 0x00000020, 
{\b HST_CMD.POPRFTCSENSLUTS} = 0x00000021, 
{\b HST_CMD.BLOCKPERMALOCK}, 
{\b HST_CMD.CUSTOMM4QT}, 
{\b HST_CMD.CUSTOMG2XREADPROTECT}, 
{\b HST_CMD.CUSTOMG2XRESETREADPROTECT}, 
{\b HST_CMD.CUSTOMG2XCHANGEEAS}, 
{\b HST_CMD.CUSTOMG2XEASALARM}, 
{\b HST_CMD.CUSTOMG2XCHANGECONFIG}, 
{\b HST_CMD.CUSTOMSLSETPASSWORD}, 
{\b HST_CMD.CUSTOMSLSETLOGMODE}, 
{\b HST_CMD.CUSTOMSLSETLOGLIMITS}, 
{\b HST_CMD.CUSTOMSLGETMEASUREMENTSETUP}, 
{\b HST_CMD.CUSTOMSLSETSFEPARA}, 
{\b HST_CMD.CUSTOMSLSETCALDATA}, 
{\b HST_CMD.CUSTOMSLENDLOG}, 
{\b HST_CMD.CUSTOMSLSTARTLOG}, 
{\b HST_CMD.CUSTOMSLGETLOGSTATE}, 
{\b HST_CMD.CUSTOMSLGETCALDATA}, 
{\b HST_CMD.CUSTOMSLGETBATLV}, 
{\b HST_CMD.CUSTOMSLSETSHELFLIFE}, 
{\b HST_CMD.CUSTOMSLINIT}, 
{\b HST_CMD.CUSTOMSLGETSENSORVALUE}, 
{\b HST_CMD.CUSTOMSLOPENAREA}, 
{\b HST_CMD.CUSTOMSLACCESSFIFO}, 
{\b HST_CMD.CUSTOMEM4324GETUID}, 
{\b HST_CMD.CUSTOMEM4325GETUID}, 
{\b HST_CMD.CUSTOMEMGETSENSORDATA}, 
{\b HST_CMD.CUSTOMEMRESETALARMS}, 
{\b HST_CMD.CUSTOMEMSENDSPI}, 
{\b HST_CMD.CMD_END}
 \}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~RFIDReader} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b TagSelected} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Start18K6CRequest} (uint tagStopCount, {\b SelectFlags} flags)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Setup18K6CReadRegisters} (UInt32 bank, UInt32 offset, UInt32 count)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte [] {\b PacketData} (UInt16 add, UInt32? value=null)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
rfid reader packet }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b MacWriteRegister} ({\b MACREGISTER} add, UInt32 value)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b MacReadRegister} ({\b MACREGISTER} add, ref UInt32 data)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
async void {\b MacWriteRegister} (UInt16 add, UInt32 value)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b TwoByteArraryToInt} (byte[] data, int startIndex)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b FourByteArraryToInt} (byte[] data, int startIndex)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
String {\b uint32ArrayToString} (UInt32[] source)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Single {\b R2000_RssiTranslation} (byte rawValue)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b R2000Packet_NewInventory} (byte[] recvData, int offset=0)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b R2000Packet_Inventory} (byte [] recvData, int offset=0)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b R2000Packet_TagAccess} (byte[] recvData, int offset=0)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b WriteMacMaskRegisters} (UInt16 registerAddress, UInt32 bitCount, byte[] pMask)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~RFIDReader} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b GenCountryList} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b GenCountryList} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b FireStateChangedEvent} ({\b RFState} e)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b FireAccessCompletedEvent} ({\b OnAccessCompletedEventArgs} args)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b TellThemOnStateChanged} (object sender, {\b OnStateChangedEventArgs} e)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b TellThemOnAccessCompleted} (object sender, {\b OnAccessCompletedEventArgs} e)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Start18K6CRequest} (uint tagStopCount, {\b SelectFlags} flags)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b TagLockThreadProc} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b TagBlockLockThreadProc} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b RFID_18K6CTagKill} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b TagKillThreadProc} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte [] {\b PacketData} (UInt16 add, UInt32? value=null)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
rfid reader packet }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b MacWriteRegister} ({\b MACREGISTER} add, UInt32 value)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
for compatible with old library }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b MacReadRegister} ({\b MACREGISTER} add, ref UInt32 data)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
for compatible with old library }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b MacWriteRegister} (UInt16 add, UInt32 value)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ReadReaderRegister} (UInt16 add)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Result} {\b MacReadOemData} (UInt32 address, ref UInt32 value)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Result} {\b MacWriteOemData} (uint address, uint value)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Result} {\b SetFrequencyBand} (UInt32 frequencySelector, {\b BandState} config, UInt32 multdiv, UInt32 pllcc)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set Frequency Band - Basic Function }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint {\b FreqChnCnt} ({\b RegionCode} prof)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint [] {\b FreqTable} ({\b RegionCode} prof)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b FreqChnWithinRange} (uint Channel, {\b RegionCode} region)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b FreqSortedIdxTbls} ({\b RegionCode} Prof, uint Channel)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint {\b GetPllcc} ({\b RegionCode} prof)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint [] {\b FreqIndex} ({\b RegionCode} prof)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Result} {\b SetRadioLBT} ({\b LBT} enable)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Result} {\b SetFrequencyBand} (UInt32 frequencySelector, {\b BandState} config, UInt32 multdiv, UInt32 pllcc)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set Frequency Band - Basic Function }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint {\b FreqChnCnt} ({\b RegionCode} prof)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint [] {\b FreqTable} ({\b RegionCode} prof)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b FreqChnWithinRange} (uint Channel, {\b RegionCode} region)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b FreqSortedIdxTbls} ({\b RegionCode} Prof, uint Channel)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint {\b GetPllcc} ({\b RegionCode} prof)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint [] {\b FreqIndex} ({\b RegionCode} prof)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Result} {\b SetRadioLBT} ({\b LBT} enable)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b TagRangingThreadProc} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b PreTagRangingThreadProc} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ExeTagRangingThreadProc} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b TagSearchOneTagThreadProc} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ReadReaderOEMData} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b StoreOEMData} (UInt32 address, UInt32 value)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b GetOEMData} (UInt32 address, ref UInt32 value)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Setup18K6CReadRegisters} (UInt32 bank, UInt32 offset, UInt32 count)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b CUST_18K6CTagRead} ({\b CSLibrary.Constants.MemoryBank} bank, int offset, int count, UInt16[] data, UInt32 password, {\b CSLibrary.Constants.SelectFlags} flags)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b TagReadPCThreadProc} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b TagReadEPCThreadProc} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b TagReadAccPwdThreadProc} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b TagReadKillPwdThreadProc} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b TagReadTidThreadProc} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b TagReadUsrMemThreadProc} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b TagSelected} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b PreFilter} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b SetMaskThreadProc} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Setup18K6CWriteRegisters} ({\b CSLibrary.Constants.MemoryBank} WriteBank, uint WriteOffset, uint WriteSize, UInt16[] WriteBuf, uint BufOffset)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CSLibrary.Constants.Result} {\b CUST_18K6CTagWrite} ({\b CSLibrary.Constants.MemoryBank} bank, UInt32 offset, UInt32 count, UInt16[] data, UInt32 password, {\b CSLibrary.Constants.SelectFlags} flags)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b TagWritePCThreadProc} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b TagWriteEPCThreadProc} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b TagWriteAccPwdThreadProc} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b TagWriteKillPwdThreadProc} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b TagWriteUsrMemThreadProc} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b HighLevelInterface} {\b _deviceHandler}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CSLibrary.Tools.Queue} {\b _dataBuffer} = new {\b Tools.Queue}(409600)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RFIDREADERCMDSTATUS} {\b _readerStatus} = {\b RFIDREADERCMDSTATUS.IDLE}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt32 [] {\b _registerData} = new UInt32[0xffff]\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RFState} {\b m_state} = RFState.IDLE\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Result} {\b m_Result}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Machine} {\b m_oem_machine} = Machine.UNKNOWN\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint {\b m_oem_special_country_version}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b m_oem_freq_modification_flag}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint {\b m_save_country_code} = 0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
List< {\b RegionCode} > {\b m_save_country_list} = new List<{\b RegionCode}>()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b BYTES_PER_LEN_UNIT} = 4\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const uint {\b INVALID_POWER_VALUE} = uint.MaxValue\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const uint {\b INVALID_PROFILE_VALUE} = uint.MaxValue\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b DATA_FIELD_INDEX} = 20\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b RSSI_FIELD_INDEX} = 12\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b ANT_FIELD_INDEX} = 14\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b MS_FIELD_INDEX} = 8\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b RFID_PACKET_COMMON_SIZE} = 8\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const ushort {\b PC_START_OFFSET} = 1\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const ushort {\b PC_WORD_LENGTH} = 1\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const ushort {\b EPC_START_OFFSET} = 2\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const ushort {\b EPC_WORD_LENGTH} = 6\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const ushort {\b ACC_PWD_START_OFFSET} = 2\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const ushort {\b ACC_PWD_WORD_LENGTH} = 2\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const ushort {\b KILL_PWD_START_OFFSET} = 0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const ushort {\b KILL_PWD_WORD_LENGTH} = 2\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const ushort {\b ONE_WORD_LEN} = 1\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const ushort {\b TWO_WORD_LEN} = 2\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const ushort {\b USER_WORD_LENGTH} = 1\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const uint {\b MAXFRECHANNEL} = 50\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Result} {\b CurrentOperationResult}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CSLibraryOperationParms} {\b m_rdr_opt_parms} = new {\b CSLibraryOperationParms}()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint [] {\b currentInventoryFreqRevIndex} = null\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
readonly double [] {\b FCCTableOfFreq}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
FCC Frequency Table }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint [] {\b fccFreqTable}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const uint {\b FCC_CHN_CNT} = 50\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
FCC Frequency Channel number }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
readonly uint [] {\b fccFreqSortedIdx}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint [] {\b fccFreqTable_Ver20170001}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
readonly uint [] {\b fccFreqSortedIdx_Ver20170001}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
readonly double [] {\b ZATableOfFreq}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
South Africa Frequency Table }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint [] {\b zaFreqTable}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const uint {\b ZA_CHN_CNT} = 16\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
FCC Frequency Channel number }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
readonly uint [] {\b zaFreqSortedIdx}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
readonly double [] {\b ETSITableOfFreq}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ETSI, G800 and India Frequency Table }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
readonly uint [] {\b etsiFreqTable}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const uint {\b ETSI_CHN_CNT} = 4\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ETSI Frequency Channel number }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
readonly uint [] {\b etsiFreqSortedIdx}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
readonly double [] {\b IDATableOfFreq}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
India Frequency Table }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
readonly uint [] {\b indiaFreqTable}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const uint {\b IDA_CHN_CNT} = 3\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
India Frequency Channel number }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
readonly uint [] {\b indiaFreqSortedIdx}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
readonly double [] {\b AUSTableOfFreq}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Australia Frequency Table }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
readonly uint [] {\b AusFreqTable}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const uint {\b AUS_CHN_CNT} = 10\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Australia Frequency Channel number }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
readonly uint [] {\b ausFreqSortedIdx}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
readonly double [] {\b CHNTableOfFreq}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
China Frequency Table }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
readonly uint [] {\b cnFreqTable}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const uint {\b CN_CHN_CNT} = 16\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
China Frequency Channel number }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
readonly uint [] {\b cnFreqSortedIdx}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
readonly double [] {\b CHN1TableOfFreq}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
China Frequency Table }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
readonly uint [] {\b cn1FreqTable}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const uint {\b CN1_CHN_CNT} = 4\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
China Frequency Channel number }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
readonly uint [] {\b cn1FreqSortedIdx}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
readonly double [] {\b CHN2TableOfFreq}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
China Frequency Table }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
readonly uint [] {\b cn2FreqTable}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
readonly double [] {\b CHN3TableOfFreq}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
China Frequency Table }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
readonly uint [] {\b cn3FreqTable}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
readonly double [] {\b CHN4TableOfFreq}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
China Frequency Table }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
readonly uint [] {\b cn4FreqTable}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
readonly double [] {\b CHN5TableOfFreq}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
China Frequency Table }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
readonly uint [] {\b cn5FreqTable}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
readonly double [] {\b CHN6TableOfFreq}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
China Frequency Table }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
readonly uint [] {\b cn6FreqTable}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
readonly double [] {\b CHN7TableOfFreq}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
China Frequency Table }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
readonly uint [] {\b cn7FreqTable}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
readonly double [] {\b CHN8TableOfFreq}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
China Frequency Table }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
readonly uint [] {\b cn8FreqTable}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
readonly double [] {\b CHN9TableOfFreq}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
China Frequency Table }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
readonly uint [] {\b cn9FreqTable}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const uint {\b CN9_CHN_CNT} = 3\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
China Frequency Channel number }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
readonly uint [] {\b cn9FreqSortedIdx}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
readonly double [] {\b CHN10TableOfFreq}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
China Frequency Table }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
readonly uint [] {\b cn10FreqTable}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
readonly double [] {\b CHN11TableOfFreq}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
China Frequency Table }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
readonly uint [] {\b cn11FreqTable}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
readonly double [] {\b CHN12TableOfFreq}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
China Frequency Table }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
readonly uint [] {\b cn12FreqTable}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
readonly double [] {\b HKTableOfFreq}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Hong Kong and Singapo Frequency Table }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
readonly uint [] {\b hkFreqTable}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const uint {\b HK_CHN_CNT} = 8\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Hong Kong Frequency Channel number }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
readonly uint [] {\b hkFreqSortedIdx}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
readonly double [] {\b JPNTableOfFreq}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Japan Frequency Table }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
readonly double [] {\b JPNTableOfFreq28}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
readonly double [] {\b JPNTableOfFreq29}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Japan Frequency Table }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
readonly uint [] {\b jpnFreqTable}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
readonly uint [] {\b jpnFreqTable28}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
readonly uint [] {\b jpnFreqTable29}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const uint {\b JPN_CHN_CNT} = 9\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Japan Frequency Channel number }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const uint {\b JPN_CHN_CNT28} = 7\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const uint {\b JPN_CHN_CNT29} = 8\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
readonly uint [] {\b jpnFreqSortedIdx}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
readonly uint [] {\b jpnFreqSortedIdx28}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
readonly uint [] {\b jpnFreqSortedIdx29}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
readonly double [] {\b JPN2012TableOfFreq}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Japan 2012 Frequency Table }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
readonly uint [] {\b jpn2012FreqTable}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const uint {\b JPN2012_CHN_CNT} = 4\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Japan Frequency Channel number }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
readonly uint [] {\b jpn2012FreqSortedIdx}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double [] {\b KRTableOfFreq}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Korea Frequency Table }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint [] {\b krFreqTable}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const uint {\b KR_CHN_CNT} = 19\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Korea Frequency Channel number }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
readonly uint [] {\b krFreqSortedIdx}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double [] {\b MYSTableOfFreq}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Malaysia Frequency Table }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint [] {\b mysFreqTable}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const uint {\b MYS_CHN_CNT} = 8\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Malaysia Frequency Channel number }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
readonly uint [] {\b mysFreqSortedIdx}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double [] {\b TWTableOfFreq}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Taiwan Frequency Table }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint [] {\b twFreqTable}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const uint {\b TW_CHN_CNT} = 12\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Taiwan Frequency Channel number }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
readonly uint [] {\b twFreqSortedIdx}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double [] {\b BR1TableOfFreq}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint [] {\b br1FreqTable}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const uint {\b BR1_CHN_CNT} = 24\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Brazil1 Frequency Channel number }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
readonly uint [] {\b br1FreqSortedIdx}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double [] {\b BR2TableOfFreq}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint [] {\b br2FreqTable}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const uint {\b BR2_CHN_CNT} = 33\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Brazil2 Frequency Channel number }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
readonly uint [] {\b br2FreqSortedIdx}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double [] {\b BR3TableOfFreq}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint [] {\b br3FreqTable}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const uint {\b BR3_CHN_CNT} = 9\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Brazil3 Frequency Channel number }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
readonly uint [] {\b br3FreqSortedIdx}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double [] {\b BR4TableOfFreq}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint [] {\b br4FreqTable}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const uint {\b BR4_CHN_CNT} = 4\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Brazil2 Frequency Channel number }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
readonly uint [] {\b br4FreqSortedIdx}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double [] {\b BR5TableOfFreq}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint [] {\b br5FreqTable}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const uint {\b BR5_CHN_CNT} = 14\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Brazil2 Frequency Channel number }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
readonly uint [] {\b br5FreqSortedIdx}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
readonly double [] {\b IDTableOfFreq}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Indonesia Frequency Table }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
readonly uint [] {\b indonesiaFreqTable}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const uint {\b ID_CHN_CNT} = 4\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Indonesia Frequency Channel number }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
readonly uint [] {\b indonesiaFreqSortedIdx}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
readonly double [] {\b UH1TableOfFreq}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
FCC UH Frequency Table 915-920 }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint [] {\b uh1FreqTable}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const uint {\b UH1_CHN_CNT} = 10\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
FCC UH Frequency Channel number }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
readonly uint [] {\b uh1FreqSortedIdx}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
readonly double [] {\b UH2TableOfFreq}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
FCC UH Frequency Table 920-928 }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint [] {\b uh2FreqTable}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const uint {\b UH2_CHN_CNT} = 15\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
FCC UH Frequency Channel number }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
readonly uint [] {\b uh2FreqSortedIdx}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double [] {\b LHTableOfFreq}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint [] {\b lhFreqTable}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const uint {\b LH_CHN_CNT} = 26\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Brazil1 Frequency Channel number }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
readonly uint [] {\b lhFreqSortedIdx}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double [] {\b LH1TableOfFreq}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint [] {\b lh1FreqTable}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const uint {\b LH1_CHN_CNT} = 14\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Brazil1 Frequency Channel number }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
readonly uint [] {\b lh1FreqSortedIdx}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double [] {\b LH2TableOfFreq}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint [] {\b lh2FreqTable}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const uint {\b LH2_CHN_CNT} = 11\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Brazil1 Frequency Channel number }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
readonly uint [] {\b lh2FreqSortedIdx}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double [] {\b JETableOfFreq}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint [] {\b jeFreqTable}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const uint {\b JE_CHN_CNT} = 7\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Brazil1 Frequency Channel number }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
readonly uint [] {\b jeFreqSortedIdx}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt32 [] {\b etsiBackoffTable}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt32 [] {\b japanBackoffTable}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double [] {\b PHTableOfFreq}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint [] {\b phFreqTable}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const uint {\b PH_CHN_CNT} = 8\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Brazil1 Frequency Channel number }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
readonly uint [] {\b phFreqSortedIdx}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double [] {\b ETSIUPPERBANDTableOfFreq}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint [] {\b etsiupperbandFreqTable}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const uint {\b ETSIUPPERBAND_CHN_CNT} = 4\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Brazil1 Frequency Channel number }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
readonly uint [] {\b etsiupperbandFreqSortedIdx}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double [] {\b NZTableOfFreq}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint [] {\b nzFreqTable}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const uint {\b NZ_CHN_CNT} = 11\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Brazil1 Frequency Channel number }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
readonly uint [] {\b nzFreqSortedIdx}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
readonly double [] {\b VETableOfFreq}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint [] {\b veFreqTable}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const uint {\b VE_CHN_CNT} = 10\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
FCC Frequency Channel number }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
readonly uint [] {\b veFreqSortedIdx}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CSLibrary.Structures.TagRangingParms} {\b _tagRangingParms}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint {\b m_oem_table_version}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt32 [] {\b oemValue} = new UInt32[oemAddress.Length]\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Structures.TagSelectedParms} {\b _tagSelectedParms}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b MAX_WR_CNT} = 0x8\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RegionCode} {\b m_save_region_code} = RegionCode.UNKNOWN\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b m_save_fixed_channel} = false\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b m_save_agile_channel} = false\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint {\b m_save_freq_channel} = 0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Operation} {\b CurrentOperation}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Private Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static readonly UInt32 [] {\b oemAddress} = new UInt32[] \{ 0x02, 0x0B, 0x8E, 0x8F, 0x9D, 0xA3, 0xA4, 0xA5 \}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Enumeration Documentation\par
\pard\plain 
{\xe \v HST_CMD\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_CMD}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b CSLibrary.RFIDReader.HST_CMD} : uint{\f2 [strong]}, {\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAJV}
{\bkmkend AAAAAAAAJV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v NV_MEM_UPDATE\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:NV_MEM_UPDATE}
{\qr NV_MEM_UPDATE{\bkmkstart AAAAAAAAJW}
{\bkmkend AAAAAAAAJW}
\cell }{\cell }{\row }
{\xe \v WROEM\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:WROEM}
{\qr WROEM{\bkmkstart AAAAAAAAJX}
{\bkmkend AAAAAAAAJX}
\cell }{\cell }{\row }
{\xe \v RDOEM\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:RDOEM}
{\qr RDOEM{\bkmkstart AAAAAAAAJY}
{\bkmkend AAAAAAAAJY}
\cell }{\cell }{\row }
{\xe \v ENGTST1\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:ENGTST1}
{\qr ENGTST1{\bkmkstart AAAAAAAAJZ}
{\bkmkend AAAAAAAAJZ}
\cell }{\cell }{\row }
{\xe \v MBPRDREG\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MBPRDREG}
{\qr MBPRDREG{\bkmkstart AAAAAAAAKA}
{\bkmkend AAAAAAAAKA}
\cell }{\cell }{\row }
{\xe \v MBPWRREG\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MBPWRREG}
{\qr MBPWRREG{\bkmkstart AAAAAAAAKB}
{\bkmkend AAAAAAAAKB}
\cell }{\cell }{\row }
{\xe \v RDGPIO\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:RDGPIO}
{\qr RDGPIO{\bkmkstart AAAAAAAAKC}
{\bkmkend AAAAAAAAKC}
\cell }{\cell }{\row }
{\xe \v WRGPIO\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:WRGPIO}
{\qr WRGPIO{\bkmkstart AAAAAAAAKD}
{\bkmkend AAAAAAAAKD}
\cell }{\cell }{\row }
{\xe \v CFGGPIO\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:CFGGPIO}
{\qr CFGGPIO{\bkmkstart AAAAAAAAKE}
{\bkmkend AAAAAAAAKE}
\cell }{\cell }{\row }
{\xe \v INV\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:INV}
{\qr INV{\bkmkstart AAAAAAAAKF}
{\bkmkend AAAAAAAAKF}
\cell }{\cell }{\row }
{\xe \v READ\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:READ}
{\qr READ{\bkmkstart AAAAAAAAKG}
{\bkmkend AAAAAAAAKG}
\cell }{\cell }{\row }
{\xe \v WRITE\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:WRITE}
{\qr WRITE{\bkmkstart AAAAAAAAKH}
{\bkmkend AAAAAAAAKH}
\cell }{\cell }{\row }
{\xe \v LOCK\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:LOCK}
{\qr LOCK{\bkmkstart AAAAAAAAKI}
{\bkmkend AAAAAAAAKI}
\cell }{\cell }{\row }
{\xe \v KILL\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:KILL}
{\qr KILL{\bkmkstart AAAAAAAAKJ}
{\bkmkend AAAAAAAAKJ}
\cell }{\cell }{\row }
{\xe \v SETPWRMGMTCFG\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:SETPWRMGMTCFG}
{\qr SETPWRMGMTCFG{\bkmkstart AAAAAAAAKK}
{\bkmkend AAAAAAAAKK}
\cell }{\cell }{\row }
{\xe \v CLRERR\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:CLRERR}
{\qr CLRERR{\bkmkstart AAAAAAAAKL}
{\bkmkend AAAAAAAAKL}
\cell }{\cell }{\row }
{\xe \v CWON\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:CWON}
{\qr CWON{\bkmkstart AAAAAAAAKM}
{\bkmkend AAAAAAAAKM}
\cell }{\cell }{\row }
{\xe \v CWOFF\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:CWOFF}
{\qr CWOFF{\bkmkstart AAAAAAAAKN}
{\bkmkend AAAAAAAAKN}
\cell }{\cell }{\row }
{\xe \v UPDATELINKPROFILE\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:UPDATELINKPROFILE}
{\qr UPDATELINKPROFILE{\bkmkstart AAAAAAAAKO}
{\bkmkend AAAAAAAAKO}
\cell }{\cell }{\row }
{\xe \v CALIBRATE_GG\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:CALIBRATE_GG}
{\qr CALIBRATE_GG{\bkmkstart AAAAAAAAKP}
{\bkmkend AAAAAAAAKP}
\cell }{\cell }{\row }
{\xe \v LPROF_RDXCVRREG\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:LPROF_RDXCVRREG}
{\qr LPROF_RDXCVRREG{\bkmkstart AAAAAAAAKQ}
{\bkmkend AAAAAAAAKQ}
\cell }{\cell }{\row }
{\xe \v LPROF_WRXCVRREG\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:LPROF_WRXCVRREG}
{\qr LPROF_WRXCVRREG{\bkmkstart AAAAAAAAKR}
{\bkmkend AAAAAAAAKR}
\cell }{\cell }{\row }
{\xe \v BLOCKERASE\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:BLOCKERASE}
{\qr BLOCKERASE{\bkmkstart AAAAAAAAKS}
{\bkmkend AAAAAAAAKS}
\cell }{\cell }{\row }
{\xe \v BLOCKWRITE\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:BLOCKWRITE}
{\qr BLOCKWRITE{\bkmkstart AAAAAAAAKT}
{\bkmkend AAAAAAAAKT}
\cell }{\cell }{\row }
{\xe \v POPULATE_SPURWATABLE\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:POPULATE_SPURWATABLE}
{\qr POPULATE_SPURWATABLE{\bkmkstart AAAAAAAAKU}
{\bkmkend AAAAAAAAKU}
\cell }{\cell }{\row }
{\xe \v POPRFTCSENSLUTS\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:POPRFTCSENSLUTS}
{\qr POPRFTCSENSLUTS{\bkmkstart AAAAAAAAKV}
{\bkmkend AAAAAAAAKV}
\cell }{\cell }{\row }
{\xe \v BLOCKPERMALOCK\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:BLOCKPERMALOCK}
{\qr BLOCKPERMALOCK{\bkmkstart AAAAAAAAKW}
{\bkmkend AAAAAAAAKW}
\cell }{\cell }{\row }
{\xe \v CUSTOMM4QT\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:CUSTOMM4QT}
{\qr CUSTOMM4QT{\bkmkstart AAAAAAAAKX}
{\bkmkend AAAAAAAAKX}
\cell }{\cell }{\row }
{\xe \v CUSTOMG2XREADPROTECT\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:CUSTOMG2XREADPROTECT}
{\qr CUSTOMG2XREADPROTECT{\bkmkstart AAAAAAAAKY}
{\bkmkend AAAAAAAAKY}
\cell }{\cell }{\row }
{\xe \v CUSTOMG2XRESETREADPROTECT\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:CUSTOMG2XRESETREADPROTECT}
{\qr CUSTOMG2XRESETREADPROTECT{\bkmkstart AAAAAAAAKZ}
{\bkmkend AAAAAAAAKZ}
\cell }{\cell }{\row }
{\xe \v CUSTOMG2XCHANGEEAS\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:CUSTOMG2XCHANGEEAS}
{\qr CUSTOMG2XCHANGEEAS{\bkmkstart AAAAAAAALA}
{\bkmkend AAAAAAAALA}
\cell }{\cell }{\row }
{\xe \v CUSTOMG2XEASALARM\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:CUSTOMG2XEASALARM}
{\qr CUSTOMG2XEASALARM{\bkmkstart AAAAAAAALB}
{\bkmkend AAAAAAAALB}
\cell }{\cell }{\row }
{\xe \v CUSTOMG2XCHANGECONFIG\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:CUSTOMG2XCHANGECONFIG}
{\qr CUSTOMG2XCHANGECONFIG{\bkmkstart AAAAAAAALC}
{\bkmkend AAAAAAAALC}
\cell }{\cell }{\row }
{\xe \v CUSTOMSLSETPASSWORD\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:CUSTOMSLSETPASSWORD}
{\qr CUSTOMSLSETPASSWORD{\bkmkstart AAAAAAAALD}
{\bkmkend AAAAAAAALD}
\cell }{\cell }{\row }
{\xe \v CUSTOMSLSETLOGMODE\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:CUSTOMSLSETLOGMODE}
{\qr CUSTOMSLSETLOGMODE{\bkmkstart AAAAAAAALE}
{\bkmkend AAAAAAAALE}
\cell }{\cell }{\row }
{\xe \v CUSTOMSLSETLOGLIMITS\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:CUSTOMSLSETLOGLIMITS}
{\qr CUSTOMSLSETLOGLIMITS{\bkmkstart AAAAAAAALF}
{\bkmkend AAAAAAAALF}
\cell }{\cell }{\row }
{\xe \v CUSTOMSLGETMEASUREMENTSETUP\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:CUSTOMSLGETMEASUREMENTSETUP}
{\qr CUSTOMSLGETMEASUREMENTSETUP{\bkmkstart AAAAAAAALG}
{\bkmkend AAAAAAAALG}
\cell }{\cell }{\row }
{\xe \v CUSTOMSLSETSFEPARA\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:CUSTOMSLSETSFEPARA}
{\qr CUSTOMSLSETSFEPARA{\bkmkstart AAAAAAAALH}
{\bkmkend AAAAAAAALH}
\cell }{\cell }{\row }
{\xe \v CUSTOMSLSETCALDATA\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:CUSTOMSLSETCALDATA}
{\qr CUSTOMSLSETCALDATA{\bkmkstart AAAAAAAALI}
{\bkmkend AAAAAAAALI}
\cell }{\cell }{\row }
{\xe \v CUSTOMSLENDLOG\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:CUSTOMSLENDLOG}
{\qr CUSTOMSLENDLOG{\bkmkstart AAAAAAAALJ}
{\bkmkend AAAAAAAALJ}
\cell }{\cell }{\row }
{\xe \v CUSTOMSLSTARTLOG\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:CUSTOMSLSTARTLOG}
{\qr CUSTOMSLSTARTLOG{\bkmkstart AAAAAAAALK}
{\bkmkend AAAAAAAALK}
\cell }{\cell }{\row }
{\xe \v CUSTOMSLGETLOGSTATE\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:CUSTOMSLGETLOGSTATE}
{\qr CUSTOMSLGETLOGSTATE{\bkmkstart AAAAAAAALL}
{\bkmkend AAAAAAAALL}
\cell }{\cell }{\row }
{\xe \v CUSTOMSLGETCALDATA\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:CUSTOMSLGETCALDATA}
{\qr CUSTOMSLGETCALDATA{\bkmkstart AAAAAAAALM}
{\bkmkend AAAAAAAALM}
\cell }{\cell }{\row }
{\xe \v CUSTOMSLGETBATLV\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:CUSTOMSLGETBATLV}
{\qr CUSTOMSLGETBATLV{\bkmkstart AAAAAAAALN}
{\bkmkend AAAAAAAALN}
\cell }{\cell }{\row }
{\xe \v CUSTOMSLSETSHELFLIFE\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:CUSTOMSLSETSHELFLIFE}
{\qr CUSTOMSLSETSHELFLIFE{\bkmkstart AAAAAAAALO}
{\bkmkend AAAAAAAALO}
\cell }{\cell }{\row }
{\xe \v CUSTOMSLINIT\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:CUSTOMSLINIT}
{\qr CUSTOMSLINIT{\bkmkstart AAAAAAAALP}
{\bkmkend AAAAAAAALP}
\cell }{\cell }{\row }
{\xe \v CUSTOMSLGETSENSORVALUE\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:CUSTOMSLGETSENSORVALUE}
{\qr CUSTOMSLGETSENSORVALUE{\bkmkstart AAAAAAAALQ}
{\bkmkend AAAAAAAALQ}
\cell }{\cell }{\row }
{\xe \v CUSTOMSLOPENAREA\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:CUSTOMSLOPENAREA}
{\qr CUSTOMSLOPENAREA{\bkmkstart AAAAAAAALR}
{\bkmkend AAAAAAAALR}
\cell }{\cell }{\row }
{\xe \v CUSTOMSLACCESSFIFO\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:CUSTOMSLACCESSFIFO}
{\qr CUSTOMSLACCESSFIFO{\bkmkstart AAAAAAAALS}
{\bkmkend AAAAAAAALS}
\cell }{\cell }{\row }
{\xe \v CUSTOMEM4324GETUID\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:CUSTOMEM4324GETUID}
{\qr CUSTOMEM4324GETUID{\bkmkstart AAAAAAAALT}
{\bkmkend AAAAAAAALT}
\cell }{\cell }{\row }
{\xe \v CUSTOMEM4325GETUID\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:CUSTOMEM4325GETUID}
{\qr CUSTOMEM4325GETUID{\bkmkstart AAAAAAAALU}
{\bkmkend AAAAAAAALU}
\cell }{\cell }{\row }
{\xe \v CUSTOMEMGETSENSORDATA\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:CUSTOMEMGETSENSORDATA}
{\qr CUSTOMEMGETSENSORDATA{\bkmkstart AAAAAAAALV}
{\bkmkend AAAAAAAALV}
\cell }{\cell }{\row }
{\xe \v CUSTOMEMRESETALARMS\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:CUSTOMEMRESETALARMS}
{\qr CUSTOMEMRESETALARMS{\bkmkstart AAAAAAAALW}
{\bkmkend AAAAAAAALW}
\cell }{\cell }{\row }
{\xe \v CUSTOMEMSENDSPI\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:CUSTOMEMSENDSPI}
{\qr CUSTOMEMSENDSPI{\bkmkstart AAAAAAAALX}
{\bkmkend AAAAAAAALX}
\cell }{\cell }{\row }
{\xe \v CMD_END\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:CMD_END}
{\qr CMD_END{\bkmkstart AAAAAAAALY}
{\bkmkend AAAAAAAALY}
\cell }{\cell }{\row }
{\xe \v NV_MEM_UPDATE\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:NV_MEM_UPDATE}
{\qr NV_MEM_UPDATE{\bkmkstart AAAAAAAAJW}
{\bkmkend AAAAAAAAJW}
\cell }{\cell }{\row }
{\xe \v WROEM\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:WROEM}
{\qr WROEM{\bkmkstart AAAAAAAAJX}
{\bkmkend AAAAAAAAJX}
\cell }{\cell }{\row }
{\xe \v RDOEM\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:RDOEM}
{\qr RDOEM{\bkmkstart AAAAAAAAJY}
{\bkmkend AAAAAAAAJY}
\cell }{\cell }{\row }
{\xe \v ENGTST1\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:ENGTST1}
{\qr ENGTST1{\bkmkstart AAAAAAAAJZ}
{\bkmkend AAAAAAAAJZ}
\cell }{\cell }{\row }
{\xe \v MBPRDREG\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MBPRDREG}
{\qr MBPRDREG{\bkmkstart AAAAAAAAKA}
{\bkmkend AAAAAAAAKA}
\cell }{\cell }{\row }
{\xe \v MBPWRREG\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MBPWRREG}
{\qr MBPWRREG{\bkmkstart AAAAAAAAKB}
{\bkmkend AAAAAAAAKB}
\cell }{\cell }{\row }
{\xe \v RDGPIO\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:RDGPIO}
{\qr RDGPIO{\bkmkstart AAAAAAAAKC}
{\bkmkend AAAAAAAAKC}
\cell }{\cell }{\row }
{\xe \v WRGPIO\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:WRGPIO}
{\qr WRGPIO{\bkmkstart AAAAAAAAKD}
{\bkmkend AAAAAAAAKD}
\cell }{\cell }{\row }
{\xe \v CFGGPIO\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:CFGGPIO}
{\qr CFGGPIO{\bkmkstart AAAAAAAAKE}
{\bkmkend AAAAAAAAKE}
\cell }{\cell }{\row }
{\xe \v INV\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:INV}
{\qr INV{\bkmkstart AAAAAAAAKF}
{\bkmkend AAAAAAAAKF}
\cell }{\cell }{\row }
{\xe \v READ\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:READ}
{\qr READ{\bkmkstart AAAAAAAAKG}
{\bkmkend AAAAAAAAKG}
\cell }{\cell }{\row }
{\xe \v WRITE\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:WRITE}
{\qr WRITE{\bkmkstart AAAAAAAAKH}
{\bkmkend AAAAAAAAKH}
\cell }{\cell }{\row }
{\xe \v LOCK\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:LOCK}
{\qr LOCK{\bkmkstart AAAAAAAAKI}
{\bkmkend AAAAAAAAKI}
\cell }{\cell }{\row }
{\xe \v KILL\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:KILL}
{\qr KILL{\bkmkstart AAAAAAAAKJ}
{\bkmkend AAAAAAAAKJ}
\cell }{\cell }{\row }
{\xe \v SETPWRMGMTCFG\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:SETPWRMGMTCFG}
{\qr SETPWRMGMTCFG{\bkmkstart AAAAAAAAKK}
{\bkmkend AAAAAAAAKK}
\cell }{\cell }{\row }
{\xe \v CLRERR\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:CLRERR}
{\qr CLRERR{\bkmkstart AAAAAAAAKL}
{\bkmkend AAAAAAAAKL}
\cell }{\cell }{\row }
{\xe \v CWON\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:CWON}
{\qr CWON{\bkmkstart AAAAAAAAKM}
{\bkmkend AAAAAAAAKM}
\cell }{\cell }{\row }
{\xe \v CWOFF\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:CWOFF}
{\qr CWOFF{\bkmkstart AAAAAAAAKN}
{\bkmkend AAAAAAAAKN}
\cell }{\cell }{\row }
{\xe \v UPDATELINKPROFILE\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:UPDATELINKPROFILE}
{\qr UPDATELINKPROFILE{\bkmkstart AAAAAAAAKO}
{\bkmkend AAAAAAAAKO}
\cell }{\cell }{\row }
{\xe \v CALIBRATE_GG\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:CALIBRATE_GG}
{\qr CALIBRATE_GG{\bkmkstart AAAAAAAAKP}
{\bkmkend AAAAAAAAKP}
\cell }{\cell }{\row }
{\xe \v LPROF_RDXCVRREG\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:LPROF_RDXCVRREG}
{\qr LPROF_RDXCVRREG{\bkmkstart AAAAAAAAKQ}
{\bkmkend AAAAAAAAKQ}
\cell }{\cell }{\row }
{\xe \v LPROF_WRXCVRREG\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:LPROF_WRXCVRREG}
{\qr LPROF_WRXCVRREG{\bkmkstart AAAAAAAAKR}
{\bkmkend AAAAAAAAKR}
\cell }{\cell }{\row }
{\xe \v BLOCKERASE\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:BLOCKERASE}
{\qr BLOCKERASE{\bkmkstart AAAAAAAAKS}
{\bkmkend AAAAAAAAKS}
\cell }{\cell }{\row }
{\xe \v BLOCKWRITE\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:BLOCKWRITE}
{\qr BLOCKWRITE{\bkmkstart AAAAAAAAKT}
{\bkmkend AAAAAAAAKT}
\cell }{\cell }{\row }
{\xe \v POPULATE_SPURWATABLE\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:POPULATE_SPURWATABLE}
{\qr POPULATE_SPURWATABLE{\bkmkstart AAAAAAAAKU}
{\bkmkend AAAAAAAAKU}
\cell }{\cell }{\row }
{\xe \v POPRFTCSENSLUTS\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:POPRFTCSENSLUTS}
{\qr POPRFTCSENSLUTS{\bkmkstart AAAAAAAAKV}
{\bkmkend AAAAAAAAKV}
\cell }{\cell }{\row }
{\xe \v BLOCKPERMALOCK\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:BLOCKPERMALOCK}
{\qr BLOCKPERMALOCK{\bkmkstart AAAAAAAAKW}
{\bkmkend AAAAAAAAKW}
\cell }{\cell }{\row }
{\xe \v CUSTOMM4QT\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:CUSTOMM4QT}
{\qr CUSTOMM4QT{\bkmkstart AAAAAAAAKX}
{\bkmkend AAAAAAAAKX}
\cell }{\cell }{\row }
{\xe \v CUSTOMG2XREADPROTECT\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:CUSTOMG2XREADPROTECT}
{\qr CUSTOMG2XREADPROTECT{\bkmkstart AAAAAAAAKY}
{\bkmkend AAAAAAAAKY}
\cell }{\cell }{\row }
{\xe \v CUSTOMG2XRESETREADPROTECT\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:CUSTOMG2XRESETREADPROTECT}
{\qr CUSTOMG2XRESETREADPROTECT{\bkmkstart AAAAAAAAKZ}
{\bkmkend AAAAAAAAKZ}
\cell }{\cell }{\row }
{\xe \v CUSTOMG2XCHANGEEAS\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:CUSTOMG2XCHANGEEAS}
{\qr CUSTOMG2XCHANGEEAS{\bkmkstart AAAAAAAALA}
{\bkmkend AAAAAAAALA}
\cell }{\cell }{\row }
{\xe \v CUSTOMG2XEASALARM\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:CUSTOMG2XEASALARM}
{\qr CUSTOMG2XEASALARM{\bkmkstart AAAAAAAALB}
{\bkmkend AAAAAAAALB}
\cell }{\cell }{\row }
{\xe \v CUSTOMG2XCHANGECONFIG\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:CUSTOMG2XCHANGECONFIG}
{\qr CUSTOMG2XCHANGECONFIG{\bkmkstart AAAAAAAALC}
{\bkmkend AAAAAAAALC}
\cell }{\cell }{\row }
{\xe \v CUSTOMSLSETPASSWORD\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:CUSTOMSLSETPASSWORD}
{\qr CUSTOMSLSETPASSWORD{\bkmkstart AAAAAAAALD}
{\bkmkend AAAAAAAALD}
\cell }{\cell }{\row }
{\xe \v CUSTOMSLSETLOGMODE\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:CUSTOMSLSETLOGMODE}
{\qr CUSTOMSLSETLOGMODE{\bkmkstart AAAAAAAALE}
{\bkmkend AAAAAAAALE}
\cell }{\cell }{\row }
{\xe \v CUSTOMSLSETLOGLIMITS\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:CUSTOMSLSETLOGLIMITS}
{\qr CUSTOMSLSETLOGLIMITS{\bkmkstart AAAAAAAALF}
{\bkmkend AAAAAAAALF}
\cell }{\cell }{\row }
{\xe \v CUSTOMSLGETMEASUREMENTSETUP\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:CUSTOMSLGETMEASUREMENTSETUP}
{\qr CUSTOMSLGETMEASUREMENTSETUP{\bkmkstart AAAAAAAALG}
{\bkmkend AAAAAAAALG}
\cell }{\cell }{\row }
{\xe \v CUSTOMSLSETSFEPARA\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:CUSTOMSLSETSFEPARA}
{\qr CUSTOMSLSETSFEPARA{\bkmkstart AAAAAAAALH}
{\bkmkend AAAAAAAALH}
\cell }{\cell }{\row }
{\xe \v CUSTOMSLSETCALDATA\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:CUSTOMSLSETCALDATA}
{\qr CUSTOMSLSETCALDATA{\bkmkstart AAAAAAAALI}
{\bkmkend AAAAAAAALI}
\cell }{\cell }{\row }
{\xe \v CUSTOMSLENDLOG\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:CUSTOMSLENDLOG}
{\qr CUSTOMSLENDLOG{\bkmkstart AAAAAAAALJ}
{\bkmkend AAAAAAAALJ}
\cell }{\cell }{\row }
{\xe \v CUSTOMSLSTARTLOG\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:CUSTOMSLSTARTLOG}
{\qr CUSTOMSLSTARTLOG{\bkmkstart AAAAAAAALK}
{\bkmkend AAAAAAAALK}
\cell }{\cell }{\row }
{\xe \v CUSTOMSLGETLOGSTATE\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:CUSTOMSLGETLOGSTATE}
{\qr CUSTOMSLGETLOGSTATE{\bkmkstart AAAAAAAALL}
{\bkmkend AAAAAAAALL}
\cell }{\cell }{\row }
{\xe \v CUSTOMSLGETCALDATA\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:CUSTOMSLGETCALDATA}
{\qr CUSTOMSLGETCALDATA{\bkmkstart AAAAAAAALM}
{\bkmkend AAAAAAAALM}
\cell }{\cell }{\row }
{\xe \v CUSTOMSLGETBATLV\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:CUSTOMSLGETBATLV}
{\qr CUSTOMSLGETBATLV{\bkmkstart AAAAAAAALN}
{\bkmkend AAAAAAAALN}
\cell }{\cell }{\row }
{\xe \v CUSTOMSLSETSHELFLIFE\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:CUSTOMSLSETSHELFLIFE}
{\qr CUSTOMSLSETSHELFLIFE{\bkmkstart AAAAAAAALO}
{\bkmkend AAAAAAAALO}
\cell }{\cell }{\row }
{\xe \v CUSTOMSLINIT\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:CUSTOMSLINIT}
{\qr CUSTOMSLINIT{\bkmkstart AAAAAAAALP}
{\bkmkend AAAAAAAALP}
\cell }{\cell }{\row }
{\xe \v CUSTOMSLGETSENSORVALUE\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:CUSTOMSLGETSENSORVALUE}
{\qr CUSTOMSLGETSENSORVALUE{\bkmkstart AAAAAAAALQ}
{\bkmkend AAAAAAAALQ}
\cell }{\cell }{\row }
{\xe \v CUSTOMSLOPENAREA\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:CUSTOMSLOPENAREA}
{\qr CUSTOMSLOPENAREA{\bkmkstart AAAAAAAALR}
{\bkmkend AAAAAAAALR}
\cell }{\cell }{\row }
{\xe \v CUSTOMSLACCESSFIFO\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:CUSTOMSLACCESSFIFO}
{\qr CUSTOMSLACCESSFIFO{\bkmkstart AAAAAAAALS}
{\bkmkend AAAAAAAALS}
\cell }{\cell }{\row }
{\xe \v CUSTOMEM4324GETUID\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:CUSTOMEM4324GETUID}
{\qr CUSTOMEM4324GETUID{\bkmkstart AAAAAAAALT}
{\bkmkend AAAAAAAALT}
\cell }{\cell }{\row }
{\xe \v CUSTOMEM4325GETUID\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:CUSTOMEM4325GETUID}
{\qr CUSTOMEM4325GETUID{\bkmkstart AAAAAAAALU}
{\bkmkend AAAAAAAALU}
\cell }{\cell }{\row }
{\xe \v CUSTOMEMGETSENSORDATA\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:CUSTOMEMGETSENSORDATA}
{\qr CUSTOMEMGETSENSORDATA{\bkmkstart AAAAAAAALV}
{\bkmkend AAAAAAAALV}
\cell }{\cell }{\row }
{\xe \v CUSTOMEMRESETALARMS\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:CUSTOMEMRESETALARMS}
{\qr CUSTOMEMRESETALARMS{\bkmkstart AAAAAAAALW}
{\bkmkend AAAAAAAALW}
\cell }{\cell }{\row }
{\xe \v CUSTOMEMSENDSPI\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:CUSTOMEMSENDSPI}
{\qr CUSTOMEMSENDSPI{\bkmkstart AAAAAAAALX}
{\bkmkend AAAAAAAALX}
\cell }{\cell }{\row }
{\xe \v CMD_END\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:CMD_END}
{\qr CMD_END{\bkmkstart AAAAAAAALY}
{\bkmkend AAAAAAAALY}
\cell }{\cell }{\row }
}
}
{\xe \v HST_CMD\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_CMD}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b CSLibrary.RFIDReader.HST_CMD} : uint{\f2 [strong]}, {\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAJV}
{\bkmkend AAAAAAAAJV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v NV_MEM_UPDATE\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:NV_MEM_UPDATE}
{\qr NV_MEM_UPDATE{\bkmkstart AAAAAAAAJW}
{\bkmkend AAAAAAAAJW}
\cell }{\cell }{\row }
{\xe \v WROEM\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:WROEM}
{\qr WROEM{\bkmkstart AAAAAAAAJX}
{\bkmkend AAAAAAAAJX}
\cell }{\cell }{\row }
{\xe \v RDOEM\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:RDOEM}
{\qr RDOEM{\bkmkstart AAAAAAAAJY}
{\bkmkend AAAAAAAAJY}
\cell }{\cell }{\row }
{\xe \v ENGTST1\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:ENGTST1}
{\qr ENGTST1{\bkmkstart AAAAAAAAJZ}
{\bkmkend AAAAAAAAJZ}
\cell }{\cell }{\row }
{\xe \v MBPRDREG\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MBPRDREG}
{\qr MBPRDREG{\bkmkstart AAAAAAAAKA}
{\bkmkend AAAAAAAAKA}
\cell }{\cell }{\row }
{\xe \v MBPWRREG\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MBPWRREG}
{\qr MBPWRREG{\bkmkstart AAAAAAAAKB}
{\bkmkend AAAAAAAAKB}
\cell }{\cell }{\row }
{\xe \v RDGPIO\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:RDGPIO}
{\qr RDGPIO{\bkmkstart AAAAAAAAKC}
{\bkmkend AAAAAAAAKC}
\cell }{\cell }{\row }
{\xe \v WRGPIO\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:WRGPIO}
{\qr WRGPIO{\bkmkstart AAAAAAAAKD}
{\bkmkend AAAAAAAAKD}
\cell }{\cell }{\row }
{\xe \v CFGGPIO\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:CFGGPIO}
{\qr CFGGPIO{\bkmkstart AAAAAAAAKE}
{\bkmkend AAAAAAAAKE}
\cell }{\cell }{\row }
{\xe \v INV\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:INV}
{\qr INV{\bkmkstart AAAAAAAAKF}
{\bkmkend AAAAAAAAKF}
\cell }{\cell }{\row }
{\xe \v READ\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:READ}
{\qr READ{\bkmkstart AAAAAAAAKG}
{\bkmkend AAAAAAAAKG}
\cell }{\cell }{\row }
{\xe \v WRITE\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:WRITE}
{\qr WRITE{\bkmkstart AAAAAAAAKH}
{\bkmkend AAAAAAAAKH}
\cell }{\cell }{\row }
{\xe \v LOCK\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:LOCK}
{\qr LOCK{\bkmkstart AAAAAAAAKI}
{\bkmkend AAAAAAAAKI}
\cell }{\cell }{\row }
{\xe \v KILL\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:KILL}
{\qr KILL{\bkmkstart AAAAAAAAKJ}
{\bkmkend AAAAAAAAKJ}
\cell }{\cell }{\row }
{\xe \v SETPWRMGMTCFG\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:SETPWRMGMTCFG}
{\qr SETPWRMGMTCFG{\bkmkstart AAAAAAAAKK}
{\bkmkend AAAAAAAAKK}
\cell }{\cell }{\row }
{\xe \v CLRERR\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:CLRERR}
{\qr CLRERR{\bkmkstart AAAAAAAAKL}
{\bkmkend AAAAAAAAKL}
\cell }{\cell }{\row }
{\xe \v CWON\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:CWON}
{\qr CWON{\bkmkstart AAAAAAAAKM}
{\bkmkend AAAAAAAAKM}
\cell }{\cell }{\row }
{\xe \v CWOFF\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:CWOFF}
{\qr CWOFF{\bkmkstart AAAAAAAAKN}
{\bkmkend AAAAAAAAKN}
\cell }{\cell }{\row }
{\xe \v UPDATELINKPROFILE\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:UPDATELINKPROFILE}
{\qr UPDATELINKPROFILE{\bkmkstart AAAAAAAAKO}
{\bkmkend AAAAAAAAKO}
\cell }{\cell }{\row }
{\xe \v CALIBRATE_GG\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:CALIBRATE_GG}
{\qr CALIBRATE_GG{\bkmkstart AAAAAAAAKP}
{\bkmkend AAAAAAAAKP}
\cell }{\cell }{\row }
{\xe \v LPROF_RDXCVRREG\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:LPROF_RDXCVRREG}
{\qr LPROF_RDXCVRREG{\bkmkstart AAAAAAAAKQ}
{\bkmkend AAAAAAAAKQ}
\cell }{\cell }{\row }
{\xe \v LPROF_WRXCVRREG\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:LPROF_WRXCVRREG}
{\qr LPROF_WRXCVRREG{\bkmkstart AAAAAAAAKR}
{\bkmkend AAAAAAAAKR}
\cell }{\cell }{\row }
{\xe \v BLOCKERASE\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:BLOCKERASE}
{\qr BLOCKERASE{\bkmkstart AAAAAAAAKS}
{\bkmkend AAAAAAAAKS}
\cell }{\cell }{\row }
{\xe \v BLOCKWRITE\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:BLOCKWRITE}
{\qr BLOCKWRITE{\bkmkstart AAAAAAAAKT}
{\bkmkend AAAAAAAAKT}
\cell }{\cell }{\row }
{\xe \v POPULATE_SPURWATABLE\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:POPULATE_SPURWATABLE}
{\qr POPULATE_SPURWATABLE{\bkmkstart AAAAAAAAKU}
{\bkmkend AAAAAAAAKU}
\cell }{\cell }{\row }
{\xe \v POPRFTCSENSLUTS\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:POPRFTCSENSLUTS}
{\qr POPRFTCSENSLUTS{\bkmkstart AAAAAAAAKV}
{\bkmkend AAAAAAAAKV}
\cell }{\cell }{\row }
{\xe \v BLOCKPERMALOCK\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:BLOCKPERMALOCK}
{\qr BLOCKPERMALOCK{\bkmkstart AAAAAAAAKW}
{\bkmkend AAAAAAAAKW}
\cell }{\cell }{\row }
{\xe \v CUSTOMM4QT\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:CUSTOMM4QT}
{\qr CUSTOMM4QT{\bkmkstart AAAAAAAAKX}
{\bkmkend AAAAAAAAKX}
\cell }{\cell }{\row }
{\xe \v CUSTOMG2XREADPROTECT\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:CUSTOMG2XREADPROTECT}
{\qr CUSTOMG2XREADPROTECT{\bkmkstart AAAAAAAAKY}
{\bkmkend AAAAAAAAKY}
\cell }{\cell }{\row }
{\xe \v CUSTOMG2XRESETREADPROTECT\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:CUSTOMG2XRESETREADPROTECT}
{\qr CUSTOMG2XRESETREADPROTECT{\bkmkstart AAAAAAAAKZ}
{\bkmkend AAAAAAAAKZ}
\cell }{\cell }{\row }
{\xe \v CUSTOMG2XCHANGEEAS\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:CUSTOMG2XCHANGEEAS}
{\qr CUSTOMG2XCHANGEEAS{\bkmkstart AAAAAAAALA}
{\bkmkend AAAAAAAALA}
\cell }{\cell }{\row }
{\xe \v CUSTOMG2XEASALARM\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:CUSTOMG2XEASALARM}
{\qr CUSTOMG2XEASALARM{\bkmkstart AAAAAAAALB}
{\bkmkend AAAAAAAALB}
\cell }{\cell }{\row }
{\xe \v CUSTOMG2XCHANGECONFIG\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:CUSTOMG2XCHANGECONFIG}
{\qr CUSTOMG2XCHANGECONFIG{\bkmkstart AAAAAAAALC}
{\bkmkend AAAAAAAALC}
\cell }{\cell }{\row }
{\xe \v CUSTOMSLSETPASSWORD\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:CUSTOMSLSETPASSWORD}
{\qr CUSTOMSLSETPASSWORD{\bkmkstart AAAAAAAALD}
{\bkmkend AAAAAAAALD}
\cell }{\cell }{\row }
{\xe \v CUSTOMSLSETLOGMODE\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:CUSTOMSLSETLOGMODE}
{\qr CUSTOMSLSETLOGMODE{\bkmkstart AAAAAAAALE}
{\bkmkend AAAAAAAALE}
\cell }{\cell }{\row }
{\xe \v CUSTOMSLSETLOGLIMITS\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:CUSTOMSLSETLOGLIMITS}
{\qr CUSTOMSLSETLOGLIMITS{\bkmkstart AAAAAAAALF}
{\bkmkend AAAAAAAALF}
\cell }{\cell }{\row }
{\xe \v CUSTOMSLGETMEASUREMENTSETUP\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:CUSTOMSLGETMEASUREMENTSETUP}
{\qr CUSTOMSLGETMEASUREMENTSETUP{\bkmkstart AAAAAAAALG}
{\bkmkend AAAAAAAALG}
\cell }{\cell }{\row }
{\xe \v CUSTOMSLSETSFEPARA\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:CUSTOMSLSETSFEPARA}
{\qr CUSTOMSLSETSFEPARA{\bkmkstart AAAAAAAALH}
{\bkmkend AAAAAAAALH}
\cell }{\cell }{\row }
{\xe \v CUSTOMSLSETCALDATA\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:CUSTOMSLSETCALDATA}
{\qr CUSTOMSLSETCALDATA{\bkmkstart AAAAAAAALI}
{\bkmkend AAAAAAAALI}
\cell }{\cell }{\row }
{\xe \v CUSTOMSLENDLOG\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:CUSTOMSLENDLOG}
{\qr CUSTOMSLENDLOG{\bkmkstart AAAAAAAALJ}
{\bkmkend AAAAAAAALJ}
\cell }{\cell }{\row }
{\xe \v CUSTOMSLSTARTLOG\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:CUSTOMSLSTARTLOG}
{\qr CUSTOMSLSTARTLOG{\bkmkstart AAAAAAAALK}
{\bkmkend AAAAAAAALK}
\cell }{\cell }{\row }
{\xe \v CUSTOMSLGETLOGSTATE\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:CUSTOMSLGETLOGSTATE}
{\qr CUSTOMSLGETLOGSTATE{\bkmkstart AAAAAAAALL}
{\bkmkend AAAAAAAALL}
\cell }{\cell }{\row }
{\xe \v CUSTOMSLGETCALDATA\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:CUSTOMSLGETCALDATA}
{\qr CUSTOMSLGETCALDATA{\bkmkstart AAAAAAAALM}
{\bkmkend AAAAAAAALM}
\cell }{\cell }{\row }
{\xe \v CUSTOMSLGETBATLV\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:CUSTOMSLGETBATLV}
{\qr CUSTOMSLGETBATLV{\bkmkstart AAAAAAAALN}
{\bkmkend AAAAAAAALN}
\cell }{\cell }{\row }
{\xe \v CUSTOMSLSETSHELFLIFE\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:CUSTOMSLSETSHELFLIFE}
{\qr CUSTOMSLSETSHELFLIFE{\bkmkstart AAAAAAAALO}
{\bkmkend AAAAAAAALO}
\cell }{\cell }{\row }
{\xe \v CUSTOMSLINIT\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:CUSTOMSLINIT}
{\qr CUSTOMSLINIT{\bkmkstart AAAAAAAALP}
{\bkmkend AAAAAAAALP}
\cell }{\cell }{\row }
{\xe \v CUSTOMSLGETSENSORVALUE\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:CUSTOMSLGETSENSORVALUE}
{\qr CUSTOMSLGETSENSORVALUE{\bkmkstart AAAAAAAALQ}
{\bkmkend AAAAAAAALQ}
\cell }{\cell }{\row }
{\xe \v CUSTOMSLOPENAREA\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:CUSTOMSLOPENAREA}
{\qr CUSTOMSLOPENAREA{\bkmkstart AAAAAAAALR}
{\bkmkend AAAAAAAALR}
\cell }{\cell }{\row }
{\xe \v CUSTOMSLACCESSFIFO\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:CUSTOMSLACCESSFIFO}
{\qr CUSTOMSLACCESSFIFO{\bkmkstart AAAAAAAALS}
{\bkmkend AAAAAAAALS}
\cell }{\cell }{\row }
{\xe \v CUSTOMEM4324GETUID\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:CUSTOMEM4324GETUID}
{\qr CUSTOMEM4324GETUID{\bkmkstart AAAAAAAALT}
{\bkmkend AAAAAAAALT}
\cell }{\cell }{\row }
{\xe \v CUSTOMEM4325GETUID\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:CUSTOMEM4325GETUID}
{\qr CUSTOMEM4325GETUID{\bkmkstart AAAAAAAALU}
{\bkmkend AAAAAAAALU}
\cell }{\cell }{\row }
{\xe \v CUSTOMEMGETSENSORDATA\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:CUSTOMEMGETSENSORDATA}
{\qr CUSTOMEMGETSENSORDATA{\bkmkstart AAAAAAAALV}
{\bkmkend AAAAAAAALV}
\cell }{\cell }{\row }
{\xe \v CUSTOMEMRESETALARMS\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:CUSTOMEMRESETALARMS}
{\qr CUSTOMEMRESETALARMS{\bkmkstart AAAAAAAALW}
{\bkmkend AAAAAAAALW}
\cell }{\cell }{\row }
{\xe \v CUSTOMEMSENDSPI\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:CUSTOMEMSENDSPI}
{\qr CUSTOMEMSENDSPI{\bkmkstart AAAAAAAALX}
{\bkmkend AAAAAAAALX}
\cell }{\cell }{\row }
{\xe \v CMD_END\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:CMD_END}
{\qr CMD_END{\bkmkstart AAAAAAAALY}
{\bkmkend AAAAAAAALY}
\cell }{\cell }{\row }
{\xe \v NV_MEM_UPDATE\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:NV_MEM_UPDATE}
{\qr NV_MEM_UPDATE{\bkmkstart AAAAAAAAJW}
{\bkmkend AAAAAAAAJW}
\cell }{\cell }{\row }
{\xe \v WROEM\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:WROEM}
{\qr WROEM{\bkmkstart AAAAAAAAJX}
{\bkmkend AAAAAAAAJX}
\cell }{\cell }{\row }
{\xe \v RDOEM\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:RDOEM}
{\qr RDOEM{\bkmkstart AAAAAAAAJY}
{\bkmkend AAAAAAAAJY}
\cell }{\cell }{\row }
{\xe \v ENGTST1\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:ENGTST1}
{\qr ENGTST1{\bkmkstart AAAAAAAAJZ}
{\bkmkend AAAAAAAAJZ}
\cell }{\cell }{\row }
{\xe \v MBPRDREG\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MBPRDREG}
{\qr MBPRDREG{\bkmkstart AAAAAAAAKA}
{\bkmkend AAAAAAAAKA}
\cell }{\cell }{\row }
{\xe \v MBPWRREG\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MBPWRREG}
{\qr MBPWRREG{\bkmkstart AAAAAAAAKB}
{\bkmkend AAAAAAAAKB}
\cell }{\cell }{\row }
{\xe \v RDGPIO\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:RDGPIO}
{\qr RDGPIO{\bkmkstart AAAAAAAAKC}
{\bkmkend AAAAAAAAKC}
\cell }{\cell }{\row }
{\xe \v WRGPIO\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:WRGPIO}
{\qr WRGPIO{\bkmkstart AAAAAAAAKD}
{\bkmkend AAAAAAAAKD}
\cell }{\cell }{\row }
{\xe \v CFGGPIO\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:CFGGPIO}
{\qr CFGGPIO{\bkmkstart AAAAAAAAKE}
{\bkmkend AAAAAAAAKE}
\cell }{\cell }{\row }
{\xe \v INV\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:INV}
{\qr INV{\bkmkstart AAAAAAAAKF}
{\bkmkend AAAAAAAAKF}
\cell }{\cell }{\row }
{\xe \v READ\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:READ}
{\qr READ{\bkmkstart AAAAAAAAKG}
{\bkmkend AAAAAAAAKG}
\cell }{\cell }{\row }
{\xe \v WRITE\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:WRITE}
{\qr WRITE{\bkmkstart AAAAAAAAKH}
{\bkmkend AAAAAAAAKH}
\cell }{\cell }{\row }
{\xe \v LOCK\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:LOCK}
{\qr LOCK{\bkmkstart AAAAAAAAKI}
{\bkmkend AAAAAAAAKI}
\cell }{\cell }{\row }
{\xe \v KILL\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:KILL}
{\qr KILL{\bkmkstart AAAAAAAAKJ}
{\bkmkend AAAAAAAAKJ}
\cell }{\cell }{\row }
{\xe \v SETPWRMGMTCFG\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:SETPWRMGMTCFG}
{\qr SETPWRMGMTCFG{\bkmkstart AAAAAAAAKK}
{\bkmkend AAAAAAAAKK}
\cell }{\cell }{\row }
{\xe \v CLRERR\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:CLRERR}
{\qr CLRERR{\bkmkstart AAAAAAAAKL}
{\bkmkend AAAAAAAAKL}
\cell }{\cell }{\row }
{\xe \v CWON\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:CWON}
{\qr CWON{\bkmkstart AAAAAAAAKM}
{\bkmkend AAAAAAAAKM}
\cell }{\cell }{\row }
{\xe \v CWOFF\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:CWOFF}
{\qr CWOFF{\bkmkstart AAAAAAAAKN}
{\bkmkend AAAAAAAAKN}
\cell }{\cell }{\row }
{\xe \v UPDATELINKPROFILE\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:UPDATELINKPROFILE}
{\qr UPDATELINKPROFILE{\bkmkstart AAAAAAAAKO}
{\bkmkend AAAAAAAAKO}
\cell }{\cell }{\row }
{\xe \v CALIBRATE_GG\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:CALIBRATE_GG}
{\qr CALIBRATE_GG{\bkmkstart AAAAAAAAKP}
{\bkmkend AAAAAAAAKP}
\cell }{\cell }{\row }
{\xe \v LPROF_RDXCVRREG\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:LPROF_RDXCVRREG}
{\qr LPROF_RDXCVRREG{\bkmkstart AAAAAAAAKQ}
{\bkmkend AAAAAAAAKQ}
\cell }{\cell }{\row }
{\xe \v LPROF_WRXCVRREG\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:LPROF_WRXCVRREG}
{\qr LPROF_WRXCVRREG{\bkmkstart AAAAAAAAKR}
{\bkmkend AAAAAAAAKR}
\cell }{\cell }{\row }
{\xe \v BLOCKERASE\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:BLOCKERASE}
{\qr BLOCKERASE{\bkmkstart AAAAAAAAKS}
{\bkmkend AAAAAAAAKS}
\cell }{\cell }{\row }
{\xe \v BLOCKWRITE\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:BLOCKWRITE}
{\qr BLOCKWRITE{\bkmkstart AAAAAAAAKT}
{\bkmkend AAAAAAAAKT}
\cell }{\cell }{\row }
{\xe \v POPULATE_SPURWATABLE\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:POPULATE_SPURWATABLE}
{\qr POPULATE_SPURWATABLE{\bkmkstart AAAAAAAAKU}
{\bkmkend AAAAAAAAKU}
\cell }{\cell }{\row }
{\xe \v POPRFTCSENSLUTS\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:POPRFTCSENSLUTS}
{\qr POPRFTCSENSLUTS{\bkmkstart AAAAAAAAKV}
{\bkmkend AAAAAAAAKV}
\cell }{\cell }{\row }
{\xe \v BLOCKPERMALOCK\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:BLOCKPERMALOCK}
{\qr BLOCKPERMALOCK{\bkmkstart AAAAAAAAKW}
{\bkmkend AAAAAAAAKW}
\cell }{\cell }{\row }
{\xe \v CUSTOMM4QT\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:CUSTOMM4QT}
{\qr CUSTOMM4QT{\bkmkstart AAAAAAAAKX}
{\bkmkend AAAAAAAAKX}
\cell }{\cell }{\row }
{\xe \v CUSTOMG2XREADPROTECT\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:CUSTOMG2XREADPROTECT}
{\qr CUSTOMG2XREADPROTECT{\bkmkstart AAAAAAAAKY}
{\bkmkend AAAAAAAAKY}
\cell }{\cell }{\row }
{\xe \v CUSTOMG2XRESETREADPROTECT\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:CUSTOMG2XRESETREADPROTECT}
{\qr CUSTOMG2XRESETREADPROTECT{\bkmkstart AAAAAAAAKZ}
{\bkmkend AAAAAAAAKZ}
\cell }{\cell }{\row }
{\xe \v CUSTOMG2XCHANGEEAS\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:CUSTOMG2XCHANGEEAS}
{\qr CUSTOMG2XCHANGEEAS{\bkmkstart AAAAAAAALA}
{\bkmkend AAAAAAAALA}
\cell }{\cell }{\row }
{\xe \v CUSTOMG2XEASALARM\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:CUSTOMG2XEASALARM}
{\qr CUSTOMG2XEASALARM{\bkmkstart AAAAAAAALB}
{\bkmkend AAAAAAAALB}
\cell }{\cell }{\row }
{\xe \v CUSTOMG2XCHANGECONFIG\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:CUSTOMG2XCHANGECONFIG}
{\qr CUSTOMG2XCHANGECONFIG{\bkmkstart AAAAAAAALC}
{\bkmkend AAAAAAAALC}
\cell }{\cell }{\row }
{\xe \v CUSTOMSLSETPASSWORD\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:CUSTOMSLSETPASSWORD}
{\qr CUSTOMSLSETPASSWORD{\bkmkstart AAAAAAAALD}
{\bkmkend AAAAAAAALD}
\cell }{\cell }{\row }
{\xe \v CUSTOMSLSETLOGMODE\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:CUSTOMSLSETLOGMODE}
{\qr CUSTOMSLSETLOGMODE{\bkmkstart AAAAAAAALE}
{\bkmkend AAAAAAAALE}
\cell }{\cell }{\row }
{\xe \v CUSTOMSLSETLOGLIMITS\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:CUSTOMSLSETLOGLIMITS}
{\qr CUSTOMSLSETLOGLIMITS{\bkmkstart AAAAAAAALF}
{\bkmkend AAAAAAAALF}
\cell }{\cell }{\row }
{\xe \v CUSTOMSLGETMEASUREMENTSETUP\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:CUSTOMSLGETMEASUREMENTSETUP}
{\qr CUSTOMSLGETMEASUREMENTSETUP{\bkmkstart AAAAAAAALG}
{\bkmkend AAAAAAAALG}
\cell }{\cell }{\row }
{\xe \v CUSTOMSLSETSFEPARA\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:CUSTOMSLSETSFEPARA}
{\qr CUSTOMSLSETSFEPARA{\bkmkstart AAAAAAAALH}
{\bkmkend AAAAAAAALH}
\cell }{\cell }{\row }
{\xe \v CUSTOMSLSETCALDATA\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:CUSTOMSLSETCALDATA}
{\qr CUSTOMSLSETCALDATA{\bkmkstart AAAAAAAALI}
{\bkmkend AAAAAAAALI}
\cell }{\cell }{\row }
{\xe \v CUSTOMSLENDLOG\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:CUSTOMSLENDLOG}
{\qr CUSTOMSLENDLOG{\bkmkstart AAAAAAAALJ}
{\bkmkend AAAAAAAALJ}
\cell }{\cell }{\row }
{\xe \v CUSTOMSLSTARTLOG\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:CUSTOMSLSTARTLOG}
{\qr CUSTOMSLSTARTLOG{\bkmkstart AAAAAAAALK}
{\bkmkend AAAAAAAALK}
\cell }{\cell }{\row }
{\xe \v CUSTOMSLGETLOGSTATE\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:CUSTOMSLGETLOGSTATE}
{\qr CUSTOMSLGETLOGSTATE{\bkmkstart AAAAAAAALL}
{\bkmkend AAAAAAAALL}
\cell }{\cell }{\row }
{\xe \v CUSTOMSLGETCALDATA\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:CUSTOMSLGETCALDATA}
{\qr CUSTOMSLGETCALDATA{\bkmkstart AAAAAAAALM}
{\bkmkend AAAAAAAALM}
\cell }{\cell }{\row }
{\xe \v CUSTOMSLGETBATLV\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:CUSTOMSLGETBATLV}
{\qr CUSTOMSLGETBATLV{\bkmkstart AAAAAAAALN}
{\bkmkend AAAAAAAALN}
\cell }{\cell }{\row }
{\xe \v CUSTOMSLSETSHELFLIFE\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:CUSTOMSLSETSHELFLIFE}
{\qr CUSTOMSLSETSHELFLIFE{\bkmkstart AAAAAAAALO}
{\bkmkend AAAAAAAALO}
\cell }{\cell }{\row }
{\xe \v CUSTOMSLINIT\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:CUSTOMSLINIT}
{\qr CUSTOMSLINIT{\bkmkstart AAAAAAAALP}
{\bkmkend AAAAAAAALP}
\cell }{\cell }{\row }
{\xe \v CUSTOMSLGETSENSORVALUE\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:CUSTOMSLGETSENSORVALUE}
{\qr CUSTOMSLGETSENSORVALUE{\bkmkstart AAAAAAAALQ}
{\bkmkend AAAAAAAALQ}
\cell }{\cell }{\row }
{\xe \v CUSTOMSLOPENAREA\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:CUSTOMSLOPENAREA}
{\qr CUSTOMSLOPENAREA{\bkmkstart AAAAAAAALR}
{\bkmkend AAAAAAAALR}
\cell }{\cell }{\row }
{\xe \v CUSTOMSLACCESSFIFO\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:CUSTOMSLACCESSFIFO}
{\qr CUSTOMSLACCESSFIFO{\bkmkstart AAAAAAAALS}
{\bkmkend AAAAAAAALS}
\cell }{\cell }{\row }
{\xe \v CUSTOMEM4324GETUID\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:CUSTOMEM4324GETUID}
{\qr CUSTOMEM4324GETUID{\bkmkstart AAAAAAAALT}
{\bkmkend AAAAAAAALT}
\cell }{\cell }{\row }
{\xe \v CUSTOMEM4325GETUID\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:CUSTOMEM4325GETUID}
{\qr CUSTOMEM4325GETUID{\bkmkstart AAAAAAAALU}
{\bkmkend AAAAAAAALU}
\cell }{\cell }{\row }
{\xe \v CUSTOMEMGETSENSORDATA\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:CUSTOMEMGETSENSORDATA}
{\qr CUSTOMEMGETSENSORDATA{\bkmkstart AAAAAAAALV}
{\bkmkend AAAAAAAALV}
\cell }{\cell }{\row }
{\xe \v CUSTOMEMRESETALARMS\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:CUSTOMEMRESETALARMS}
{\qr CUSTOMEMRESETALARMS{\bkmkstart AAAAAAAALW}
{\bkmkend AAAAAAAALW}
\cell }{\cell }{\row }
{\xe \v CUSTOMEMSENDSPI\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:CUSTOMEMSENDSPI}
{\qr CUSTOMEMSENDSPI{\bkmkstart AAAAAAAALX}
{\bkmkend AAAAAAAALX}
\cell }{\cell }{\row }
{\xe \v CMD_END\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:CMD_END}
{\qr CMD_END{\bkmkstart AAAAAAAALY}
{\bkmkend AAAAAAAALY}
\cell }{\cell }{\row }
}
}
{\xe \v MACREGISTER\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MACREGISTER}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b CSLibrary.RFIDReader.MACREGISTER} : UInt16{\f2 [strong]}}}
\par
{\bkmkstart AAAAAAAALZ}
{\bkmkend AAAAAAAALZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
REGISTER NAME/ADDRESS CONSTANTS }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v MAC_VER\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_VER}
{\qr MAC_VER{\bkmkstart AAAAAAAAMA}
{\bkmkend AAAAAAAAMA}
\cell }{\cell }{\row }
{\xe \v MAC_INFO\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_INFO}
{\qr MAC_INFO{\bkmkstart AAAAAAAAMB}
{\bkmkend AAAAAAAAMB}
\cell }{\cell }{\row }
{\xe \v MAC_RFTRANSINFO\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTRANSINFO}
{\qr MAC_RFTRANSINFO{\bkmkstart AAAAAAAAMC}
{\bkmkend AAAAAAAAMC}
\cell }{\cell }{\row }
{\xe \v MAC_DBG1\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_DBG1}
{\qr MAC_DBG1{\bkmkstart AAAAAAAAMD}
{\bkmkend AAAAAAAAMD}
\cell }{\cell }{\row }
{\xe \v MAC_DBG2\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_DBG2}
{\qr MAC_DBG2{\bkmkstart AAAAAAAAME}
{\bkmkend AAAAAAAAME}
\cell }{\cell }{\row }
{\xe \v MAC_ERROR\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_ERROR}
{\qr MAC_ERROR{\bkmkstart AAAAAAAAMF}
{\bkmkend AAAAAAAAMF}
\cell }{\cell }{\row }
{\xe \v HST_ENGTST_ARG0\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_ENGTST_ARG0}
{\qr HST_ENGTST_ARG0{\bkmkstart AAAAAAAAMG}
{\bkmkend AAAAAAAAMG}
\cell }{\cell }{\row }
{\xe \v HST_ENGTST_ARG1\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_ENGTST_ARG1}
{\qr HST_ENGTST_ARG1{\bkmkstart AAAAAAAAMH}
{\bkmkend AAAAAAAAMH}
\cell }{\cell }{\row }
{\xe \v HST_DBG1\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_DBG1}
{\qr HST_DBG1{\bkmkstart AAAAAAAAMI}
{\bkmkend AAAAAAAAMI}
\cell }{\cell }{\row }
{\xe \v HST_EMU\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_EMU}
{\qr HST_EMU{\bkmkstart AAAAAAAAMJ}
{\bkmkend AAAAAAAAMJ}
\cell }{\cell }{\row }
{\xe \v HST_PWRMGMT\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_PWRMGMT}
{\qr HST_PWRMGMT{\bkmkstart AAAAAAAAMK}
{\bkmkend AAAAAAAAMK}
\cell }{\cell }{\row }
{\xe \v HST_CMNDIAGS\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_CMNDIAGS}
{\qr HST_CMNDIAGS{\bkmkstart AAAAAAAAML}
{\bkmkend AAAAAAAAML}
\cell }{\cell }{\row }
{\xe \v MAC_BLK02RES1\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_BLK02RES1}
{\qr MAC_BLK02RES1{\bkmkstart AAAAAAAAMM}
{\bkmkend AAAAAAAAMM}
\cell }{\cell }{\row }
{\xe \v HST_CTR_GCFG\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_CTR_GCFG}
{\qr HST_CTR_GCFG{\bkmkstart AAAAAAAAMN}
{\bkmkend AAAAAAAAMN}
\cell }{\cell }{\row }
{\xe \v HST_CTR1_CFG\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_CTR1_CFG}
{\qr HST_CTR1_CFG{\bkmkstart AAAAAAAAMO}
{\bkmkend AAAAAAAAMO}
\cell }{\cell }{\row }
{\xe \v MAC_CTR1_VAL\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_CTR1_VAL}
{\qr MAC_CTR1_VAL{\bkmkstart AAAAAAAAMP}
{\bkmkend AAAAAAAAMP}
\cell }{\cell }{\row }
{\xe \v HST_CTR2_CFG\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_CTR2_CFG}
{\qr HST_CTR2_CFG{\bkmkstart AAAAAAAAMQ}
{\bkmkend AAAAAAAAMQ}
\cell }{\cell }{\row }
{\xe \v MAC_CTR2_VAL\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_CTR2_VAL}
{\qr MAC_CTR2_VAL{\bkmkstart AAAAAAAAMR}
{\bkmkend AAAAAAAAMR}
\cell }{\cell }{\row }
{\xe \v HST_CTR3_CFG\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_CTR3_CFG}
{\qr HST_CTR3_CFG{\bkmkstart AAAAAAAAMS}
{\bkmkend AAAAAAAAMS}
\cell }{\cell }{\row }
{\xe \v MAC_CTR3_VAL\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_CTR3_VAL}
{\qr MAC_CTR3_VAL{\bkmkstart AAAAAAAAMT}
{\bkmkend AAAAAAAAMT}
\cell }{\cell }{\row }
{\xe \v HST_CTR4_CFG\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_CTR4_CFG}
{\qr HST_CTR4_CFG{\bkmkstart AAAAAAAAMU}
{\bkmkend AAAAAAAAMU}
\cell }{\cell }{\row }
{\xe \v MAC_CTR4_VAL\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_CTR4_VAL}
{\qr MAC_CTR4_VAL{\bkmkstart AAAAAAAAMV}
{\bkmkend AAAAAAAAMV}
\cell }{\cell }{\row }
{\xe \v HST_PROTSCH_SMIDX\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_PROTSCH_SMIDX}
{\qr HST_PROTSCH_SMIDX{\bkmkstart AAAAAAAAMW}
{\bkmkend AAAAAAAAMW}
\cell }{\cell }{\row }
{\xe \v HST_PROTSCH_SMCFG\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_PROTSCH_SMCFG}
{\qr HST_PROTSCH_SMCFG{\bkmkstart AAAAAAAAMX}
{\bkmkend AAAAAAAAMX}
\cell }{\cell }{\row }
{\xe \v HST_PROTSCH_FTIME_SEL\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_PROTSCH_FTIME_SEL}
{\qr HST_PROTSCH_FTIME_SEL{\bkmkstart AAAAAAAAMY}
{\bkmkend AAAAAAAAMY}
\cell }{\cell }{\row }
{\xe \v HST_PROTSCH_FTIME\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_PROTSCH_FTIME}
{\qr HST_PROTSCH_FTIME{\bkmkstart AAAAAAAAMZ}
{\bkmkend AAAAAAAAMZ}
\cell }{\cell }{\row }
{\xe \v HST_PROTSCH_SMCFG_SEL\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_PROTSCH_SMCFG_SEL}
{\qr HST_PROTSCH_SMCFG_SEL{\bkmkstart AAAAAAAANA}
{\bkmkend AAAAAAAANA}
\cell }{\cell }{\row }
{\xe \v HST_PROTSCH_TXTIME_SEL\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_PROTSCH_TXTIME_SEL}
{\qr HST_PROTSCH_TXTIME_SEL{\bkmkstart AAAAAAAANB}
{\bkmkend AAAAAAAANB}
\cell }{\cell }{\row }
{\xe \v HST_PROTSCH_TXTIME_ON\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_PROTSCH_TXTIME_ON}
{\qr HST_PROTSCH_TXTIME_ON{\bkmkstart AAAAAAAANC}
{\bkmkend AAAAAAAANC}
\cell }{\cell }{\row }
{\xe \v HST_PROTSCH_TXTIME_OFF\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_PROTSCH_TXTIME_OFF}
{\qr HST_PROTSCH_TXTIME_OFF{\bkmkstart AAAAAAAAND}
{\bkmkend AAAAAAAAND}
\cell }{\cell }{\row }
{\xe \v HST_PROTSCH_CYCCFG_SEL\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_PROTSCH_CYCCFG_SEL}
{\qr HST_PROTSCH_CYCCFG_SEL{\bkmkstart AAAAAAAANE}
{\bkmkend AAAAAAAANE}
\cell }{\cell }{\row }
{\xe \v HST_PROTSCH_CYCCFG_DESC_ADJ1\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_PROTSCH_CYCCFG_DESC_ADJ1}
{\qr HST_PROTSCH_CYCCFG_DESC_ADJ1{\bkmkstart AAAAAAAANF}
{\bkmkend AAAAAAAANF}
\cell }{\cell }{\row }
{\xe \v HST_PROTSCH_ADJCW\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_PROTSCH_ADJCW}
{\qr HST_PROTSCH_ADJCW{\bkmkstart AAAAAAAANG}
{\bkmkend AAAAAAAANG}
\cell }{\cell }{\row }
{\xe \v HST_MBP_ADDR\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_MBP_ADDR}
{\qr HST_MBP_ADDR{\bkmkstart AAAAAAAANH}
{\bkmkend AAAAAAAANH}
\cell }{\cell }{\row }
{\xe \v HST_MBP_DATA\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_MBP_DATA}
{\qr HST_MBP_DATA{\bkmkstart AAAAAAAANI}
{\bkmkend AAAAAAAANI}
\cell }{\cell }{\row }
{\xe \v HST_MBP_RFU_0x0402\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_MBP_RFU_0x0402}
{\qr HST_MBP_RFU_0x0402{\bkmkstart AAAAAAAANJ}
{\bkmkend AAAAAAAANJ}
\cell }{\cell }{\row }
{\xe \v HST_MBP_RFU_0x0403\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_MBP_RFU_0x0403}
{\qr HST_MBP_RFU_0x0403{\bkmkstart AAAAAAAANK}
{\bkmkend AAAAAAAANK}
\cell }{\cell }{\row }
{\xe \v HST_MBP_RFU_0x0404\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_MBP_RFU_0x0404}
{\qr HST_MBP_RFU_0x0404{\bkmkstart AAAAAAAANL}
{\bkmkend AAAAAAAANL}
\cell }{\cell }{\row }
{\xe \v HST_MBP_RFU_0x0405\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_MBP_RFU_0x0405}
{\qr HST_MBP_RFU_0x0405{\bkmkstart AAAAAAAANM}
{\bkmkend AAAAAAAANM}
\cell }{\cell }{\row }
{\xe \v HST_MBP_RFU_0x0406\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_MBP_RFU_0x0406}
{\qr HST_MBP_RFU_0x0406{\bkmkstart AAAAAAAANN}
{\bkmkend AAAAAAAANN}
\cell }{\cell }{\row }
{\xe \v HST_MBP_RFU_0x0407\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_MBP_RFU_0x0407}
{\qr HST_MBP_RFU_0x0407{\bkmkstart AAAAAAAANO}
{\bkmkend AAAAAAAANO}
\cell }{\cell }{\row }
{\xe \v HST_LPROF_SEL\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_LPROF_SEL}
{\qr HST_LPROF_SEL{\bkmkstart AAAAAAAANP}
{\bkmkend AAAAAAAANP}
\cell }{\cell }{\row }
{\xe \v HST_LPROF_ADDR\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_LPROF_ADDR}
{\qr HST_LPROF_ADDR{\bkmkstart AAAAAAAANQ}
{\bkmkend AAAAAAAANQ}
\cell }{\cell }{\row }
{\xe \v HST_LPROF_DATA\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_LPROF_DATA}
{\qr HST_LPROF_DATA{\bkmkstart AAAAAAAANR}
{\bkmkend AAAAAAAANR}
\cell }{\cell }{\row }
{\xe \v HST_OEM_ADDR\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_OEM_ADDR}
{\qr HST_OEM_ADDR{\bkmkstart AAAAAAAANS}
{\bkmkend AAAAAAAANS}
\cell }{\cell }{\row }
{\xe \v HST_OEM_DATA\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_OEM_DATA}
{\qr HST_OEM_DATA{\bkmkstart AAAAAAAANT}
{\bkmkend AAAAAAAANT}
\cell }{\cell }{\row }
{\xe \v HST_GPIO_INMSK\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_GPIO_INMSK}
{\qr HST_GPIO_INMSK{\bkmkstart AAAAAAAANU}
{\bkmkend AAAAAAAANU}
\cell }{\cell }{\row }
{\xe \v HST_GPIO_OUTMSK\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_GPIO_OUTMSK}
{\qr HST_GPIO_OUTMSK{\bkmkstart AAAAAAAANV}
{\bkmkend AAAAAAAANV}
\cell }{\cell }{\row }
{\xe \v HST_GPIO_OUTVAL\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_GPIO_OUTVAL}
{\qr HST_GPIO_OUTVAL{\bkmkstart AAAAAAAANW}
{\bkmkend AAAAAAAANW}
\cell }{\cell }{\row }
{\xe \v HST_GPIO_CFG\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_GPIO_CFG}
{\qr HST_GPIO_CFG{\bkmkstart AAAAAAAANX}
{\bkmkend AAAAAAAANX}
\cell }{\cell }{\row }
{\xe \v HST_ANT_CYCLES\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_ANT_CYCLES}
{\qr HST_ANT_CYCLES{\bkmkstart AAAAAAAANY}
{\bkmkend AAAAAAAANY}
\cell }{\cell }{\row }
{\xe \v HST_ANT_DESC_SEL\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_ANT_DESC_SEL}
{\qr HST_ANT_DESC_SEL{\bkmkstart AAAAAAAANZ}
{\bkmkend AAAAAAAANZ}
\cell }{\cell }{\row }
{\xe \v HST_ANT_DESC_CFG\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_ANT_DESC_CFG}
{\qr HST_ANT_DESC_CFG{\bkmkstart AAAAAAAAOA}
{\bkmkend AAAAAAAAOA}
\cell }{\cell }{\row }
{\xe \v MAC_ANT_DESC_STAT\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_ANT_DESC_STAT}
{\qr MAC_ANT_DESC_STAT{\bkmkstart AAAAAAAAOB}
{\bkmkend AAAAAAAAOB}
\cell }{\cell }{\row }
{\xe \v HST_ANT_DESC_PORTDEF\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_ANT_DESC_PORTDEF}
{\qr HST_ANT_DESC_PORTDEF{\bkmkstart AAAAAAAAOC}
{\bkmkend AAAAAAAAOC}
\cell }{\cell }{\row }
{\xe \v HST_ANT_DESC_DWELL\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_ANT_DESC_DWELL}
{\qr HST_ANT_DESC_DWELL{\bkmkstart AAAAAAAAOD}
{\bkmkend AAAAAAAAOD}
\cell }{\cell }{\row }
{\xe \v HST_ANT_DESC_RFPOWER\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_ANT_DESC_RFPOWER}
{\qr HST_ANT_DESC_RFPOWER{\bkmkstart AAAAAAAAOE}
{\bkmkend AAAAAAAAOE}
\cell }{\cell }{\row }
{\xe \v HST_ANT_DESC_INV_CNT\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_ANT_DESC_INV_CNT}
{\qr HST_ANT_DESC_INV_CNT{\bkmkstart AAAAAAAAOF}
{\bkmkend AAAAAAAAOF}
\cell }{\cell }{\row }
{\xe \v HST_TAGMSK_DESC_SEL\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_TAGMSK_DESC_SEL}
{\qr HST_TAGMSK_DESC_SEL{\bkmkstart AAAAAAAAOG}
{\bkmkend AAAAAAAAOG}
\cell }{\cell }{\row }
{\xe \v HST_TAGMSK_DESC_CFG\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_TAGMSK_DESC_CFG}
{\qr HST_TAGMSK_DESC_CFG{\bkmkstart AAAAAAAAOH}
{\bkmkend AAAAAAAAOH}
\cell }{\cell }{\row }
{\xe \v HST_TAGMSK_BANK\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_TAGMSK_BANK}
{\qr HST_TAGMSK_BANK{\bkmkstart AAAAAAAAOI}
{\bkmkend AAAAAAAAOI}
\cell }{\cell }{\row }
{\xe \v HST_TAGMSK_PTR\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_TAGMSK_PTR}
{\qr HST_TAGMSK_PTR{\bkmkstart AAAAAAAAOJ}
{\bkmkend AAAAAAAAOJ}
\cell }{\cell }{\row }
{\xe \v HST_TAGMSK_LEN\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_TAGMSK_LEN}
{\qr HST_TAGMSK_LEN{\bkmkstart AAAAAAAAOK}
{\bkmkend AAAAAAAAOK}
\cell }{\cell }{\row }
{\xe \v HST_TAGMSK_0_3\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_TAGMSK_0_3}
{\qr HST_TAGMSK_0_3{\bkmkstart AAAAAAAAOL}
{\bkmkend AAAAAAAAOL}
\cell }{\cell }{\row }
{\xe \v HST_TAGMSK_4_7\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_TAGMSK_4_7}
{\qr HST_TAGMSK_4_7{\bkmkstart AAAAAAAAOM}
{\bkmkend AAAAAAAAOM}
\cell }{\cell }{\row }
{\xe \v HST_TAGMSK_8_11\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_TAGMSK_8_11}
{\qr HST_TAGMSK_8_11{\bkmkstart AAAAAAAAON}
{\bkmkend AAAAAAAAON}
\cell }{\cell }{\row }
{\xe \v HST_TAGMSK_12_15\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_TAGMSK_12_15}
{\qr HST_TAGMSK_12_15{\bkmkstart AAAAAAAAOO}
{\bkmkend AAAAAAAAOO}
\cell }{\cell }{\row }
{\xe \v HST_TAGMSK_16_19\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_TAGMSK_16_19}
{\qr HST_TAGMSK_16_19{\bkmkstart AAAAAAAAOP}
{\bkmkend AAAAAAAAOP}
\cell }{\cell }{\row }
{\xe \v HST_TAGMSK_20_23\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_TAGMSK_20_23}
{\qr HST_TAGMSK_20_23{\bkmkstart AAAAAAAAOQ}
{\bkmkend AAAAAAAAOQ}
\cell }{\cell }{\row }
{\xe \v HST_TAGMSK_24_27\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_TAGMSK_24_27}
{\qr HST_TAGMSK_24_27{\bkmkstart AAAAAAAAOR}
{\bkmkend AAAAAAAAOR}
\cell }{\cell }{\row }
{\xe \v HST_TAGMSK_28_31\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_TAGMSK_28_31}
{\qr HST_TAGMSK_28_31{\bkmkstart AAAAAAAAOS}
{\bkmkend AAAAAAAAOS}
\cell }{\cell }{\row }
{\xe \v HST_QUERY_CFG\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_QUERY_CFG}
{\qr HST_QUERY_CFG{\bkmkstart AAAAAAAAOT}
{\bkmkend AAAAAAAAOT}
\cell }{\cell }{\row }
{\xe \v HST_INV_CFG\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_INV_CFG}
{\qr HST_INV_CFG{\bkmkstart AAAAAAAAOU}
{\bkmkend AAAAAAAAOU}
\cell }{\cell }{\row }
{\xe \v HST_INV_SEL\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_INV_SEL}
{\qr HST_INV_SEL{\bkmkstart AAAAAAAAOV}
{\bkmkend AAAAAAAAOV}
\cell }{\cell }{\row }
{\xe \v HST_INV_ALG_PARM_0\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_INV_ALG_PARM_0}
{\qr HST_INV_ALG_PARM_0{\bkmkstart AAAAAAAAOW}
{\bkmkend AAAAAAAAOW}
\cell }{\cell }{\row }
{\xe \v HST_INV_ALG_PARM_1\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_INV_ALG_PARM_1}
{\qr HST_INV_ALG_PARM_1{\bkmkstart AAAAAAAAOX}
{\bkmkend AAAAAAAAOX}
\cell }{\cell }{\row }
{\xe \v HST_INV_ALG_PARM_2\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_INV_ALG_PARM_2}
{\qr HST_INV_ALG_PARM_2{\bkmkstart AAAAAAAAOY}
{\bkmkend AAAAAAAAOY}
\cell }{\cell }{\row }
{\xe \v HST_INV_ALG_PARM_3\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_INV_ALG_PARM_3}
{\qr HST_INV_ALG_PARM_3{\bkmkstart AAAAAAAAOZ}
{\bkmkend AAAAAAAAOZ}
\cell }{\cell }{\row }
{\xe \v HST_INV_RFU_0x0907\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_INV_RFU_0x0907}
{\qr HST_INV_RFU_0x0907{\bkmkstart AAAAAAAAPA}
{\bkmkend AAAAAAAAPA}
\cell }{\cell }{\row }
{\xe \v HST_INV_RFU_0x0908\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_INV_RFU_0x0908}
{\qr HST_INV_RFU_0x0908{\bkmkstart AAAAAAAAPB}
{\bkmkend AAAAAAAAPB}
\cell }{\cell }{\row }
{\xe \v HST_INV_RFU_0x0909\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_INV_RFU_0x0909}
{\qr HST_INV_RFU_0x0909{\bkmkstart AAAAAAAAPC}
{\bkmkend AAAAAAAAPC}
\cell }{\cell }{\row }
{\xe \v HST_INV_RFU_0x090A\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_INV_RFU_0x090A}
{\qr HST_INV_RFU_0x090A{\bkmkstart AAAAAAAAPD}
{\bkmkend AAAAAAAAPD}
\cell }{\cell }{\row }
{\xe \v HST_INV_RFU_0x090B\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_INV_RFU_0x090B}
{\qr HST_INV_RFU_0x090B{\bkmkstart AAAAAAAAPE}
{\bkmkend AAAAAAAAPE}
\cell }{\cell }{\row }
{\xe \v HST_INV_RFU_0x090C\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_INV_RFU_0x090C}
{\qr HST_INV_RFU_0x090C{\bkmkstart AAAAAAAAPF}
{\bkmkend AAAAAAAAPF}
\cell }{\cell }{\row }
{\xe \v HST_INV_RFU_0x090D\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_INV_RFU_0x090D}
{\qr HST_INV_RFU_0x090D{\bkmkstart AAAAAAAAPG}
{\bkmkend AAAAAAAAPG}
\cell }{\cell }{\row }
{\xe \v HST_INV_RFU_0x090E\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_INV_RFU_0x090E}
{\qr HST_INV_RFU_0x090E{\bkmkstart AAAAAAAAPH}
{\bkmkend AAAAAAAAPH}
\cell }{\cell }{\row }
{\xe \v HST_INV_RFU_0x090F\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_INV_RFU_0x090F}
{\qr HST_INV_RFU_0x090F{\bkmkstart AAAAAAAAPI}
{\bkmkend AAAAAAAAPI}
\cell }{\cell }{\row }
{\xe \v HST_INV_EPC_MATCH_SEL\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_INV_EPC_MATCH_SEL}
{\qr HST_INV_EPC_MATCH_SEL{\bkmkstart AAAAAAAAPJ}
{\bkmkend AAAAAAAAPJ}
\cell }{\cell }{\row }
{\xe \v HST_INV_EPC_MATCH_CFG\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_INV_EPC_MATCH_CFG}
{\qr HST_INV_EPC_MATCH_CFG{\bkmkstart AAAAAAAAPK}
{\bkmkend AAAAAAAAPK}
\cell }{\cell }{\row }
{\xe \v HST_INV_EPCDAT_0_3\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_INV_EPCDAT_0_3}
{\qr HST_INV_EPCDAT_0_3{\bkmkstart AAAAAAAAPL}
{\bkmkend AAAAAAAAPL}
\cell }{\cell }{\row }
{\xe \v HST_INV_EPCDAT_4_7\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_INV_EPCDAT_4_7}
{\qr HST_INV_EPCDAT_4_7{\bkmkstart AAAAAAAAPM}
{\bkmkend AAAAAAAAPM}
\cell }{\cell }{\row }
{\xe \v HST_INV_EPCDAT_8_11\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_INV_EPCDAT_8_11}
{\qr HST_INV_EPCDAT_8_11{\bkmkstart AAAAAAAAPN}
{\bkmkend AAAAAAAAPN}
\cell }{\cell }{\row }
{\xe \v HST_INV_EPCDAT_12_15\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_INV_EPCDAT_12_15}
{\qr HST_INV_EPCDAT_12_15{\bkmkstart AAAAAAAAPO}
{\bkmkend AAAAAAAAPO}
\cell }{\cell }{\row }
{\xe \v HST_INV_EPCDAT_16_19\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_INV_EPCDAT_16_19}
{\qr HST_INV_EPCDAT_16_19{\bkmkstart AAAAAAAAPP}
{\bkmkend AAAAAAAAPP}
\cell }{\cell }{\row }
{\xe \v HST_INV_EPCDAT_20_23\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_INV_EPCDAT_20_23}
{\qr HST_INV_EPCDAT_20_23{\bkmkstart AAAAAAAAPQ}
{\bkmkend AAAAAAAAPQ}
\cell }{\cell }{\row }
{\xe \v HST_INV_EPCDAT_24_27\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_INV_EPCDAT_24_27}
{\qr HST_INV_EPCDAT_24_27{\bkmkstart AAAAAAAAPR}
{\bkmkend AAAAAAAAPR}
\cell }{\cell }{\row }
{\xe \v HST_INV_EPCDAT_28_31\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_INV_EPCDAT_28_31}
{\qr HST_INV_EPCDAT_28_31{\bkmkstart AAAAAAAAPS}
{\bkmkend AAAAAAAAPS}
\cell }{\cell }{\row }
{\xe \v HST_INV_EPCDAT_32_35\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_INV_EPCDAT_32_35}
{\qr HST_INV_EPCDAT_32_35{\bkmkstart AAAAAAAAPT}
{\bkmkend AAAAAAAAPT}
\cell }{\cell }{\row }
{\xe \v HST_INV_EPCDAT_36_39\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_INV_EPCDAT_36_39}
{\qr HST_INV_EPCDAT_36_39{\bkmkstart AAAAAAAAPU}
{\bkmkend AAAAAAAAPU}
\cell }{\cell }{\row }
{\xe \v HST_INV_EPCDAT_40_43\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_INV_EPCDAT_40_43}
{\qr HST_INV_EPCDAT_40_43{\bkmkstart AAAAAAAAPV}
{\bkmkend AAAAAAAAPV}
\cell }{\cell }{\row }
{\xe \v HST_INV_EPCDAT_44_47\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_INV_EPCDAT_44_47}
{\qr HST_INV_EPCDAT_44_47{\bkmkstart AAAAAAAAPW}
{\bkmkend AAAAAAAAPW}
\cell }{\cell }{\row }
{\xe \v HST_INV_EPCDAT_48_51\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_INV_EPCDAT_48_51}
{\qr HST_INV_EPCDAT_48_51{\bkmkstart AAAAAAAAPX}
{\bkmkend AAAAAAAAPX}
\cell }{\cell }{\row }
{\xe \v HST_INV_EPCDAT_52_55\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_INV_EPCDAT_52_55}
{\qr HST_INV_EPCDAT_52_55{\bkmkstart AAAAAAAAPY}
{\bkmkend AAAAAAAAPY}
\cell }{\cell }{\row }
{\xe \v HST_INV_EPCDAT_56_59\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_INV_EPCDAT_56_59}
{\qr HST_INV_EPCDAT_56_59{\bkmkstart AAAAAAAAPZ}
{\bkmkend AAAAAAAAPZ}
\cell }{\cell }{\row }
{\xe \v HST_INV_EPCDAT_60_63\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_INV_EPCDAT_60_63}
{\qr HST_INV_EPCDAT_60_63{\bkmkstart AAAAAAAAQA}
{\bkmkend AAAAAAAAQA}
\cell }{\cell }{\row }
{\xe \v HST_TAGACC_DESC_SEL\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_TAGACC_DESC_SEL}
{\qr HST_TAGACC_DESC_SEL{\bkmkstart AAAAAAAAQB}
{\bkmkend AAAAAAAAQB}
\cell }{\cell }{\row }
{\xe \v HST_TAGACC_DESC_CFG\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_TAGACC_DESC_CFG}
{\qr HST_TAGACC_DESC_CFG{\bkmkstart AAAAAAAAQC}
{\bkmkend AAAAAAAAQC}
\cell }{\cell }{\row }
{\xe \v HST_TAGACC_BANK\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_TAGACC_BANK}
{\qr HST_TAGACC_BANK{\bkmkstart AAAAAAAAQD}
{\bkmkend AAAAAAAAQD}
\cell }{\cell }{\row }
{\xe \v HST_TAGACC_PTR\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_TAGACC_PTR}
{\qr HST_TAGACC_PTR{\bkmkstart AAAAAAAAQE}
{\bkmkend AAAAAAAAQE}
\cell }{\cell }{\row }
{\xe \v HST_TAGACC_CNT\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_TAGACC_CNT}
{\qr HST_TAGACC_CNT{\bkmkstart AAAAAAAAQF}
{\bkmkend AAAAAAAAQF}
\cell }{\cell }{\row }
{\xe \v HST_TAGACC_LOCKCFG\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_TAGACC_LOCKCFG}
{\qr HST_TAGACC_LOCKCFG{\bkmkstart AAAAAAAAQG}
{\bkmkend AAAAAAAAQG}
\cell }{\cell }{\row }
{\xe \v HST_TAGACC_ACCPWD\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_TAGACC_ACCPWD}
{\qr HST_TAGACC_ACCPWD{\bkmkstart AAAAAAAAQH}
{\bkmkend AAAAAAAAQH}
\cell }{\cell }{\row }
{\xe \v HST_TAGACC_KILLPWD\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_TAGACC_KILLPWD}
{\qr HST_TAGACC_KILLPWD{\bkmkstart AAAAAAAAQI}
{\bkmkend AAAAAAAAQI}
\cell }{\cell }{\row }
{\xe \v HST_TAGWRDAT_SEL\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_TAGWRDAT_SEL}
{\qr HST_TAGWRDAT_SEL{\bkmkstart AAAAAAAAQJ}
{\bkmkend AAAAAAAAQJ}
\cell }{\cell }{\row }
{\xe \v HST_TAGWRDAT_0\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_TAGWRDAT_0}
{\qr HST_TAGWRDAT_0{\bkmkstart AAAAAAAAQK}
{\bkmkend AAAAAAAAQK}
\cell }{\cell }{\row }
{\xe \v HST_TAGWRDAT_1\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_TAGWRDAT_1}
{\qr HST_TAGWRDAT_1{\bkmkstart AAAAAAAAQL}
{\bkmkend AAAAAAAAQL}
\cell }{\cell }{\row }
{\xe \v HST_TAGWRDAT_2\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_TAGWRDAT_2}
{\qr HST_TAGWRDAT_2{\bkmkstart AAAAAAAAQM}
{\bkmkend AAAAAAAAQM}
\cell }{\cell }{\row }
{\xe \v HST_TAGWRDAT_3\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_TAGWRDAT_3}
{\qr HST_TAGWRDAT_3{\bkmkstart AAAAAAAAQN}
{\bkmkend AAAAAAAAQN}
\cell }{\cell }{\row }
{\xe \v HST_TAGWRDAT_4\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_TAGWRDAT_4}
{\qr HST_TAGWRDAT_4{\bkmkstart AAAAAAAAQO}
{\bkmkend AAAAAAAAQO}
\cell }{\cell }{\row }
{\xe \v HST_TAGWRDAT_5\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_TAGWRDAT_5}
{\qr HST_TAGWRDAT_5{\bkmkstart AAAAAAAAQP}
{\bkmkend AAAAAAAAQP}
\cell }{\cell }{\row }
{\xe \v HST_TAGWRDAT_6\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_TAGWRDAT_6}
{\qr HST_TAGWRDAT_6{\bkmkstart AAAAAAAAQQ}
{\bkmkend AAAAAAAAQQ}
\cell }{\cell }{\row }
{\xe \v HST_TAGWRDAT_7\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_TAGWRDAT_7}
{\qr HST_TAGWRDAT_7{\bkmkstart AAAAAAAAQR}
{\bkmkend AAAAAAAAQR}
\cell }{\cell }{\row }
{\xe \v HST_TAGWRDAT_8\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_TAGWRDAT_8}
{\qr HST_TAGWRDAT_8{\bkmkstart AAAAAAAAQS}
{\bkmkend AAAAAAAAQS}
\cell }{\cell }{\row }
{\xe \v HST_TAGWRDAT_9\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_TAGWRDAT_9}
{\qr HST_TAGWRDAT_9{\bkmkstart AAAAAAAAQT}
{\bkmkend AAAAAAAAQT}
\cell }{\cell }{\row }
{\xe \v HST_TAGWRDAT_10\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_TAGWRDAT_10}
{\qr HST_TAGWRDAT_10{\bkmkstart AAAAAAAAQU}
{\bkmkend AAAAAAAAQU}
\cell }{\cell }{\row }
{\xe \v HST_TAGWRDAT_11\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_TAGWRDAT_11}
{\qr HST_TAGWRDAT_11{\bkmkstart AAAAAAAAQV}
{\bkmkend AAAAAAAAQV}
\cell }{\cell }{\row }
{\xe \v HST_TAGWRDAT_12\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_TAGWRDAT_12}
{\qr HST_TAGWRDAT_12{\bkmkstart AAAAAAAAQW}
{\bkmkend AAAAAAAAQW}
\cell }{\cell }{\row }
{\xe \v HST_TAGWRDAT_13\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_TAGWRDAT_13}
{\qr HST_TAGWRDAT_13{\bkmkstart AAAAAAAAQX}
{\bkmkend AAAAAAAAQX}
\cell }{\cell }{\row }
{\xe \v HST_TAGWRDAT_14\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_TAGWRDAT_14}
{\qr HST_TAGWRDAT_14{\bkmkstart AAAAAAAAQY}
{\bkmkend AAAAAAAAQY}
\cell }{\cell }{\row }
{\xe \v HST_TAGWRDAT_15\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_TAGWRDAT_15}
{\qr HST_TAGWRDAT_15{\bkmkstart AAAAAAAAQZ}
{\bkmkend AAAAAAAAQZ}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_PAPWRLEV\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_PAPWRLEV}
{\qr MAC_RFTC_PAPWRLEV{\bkmkstart AAAAAAAARA}
{\bkmkend AAAAAAAARA}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_PAPWRCTL_PGAIN\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_PAPWRCTL_PGAIN}
{\qr HST_RFTC_PAPWRCTL_PGAIN{\bkmkstart AAAAAAAARB}
{\bkmkend AAAAAAAARB}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_PAPWRCTL_IGAIN\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_PAPWRCTL_IGAIN}
{\qr HST_RFTC_PAPWRCTL_IGAIN{\bkmkstart AAAAAAAARC}
{\bkmkend AAAAAAAARC}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_PAPWRCTL_DGAIN\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_PAPWRCTL_DGAIN}
{\qr HST_RFTC_PAPWRCTL_DGAIN{\bkmkstart AAAAAAAARD}
{\bkmkend AAAAAAAARD}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_REVPWRLEV\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_REVPWRLEV}
{\qr MAC_RFTC_REVPWRLEV{\bkmkstart AAAAAAAARE}
{\bkmkend AAAAAAAARE}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_REVPWRTHRSH\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_REVPWRTHRSH}
{\qr HST_RFTC_REVPWRTHRSH{\bkmkstart AAAAAAAARF}
{\bkmkend AAAAAAAARF}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_AMBIENTTEMP\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_AMBIENTTEMP}
{\qr MAC_RFTC_AMBIENTTEMP{\bkmkstart AAAAAAAARG}
{\bkmkend AAAAAAAARG}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_AMBIENTTEMPTHRSH\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_AMBIENTTEMPTHRSH}
{\qr HST_RFTC_AMBIENTTEMPTHRSH{\bkmkstart AAAAAAAARH}
{\bkmkend AAAAAAAARH}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_XCVRTEMP\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_XCVRTEMP}
{\qr MAC_RFTC_XCVRTEMP{\bkmkstart AAAAAAAARI}
{\bkmkend AAAAAAAARI}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_XCVRTEMPTHRSH\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_XCVRTEMPTHRSH}
{\qr HST_RFTC_XCVRTEMPTHRSH{\bkmkstart AAAAAAAARJ}
{\bkmkend AAAAAAAARJ}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_PATEMP\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_PATEMP}
{\qr MAC_RFTC_PATEMP{\bkmkstart AAAAAAAARK}
{\bkmkend AAAAAAAARK}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_PATEMPTHRSH\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_PATEMPTHRSH}
{\qr HST_RFTC_PATEMPTHRSH{\bkmkstart AAAAAAAARL}
{\bkmkend AAAAAAAARL}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_PADELTATEMPTHRSH\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_PADELTATEMPTHRSH}
{\qr HST_RFTC_PADELTATEMPTHRSH{\bkmkstart AAAAAAAARM}
{\bkmkend AAAAAAAARM}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_PAPWRCTL_AIWDELAY\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_PAPWRCTL_AIWDELAY}
{\qr HST_RFTC_PAPWRCTL_AIWDELAY{\bkmkstart AAAAAAAARN}
{\bkmkend AAAAAAAARN}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_PAPWRCTL_STAT0\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_PAPWRCTL_STAT0}
{\qr MAC_RFTC_PAPWRCTL_STAT0{\bkmkstart AAAAAAAARO}
{\bkmkend AAAAAAAARO}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_PAPWRCTL_STAT1\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_PAPWRCTL_STAT1}
{\qr MAC_RFTC_PAPWRCTL_STAT1{\bkmkstart AAAAAAAARP}
{\bkmkend AAAAAAAARP}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_PAPWRCTL_STAT2\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_PAPWRCTL_STAT2}
{\qr MAC_RFTC_PAPWRCTL_STAT2{\bkmkstart AAAAAAAARQ}
{\bkmkend AAAAAAAARQ}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_PAPWRCTL_STAT3\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_PAPWRCTL_STAT3}
{\qr MAC_RFTC_PAPWRCTL_STAT3{\bkmkstart AAAAAAAARR}
{\bkmkend AAAAAAAARR}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_ANTSENSRESTHRSH\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_ANTSENSRESTHRSH}
{\qr HST_RFTC_ANTSENSRESTHRSH{\bkmkstart AAAAAAAARS}
{\bkmkend AAAAAAAARS}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_IFLNAAGCRANGE\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_IFLNAAGCRANGE}
{\qr HST_RFTC_IFLNAAGCRANGE{\bkmkstart AAAAAAAART}
{\bkmkend AAAAAAAART}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_LAST_ANACTRL1\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_LAST_ANACTRL1}
{\qr MAC_RFTC_LAST_ANACTRL1{\bkmkstart AAAAAAAARU}
{\bkmkend AAAAAAAARU}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_OPENLOOPPWRCTRL\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_OPENLOOPPWRCTRL}
{\qr HST_RFTC_OPENLOOPPWRCTRL{\bkmkstart AAAAAAAARV}
{\bkmkend AAAAAAAARV}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B16\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B16}
{\qr HST_RFTC_RFU_0x0B16{\bkmkstart AAAAAAAARW}
{\bkmkend AAAAAAAARW}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B17\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B17}
{\qr HST_RFTC_RFU_0x0B17{\bkmkstart AAAAAAAARX}
{\bkmkend AAAAAAAARX}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B18\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B18}
{\qr HST_RFTC_RFU_0x0B18{\bkmkstart AAAAAAAARY}
{\bkmkend AAAAAAAARY}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B19\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B19}
{\qr HST_RFTC_RFU_0x0B19{\bkmkstart AAAAAAAARZ}
{\bkmkend AAAAAAAARZ}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_PREDIST_COEFF0\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_PREDIST_COEFF0}
{\qr HST_RFTC_PREDIST_COEFF0{\bkmkstart AAAAAAAASA}
{\bkmkend AAAAAAAASA}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B1B\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B1B}
{\qr HST_RFTC_RFU_0x0B1B{\bkmkstart AAAAAAAASB}
{\bkmkend AAAAAAAASB}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B1C\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B1C}
{\qr HST_RFTC_RFU_0x0B1C{\bkmkstart AAAAAAAASC}
{\bkmkend AAAAAAAASC}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B1D\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B1D}
{\qr HST_RFTC_RFU_0x0B1D{\bkmkstart AAAAAAAASD}
{\bkmkend AAAAAAAASD}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B1E\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B1E}
{\qr HST_RFTC_RFU_0x0B1E{\bkmkstart AAAAAAAASE}
{\bkmkend AAAAAAAASE}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B1F\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B1F}
{\qr HST_RFTC_RFU_0x0B1F{\bkmkstart AAAAAAAASF}
{\bkmkend AAAAAAAASF}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_CAL_GGNEG7\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_CAL_GGNEG7}
{\qr HST_RFTC_CAL_GGNEG7{\bkmkstart AAAAAAAASG}
{\bkmkend AAAAAAAASG}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_CAL_GGNEG5\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_CAL_GGNEG5}
{\qr HST_RFTC_CAL_GGNEG5{\bkmkstart AAAAAAAASH}
{\bkmkend AAAAAAAASH}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_CAL_GGNEG3\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_CAL_GGNEG3}
{\qr HST_RFTC_CAL_GGNEG3{\bkmkstart AAAAAAAASI}
{\bkmkend AAAAAAAASI}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_CAL_GGNEG1\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_CAL_GGNEG1}
{\qr HST_RFTC_CAL_GGNEG1{\bkmkstart AAAAAAAASJ}
{\bkmkend AAAAAAAASJ}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_CAL_GGPLUS1\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_CAL_GGPLUS1}
{\qr HST_RFTC_CAL_GGPLUS1{\bkmkstart AAAAAAAASK}
{\bkmkend AAAAAAAASK}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_CAL_GGPLUS3\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_CAL_GGPLUS3}
{\qr HST_RFTC_CAL_GGPLUS3{\bkmkstart AAAAAAAASL}
{\bkmkend AAAAAAAASL}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_CAL_GGPLUS5\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_CAL_GGPLUS5}
{\qr HST_RFTC_CAL_GGPLUS5{\bkmkstart AAAAAAAASM}
{\bkmkend AAAAAAAASM}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_CAL_GGPLUS7\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_CAL_GGPLUS7}
{\qr HST_RFTC_CAL_GGPLUS7{\bkmkstart AAAAAAAASN}
{\bkmkend AAAAAAAASN}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_CAL_MACADCREFV\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_CAL_MACADCREFV}
{\qr HST_RFTC_CAL_MACADCREFV{\bkmkstart AAAAAAAASO}
{\bkmkend AAAAAAAASO}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_CAL_RFFWDPWR_C0\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_CAL_RFFWDPWR_C0}
{\qr HST_RFTC_CAL_RFFWDPWR_C0{\bkmkstart AAAAAAAASP}
{\bkmkend AAAAAAAASP}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_CAL_RFFWDPWR_C1\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_CAL_RFFWDPWR_C1}
{\qr HST_RFTC_CAL_RFFWDPWR_C1{\bkmkstart AAAAAAAASQ}
{\bkmkend AAAAAAAASQ}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_CAL_RFFWDPWR_C2\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_CAL_RFFWDPWR_C2}
{\qr HST_RFTC_CAL_RFFWDPWR_C2{\bkmkstart AAAAAAAASR}
{\bkmkend AAAAAAAASR}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B2C\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B2C}
{\qr HST_RFTC_RFU_0x0B2C{\bkmkstart AAAAAAAASS}
{\bkmkend AAAAAAAASS}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B2D\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B2D}
{\qr HST_RFTC_RFU_0x0B2D{\bkmkstart AAAAAAAAST}
{\bkmkend AAAAAAAAST}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B2E\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B2E}
{\qr HST_RFTC_RFU_0x0B2E{\bkmkstart AAAAAAAASU}
{\bkmkend AAAAAAAASU}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B2F\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B2F}
{\qr HST_RFTC_RFU_0x0B2F{\bkmkstart AAAAAAAASV}
{\bkmkend AAAAAAAASV}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_CLKDBLR_CFG\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_CLKDBLR_CFG}
{\qr HST_RFTC_CLKDBLR_CFG{\bkmkstart AAAAAAAASW}
{\bkmkend AAAAAAAASW}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_CLKDBLR_SEL\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_CLKDBLR_SEL}
{\qr HST_RFTC_CLKDBLR_SEL{\bkmkstart AAAAAAAASX}
{\bkmkend AAAAAAAASX}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_CLKDBLR_LUTENTRY\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_CLKDBLR_LUTENTRY}
{\qr HST_RFTC_CLKDBLR_LUTENTRY{\bkmkstart AAAAAAAASY}
{\bkmkend AAAAAAAASY}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B33\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B33}
{\qr HST_RFTC_RFU_0x0B33{\bkmkstart AAAAAAAASZ}
{\bkmkend AAAAAAAASZ}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B34\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B34}
{\qr HST_RFTC_RFU_0x0B34{\bkmkstart AAAAAAAATA}
{\bkmkend AAAAAAAATA}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B35\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B35}
{\qr HST_RFTC_RFU_0x0B35{\bkmkstart AAAAAAAATB}
{\bkmkend AAAAAAAATB}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B36\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B36}
{\qr HST_RFTC_RFU_0x0B36{\bkmkstart AAAAAAAATC}
{\bkmkend AAAAAAAATC}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B37\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B37}
{\qr HST_RFTC_RFU_0x0B37{\bkmkstart AAAAAAAATD}
{\bkmkend AAAAAAAATD}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B38\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B38}
{\qr HST_RFTC_RFU_0x0B38{\bkmkstart AAAAAAAATE}
{\bkmkend AAAAAAAATE}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B39\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B39}
{\qr HST_RFTC_RFU_0x0B39{\bkmkstart AAAAAAAATF}
{\bkmkend AAAAAAAATF}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B3A\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B3A}
{\qr HST_RFTC_RFU_0x0B3A{\bkmkstart AAAAAAAATG}
{\bkmkend AAAAAAAATG}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B3B\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B3B}
{\qr HST_RFTC_RFU_0x0B3B{\bkmkstart AAAAAAAATH}
{\bkmkend AAAAAAAATH}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B3C\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B3C}
{\qr HST_RFTC_RFU_0x0B3C{\bkmkstart AAAAAAAATI}
{\bkmkend AAAAAAAATI}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B3D\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B3D}
{\qr HST_RFTC_RFU_0x0B3D{\bkmkstart AAAAAAAATJ}
{\bkmkend AAAAAAAATJ}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B3E\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B3E}
{\qr HST_RFTC_RFU_0x0B3E{\bkmkstart AAAAAAAATK}
{\bkmkend AAAAAAAATK}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B3F\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B3F}
{\qr HST_RFTC_RFU_0x0B3F{\bkmkstart AAAAAAAATL}
{\bkmkend AAAAAAAATL}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_FRQHOPMODE\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_FRQHOPMODE}
{\qr HST_RFTC_FRQHOPMODE{\bkmkstart AAAAAAAATM}
{\bkmkend AAAAAAAATM}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_FRQHOPENTRYCNT\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_FRQHOPENTRYCNT}
{\qr HST_RFTC_FRQHOPENTRYCNT{\bkmkstart AAAAAAAATN}
{\bkmkend AAAAAAAATN}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_FRQHOPTABLEINDEX\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_FRQHOPTABLEINDEX}
{\qr HST_RFTC_FRQHOPTABLEINDEX{\bkmkstart AAAAAAAATO}
{\bkmkend AAAAAAAATO}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_HOPCNT\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_HOPCNT}
{\qr MAC_RFTC_HOPCNT{\bkmkstart AAAAAAAATP}
{\bkmkend AAAAAAAATP}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_MINHOPDUR\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_MINHOPDUR}
{\qr HST_RFTC_MINHOPDUR{\bkmkstart AAAAAAAATQ}
{\bkmkend AAAAAAAATQ}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_MAXHOPDUR\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_MAXHOPDUR}
{\qr HST_RFTC_MAXHOPDUR{\bkmkstart AAAAAAAATR}
{\bkmkend AAAAAAAATR}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_FRQHOPRANDSEED\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_FRQHOPRANDSEED}
{\qr HST_RFTC_FRQHOPRANDSEED{\bkmkstart AAAAAAAATS}
{\bkmkend AAAAAAAATS}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_FRQHOPSHFTREGVAL\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_FRQHOPSHFTREGVAL}
{\qr MAC_RFTC_FRQHOPSHFTREGVAL{\bkmkstart AAAAAAAATT}
{\bkmkend AAAAAAAATT}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_FRQHOPRANDNUMCNT\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_FRQHOPRANDNUMCNT}
{\qr MAC_RFTC_FRQHOPRANDNUMCNT{\bkmkstart AAAAAAAATU}
{\bkmkend AAAAAAAATU}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_FRQCHINDEX\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_FRQCHINDEX}
{\qr HST_RFTC_FRQCHINDEX{\bkmkstart AAAAAAAATV}
{\bkmkend AAAAAAAATV}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_PLLLOCKTIMEOUT\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_PLLLOCKTIMEOUT}
{\qr HST_RFTC_PLLLOCKTIMEOUT{\bkmkstart AAAAAAAATW}
{\bkmkend AAAAAAAATW}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_PLLLOCK_DET_THRSH\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_PLLLOCK_DET_THRSH}
{\qr HST_RFTC_PLLLOCK_DET_THRSH{\bkmkstart AAAAAAAATX}
{\bkmkend AAAAAAAATX}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_PLLLOCK_DET_CNT\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_PLLLOCK_DET_CNT}
{\qr HST_RFTC_PLLLOCK_DET_CNT{\bkmkstart AAAAAAAATY}
{\bkmkend AAAAAAAATY}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_PLLLOCK_TO\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_PLLLOCK_TO}
{\qr HST_RFTC_PLLLOCK_TO{\bkmkstart AAAAAAAATZ}
{\bkmkend AAAAAAAATZ}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_BERREADDELAY\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_BERREADDELAY}
{\qr HST_RFTC_BERREADDELAY{\bkmkstart AAAAAAAAUA}
{\bkmkend AAAAAAAAUA}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B4F\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B4F}
{\qr HST_RFTC_RFU_0x0B4F{\bkmkstart AAAAAAAAUB}
{\bkmkend AAAAAAAAUB}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_FWDRFPWRRAWADC\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_FWDRFPWRRAWADC}
{\qr MAC_RFTC_FWDRFPWRRAWADC{\bkmkstart AAAAAAAAUC}
{\bkmkend AAAAAAAAUC}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_REVRFPWRRAWADC\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_REVRFPWRRAWADC}
{\qr MAC_RFTC_REVRFPWRRAWADC{\bkmkstart AAAAAAAAUD}
{\bkmkend AAAAAAAAUD}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_ANTSENSERAWADC\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_ANTSENSERAWADC}
{\qr MAC_RFTC_ANTSENSERAWADC{\bkmkstart AAAAAAAAUE}
{\bkmkend AAAAAAAAUE}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_AMBTEMPRAWADC\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_AMBTEMPRAWADC}
{\qr MAC_RFTC_AMBTEMPRAWADC{\bkmkstart AAAAAAAAUF}
{\bkmkend AAAAAAAAUF}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_PATEMPRAWADC\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_PATEMPRAWADC}
{\qr MAC_RFTC_PATEMPRAWADC{\bkmkstart AAAAAAAAUG}
{\bkmkend AAAAAAAAUG}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_XCVRTEMPRAWADC\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_XCVRTEMPRAWADC}
{\qr MAC_RFTC_XCVRTEMPRAWADC{\bkmkstart AAAAAAAAUH}
{\bkmkend AAAAAAAAUH}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B56\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B56}
{\qr HST_RFTC_RFU_0x0B56{\bkmkstart AAAAAAAAUI}
{\bkmkend AAAAAAAAUI}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B57\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B57}
{\qr HST_RFTC_RFU_0x0B57{\bkmkstart AAAAAAAAUJ}
{\bkmkend AAAAAAAAUJ}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B58\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B58}
{\qr HST_RFTC_RFU_0x0B58{\bkmkstart AAAAAAAAUK}
{\bkmkend AAAAAAAAUK}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B59\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B59}
{\qr HST_RFTC_RFU_0x0B59{\bkmkstart AAAAAAAAUL}
{\bkmkend AAAAAAAAUL}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B5A\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B5A}
{\qr HST_RFTC_RFU_0x0B5A{\bkmkstart AAAAAAAAUM}
{\bkmkend AAAAAAAAUM}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B5B\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B5B}
{\qr HST_RFTC_RFU_0x0B5B{\bkmkstart AAAAAAAAUN}
{\bkmkend AAAAAAAAUN}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B5C\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B5C}
{\qr HST_RFTC_RFU_0x0B5C{\bkmkstart AAAAAAAAUO}
{\bkmkend AAAAAAAAUO}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B5D\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B5D}
{\qr HST_RFTC_RFU_0x0B5D{\bkmkstart AAAAAAAAUP}
{\bkmkend AAAAAAAAUP}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B5E\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B5E}
{\qr HST_RFTC_RFU_0x0B5E{\bkmkstart AAAAAAAAUQ}
{\bkmkend AAAAAAAAUQ}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B5F\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B5F}
{\qr HST_RFTC_RFU_0x0B5F{\bkmkstart AAAAAAAAUR}
{\bkmkend AAAAAAAAUR}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_CURRENT_PROFILE\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_CURRENT_PROFILE}
{\qr HST_RFTC_CURRENT_PROFILE{\bkmkstart AAAAAAAAUS}
{\bkmkend AAAAAAAAUS}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_PROF_SEL\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_PROF_SEL}
{\qr HST_RFTC_PROF_SEL{\bkmkstart AAAAAAAAUT}
{\bkmkend AAAAAAAAUT}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_PROF_CFG\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_PROF_CFG}
{\qr MAC_RFTC_PROF_CFG{\bkmkstart AAAAAAAAUU}
{\bkmkend AAAAAAAAUU}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_PROF_ID_HIGH\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_PROF_ID_HIGH}
{\qr MAC_RFTC_PROF_ID_HIGH{\bkmkstart AAAAAAAAUV}
{\bkmkend AAAAAAAAUV}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_PROF_ID_LOW\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_PROF_ID_LOW}
{\qr MAC_RFTC_PROF_ID_LOW{\bkmkstart AAAAAAAAUW}
{\bkmkend AAAAAAAAUW}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_PROF_IDVER\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_PROF_IDVER}
{\qr MAC_RFTC_PROF_IDVER{\bkmkstart AAAAAAAAUX}
{\bkmkend AAAAAAAAUX}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_PROF_PROTOCOL\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_PROF_PROTOCOL}
{\qr MAC_RFTC_PROF_PROTOCOL{\bkmkstart AAAAAAAAUY}
{\bkmkend AAAAAAAAUY}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_PROF_R2TMODTYPE\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_PROF_R2TMODTYPE}
{\qr MAC_RFTC_PROF_R2TMODTYPE{\bkmkstart AAAAAAAAUZ}
{\bkmkend AAAAAAAAUZ}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_PROF_TARI\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_PROF_TARI}
{\qr MAC_RFTC_PROF_TARI{\bkmkstart AAAAAAAAVA}
{\bkmkend AAAAAAAAVA}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_PROF_X\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_PROF_X}
{\qr MAC_RFTC_PROF_X{\bkmkstart AAAAAAAAVB}
{\bkmkend AAAAAAAAVB}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_PROF_PW\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_PROF_PW}
{\qr MAC_RFTC_PROF_PW{\bkmkstart AAAAAAAAVC}
{\bkmkend AAAAAAAAVC}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_PROF_RTCAL\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_PROF_RTCAL}
{\qr MAC_RFTC_PROF_RTCAL{\bkmkstart AAAAAAAAVD}
{\bkmkend AAAAAAAAVD}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_PROF_TRCAL\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_PROF_TRCAL}
{\qr MAC_RFTC_PROF_TRCAL{\bkmkstart AAAAAAAAVE}
{\bkmkend AAAAAAAAVE}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_PROF_DIVIDERATIO\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_PROF_DIVIDERATIO}
{\qr MAC_RFTC_PROF_DIVIDERATIO{\bkmkstart AAAAAAAAVF}
{\bkmkend AAAAAAAAVF}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_PROF_MILLERNUM\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_PROF_MILLERNUM}
{\qr MAC_RFTC_PROF_MILLERNUM{\bkmkstart AAAAAAAAVG}
{\bkmkend AAAAAAAAVG}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_PROF_T2RLINKFREQ\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_PROF_T2RLINKFREQ}
{\qr MAC_RFTC_PROF_T2RLINKFREQ{\bkmkstart AAAAAAAAVH}
{\bkmkend AAAAAAAAVH}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_PROF_VART2DELAY\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_PROF_VART2DELAY}
{\qr MAC_RFTC_PROF_VART2DELAY{\bkmkstart AAAAAAAAVI}
{\bkmkend AAAAAAAAVI}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_PROF_RXDELAY\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_PROF_RXDELAY}
{\qr MAC_RFTC_PROF_RXDELAY{\bkmkstart AAAAAAAAVJ}
{\bkmkend AAAAAAAAVJ}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_PROF_MINTOTT2DELAY\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_PROF_MINTOTT2DELAY}
{\qr MAC_RFTC_PROF_MINTOTT2DELAY{\bkmkstart AAAAAAAAVK}
{\bkmkend AAAAAAAAVK}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_PROF_TXPROPDELAY\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_PROF_TXPROPDELAY}
{\qr MAC_RFTC_PROF_TXPROPDELAY{\bkmkstart AAAAAAAAVL}
{\bkmkend AAAAAAAAVL}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_PROF_RSSIAVECFG\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_PROF_RSSIAVECFG}
{\qr MAC_RFTC_PROF_RSSIAVECFG{\bkmkstart AAAAAAAAVM}
{\bkmkend AAAAAAAAVM}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_PROF_PREAMCMD\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_PROF_PREAMCMD}
{\qr MAC_RFTC_PROF_PREAMCMD{\bkmkstart AAAAAAAAVN}
{\bkmkend AAAAAAAAVN}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_PROF_FSYNCCMD\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_PROF_FSYNCCMD}
{\qr MAC_RFTC_PROF_FSYNCCMD{\bkmkstart AAAAAAAAVO}
{\bkmkend AAAAAAAAVO}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_PROF_T2WAITCMD\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_PROF_T2WAITCMD}
{\qr MAC_RFTC_PROF_T2WAITCMD{\bkmkstart AAAAAAAAVP}
{\bkmkend AAAAAAAAVP}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B78\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B78}
{\qr HST_RFTC_RFU_0x0B78{\bkmkstart AAAAAAAAVQ}
{\bkmkend AAAAAAAAVQ}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B79\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B79}
{\qr HST_RFTC_RFU_0x0B79{\bkmkstart AAAAAAAAVR}
{\bkmkend AAAAAAAAVR}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B7A\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B7A}
{\qr HST_RFTC_RFU_0x0B7A{\bkmkstart AAAAAAAAVS}
{\bkmkend AAAAAAAAVS}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B7B\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B7B}
{\qr HST_RFTC_RFU_0x0B7B{\bkmkstart AAAAAAAAVT}
{\bkmkend AAAAAAAAVT}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B7C\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B7C}
{\qr HST_RFTC_RFU_0x0B7C{\bkmkstart AAAAAAAAVU}
{\bkmkend AAAAAAAAVU}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B7D\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B7D}
{\qr HST_RFTC_RFU_0x0B7D{\bkmkstart AAAAAAAAVV}
{\bkmkend AAAAAAAAVV}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B7E\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B7E}
{\qr HST_RFTC_RFU_0x0B7E{\bkmkstart AAAAAAAAVW}
{\bkmkend AAAAAAAAVW}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B7F\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B7F}
{\qr HST_RFTC_RFU_0x0B7F{\bkmkstart AAAAAAAAVX}
{\bkmkend AAAAAAAAVX}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B80\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B80}
{\qr HST_RFTC_RFU_0x0B80{\bkmkstart AAAAAAAAVY}
{\bkmkend AAAAAAAAVY}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B81\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B81}
{\qr HST_RFTC_RFU_0x0B81{\bkmkstart AAAAAAAAVZ}
{\bkmkend AAAAAAAAVZ}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B82\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B82}
{\qr HST_RFTC_RFU_0x0B82{\bkmkstart AAAAAAAAWA}
{\bkmkend AAAAAAAAWA}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B83\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B83}
{\qr HST_RFTC_RFU_0x0B83{\bkmkstart AAAAAAAAWB}
{\bkmkend AAAAAAAAWB}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B84\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B84}
{\qr HST_RFTC_RFU_0x0B84{\bkmkstart AAAAAAAAWC}
{\bkmkend AAAAAAAAWC}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_FRQCH_ENTRYCNT\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_FRQCH_ENTRYCNT}
{\qr HST_RFTC_FRQCH_ENTRYCNT{\bkmkstart AAAAAAAAWD}
{\bkmkend AAAAAAAAWD}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_FRQCH_SEL\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_FRQCH_SEL}
{\qr HST_RFTC_FRQCH_SEL{\bkmkstart AAAAAAAAWE}
{\bkmkend AAAAAAAAWE}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_FRQCH_CFG\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_FRQCH_CFG}
{\qr HST_RFTC_FRQCH_CFG{\bkmkstart AAAAAAAAWF}
{\bkmkend AAAAAAAAWF}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_FRQCH_DESC_PLLDIVMULT\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_FRQCH_DESC_PLLDIVMULT}
{\qr HST_RFTC_FRQCH_DESC_PLLDIVMULT{\bkmkstart AAAAAAAAWG}
{\bkmkend AAAAAAAAWG}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_FRQCH_DESC_PLLDACCTL\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_FRQCH_DESC_PLLDACCTL}
{\qr HST_RFTC_FRQCH_DESC_PLLDACCTL{\bkmkstart AAAAAAAAWH}
{\bkmkend AAAAAAAAWH}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_FRQCH_DESC_PLLLOCKSTAT0\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_FRQCH_DESC_PLLLOCKSTAT0}
{\qr MAC_RFTC_FRQCH_DESC_PLLLOCKSTAT0{\bkmkstart AAAAAAAAWI}
{\bkmkend AAAAAAAAWI}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_FRQCH_DESC_PLLLOCKSTAT1\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_FRQCH_DESC_PLLLOCKSTAT1}
{\qr MAC_RFTC_FRQCH_DESC_PLLLOCKSTAT1{\bkmkstart AAAAAAAAWJ}
{\bkmkend AAAAAAAAWJ}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_FRQCH_DESC_PARFU3\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_FRQCH_DESC_PARFU3}
{\qr HST_RFTC_FRQCH_DESC_PARFU3{\bkmkstart AAAAAAAAWK}
{\bkmkend AAAAAAAAWK}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_FRQCH_CMDSTART\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_FRQCH_CMDSTART}
{\qr HST_RFTC_FRQCH_CMDSTART{\bkmkstart AAAAAAAAWL}
{\bkmkend AAAAAAAAWL}
\cell }{\cell }{\row }
{\xe \v HST_CMD\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_CMD}
{\qr HST_CMD{\bkmkstart AAAAAAAAWM}
{\bkmkend AAAAAAAAWM}
\cell }{\cell }{\row }
{\xe \v MAC_VER\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_VER}
{\qr MAC_VER{\bkmkstart AAAAAAAAMA}
{\bkmkend AAAAAAAAMA}
\cell }{\cell }{\row }
{\xe \v MAC_INFO\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_INFO}
{\qr MAC_INFO{\bkmkstart AAAAAAAAMB}
{\bkmkend AAAAAAAAMB}
\cell }{\cell }{\row }
{\xe \v MAC_RFTRANSINFO\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTRANSINFO}
{\qr MAC_RFTRANSINFO{\bkmkstart AAAAAAAAMC}
{\bkmkend AAAAAAAAMC}
\cell }{\cell }{\row }
{\xe \v MAC_DBG1\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_DBG1}
{\qr MAC_DBG1{\bkmkstart AAAAAAAAMD}
{\bkmkend AAAAAAAAMD}
\cell }{\cell }{\row }
{\xe \v MAC_DBG2\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_DBG2}
{\qr MAC_DBG2{\bkmkstart AAAAAAAAME}
{\bkmkend AAAAAAAAME}
\cell }{\cell }{\row }
{\xe \v MAC_ERROR\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_ERROR}
{\qr MAC_ERROR{\bkmkstart AAAAAAAAMF}
{\bkmkend AAAAAAAAMF}
\cell }{\cell }{\row }
{\xe \v HST_ENGTST_ARG0\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_ENGTST_ARG0}
{\qr HST_ENGTST_ARG0{\bkmkstart AAAAAAAAMG}
{\bkmkend AAAAAAAAMG}
\cell }{\cell }{\row }
{\xe \v HST_ENGTST_ARG1\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_ENGTST_ARG1}
{\qr HST_ENGTST_ARG1{\bkmkstart AAAAAAAAMH}
{\bkmkend AAAAAAAAMH}
\cell }{\cell }{\row }
{\xe \v HST_DBG1\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_DBG1}
{\qr HST_DBG1{\bkmkstart AAAAAAAAMI}
{\bkmkend AAAAAAAAMI}
\cell }{\cell }{\row }
{\xe \v HST_EMU\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_EMU}
{\qr HST_EMU{\bkmkstart AAAAAAAAMJ}
{\bkmkend AAAAAAAAMJ}
\cell }{\cell }{\row }
{\xe \v HST_PWRMGMT\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_PWRMGMT}
{\qr HST_PWRMGMT{\bkmkstart AAAAAAAAMK}
{\bkmkend AAAAAAAAMK}
\cell }{\cell }{\row }
{\xe \v HST_CMNDIAGS\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_CMNDIAGS}
{\qr HST_CMNDIAGS{\bkmkstart AAAAAAAAML}
{\bkmkend AAAAAAAAML}
\cell }{\cell }{\row }
{\xe \v MAC_BLK02RES1\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_BLK02RES1}
{\qr MAC_BLK02RES1{\bkmkstart AAAAAAAAMM}
{\bkmkend AAAAAAAAMM}
\cell }{\cell }{\row }
{\xe \v HST_CTR_GCFG\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_CTR_GCFG}
{\qr HST_CTR_GCFG{\bkmkstart AAAAAAAAMN}
{\bkmkend AAAAAAAAMN}
\cell }{\cell }{\row }
{\xe \v HST_CTR1_CFG\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_CTR1_CFG}
{\qr HST_CTR1_CFG{\bkmkstart AAAAAAAAMO}
{\bkmkend AAAAAAAAMO}
\cell }{\cell }{\row }
{\xe \v MAC_CTR1_VAL\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_CTR1_VAL}
{\qr MAC_CTR1_VAL{\bkmkstart AAAAAAAAMP}
{\bkmkend AAAAAAAAMP}
\cell }{\cell }{\row }
{\xe \v HST_CTR2_CFG\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_CTR2_CFG}
{\qr HST_CTR2_CFG{\bkmkstart AAAAAAAAMQ}
{\bkmkend AAAAAAAAMQ}
\cell }{\cell }{\row }
{\xe \v MAC_CTR2_VAL\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_CTR2_VAL}
{\qr MAC_CTR2_VAL{\bkmkstart AAAAAAAAMR}
{\bkmkend AAAAAAAAMR}
\cell }{\cell }{\row }
{\xe \v HST_CTR3_CFG\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_CTR3_CFG}
{\qr HST_CTR3_CFG{\bkmkstart AAAAAAAAMS}
{\bkmkend AAAAAAAAMS}
\cell }{\cell }{\row }
{\xe \v MAC_CTR3_VAL\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_CTR3_VAL}
{\qr MAC_CTR3_VAL{\bkmkstart AAAAAAAAMT}
{\bkmkend AAAAAAAAMT}
\cell }{\cell }{\row }
{\xe \v HST_CTR4_CFG\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_CTR4_CFG}
{\qr HST_CTR4_CFG{\bkmkstart AAAAAAAAMU}
{\bkmkend AAAAAAAAMU}
\cell }{\cell }{\row }
{\xe \v MAC_CTR4_VAL\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_CTR4_VAL}
{\qr MAC_CTR4_VAL{\bkmkstart AAAAAAAAMV}
{\bkmkend AAAAAAAAMV}
\cell }{\cell }{\row }
{\xe \v HST_PROTSCH_SMIDX\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_PROTSCH_SMIDX}
{\qr HST_PROTSCH_SMIDX{\bkmkstart AAAAAAAAMW}
{\bkmkend AAAAAAAAMW}
\cell }{\cell }{\row }
{\xe \v HST_PROTSCH_SMCFG\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_PROTSCH_SMCFG}
{\qr HST_PROTSCH_SMCFG{\bkmkstart AAAAAAAAMX}
{\bkmkend AAAAAAAAMX}
\cell }{\cell }{\row }
{\xe \v HST_PROTSCH_FTIME_SEL\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_PROTSCH_FTIME_SEL}
{\qr HST_PROTSCH_FTIME_SEL{\bkmkstart AAAAAAAAMY}
{\bkmkend AAAAAAAAMY}
\cell }{\cell }{\row }
{\xe \v HST_PROTSCH_FTIME\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_PROTSCH_FTIME}
{\qr HST_PROTSCH_FTIME{\bkmkstart AAAAAAAAMZ}
{\bkmkend AAAAAAAAMZ}
\cell }{\cell }{\row }
{\xe \v HST_PROTSCH_SMCFG_SEL\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_PROTSCH_SMCFG_SEL}
{\qr HST_PROTSCH_SMCFG_SEL{\bkmkstart AAAAAAAANA}
{\bkmkend AAAAAAAANA}
\cell }{\cell }{\row }
{\xe \v HST_PROTSCH_TXTIME_SEL\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_PROTSCH_TXTIME_SEL}
{\qr HST_PROTSCH_TXTIME_SEL{\bkmkstart AAAAAAAANB}
{\bkmkend AAAAAAAANB}
\cell }{\cell }{\row }
{\xe \v HST_PROTSCH_TXTIME_ON\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_PROTSCH_TXTIME_ON}
{\qr HST_PROTSCH_TXTIME_ON{\bkmkstart AAAAAAAANC}
{\bkmkend AAAAAAAANC}
\cell }{\cell }{\row }
{\xe \v HST_PROTSCH_TXTIME_OFF\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_PROTSCH_TXTIME_OFF}
{\qr HST_PROTSCH_TXTIME_OFF{\bkmkstart AAAAAAAAND}
{\bkmkend AAAAAAAAND}
\cell }{\cell }{\row }
{\xe \v HST_PROTSCH_CYCCFG_SEL\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_PROTSCH_CYCCFG_SEL}
{\qr HST_PROTSCH_CYCCFG_SEL{\bkmkstart AAAAAAAANE}
{\bkmkend AAAAAAAANE}
\cell }{\cell }{\row }
{\xe \v HST_PROTSCH_CYCCFG_DESC_ADJ1\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_PROTSCH_CYCCFG_DESC_ADJ1}
{\qr HST_PROTSCH_CYCCFG_DESC_ADJ1{\bkmkstart AAAAAAAANF}
{\bkmkend AAAAAAAANF}
\cell }{\cell }{\row }
{\xe \v HST_PROTSCH_ADJCW\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_PROTSCH_ADJCW}
{\qr HST_PROTSCH_ADJCW{\bkmkstart AAAAAAAANG}
{\bkmkend AAAAAAAANG}
\cell }{\cell }{\row }
{\xe \v HST_MBP_ADDR\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_MBP_ADDR}
{\qr HST_MBP_ADDR{\bkmkstart AAAAAAAANH}
{\bkmkend AAAAAAAANH}
\cell }{\cell }{\row }
{\xe \v HST_MBP_DATA\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_MBP_DATA}
{\qr HST_MBP_DATA{\bkmkstart AAAAAAAANI}
{\bkmkend AAAAAAAANI}
\cell }{\cell }{\row }
{\xe \v HST_MBP_RFU_0x0402\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_MBP_RFU_0x0402}
{\qr HST_MBP_RFU_0x0402{\bkmkstart AAAAAAAANJ}
{\bkmkend AAAAAAAANJ}
\cell }{\cell }{\row }
{\xe \v HST_MBP_RFU_0x0403\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_MBP_RFU_0x0403}
{\qr HST_MBP_RFU_0x0403{\bkmkstart AAAAAAAANK}
{\bkmkend AAAAAAAANK}
\cell }{\cell }{\row }
{\xe \v HST_MBP_RFU_0x0404\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_MBP_RFU_0x0404}
{\qr HST_MBP_RFU_0x0404{\bkmkstart AAAAAAAANL}
{\bkmkend AAAAAAAANL}
\cell }{\cell }{\row }
{\xe \v HST_MBP_RFU_0x0405\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_MBP_RFU_0x0405}
{\qr HST_MBP_RFU_0x0405{\bkmkstart AAAAAAAANM}
{\bkmkend AAAAAAAANM}
\cell }{\cell }{\row }
{\xe \v HST_MBP_RFU_0x0406\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_MBP_RFU_0x0406}
{\qr HST_MBP_RFU_0x0406{\bkmkstart AAAAAAAANN}
{\bkmkend AAAAAAAANN}
\cell }{\cell }{\row }
{\xe \v HST_MBP_RFU_0x0407\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_MBP_RFU_0x0407}
{\qr HST_MBP_RFU_0x0407{\bkmkstart AAAAAAAANO}
{\bkmkend AAAAAAAANO}
\cell }{\cell }{\row }
{\xe \v HST_LPROF_SEL\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_LPROF_SEL}
{\qr HST_LPROF_SEL{\bkmkstart AAAAAAAANP}
{\bkmkend AAAAAAAANP}
\cell }{\cell }{\row }
{\xe \v HST_LPROF_ADDR\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_LPROF_ADDR}
{\qr HST_LPROF_ADDR{\bkmkstart AAAAAAAANQ}
{\bkmkend AAAAAAAANQ}
\cell }{\cell }{\row }
{\xe \v HST_LPROF_DATA\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_LPROF_DATA}
{\qr HST_LPROF_DATA{\bkmkstart AAAAAAAANR}
{\bkmkend AAAAAAAANR}
\cell }{\cell }{\row }
{\xe \v HST_OEM_ADDR\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_OEM_ADDR}
{\qr HST_OEM_ADDR{\bkmkstart AAAAAAAANS}
{\bkmkend AAAAAAAANS}
\cell }{\cell }{\row }
{\xe \v HST_OEM_DATA\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_OEM_DATA}
{\qr HST_OEM_DATA{\bkmkstart AAAAAAAANT}
{\bkmkend AAAAAAAANT}
\cell }{\cell }{\row }
{\xe \v HST_GPIO_INMSK\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_GPIO_INMSK}
{\qr HST_GPIO_INMSK{\bkmkstart AAAAAAAANU}
{\bkmkend AAAAAAAANU}
\cell }{\cell }{\row }
{\xe \v HST_GPIO_OUTMSK\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_GPIO_OUTMSK}
{\qr HST_GPIO_OUTMSK{\bkmkstart AAAAAAAANV}
{\bkmkend AAAAAAAANV}
\cell }{\cell }{\row }
{\xe \v HST_GPIO_OUTVAL\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_GPIO_OUTVAL}
{\qr HST_GPIO_OUTVAL{\bkmkstart AAAAAAAANW}
{\bkmkend AAAAAAAANW}
\cell }{\cell }{\row }
{\xe \v HST_GPIO_CFG\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_GPIO_CFG}
{\qr HST_GPIO_CFG{\bkmkstart AAAAAAAANX}
{\bkmkend AAAAAAAANX}
\cell }{\cell }{\row }
{\xe \v HST_ANT_CYCLES\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_ANT_CYCLES}
{\qr HST_ANT_CYCLES{\bkmkstart AAAAAAAANY}
{\bkmkend AAAAAAAANY}
\cell }{\cell }{\row }
{\xe \v HST_ANT_DESC_SEL\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_ANT_DESC_SEL}
{\qr HST_ANT_DESC_SEL{\bkmkstart AAAAAAAANZ}
{\bkmkend AAAAAAAANZ}
\cell }{\cell }{\row }
{\xe \v HST_ANT_DESC_CFG\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_ANT_DESC_CFG}
{\qr HST_ANT_DESC_CFG{\bkmkstart AAAAAAAAOA}
{\bkmkend AAAAAAAAOA}
\cell }{\cell }{\row }
{\xe \v MAC_ANT_DESC_STAT\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_ANT_DESC_STAT}
{\qr MAC_ANT_DESC_STAT{\bkmkstart AAAAAAAAOB}
{\bkmkend AAAAAAAAOB}
\cell }{\cell }{\row }
{\xe \v HST_ANT_DESC_PORTDEF\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_ANT_DESC_PORTDEF}
{\qr HST_ANT_DESC_PORTDEF{\bkmkstart AAAAAAAAOC}
{\bkmkend AAAAAAAAOC}
\cell }{\cell }{\row }
{\xe \v HST_ANT_DESC_DWELL\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_ANT_DESC_DWELL}
{\qr HST_ANT_DESC_DWELL{\bkmkstart AAAAAAAAOD}
{\bkmkend AAAAAAAAOD}
\cell }{\cell }{\row }
{\xe \v HST_ANT_DESC_RFPOWER\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_ANT_DESC_RFPOWER}
{\qr HST_ANT_DESC_RFPOWER{\bkmkstart AAAAAAAAOE}
{\bkmkend AAAAAAAAOE}
\cell }{\cell }{\row }
{\xe \v HST_ANT_DESC_INV_CNT\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_ANT_DESC_INV_CNT}
{\qr HST_ANT_DESC_INV_CNT{\bkmkstart AAAAAAAAOF}
{\bkmkend AAAAAAAAOF}
\cell }{\cell }{\row }
{\xe \v HST_TAGMSK_DESC_SEL\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_TAGMSK_DESC_SEL}
{\qr HST_TAGMSK_DESC_SEL{\bkmkstart AAAAAAAAOG}
{\bkmkend AAAAAAAAOG}
\cell }{\cell }{\row }
{\xe \v HST_TAGMSK_DESC_CFG\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_TAGMSK_DESC_CFG}
{\qr HST_TAGMSK_DESC_CFG{\bkmkstart AAAAAAAAOH}
{\bkmkend AAAAAAAAOH}
\cell }{\cell }{\row }
{\xe \v HST_TAGMSK_BANK\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_TAGMSK_BANK}
{\qr HST_TAGMSK_BANK{\bkmkstart AAAAAAAAOI}
{\bkmkend AAAAAAAAOI}
\cell }{\cell }{\row }
{\xe \v HST_TAGMSK_PTR\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_TAGMSK_PTR}
{\qr HST_TAGMSK_PTR{\bkmkstart AAAAAAAAOJ}
{\bkmkend AAAAAAAAOJ}
\cell }{\cell }{\row }
{\xe \v HST_TAGMSK_LEN\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_TAGMSK_LEN}
{\qr HST_TAGMSK_LEN{\bkmkstart AAAAAAAAOK}
{\bkmkend AAAAAAAAOK}
\cell }{\cell }{\row }
{\xe \v HST_TAGMSK_0_3\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_TAGMSK_0_3}
{\qr HST_TAGMSK_0_3{\bkmkstart AAAAAAAAOL}
{\bkmkend AAAAAAAAOL}
\cell }{\cell }{\row }
{\xe \v HST_TAGMSK_4_7\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_TAGMSK_4_7}
{\qr HST_TAGMSK_4_7{\bkmkstart AAAAAAAAOM}
{\bkmkend AAAAAAAAOM}
\cell }{\cell }{\row }
{\xe \v HST_TAGMSK_8_11\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_TAGMSK_8_11}
{\qr HST_TAGMSK_8_11{\bkmkstart AAAAAAAAON}
{\bkmkend AAAAAAAAON}
\cell }{\cell }{\row }
{\xe \v HST_TAGMSK_12_15\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_TAGMSK_12_15}
{\qr HST_TAGMSK_12_15{\bkmkstart AAAAAAAAOO}
{\bkmkend AAAAAAAAOO}
\cell }{\cell }{\row }
{\xe \v HST_TAGMSK_16_19\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_TAGMSK_16_19}
{\qr HST_TAGMSK_16_19{\bkmkstart AAAAAAAAOP}
{\bkmkend AAAAAAAAOP}
\cell }{\cell }{\row }
{\xe \v HST_TAGMSK_20_23\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_TAGMSK_20_23}
{\qr HST_TAGMSK_20_23{\bkmkstart AAAAAAAAOQ}
{\bkmkend AAAAAAAAOQ}
\cell }{\cell }{\row }
{\xe \v HST_TAGMSK_24_27\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_TAGMSK_24_27}
{\qr HST_TAGMSK_24_27{\bkmkstart AAAAAAAAOR}
{\bkmkend AAAAAAAAOR}
\cell }{\cell }{\row }
{\xe \v HST_TAGMSK_28_31\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_TAGMSK_28_31}
{\qr HST_TAGMSK_28_31{\bkmkstart AAAAAAAAOS}
{\bkmkend AAAAAAAAOS}
\cell }{\cell }{\row }
{\xe \v HST_QUERY_CFG\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_QUERY_CFG}
{\qr HST_QUERY_CFG{\bkmkstart AAAAAAAAOT}
{\bkmkend AAAAAAAAOT}
\cell }{\cell }{\row }
{\xe \v HST_INV_CFG\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_INV_CFG}
{\qr HST_INV_CFG{\bkmkstart AAAAAAAAOU}
{\bkmkend AAAAAAAAOU}
\cell }{\cell }{\row }
{\xe \v HST_INV_SEL\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_INV_SEL}
{\qr HST_INV_SEL{\bkmkstart AAAAAAAAOV}
{\bkmkend AAAAAAAAOV}
\cell }{\cell }{\row }
{\xe \v HST_INV_ALG_PARM_0\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_INV_ALG_PARM_0}
{\qr HST_INV_ALG_PARM_0{\bkmkstart AAAAAAAAOW}
{\bkmkend AAAAAAAAOW}
\cell }{\cell }{\row }
{\xe \v HST_INV_ALG_PARM_1\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_INV_ALG_PARM_1}
{\qr HST_INV_ALG_PARM_1{\bkmkstart AAAAAAAAOX}
{\bkmkend AAAAAAAAOX}
\cell }{\cell }{\row }
{\xe \v HST_INV_ALG_PARM_2\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_INV_ALG_PARM_2}
{\qr HST_INV_ALG_PARM_2{\bkmkstart AAAAAAAAOY}
{\bkmkend AAAAAAAAOY}
\cell }{\cell }{\row }
{\xe \v HST_INV_ALG_PARM_3\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_INV_ALG_PARM_3}
{\qr HST_INV_ALG_PARM_3{\bkmkstart AAAAAAAAOZ}
{\bkmkend AAAAAAAAOZ}
\cell }{\cell }{\row }
{\xe \v HST_INV_RFU_0x0907\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_INV_RFU_0x0907}
{\qr HST_INV_RFU_0x0907{\bkmkstart AAAAAAAAPA}
{\bkmkend AAAAAAAAPA}
\cell }{\cell }{\row }
{\xe \v HST_INV_RFU_0x0908\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_INV_RFU_0x0908}
{\qr HST_INV_RFU_0x0908{\bkmkstart AAAAAAAAPB}
{\bkmkend AAAAAAAAPB}
\cell }{\cell }{\row }
{\xe \v HST_INV_RFU_0x0909\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_INV_RFU_0x0909}
{\qr HST_INV_RFU_0x0909{\bkmkstart AAAAAAAAPC}
{\bkmkend AAAAAAAAPC}
\cell }{\cell }{\row }
{\xe \v HST_INV_RFU_0x090A\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_INV_RFU_0x090A}
{\qr HST_INV_RFU_0x090A{\bkmkstart AAAAAAAAPD}
{\bkmkend AAAAAAAAPD}
\cell }{\cell }{\row }
{\xe \v HST_INV_RFU_0x090B\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_INV_RFU_0x090B}
{\qr HST_INV_RFU_0x090B{\bkmkstart AAAAAAAAPE}
{\bkmkend AAAAAAAAPE}
\cell }{\cell }{\row }
{\xe \v HST_INV_RFU_0x090C\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_INV_RFU_0x090C}
{\qr HST_INV_RFU_0x090C{\bkmkstart AAAAAAAAPF}
{\bkmkend AAAAAAAAPF}
\cell }{\cell }{\row }
{\xe \v HST_INV_RFU_0x090D\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_INV_RFU_0x090D}
{\qr HST_INV_RFU_0x090D{\bkmkstart AAAAAAAAPG}
{\bkmkend AAAAAAAAPG}
\cell }{\cell }{\row }
{\xe \v HST_INV_RFU_0x090E\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_INV_RFU_0x090E}
{\qr HST_INV_RFU_0x090E{\bkmkstart AAAAAAAAPH}
{\bkmkend AAAAAAAAPH}
\cell }{\cell }{\row }
{\xe \v HST_INV_RFU_0x090F\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_INV_RFU_0x090F}
{\qr HST_INV_RFU_0x090F{\bkmkstart AAAAAAAAPI}
{\bkmkend AAAAAAAAPI}
\cell }{\cell }{\row }
{\xe \v HST_INV_EPC_MATCH_SEL\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_INV_EPC_MATCH_SEL}
{\qr HST_INV_EPC_MATCH_SEL{\bkmkstart AAAAAAAAPJ}
{\bkmkend AAAAAAAAPJ}
\cell }{\cell }{\row }
{\xe \v HST_INV_EPC_MATCH_CFG\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_INV_EPC_MATCH_CFG}
{\qr HST_INV_EPC_MATCH_CFG{\bkmkstart AAAAAAAAPK}
{\bkmkend AAAAAAAAPK}
\cell }{\cell }{\row }
{\xe \v HST_INV_EPCDAT_0_3\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_INV_EPCDAT_0_3}
{\qr HST_INV_EPCDAT_0_3{\bkmkstart AAAAAAAAPL}
{\bkmkend AAAAAAAAPL}
\cell }{\cell }{\row }
{\xe \v HST_INV_EPCDAT_4_7\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_INV_EPCDAT_4_7}
{\qr HST_INV_EPCDAT_4_7{\bkmkstart AAAAAAAAPM}
{\bkmkend AAAAAAAAPM}
\cell }{\cell }{\row }
{\xe \v HST_INV_EPCDAT_8_11\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_INV_EPCDAT_8_11}
{\qr HST_INV_EPCDAT_8_11{\bkmkstart AAAAAAAAPN}
{\bkmkend AAAAAAAAPN}
\cell }{\cell }{\row }
{\xe \v HST_INV_EPCDAT_12_15\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_INV_EPCDAT_12_15}
{\qr HST_INV_EPCDAT_12_15{\bkmkstart AAAAAAAAPO}
{\bkmkend AAAAAAAAPO}
\cell }{\cell }{\row }
{\xe \v HST_INV_EPCDAT_16_19\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_INV_EPCDAT_16_19}
{\qr HST_INV_EPCDAT_16_19{\bkmkstart AAAAAAAAPP}
{\bkmkend AAAAAAAAPP}
\cell }{\cell }{\row }
{\xe \v HST_INV_EPCDAT_20_23\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_INV_EPCDAT_20_23}
{\qr HST_INV_EPCDAT_20_23{\bkmkstart AAAAAAAAPQ}
{\bkmkend AAAAAAAAPQ}
\cell }{\cell }{\row }
{\xe \v HST_INV_EPCDAT_24_27\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_INV_EPCDAT_24_27}
{\qr HST_INV_EPCDAT_24_27{\bkmkstart AAAAAAAAPR}
{\bkmkend AAAAAAAAPR}
\cell }{\cell }{\row }
{\xe \v HST_INV_EPCDAT_28_31\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_INV_EPCDAT_28_31}
{\qr HST_INV_EPCDAT_28_31{\bkmkstart AAAAAAAAPS}
{\bkmkend AAAAAAAAPS}
\cell }{\cell }{\row }
{\xe \v HST_INV_EPCDAT_32_35\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_INV_EPCDAT_32_35}
{\qr HST_INV_EPCDAT_32_35{\bkmkstart AAAAAAAAPT}
{\bkmkend AAAAAAAAPT}
\cell }{\cell }{\row }
{\xe \v HST_INV_EPCDAT_36_39\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_INV_EPCDAT_36_39}
{\qr HST_INV_EPCDAT_36_39{\bkmkstart AAAAAAAAPU}
{\bkmkend AAAAAAAAPU}
\cell }{\cell }{\row }
{\xe \v HST_INV_EPCDAT_40_43\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_INV_EPCDAT_40_43}
{\qr HST_INV_EPCDAT_40_43{\bkmkstart AAAAAAAAPV}
{\bkmkend AAAAAAAAPV}
\cell }{\cell }{\row }
{\xe \v HST_INV_EPCDAT_44_47\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_INV_EPCDAT_44_47}
{\qr HST_INV_EPCDAT_44_47{\bkmkstart AAAAAAAAPW}
{\bkmkend AAAAAAAAPW}
\cell }{\cell }{\row }
{\xe \v HST_INV_EPCDAT_48_51\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_INV_EPCDAT_48_51}
{\qr HST_INV_EPCDAT_48_51{\bkmkstart AAAAAAAAPX}
{\bkmkend AAAAAAAAPX}
\cell }{\cell }{\row }
{\xe \v HST_INV_EPCDAT_52_55\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_INV_EPCDAT_52_55}
{\qr HST_INV_EPCDAT_52_55{\bkmkstart AAAAAAAAPY}
{\bkmkend AAAAAAAAPY}
\cell }{\cell }{\row }
{\xe \v HST_INV_EPCDAT_56_59\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_INV_EPCDAT_56_59}
{\qr HST_INV_EPCDAT_56_59{\bkmkstart AAAAAAAAPZ}
{\bkmkend AAAAAAAAPZ}
\cell }{\cell }{\row }
{\xe \v HST_INV_EPCDAT_60_63\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_INV_EPCDAT_60_63}
{\qr HST_INV_EPCDAT_60_63{\bkmkstart AAAAAAAAQA}
{\bkmkend AAAAAAAAQA}
\cell }{\cell }{\row }
{\xe \v HST_TAGACC_DESC_SEL\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_TAGACC_DESC_SEL}
{\qr HST_TAGACC_DESC_SEL{\bkmkstart AAAAAAAAQB}
{\bkmkend AAAAAAAAQB}
\cell }{\cell }{\row }
{\xe \v HST_TAGACC_DESC_CFG\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_TAGACC_DESC_CFG}
{\qr HST_TAGACC_DESC_CFG{\bkmkstart AAAAAAAAQC}
{\bkmkend AAAAAAAAQC}
\cell }{\cell }{\row }
{\xe \v HST_TAGACC_BANK\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_TAGACC_BANK}
{\qr HST_TAGACC_BANK{\bkmkstart AAAAAAAAQD}
{\bkmkend AAAAAAAAQD}
\cell }{\cell }{\row }
{\xe \v HST_TAGACC_PTR\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_TAGACC_PTR}
{\qr HST_TAGACC_PTR{\bkmkstart AAAAAAAAQE}
{\bkmkend AAAAAAAAQE}
\cell }{\cell }{\row }
{\xe \v HST_TAGACC_CNT\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_TAGACC_CNT}
{\qr HST_TAGACC_CNT{\bkmkstart AAAAAAAAQF}
{\bkmkend AAAAAAAAQF}
\cell }{\cell }{\row }
{\xe \v HST_TAGACC_LOCKCFG\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_TAGACC_LOCKCFG}
{\qr HST_TAGACC_LOCKCFG{\bkmkstart AAAAAAAAQG}
{\bkmkend AAAAAAAAQG}
\cell }{\cell }{\row }
{\xe \v HST_TAGACC_ACCPWD\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_TAGACC_ACCPWD}
{\qr HST_TAGACC_ACCPWD{\bkmkstart AAAAAAAAQH}
{\bkmkend AAAAAAAAQH}
\cell }{\cell }{\row }
{\xe \v HST_TAGACC_KILLPWD\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_TAGACC_KILLPWD}
{\qr HST_TAGACC_KILLPWD{\bkmkstart AAAAAAAAQI}
{\bkmkend AAAAAAAAQI}
\cell }{\cell }{\row }
{\xe \v HST_TAGWRDAT_SEL\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_TAGWRDAT_SEL}
{\qr HST_TAGWRDAT_SEL{\bkmkstart AAAAAAAAQJ}
{\bkmkend AAAAAAAAQJ}
\cell }{\cell }{\row }
{\xe \v HST_TAGWRDAT_0\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_TAGWRDAT_0}
{\qr HST_TAGWRDAT_0{\bkmkstart AAAAAAAAQK}
{\bkmkend AAAAAAAAQK}
\cell }{\cell }{\row }
{\xe \v HST_TAGWRDAT_1\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_TAGWRDAT_1}
{\qr HST_TAGWRDAT_1{\bkmkstart AAAAAAAAQL}
{\bkmkend AAAAAAAAQL}
\cell }{\cell }{\row }
{\xe \v HST_TAGWRDAT_2\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_TAGWRDAT_2}
{\qr HST_TAGWRDAT_2{\bkmkstart AAAAAAAAQM}
{\bkmkend AAAAAAAAQM}
\cell }{\cell }{\row }
{\xe \v HST_TAGWRDAT_3\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_TAGWRDAT_3}
{\qr HST_TAGWRDAT_3{\bkmkstart AAAAAAAAQN}
{\bkmkend AAAAAAAAQN}
\cell }{\cell }{\row }
{\xe \v HST_TAGWRDAT_4\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_TAGWRDAT_4}
{\qr HST_TAGWRDAT_4{\bkmkstart AAAAAAAAQO}
{\bkmkend AAAAAAAAQO}
\cell }{\cell }{\row }
{\xe \v HST_TAGWRDAT_5\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_TAGWRDAT_5}
{\qr HST_TAGWRDAT_5{\bkmkstart AAAAAAAAQP}
{\bkmkend AAAAAAAAQP}
\cell }{\cell }{\row }
{\xe \v HST_TAGWRDAT_6\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_TAGWRDAT_6}
{\qr HST_TAGWRDAT_6{\bkmkstart AAAAAAAAQQ}
{\bkmkend AAAAAAAAQQ}
\cell }{\cell }{\row }
{\xe \v HST_TAGWRDAT_7\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_TAGWRDAT_7}
{\qr HST_TAGWRDAT_7{\bkmkstart AAAAAAAAQR}
{\bkmkend AAAAAAAAQR}
\cell }{\cell }{\row }
{\xe \v HST_TAGWRDAT_8\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_TAGWRDAT_8}
{\qr HST_TAGWRDAT_8{\bkmkstart AAAAAAAAQS}
{\bkmkend AAAAAAAAQS}
\cell }{\cell }{\row }
{\xe \v HST_TAGWRDAT_9\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_TAGWRDAT_9}
{\qr HST_TAGWRDAT_9{\bkmkstart AAAAAAAAQT}
{\bkmkend AAAAAAAAQT}
\cell }{\cell }{\row }
{\xe \v HST_TAGWRDAT_10\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_TAGWRDAT_10}
{\qr HST_TAGWRDAT_10{\bkmkstart AAAAAAAAQU}
{\bkmkend AAAAAAAAQU}
\cell }{\cell }{\row }
{\xe \v HST_TAGWRDAT_11\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_TAGWRDAT_11}
{\qr HST_TAGWRDAT_11{\bkmkstart AAAAAAAAQV}
{\bkmkend AAAAAAAAQV}
\cell }{\cell }{\row }
{\xe \v HST_TAGWRDAT_12\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_TAGWRDAT_12}
{\qr HST_TAGWRDAT_12{\bkmkstart AAAAAAAAQW}
{\bkmkend AAAAAAAAQW}
\cell }{\cell }{\row }
{\xe \v HST_TAGWRDAT_13\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_TAGWRDAT_13}
{\qr HST_TAGWRDAT_13{\bkmkstart AAAAAAAAQX}
{\bkmkend AAAAAAAAQX}
\cell }{\cell }{\row }
{\xe \v HST_TAGWRDAT_14\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_TAGWRDAT_14}
{\qr HST_TAGWRDAT_14{\bkmkstart AAAAAAAAQY}
{\bkmkend AAAAAAAAQY}
\cell }{\cell }{\row }
{\xe \v HST_TAGWRDAT_15\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_TAGWRDAT_15}
{\qr HST_TAGWRDAT_15{\bkmkstart AAAAAAAAQZ}
{\bkmkend AAAAAAAAQZ}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_PAPWRLEV\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_PAPWRLEV}
{\qr MAC_RFTC_PAPWRLEV{\bkmkstart AAAAAAAARA}
{\bkmkend AAAAAAAARA}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_PAPWRCTL_PGAIN\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_PAPWRCTL_PGAIN}
{\qr HST_RFTC_PAPWRCTL_PGAIN{\bkmkstart AAAAAAAARB}
{\bkmkend AAAAAAAARB}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_PAPWRCTL_IGAIN\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_PAPWRCTL_IGAIN}
{\qr HST_RFTC_PAPWRCTL_IGAIN{\bkmkstart AAAAAAAARC}
{\bkmkend AAAAAAAARC}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_PAPWRCTL_DGAIN\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_PAPWRCTL_DGAIN}
{\qr HST_RFTC_PAPWRCTL_DGAIN{\bkmkstart AAAAAAAARD}
{\bkmkend AAAAAAAARD}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_REVPWRLEV\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_REVPWRLEV}
{\qr MAC_RFTC_REVPWRLEV{\bkmkstart AAAAAAAARE}
{\bkmkend AAAAAAAARE}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_REVPWRTHRSH\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_REVPWRTHRSH}
{\qr HST_RFTC_REVPWRTHRSH{\bkmkstart AAAAAAAARF}
{\bkmkend AAAAAAAARF}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_AMBIENTTEMP\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_AMBIENTTEMP}
{\qr MAC_RFTC_AMBIENTTEMP{\bkmkstart AAAAAAAARG}
{\bkmkend AAAAAAAARG}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_AMBIENTTEMPTHRSH\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_AMBIENTTEMPTHRSH}
{\qr HST_RFTC_AMBIENTTEMPTHRSH{\bkmkstart AAAAAAAARH}
{\bkmkend AAAAAAAARH}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_XCVRTEMP\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_XCVRTEMP}
{\qr MAC_RFTC_XCVRTEMP{\bkmkstart AAAAAAAARI}
{\bkmkend AAAAAAAARI}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_XCVRTEMPTHRSH\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_XCVRTEMPTHRSH}
{\qr HST_RFTC_XCVRTEMPTHRSH{\bkmkstart AAAAAAAARJ}
{\bkmkend AAAAAAAARJ}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_PATEMP\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_PATEMP}
{\qr MAC_RFTC_PATEMP{\bkmkstart AAAAAAAARK}
{\bkmkend AAAAAAAARK}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_PATEMPTHRSH\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_PATEMPTHRSH}
{\qr HST_RFTC_PATEMPTHRSH{\bkmkstart AAAAAAAARL}
{\bkmkend AAAAAAAARL}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_PADELTATEMPTHRSH\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_PADELTATEMPTHRSH}
{\qr HST_RFTC_PADELTATEMPTHRSH{\bkmkstart AAAAAAAARM}
{\bkmkend AAAAAAAARM}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_PAPWRCTL_AIWDELAY\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_PAPWRCTL_AIWDELAY}
{\qr HST_RFTC_PAPWRCTL_AIWDELAY{\bkmkstart AAAAAAAARN}
{\bkmkend AAAAAAAARN}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_PAPWRCTL_STAT0\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_PAPWRCTL_STAT0}
{\qr MAC_RFTC_PAPWRCTL_STAT0{\bkmkstart AAAAAAAARO}
{\bkmkend AAAAAAAARO}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_PAPWRCTL_STAT1\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_PAPWRCTL_STAT1}
{\qr MAC_RFTC_PAPWRCTL_STAT1{\bkmkstart AAAAAAAARP}
{\bkmkend AAAAAAAARP}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_PAPWRCTL_STAT2\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_PAPWRCTL_STAT2}
{\qr MAC_RFTC_PAPWRCTL_STAT2{\bkmkstart AAAAAAAARQ}
{\bkmkend AAAAAAAARQ}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_PAPWRCTL_STAT3\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_PAPWRCTL_STAT3}
{\qr MAC_RFTC_PAPWRCTL_STAT3{\bkmkstart AAAAAAAARR}
{\bkmkend AAAAAAAARR}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_ANTSENSRESTHRSH\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_ANTSENSRESTHRSH}
{\qr HST_RFTC_ANTSENSRESTHRSH{\bkmkstart AAAAAAAARS}
{\bkmkend AAAAAAAARS}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_IFLNAAGCRANGE\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_IFLNAAGCRANGE}
{\qr HST_RFTC_IFLNAAGCRANGE{\bkmkstart AAAAAAAART}
{\bkmkend AAAAAAAART}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_LAST_ANACTRL1\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_LAST_ANACTRL1}
{\qr MAC_RFTC_LAST_ANACTRL1{\bkmkstart AAAAAAAARU}
{\bkmkend AAAAAAAARU}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_OPENLOOPPWRCTRL\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_OPENLOOPPWRCTRL}
{\qr HST_RFTC_OPENLOOPPWRCTRL{\bkmkstart AAAAAAAARV}
{\bkmkend AAAAAAAARV}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B16\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B16}
{\qr HST_RFTC_RFU_0x0B16{\bkmkstart AAAAAAAARW}
{\bkmkend AAAAAAAARW}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B17\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B17}
{\qr HST_RFTC_RFU_0x0B17{\bkmkstart AAAAAAAARX}
{\bkmkend AAAAAAAARX}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B18\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B18}
{\qr HST_RFTC_RFU_0x0B18{\bkmkstart AAAAAAAARY}
{\bkmkend AAAAAAAARY}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B19\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B19}
{\qr HST_RFTC_RFU_0x0B19{\bkmkstart AAAAAAAARZ}
{\bkmkend AAAAAAAARZ}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_PREDIST_COEFF0\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_PREDIST_COEFF0}
{\qr HST_RFTC_PREDIST_COEFF0{\bkmkstart AAAAAAAASA}
{\bkmkend AAAAAAAASA}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B1B\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B1B}
{\qr HST_RFTC_RFU_0x0B1B{\bkmkstart AAAAAAAASB}
{\bkmkend AAAAAAAASB}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B1C\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B1C}
{\qr HST_RFTC_RFU_0x0B1C{\bkmkstart AAAAAAAASC}
{\bkmkend AAAAAAAASC}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B1D\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B1D}
{\qr HST_RFTC_RFU_0x0B1D{\bkmkstart AAAAAAAASD}
{\bkmkend AAAAAAAASD}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B1E\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B1E}
{\qr HST_RFTC_RFU_0x0B1E{\bkmkstart AAAAAAAASE}
{\bkmkend AAAAAAAASE}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B1F\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B1F}
{\qr HST_RFTC_RFU_0x0B1F{\bkmkstart AAAAAAAASF}
{\bkmkend AAAAAAAASF}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_CAL_GGNEG7\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_CAL_GGNEG7}
{\qr HST_RFTC_CAL_GGNEG7{\bkmkstart AAAAAAAASG}
{\bkmkend AAAAAAAASG}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_CAL_GGNEG5\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_CAL_GGNEG5}
{\qr HST_RFTC_CAL_GGNEG5{\bkmkstart AAAAAAAASH}
{\bkmkend AAAAAAAASH}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_CAL_GGNEG3\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_CAL_GGNEG3}
{\qr HST_RFTC_CAL_GGNEG3{\bkmkstart AAAAAAAASI}
{\bkmkend AAAAAAAASI}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_CAL_GGNEG1\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_CAL_GGNEG1}
{\qr HST_RFTC_CAL_GGNEG1{\bkmkstart AAAAAAAASJ}
{\bkmkend AAAAAAAASJ}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_CAL_GGPLUS1\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_CAL_GGPLUS1}
{\qr HST_RFTC_CAL_GGPLUS1{\bkmkstart AAAAAAAASK}
{\bkmkend AAAAAAAASK}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_CAL_GGPLUS3\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_CAL_GGPLUS3}
{\qr HST_RFTC_CAL_GGPLUS3{\bkmkstart AAAAAAAASL}
{\bkmkend AAAAAAAASL}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_CAL_GGPLUS5\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_CAL_GGPLUS5}
{\qr HST_RFTC_CAL_GGPLUS5{\bkmkstart AAAAAAAASM}
{\bkmkend AAAAAAAASM}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_CAL_GGPLUS7\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_CAL_GGPLUS7}
{\qr HST_RFTC_CAL_GGPLUS7{\bkmkstart AAAAAAAASN}
{\bkmkend AAAAAAAASN}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_CAL_MACADCREFV\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_CAL_MACADCREFV}
{\qr HST_RFTC_CAL_MACADCREFV{\bkmkstart AAAAAAAASO}
{\bkmkend AAAAAAAASO}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_CAL_RFFWDPWR_C0\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_CAL_RFFWDPWR_C0}
{\qr HST_RFTC_CAL_RFFWDPWR_C0{\bkmkstart AAAAAAAASP}
{\bkmkend AAAAAAAASP}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_CAL_RFFWDPWR_C1\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_CAL_RFFWDPWR_C1}
{\qr HST_RFTC_CAL_RFFWDPWR_C1{\bkmkstart AAAAAAAASQ}
{\bkmkend AAAAAAAASQ}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_CAL_RFFWDPWR_C2\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_CAL_RFFWDPWR_C2}
{\qr HST_RFTC_CAL_RFFWDPWR_C2{\bkmkstart AAAAAAAASR}
{\bkmkend AAAAAAAASR}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B2C\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B2C}
{\qr HST_RFTC_RFU_0x0B2C{\bkmkstart AAAAAAAASS}
{\bkmkend AAAAAAAASS}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B2D\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B2D}
{\qr HST_RFTC_RFU_0x0B2D{\bkmkstart AAAAAAAAST}
{\bkmkend AAAAAAAAST}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B2E\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B2E}
{\qr HST_RFTC_RFU_0x0B2E{\bkmkstart AAAAAAAASU}
{\bkmkend AAAAAAAASU}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B2F\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B2F}
{\qr HST_RFTC_RFU_0x0B2F{\bkmkstart AAAAAAAASV}
{\bkmkend AAAAAAAASV}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_CLKDBLR_CFG\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_CLKDBLR_CFG}
{\qr HST_RFTC_CLKDBLR_CFG{\bkmkstart AAAAAAAASW}
{\bkmkend AAAAAAAASW}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_CLKDBLR_SEL\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_CLKDBLR_SEL}
{\qr HST_RFTC_CLKDBLR_SEL{\bkmkstart AAAAAAAASX}
{\bkmkend AAAAAAAASX}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_CLKDBLR_LUTENTRY\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_CLKDBLR_LUTENTRY}
{\qr HST_RFTC_CLKDBLR_LUTENTRY{\bkmkstart AAAAAAAASY}
{\bkmkend AAAAAAAASY}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B33\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B33}
{\qr HST_RFTC_RFU_0x0B33{\bkmkstart AAAAAAAASZ}
{\bkmkend AAAAAAAASZ}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B34\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B34}
{\qr HST_RFTC_RFU_0x0B34{\bkmkstart AAAAAAAATA}
{\bkmkend AAAAAAAATA}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B35\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B35}
{\qr HST_RFTC_RFU_0x0B35{\bkmkstart AAAAAAAATB}
{\bkmkend AAAAAAAATB}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B36\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B36}
{\qr HST_RFTC_RFU_0x0B36{\bkmkstart AAAAAAAATC}
{\bkmkend AAAAAAAATC}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B37\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B37}
{\qr HST_RFTC_RFU_0x0B37{\bkmkstart AAAAAAAATD}
{\bkmkend AAAAAAAATD}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B38\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B38}
{\qr HST_RFTC_RFU_0x0B38{\bkmkstart AAAAAAAATE}
{\bkmkend AAAAAAAATE}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B39\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B39}
{\qr HST_RFTC_RFU_0x0B39{\bkmkstart AAAAAAAATF}
{\bkmkend AAAAAAAATF}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B3A\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B3A}
{\qr HST_RFTC_RFU_0x0B3A{\bkmkstart AAAAAAAATG}
{\bkmkend AAAAAAAATG}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B3B\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B3B}
{\qr HST_RFTC_RFU_0x0B3B{\bkmkstart AAAAAAAATH}
{\bkmkend AAAAAAAATH}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B3C\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B3C}
{\qr HST_RFTC_RFU_0x0B3C{\bkmkstart AAAAAAAATI}
{\bkmkend AAAAAAAATI}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B3D\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B3D}
{\qr HST_RFTC_RFU_0x0B3D{\bkmkstart AAAAAAAATJ}
{\bkmkend AAAAAAAATJ}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B3E\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B3E}
{\qr HST_RFTC_RFU_0x0B3E{\bkmkstart AAAAAAAATK}
{\bkmkend AAAAAAAATK}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B3F\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B3F}
{\qr HST_RFTC_RFU_0x0B3F{\bkmkstart AAAAAAAATL}
{\bkmkend AAAAAAAATL}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_FRQHOPMODE\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_FRQHOPMODE}
{\qr HST_RFTC_FRQHOPMODE{\bkmkstart AAAAAAAATM}
{\bkmkend AAAAAAAATM}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_FRQHOPENTRYCNT\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_FRQHOPENTRYCNT}
{\qr HST_RFTC_FRQHOPENTRYCNT{\bkmkstart AAAAAAAATN}
{\bkmkend AAAAAAAATN}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_FRQHOPTABLEINDEX\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_FRQHOPTABLEINDEX}
{\qr HST_RFTC_FRQHOPTABLEINDEX{\bkmkstart AAAAAAAATO}
{\bkmkend AAAAAAAATO}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_HOPCNT\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_HOPCNT}
{\qr MAC_RFTC_HOPCNT{\bkmkstart AAAAAAAATP}
{\bkmkend AAAAAAAATP}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_MINHOPDUR\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_MINHOPDUR}
{\qr HST_RFTC_MINHOPDUR{\bkmkstart AAAAAAAATQ}
{\bkmkend AAAAAAAATQ}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_MAXHOPDUR\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_MAXHOPDUR}
{\qr HST_RFTC_MAXHOPDUR{\bkmkstart AAAAAAAATR}
{\bkmkend AAAAAAAATR}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_FRQHOPRANDSEED\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_FRQHOPRANDSEED}
{\qr HST_RFTC_FRQHOPRANDSEED{\bkmkstart AAAAAAAATS}
{\bkmkend AAAAAAAATS}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_FRQHOPSHFTREGVAL\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_FRQHOPSHFTREGVAL}
{\qr MAC_RFTC_FRQHOPSHFTREGVAL{\bkmkstart AAAAAAAATT}
{\bkmkend AAAAAAAATT}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_FRQHOPRANDNUMCNT\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_FRQHOPRANDNUMCNT}
{\qr MAC_RFTC_FRQHOPRANDNUMCNT{\bkmkstart AAAAAAAATU}
{\bkmkend AAAAAAAATU}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_FRQCHINDEX\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_FRQCHINDEX}
{\qr HST_RFTC_FRQCHINDEX{\bkmkstart AAAAAAAATV}
{\bkmkend AAAAAAAATV}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_PLLLOCKTIMEOUT\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_PLLLOCKTIMEOUT}
{\qr HST_RFTC_PLLLOCKTIMEOUT{\bkmkstart AAAAAAAATW}
{\bkmkend AAAAAAAATW}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_PLLLOCK_DET_THRSH\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_PLLLOCK_DET_THRSH}
{\qr HST_RFTC_PLLLOCK_DET_THRSH{\bkmkstart AAAAAAAATX}
{\bkmkend AAAAAAAATX}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_PLLLOCK_DET_CNT\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_PLLLOCK_DET_CNT}
{\qr HST_RFTC_PLLLOCK_DET_CNT{\bkmkstart AAAAAAAATY}
{\bkmkend AAAAAAAATY}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_PLLLOCK_TO\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_PLLLOCK_TO}
{\qr HST_RFTC_PLLLOCK_TO{\bkmkstart AAAAAAAATZ}
{\bkmkend AAAAAAAATZ}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_BERREADDELAY\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_BERREADDELAY}
{\qr HST_RFTC_BERREADDELAY{\bkmkstart AAAAAAAAUA}
{\bkmkend AAAAAAAAUA}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B4F\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B4F}
{\qr HST_RFTC_RFU_0x0B4F{\bkmkstart AAAAAAAAUB}
{\bkmkend AAAAAAAAUB}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_FWDRFPWRRAWADC\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_FWDRFPWRRAWADC}
{\qr MAC_RFTC_FWDRFPWRRAWADC{\bkmkstart AAAAAAAAUC}
{\bkmkend AAAAAAAAUC}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_REVRFPWRRAWADC\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_REVRFPWRRAWADC}
{\qr MAC_RFTC_REVRFPWRRAWADC{\bkmkstart AAAAAAAAUD}
{\bkmkend AAAAAAAAUD}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_ANTSENSERAWADC\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_ANTSENSERAWADC}
{\qr MAC_RFTC_ANTSENSERAWADC{\bkmkstart AAAAAAAAUE}
{\bkmkend AAAAAAAAUE}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_AMBTEMPRAWADC\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_AMBTEMPRAWADC}
{\qr MAC_RFTC_AMBTEMPRAWADC{\bkmkstart AAAAAAAAUF}
{\bkmkend AAAAAAAAUF}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_PATEMPRAWADC\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_PATEMPRAWADC}
{\qr MAC_RFTC_PATEMPRAWADC{\bkmkstart AAAAAAAAUG}
{\bkmkend AAAAAAAAUG}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_XCVRTEMPRAWADC\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_XCVRTEMPRAWADC}
{\qr MAC_RFTC_XCVRTEMPRAWADC{\bkmkstart AAAAAAAAUH}
{\bkmkend AAAAAAAAUH}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B56\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B56}
{\qr HST_RFTC_RFU_0x0B56{\bkmkstart AAAAAAAAUI}
{\bkmkend AAAAAAAAUI}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B57\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B57}
{\qr HST_RFTC_RFU_0x0B57{\bkmkstart AAAAAAAAUJ}
{\bkmkend AAAAAAAAUJ}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B58\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B58}
{\qr HST_RFTC_RFU_0x0B58{\bkmkstart AAAAAAAAUK}
{\bkmkend AAAAAAAAUK}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B59\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B59}
{\qr HST_RFTC_RFU_0x0B59{\bkmkstart AAAAAAAAUL}
{\bkmkend AAAAAAAAUL}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B5A\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B5A}
{\qr HST_RFTC_RFU_0x0B5A{\bkmkstart AAAAAAAAUM}
{\bkmkend AAAAAAAAUM}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B5B\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B5B}
{\qr HST_RFTC_RFU_0x0B5B{\bkmkstart AAAAAAAAUN}
{\bkmkend AAAAAAAAUN}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B5C\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B5C}
{\qr HST_RFTC_RFU_0x0B5C{\bkmkstart AAAAAAAAUO}
{\bkmkend AAAAAAAAUO}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B5D\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B5D}
{\qr HST_RFTC_RFU_0x0B5D{\bkmkstart AAAAAAAAUP}
{\bkmkend AAAAAAAAUP}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B5E\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B5E}
{\qr HST_RFTC_RFU_0x0B5E{\bkmkstart AAAAAAAAUQ}
{\bkmkend AAAAAAAAUQ}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B5F\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B5F}
{\qr HST_RFTC_RFU_0x0B5F{\bkmkstart AAAAAAAAUR}
{\bkmkend AAAAAAAAUR}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_CURRENT_PROFILE\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_CURRENT_PROFILE}
{\qr HST_RFTC_CURRENT_PROFILE{\bkmkstart AAAAAAAAUS}
{\bkmkend AAAAAAAAUS}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_PROF_SEL\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_PROF_SEL}
{\qr HST_RFTC_PROF_SEL{\bkmkstart AAAAAAAAUT}
{\bkmkend AAAAAAAAUT}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_PROF_CFG\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_PROF_CFG}
{\qr MAC_RFTC_PROF_CFG{\bkmkstart AAAAAAAAUU}
{\bkmkend AAAAAAAAUU}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_PROF_ID_HIGH\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_PROF_ID_HIGH}
{\qr MAC_RFTC_PROF_ID_HIGH{\bkmkstart AAAAAAAAUV}
{\bkmkend AAAAAAAAUV}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_PROF_ID_LOW\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_PROF_ID_LOW}
{\qr MAC_RFTC_PROF_ID_LOW{\bkmkstart AAAAAAAAUW}
{\bkmkend AAAAAAAAUW}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_PROF_IDVER\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_PROF_IDVER}
{\qr MAC_RFTC_PROF_IDVER{\bkmkstart AAAAAAAAUX}
{\bkmkend AAAAAAAAUX}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_PROF_PROTOCOL\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_PROF_PROTOCOL}
{\qr MAC_RFTC_PROF_PROTOCOL{\bkmkstart AAAAAAAAUY}
{\bkmkend AAAAAAAAUY}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_PROF_R2TMODTYPE\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_PROF_R2TMODTYPE}
{\qr MAC_RFTC_PROF_R2TMODTYPE{\bkmkstart AAAAAAAAUZ}
{\bkmkend AAAAAAAAUZ}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_PROF_TARI\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_PROF_TARI}
{\qr MAC_RFTC_PROF_TARI{\bkmkstart AAAAAAAAVA}
{\bkmkend AAAAAAAAVA}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_PROF_X\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_PROF_X}
{\qr MAC_RFTC_PROF_X{\bkmkstart AAAAAAAAVB}
{\bkmkend AAAAAAAAVB}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_PROF_PW\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_PROF_PW}
{\qr MAC_RFTC_PROF_PW{\bkmkstart AAAAAAAAVC}
{\bkmkend AAAAAAAAVC}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_PROF_RTCAL\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_PROF_RTCAL}
{\qr MAC_RFTC_PROF_RTCAL{\bkmkstart AAAAAAAAVD}
{\bkmkend AAAAAAAAVD}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_PROF_TRCAL\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_PROF_TRCAL}
{\qr MAC_RFTC_PROF_TRCAL{\bkmkstart AAAAAAAAVE}
{\bkmkend AAAAAAAAVE}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_PROF_DIVIDERATIO\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_PROF_DIVIDERATIO}
{\qr MAC_RFTC_PROF_DIVIDERATIO{\bkmkstart AAAAAAAAVF}
{\bkmkend AAAAAAAAVF}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_PROF_MILLERNUM\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_PROF_MILLERNUM}
{\qr MAC_RFTC_PROF_MILLERNUM{\bkmkstart AAAAAAAAVG}
{\bkmkend AAAAAAAAVG}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_PROF_T2RLINKFREQ\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_PROF_T2RLINKFREQ}
{\qr MAC_RFTC_PROF_T2RLINKFREQ{\bkmkstart AAAAAAAAVH}
{\bkmkend AAAAAAAAVH}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_PROF_VART2DELAY\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_PROF_VART2DELAY}
{\qr MAC_RFTC_PROF_VART2DELAY{\bkmkstart AAAAAAAAVI}
{\bkmkend AAAAAAAAVI}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_PROF_RXDELAY\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_PROF_RXDELAY}
{\qr MAC_RFTC_PROF_RXDELAY{\bkmkstart AAAAAAAAVJ}
{\bkmkend AAAAAAAAVJ}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_PROF_MINTOTT2DELAY\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_PROF_MINTOTT2DELAY}
{\qr MAC_RFTC_PROF_MINTOTT2DELAY{\bkmkstart AAAAAAAAVK}
{\bkmkend AAAAAAAAVK}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_PROF_TXPROPDELAY\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_PROF_TXPROPDELAY}
{\qr MAC_RFTC_PROF_TXPROPDELAY{\bkmkstart AAAAAAAAVL}
{\bkmkend AAAAAAAAVL}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_PROF_RSSIAVECFG\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_PROF_RSSIAVECFG}
{\qr MAC_RFTC_PROF_RSSIAVECFG{\bkmkstart AAAAAAAAVM}
{\bkmkend AAAAAAAAVM}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_PROF_PREAMCMD\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_PROF_PREAMCMD}
{\qr MAC_RFTC_PROF_PREAMCMD{\bkmkstart AAAAAAAAVN}
{\bkmkend AAAAAAAAVN}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_PROF_FSYNCCMD\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_PROF_FSYNCCMD}
{\qr MAC_RFTC_PROF_FSYNCCMD{\bkmkstart AAAAAAAAVO}
{\bkmkend AAAAAAAAVO}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_PROF_T2WAITCMD\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_PROF_T2WAITCMD}
{\qr MAC_RFTC_PROF_T2WAITCMD{\bkmkstart AAAAAAAAVP}
{\bkmkend AAAAAAAAVP}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B78\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B78}
{\qr HST_RFTC_RFU_0x0B78{\bkmkstart AAAAAAAAVQ}
{\bkmkend AAAAAAAAVQ}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B79\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B79}
{\qr HST_RFTC_RFU_0x0B79{\bkmkstart AAAAAAAAVR}
{\bkmkend AAAAAAAAVR}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B7A\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B7A}
{\qr HST_RFTC_RFU_0x0B7A{\bkmkstart AAAAAAAAVS}
{\bkmkend AAAAAAAAVS}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B7B\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B7B}
{\qr HST_RFTC_RFU_0x0B7B{\bkmkstart AAAAAAAAVT}
{\bkmkend AAAAAAAAVT}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B7C\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B7C}
{\qr HST_RFTC_RFU_0x0B7C{\bkmkstart AAAAAAAAVU}
{\bkmkend AAAAAAAAVU}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B7D\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B7D}
{\qr HST_RFTC_RFU_0x0B7D{\bkmkstart AAAAAAAAVV}
{\bkmkend AAAAAAAAVV}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B7E\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B7E}
{\qr HST_RFTC_RFU_0x0B7E{\bkmkstart AAAAAAAAVW}
{\bkmkend AAAAAAAAVW}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B7F\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B7F}
{\qr HST_RFTC_RFU_0x0B7F{\bkmkstart AAAAAAAAVX}
{\bkmkend AAAAAAAAVX}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B80\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B80}
{\qr HST_RFTC_RFU_0x0B80{\bkmkstart AAAAAAAAVY}
{\bkmkend AAAAAAAAVY}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B81\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B81}
{\qr HST_RFTC_RFU_0x0B81{\bkmkstart AAAAAAAAVZ}
{\bkmkend AAAAAAAAVZ}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B82\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B82}
{\qr HST_RFTC_RFU_0x0B82{\bkmkstart AAAAAAAAWA}
{\bkmkend AAAAAAAAWA}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B83\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B83}
{\qr HST_RFTC_RFU_0x0B83{\bkmkstart AAAAAAAAWB}
{\bkmkend AAAAAAAAWB}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B84\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B84}
{\qr HST_RFTC_RFU_0x0B84{\bkmkstart AAAAAAAAWC}
{\bkmkend AAAAAAAAWC}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_FRQCH_ENTRYCNT\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_FRQCH_ENTRYCNT}
{\qr HST_RFTC_FRQCH_ENTRYCNT{\bkmkstart AAAAAAAAWD}
{\bkmkend AAAAAAAAWD}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_FRQCH_SEL\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_FRQCH_SEL}
{\qr HST_RFTC_FRQCH_SEL{\bkmkstart AAAAAAAAWE}
{\bkmkend AAAAAAAAWE}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_FRQCH_CFG\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_FRQCH_CFG}
{\qr HST_RFTC_FRQCH_CFG{\bkmkstart AAAAAAAAWF}
{\bkmkend AAAAAAAAWF}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_FRQCH_DESC_PLLDIVMULT\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_FRQCH_DESC_PLLDIVMULT}
{\qr HST_RFTC_FRQCH_DESC_PLLDIVMULT{\bkmkstart AAAAAAAAWG}
{\bkmkend AAAAAAAAWG}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_FRQCH_DESC_PLLDACCTL\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_FRQCH_DESC_PLLDACCTL}
{\qr HST_RFTC_FRQCH_DESC_PLLDACCTL{\bkmkstart AAAAAAAAWH}
{\bkmkend AAAAAAAAWH}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_FRQCH_DESC_PLLLOCKSTAT0\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_FRQCH_DESC_PLLLOCKSTAT0}
{\qr MAC_RFTC_FRQCH_DESC_PLLLOCKSTAT0{\bkmkstart AAAAAAAAWI}
{\bkmkend AAAAAAAAWI}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_FRQCH_DESC_PLLLOCKSTAT1\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_FRQCH_DESC_PLLLOCKSTAT1}
{\qr MAC_RFTC_FRQCH_DESC_PLLLOCKSTAT1{\bkmkstart AAAAAAAAWJ}
{\bkmkend AAAAAAAAWJ}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_FRQCH_DESC_PARFU3\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_FRQCH_DESC_PARFU3}
{\qr HST_RFTC_FRQCH_DESC_PARFU3{\bkmkstart AAAAAAAAWK}
{\bkmkend AAAAAAAAWK}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_FRQCH_CMDSTART\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_FRQCH_CMDSTART}
{\qr HST_RFTC_FRQCH_CMDSTART{\bkmkstart AAAAAAAAWL}
{\bkmkend AAAAAAAAWL}
\cell }{\cell }{\row }
{\xe \v HST_CMD\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_CMD}
{\qr HST_CMD{\bkmkstart AAAAAAAAWM}
{\bkmkend AAAAAAAAWM}
\cell }{\cell }{\row }
}
}
{\xe \v MACREGISTER\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MACREGISTER}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b CSLibrary.RFIDReader.MACREGISTER} : UInt16{\f2 [strong]}}}
\par
{\bkmkstart AAAAAAAALZ}
{\bkmkend AAAAAAAALZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
REGISTER NAME/ADDRESS CONSTANTS }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v MAC_VER\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_VER}
{\qr MAC_VER{\bkmkstart AAAAAAAAMA}
{\bkmkend AAAAAAAAMA}
\cell }{\cell }{\row }
{\xe \v MAC_INFO\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_INFO}
{\qr MAC_INFO{\bkmkstart AAAAAAAAMB}
{\bkmkend AAAAAAAAMB}
\cell }{\cell }{\row }
{\xe \v MAC_RFTRANSINFO\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTRANSINFO}
{\qr MAC_RFTRANSINFO{\bkmkstart AAAAAAAAMC}
{\bkmkend AAAAAAAAMC}
\cell }{\cell }{\row }
{\xe \v MAC_DBG1\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_DBG1}
{\qr MAC_DBG1{\bkmkstart AAAAAAAAMD}
{\bkmkend AAAAAAAAMD}
\cell }{\cell }{\row }
{\xe \v MAC_DBG2\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_DBG2}
{\qr MAC_DBG2{\bkmkstart AAAAAAAAME}
{\bkmkend AAAAAAAAME}
\cell }{\cell }{\row }
{\xe \v MAC_ERROR\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_ERROR}
{\qr MAC_ERROR{\bkmkstart AAAAAAAAMF}
{\bkmkend AAAAAAAAMF}
\cell }{\cell }{\row }
{\xe \v HST_ENGTST_ARG0\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_ENGTST_ARG0}
{\qr HST_ENGTST_ARG0{\bkmkstart AAAAAAAAMG}
{\bkmkend AAAAAAAAMG}
\cell }{\cell }{\row }
{\xe \v HST_ENGTST_ARG1\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_ENGTST_ARG1}
{\qr HST_ENGTST_ARG1{\bkmkstart AAAAAAAAMH}
{\bkmkend AAAAAAAAMH}
\cell }{\cell }{\row }
{\xe \v HST_DBG1\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_DBG1}
{\qr HST_DBG1{\bkmkstart AAAAAAAAMI}
{\bkmkend AAAAAAAAMI}
\cell }{\cell }{\row }
{\xe \v HST_EMU\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_EMU}
{\qr HST_EMU{\bkmkstart AAAAAAAAMJ}
{\bkmkend AAAAAAAAMJ}
\cell }{\cell }{\row }
{\xe \v HST_PWRMGMT\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_PWRMGMT}
{\qr HST_PWRMGMT{\bkmkstart AAAAAAAAMK}
{\bkmkend AAAAAAAAMK}
\cell }{\cell }{\row }
{\xe \v HST_CMNDIAGS\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_CMNDIAGS}
{\qr HST_CMNDIAGS{\bkmkstart AAAAAAAAML}
{\bkmkend AAAAAAAAML}
\cell }{\cell }{\row }
{\xe \v MAC_BLK02RES1\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_BLK02RES1}
{\qr MAC_BLK02RES1{\bkmkstart AAAAAAAAMM}
{\bkmkend AAAAAAAAMM}
\cell }{\cell }{\row }
{\xe \v HST_CTR_GCFG\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_CTR_GCFG}
{\qr HST_CTR_GCFG{\bkmkstart AAAAAAAAMN}
{\bkmkend AAAAAAAAMN}
\cell }{\cell }{\row }
{\xe \v HST_CTR1_CFG\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_CTR1_CFG}
{\qr HST_CTR1_CFG{\bkmkstart AAAAAAAAMO}
{\bkmkend AAAAAAAAMO}
\cell }{\cell }{\row }
{\xe \v MAC_CTR1_VAL\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_CTR1_VAL}
{\qr MAC_CTR1_VAL{\bkmkstart AAAAAAAAMP}
{\bkmkend AAAAAAAAMP}
\cell }{\cell }{\row }
{\xe \v HST_CTR2_CFG\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_CTR2_CFG}
{\qr HST_CTR2_CFG{\bkmkstart AAAAAAAAMQ}
{\bkmkend AAAAAAAAMQ}
\cell }{\cell }{\row }
{\xe \v MAC_CTR2_VAL\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_CTR2_VAL}
{\qr MAC_CTR2_VAL{\bkmkstart AAAAAAAAMR}
{\bkmkend AAAAAAAAMR}
\cell }{\cell }{\row }
{\xe \v HST_CTR3_CFG\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_CTR3_CFG}
{\qr HST_CTR3_CFG{\bkmkstart AAAAAAAAMS}
{\bkmkend AAAAAAAAMS}
\cell }{\cell }{\row }
{\xe \v MAC_CTR3_VAL\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_CTR3_VAL}
{\qr MAC_CTR3_VAL{\bkmkstart AAAAAAAAMT}
{\bkmkend AAAAAAAAMT}
\cell }{\cell }{\row }
{\xe \v HST_CTR4_CFG\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_CTR4_CFG}
{\qr HST_CTR4_CFG{\bkmkstart AAAAAAAAMU}
{\bkmkend AAAAAAAAMU}
\cell }{\cell }{\row }
{\xe \v MAC_CTR4_VAL\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_CTR4_VAL}
{\qr MAC_CTR4_VAL{\bkmkstart AAAAAAAAMV}
{\bkmkend AAAAAAAAMV}
\cell }{\cell }{\row }
{\xe \v HST_PROTSCH_SMIDX\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_PROTSCH_SMIDX}
{\qr HST_PROTSCH_SMIDX{\bkmkstart AAAAAAAAMW}
{\bkmkend AAAAAAAAMW}
\cell }{\cell }{\row }
{\xe \v HST_PROTSCH_SMCFG\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_PROTSCH_SMCFG}
{\qr HST_PROTSCH_SMCFG{\bkmkstart AAAAAAAAMX}
{\bkmkend AAAAAAAAMX}
\cell }{\cell }{\row }
{\xe \v HST_PROTSCH_FTIME_SEL\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_PROTSCH_FTIME_SEL}
{\qr HST_PROTSCH_FTIME_SEL{\bkmkstart AAAAAAAAMY}
{\bkmkend AAAAAAAAMY}
\cell }{\cell }{\row }
{\xe \v HST_PROTSCH_FTIME\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_PROTSCH_FTIME}
{\qr HST_PROTSCH_FTIME{\bkmkstart AAAAAAAAMZ}
{\bkmkend AAAAAAAAMZ}
\cell }{\cell }{\row }
{\xe \v HST_PROTSCH_SMCFG_SEL\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_PROTSCH_SMCFG_SEL}
{\qr HST_PROTSCH_SMCFG_SEL{\bkmkstart AAAAAAAANA}
{\bkmkend AAAAAAAANA}
\cell }{\cell }{\row }
{\xe \v HST_PROTSCH_TXTIME_SEL\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_PROTSCH_TXTIME_SEL}
{\qr HST_PROTSCH_TXTIME_SEL{\bkmkstart AAAAAAAANB}
{\bkmkend AAAAAAAANB}
\cell }{\cell }{\row }
{\xe \v HST_PROTSCH_TXTIME_ON\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_PROTSCH_TXTIME_ON}
{\qr HST_PROTSCH_TXTIME_ON{\bkmkstart AAAAAAAANC}
{\bkmkend AAAAAAAANC}
\cell }{\cell }{\row }
{\xe \v HST_PROTSCH_TXTIME_OFF\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_PROTSCH_TXTIME_OFF}
{\qr HST_PROTSCH_TXTIME_OFF{\bkmkstart AAAAAAAAND}
{\bkmkend AAAAAAAAND}
\cell }{\cell }{\row }
{\xe \v HST_PROTSCH_CYCCFG_SEL\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_PROTSCH_CYCCFG_SEL}
{\qr HST_PROTSCH_CYCCFG_SEL{\bkmkstart AAAAAAAANE}
{\bkmkend AAAAAAAANE}
\cell }{\cell }{\row }
{\xe \v HST_PROTSCH_CYCCFG_DESC_ADJ1\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_PROTSCH_CYCCFG_DESC_ADJ1}
{\qr HST_PROTSCH_CYCCFG_DESC_ADJ1{\bkmkstart AAAAAAAANF}
{\bkmkend AAAAAAAANF}
\cell }{\cell }{\row }
{\xe \v HST_PROTSCH_ADJCW\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_PROTSCH_ADJCW}
{\qr HST_PROTSCH_ADJCW{\bkmkstart AAAAAAAANG}
{\bkmkend AAAAAAAANG}
\cell }{\cell }{\row }
{\xe \v HST_MBP_ADDR\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_MBP_ADDR}
{\qr HST_MBP_ADDR{\bkmkstart AAAAAAAANH}
{\bkmkend AAAAAAAANH}
\cell }{\cell }{\row }
{\xe \v HST_MBP_DATA\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_MBP_DATA}
{\qr HST_MBP_DATA{\bkmkstart AAAAAAAANI}
{\bkmkend AAAAAAAANI}
\cell }{\cell }{\row }
{\xe \v HST_MBP_RFU_0x0402\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_MBP_RFU_0x0402}
{\qr HST_MBP_RFU_0x0402{\bkmkstart AAAAAAAANJ}
{\bkmkend AAAAAAAANJ}
\cell }{\cell }{\row }
{\xe \v HST_MBP_RFU_0x0403\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_MBP_RFU_0x0403}
{\qr HST_MBP_RFU_0x0403{\bkmkstart AAAAAAAANK}
{\bkmkend AAAAAAAANK}
\cell }{\cell }{\row }
{\xe \v HST_MBP_RFU_0x0404\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_MBP_RFU_0x0404}
{\qr HST_MBP_RFU_0x0404{\bkmkstart AAAAAAAANL}
{\bkmkend AAAAAAAANL}
\cell }{\cell }{\row }
{\xe \v HST_MBP_RFU_0x0405\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_MBP_RFU_0x0405}
{\qr HST_MBP_RFU_0x0405{\bkmkstart AAAAAAAANM}
{\bkmkend AAAAAAAANM}
\cell }{\cell }{\row }
{\xe \v HST_MBP_RFU_0x0406\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_MBP_RFU_0x0406}
{\qr HST_MBP_RFU_0x0406{\bkmkstart AAAAAAAANN}
{\bkmkend AAAAAAAANN}
\cell }{\cell }{\row }
{\xe \v HST_MBP_RFU_0x0407\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_MBP_RFU_0x0407}
{\qr HST_MBP_RFU_0x0407{\bkmkstart AAAAAAAANO}
{\bkmkend AAAAAAAANO}
\cell }{\cell }{\row }
{\xe \v HST_LPROF_SEL\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_LPROF_SEL}
{\qr HST_LPROF_SEL{\bkmkstart AAAAAAAANP}
{\bkmkend AAAAAAAANP}
\cell }{\cell }{\row }
{\xe \v HST_LPROF_ADDR\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_LPROF_ADDR}
{\qr HST_LPROF_ADDR{\bkmkstart AAAAAAAANQ}
{\bkmkend AAAAAAAANQ}
\cell }{\cell }{\row }
{\xe \v HST_LPROF_DATA\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_LPROF_DATA}
{\qr HST_LPROF_DATA{\bkmkstart AAAAAAAANR}
{\bkmkend AAAAAAAANR}
\cell }{\cell }{\row }
{\xe \v HST_OEM_ADDR\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_OEM_ADDR}
{\qr HST_OEM_ADDR{\bkmkstart AAAAAAAANS}
{\bkmkend AAAAAAAANS}
\cell }{\cell }{\row }
{\xe \v HST_OEM_DATA\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_OEM_DATA}
{\qr HST_OEM_DATA{\bkmkstart AAAAAAAANT}
{\bkmkend AAAAAAAANT}
\cell }{\cell }{\row }
{\xe \v HST_GPIO_INMSK\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_GPIO_INMSK}
{\qr HST_GPIO_INMSK{\bkmkstart AAAAAAAANU}
{\bkmkend AAAAAAAANU}
\cell }{\cell }{\row }
{\xe \v HST_GPIO_OUTMSK\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_GPIO_OUTMSK}
{\qr HST_GPIO_OUTMSK{\bkmkstart AAAAAAAANV}
{\bkmkend AAAAAAAANV}
\cell }{\cell }{\row }
{\xe \v HST_GPIO_OUTVAL\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_GPIO_OUTVAL}
{\qr HST_GPIO_OUTVAL{\bkmkstart AAAAAAAANW}
{\bkmkend AAAAAAAANW}
\cell }{\cell }{\row }
{\xe \v HST_GPIO_CFG\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_GPIO_CFG}
{\qr HST_GPIO_CFG{\bkmkstart AAAAAAAANX}
{\bkmkend AAAAAAAANX}
\cell }{\cell }{\row }
{\xe \v HST_ANT_CYCLES\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_ANT_CYCLES}
{\qr HST_ANT_CYCLES{\bkmkstart AAAAAAAANY}
{\bkmkend AAAAAAAANY}
\cell }{\cell }{\row }
{\xe \v HST_ANT_DESC_SEL\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_ANT_DESC_SEL}
{\qr HST_ANT_DESC_SEL{\bkmkstart AAAAAAAANZ}
{\bkmkend AAAAAAAANZ}
\cell }{\cell }{\row }
{\xe \v HST_ANT_DESC_CFG\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_ANT_DESC_CFG}
{\qr HST_ANT_DESC_CFG{\bkmkstart AAAAAAAAOA}
{\bkmkend AAAAAAAAOA}
\cell }{\cell }{\row }
{\xe \v MAC_ANT_DESC_STAT\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_ANT_DESC_STAT}
{\qr MAC_ANT_DESC_STAT{\bkmkstart AAAAAAAAOB}
{\bkmkend AAAAAAAAOB}
\cell }{\cell }{\row }
{\xe \v HST_ANT_DESC_PORTDEF\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_ANT_DESC_PORTDEF}
{\qr HST_ANT_DESC_PORTDEF{\bkmkstart AAAAAAAAOC}
{\bkmkend AAAAAAAAOC}
\cell }{\cell }{\row }
{\xe \v HST_ANT_DESC_DWELL\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_ANT_DESC_DWELL}
{\qr HST_ANT_DESC_DWELL{\bkmkstart AAAAAAAAOD}
{\bkmkend AAAAAAAAOD}
\cell }{\cell }{\row }
{\xe \v HST_ANT_DESC_RFPOWER\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_ANT_DESC_RFPOWER}
{\qr HST_ANT_DESC_RFPOWER{\bkmkstart AAAAAAAAOE}
{\bkmkend AAAAAAAAOE}
\cell }{\cell }{\row }
{\xe \v HST_ANT_DESC_INV_CNT\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_ANT_DESC_INV_CNT}
{\qr HST_ANT_DESC_INV_CNT{\bkmkstart AAAAAAAAOF}
{\bkmkend AAAAAAAAOF}
\cell }{\cell }{\row }
{\xe \v HST_TAGMSK_DESC_SEL\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_TAGMSK_DESC_SEL}
{\qr HST_TAGMSK_DESC_SEL{\bkmkstart AAAAAAAAOG}
{\bkmkend AAAAAAAAOG}
\cell }{\cell }{\row }
{\xe \v HST_TAGMSK_DESC_CFG\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_TAGMSK_DESC_CFG}
{\qr HST_TAGMSK_DESC_CFG{\bkmkstart AAAAAAAAOH}
{\bkmkend AAAAAAAAOH}
\cell }{\cell }{\row }
{\xe \v HST_TAGMSK_BANK\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_TAGMSK_BANK}
{\qr HST_TAGMSK_BANK{\bkmkstart AAAAAAAAOI}
{\bkmkend AAAAAAAAOI}
\cell }{\cell }{\row }
{\xe \v HST_TAGMSK_PTR\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_TAGMSK_PTR}
{\qr HST_TAGMSK_PTR{\bkmkstart AAAAAAAAOJ}
{\bkmkend AAAAAAAAOJ}
\cell }{\cell }{\row }
{\xe \v HST_TAGMSK_LEN\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_TAGMSK_LEN}
{\qr HST_TAGMSK_LEN{\bkmkstart AAAAAAAAOK}
{\bkmkend AAAAAAAAOK}
\cell }{\cell }{\row }
{\xe \v HST_TAGMSK_0_3\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_TAGMSK_0_3}
{\qr HST_TAGMSK_0_3{\bkmkstart AAAAAAAAOL}
{\bkmkend AAAAAAAAOL}
\cell }{\cell }{\row }
{\xe \v HST_TAGMSK_4_7\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_TAGMSK_4_7}
{\qr HST_TAGMSK_4_7{\bkmkstart AAAAAAAAOM}
{\bkmkend AAAAAAAAOM}
\cell }{\cell }{\row }
{\xe \v HST_TAGMSK_8_11\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_TAGMSK_8_11}
{\qr HST_TAGMSK_8_11{\bkmkstart AAAAAAAAON}
{\bkmkend AAAAAAAAON}
\cell }{\cell }{\row }
{\xe \v HST_TAGMSK_12_15\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_TAGMSK_12_15}
{\qr HST_TAGMSK_12_15{\bkmkstart AAAAAAAAOO}
{\bkmkend AAAAAAAAOO}
\cell }{\cell }{\row }
{\xe \v HST_TAGMSK_16_19\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_TAGMSK_16_19}
{\qr HST_TAGMSK_16_19{\bkmkstart AAAAAAAAOP}
{\bkmkend AAAAAAAAOP}
\cell }{\cell }{\row }
{\xe \v HST_TAGMSK_20_23\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_TAGMSK_20_23}
{\qr HST_TAGMSK_20_23{\bkmkstart AAAAAAAAOQ}
{\bkmkend AAAAAAAAOQ}
\cell }{\cell }{\row }
{\xe \v HST_TAGMSK_24_27\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_TAGMSK_24_27}
{\qr HST_TAGMSK_24_27{\bkmkstart AAAAAAAAOR}
{\bkmkend AAAAAAAAOR}
\cell }{\cell }{\row }
{\xe \v HST_TAGMSK_28_31\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_TAGMSK_28_31}
{\qr HST_TAGMSK_28_31{\bkmkstart AAAAAAAAOS}
{\bkmkend AAAAAAAAOS}
\cell }{\cell }{\row }
{\xe \v HST_QUERY_CFG\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_QUERY_CFG}
{\qr HST_QUERY_CFG{\bkmkstart AAAAAAAAOT}
{\bkmkend AAAAAAAAOT}
\cell }{\cell }{\row }
{\xe \v HST_INV_CFG\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_INV_CFG}
{\qr HST_INV_CFG{\bkmkstart AAAAAAAAOU}
{\bkmkend AAAAAAAAOU}
\cell }{\cell }{\row }
{\xe \v HST_INV_SEL\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_INV_SEL}
{\qr HST_INV_SEL{\bkmkstart AAAAAAAAOV}
{\bkmkend AAAAAAAAOV}
\cell }{\cell }{\row }
{\xe \v HST_INV_ALG_PARM_0\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_INV_ALG_PARM_0}
{\qr HST_INV_ALG_PARM_0{\bkmkstart AAAAAAAAOW}
{\bkmkend AAAAAAAAOW}
\cell }{\cell }{\row }
{\xe \v HST_INV_ALG_PARM_1\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_INV_ALG_PARM_1}
{\qr HST_INV_ALG_PARM_1{\bkmkstart AAAAAAAAOX}
{\bkmkend AAAAAAAAOX}
\cell }{\cell }{\row }
{\xe \v HST_INV_ALG_PARM_2\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_INV_ALG_PARM_2}
{\qr HST_INV_ALG_PARM_2{\bkmkstart AAAAAAAAOY}
{\bkmkend AAAAAAAAOY}
\cell }{\cell }{\row }
{\xe \v HST_INV_ALG_PARM_3\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_INV_ALG_PARM_3}
{\qr HST_INV_ALG_PARM_3{\bkmkstart AAAAAAAAOZ}
{\bkmkend AAAAAAAAOZ}
\cell }{\cell }{\row }
{\xe \v HST_INV_RFU_0x0907\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_INV_RFU_0x0907}
{\qr HST_INV_RFU_0x0907{\bkmkstart AAAAAAAAPA}
{\bkmkend AAAAAAAAPA}
\cell }{\cell }{\row }
{\xe \v HST_INV_RFU_0x0908\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_INV_RFU_0x0908}
{\qr HST_INV_RFU_0x0908{\bkmkstart AAAAAAAAPB}
{\bkmkend AAAAAAAAPB}
\cell }{\cell }{\row }
{\xe \v HST_INV_RFU_0x0909\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_INV_RFU_0x0909}
{\qr HST_INV_RFU_0x0909{\bkmkstart AAAAAAAAPC}
{\bkmkend AAAAAAAAPC}
\cell }{\cell }{\row }
{\xe \v HST_INV_RFU_0x090A\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_INV_RFU_0x090A}
{\qr HST_INV_RFU_0x090A{\bkmkstart AAAAAAAAPD}
{\bkmkend AAAAAAAAPD}
\cell }{\cell }{\row }
{\xe \v HST_INV_RFU_0x090B\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_INV_RFU_0x090B}
{\qr HST_INV_RFU_0x090B{\bkmkstart AAAAAAAAPE}
{\bkmkend AAAAAAAAPE}
\cell }{\cell }{\row }
{\xe \v HST_INV_RFU_0x090C\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_INV_RFU_0x090C}
{\qr HST_INV_RFU_0x090C{\bkmkstart AAAAAAAAPF}
{\bkmkend AAAAAAAAPF}
\cell }{\cell }{\row }
{\xe \v HST_INV_RFU_0x090D\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_INV_RFU_0x090D}
{\qr HST_INV_RFU_0x090D{\bkmkstart AAAAAAAAPG}
{\bkmkend AAAAAAAAPG}
\cell }{\cell }{\row }
{\xe \v HST_INV_RFU_0x090E\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_INV_RFU_0x090E}
{\qr HST_INV_RFU_0x090E{\bkmkstart AAAAAAAAPH}
{\bkmkend AAAAAAAAPH}
\cell }{\cell }{\row }
{\xe \v HST_INV_RFU_0x090F\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_INV_RFU_0x090F}
{\qr HST_INV_RFU_0x090F{\bkmkstart AAAAAAAAPI}
{\bkmkend AAAAAAAAPI}
\cell }{\cell }{\row }
{\xe \v HST_INV_EPC_MATCH_SEL\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_INV_EPC_MATCH_SEL}
{\qr HST_INV_EPC_MATCH_SEL{\bkmkstart AAAAAAAAPJ}
{\bkmkend AAAAAAAAPJ}
\cell }{\cell }{\row }
{\xe \v HST_INV_EPC_MATCH_CFG\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_INV_EPC_MATCH_CFG}
{\qr HST_INV_EPC_MATCH_CFG{\bkmkstart AAAAAAAAPK}
{\bkmkend AAAAAAAAPK}
\cell }{\cell }{\row }
{\xe \v HST_INV_EPCDAT_0_3\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_INV_EPCDAT_0_3}
{\qr HST_INV_EPCDAT_0_3{\bkmkstart AAAAAAAAPL}
{\bkmkend AAAAAAAAPL}
\cell }{\cell }{\row }
{\xe \v HST_INV_EPCDAT_4_7\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_INV_EPCDAT_4_7}
{\qr HST_INV_EPCDAT_4_7{\bkmkstart AAAAAAAAPM}
{\bkmkend AAAAAAAAPM}
\cell }{\cell }{\row }
{\xe \v HST_INV_EPCDAT_8_11\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_INV_EPCDAT_8_11}
{\qr HST_INV_EPCDAT_8_11{\bkmkstart AAAAAAAAPN}
{\bkmkend AAAAAAAAPN}
\cell }{\cell }{\row }
{\xe \v HST_INV_EPCDAT_12_15\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_INV_EPCDAT_12_15}
{\qr HST_INV_EPCDAT_12_15{\bkmkstart AAAAAAAAPO}
{\bkmkend AAAAAAAAPO}
\cell }{\cell }{\row }
{\xe \v HST_INV_EPCDAT_16_19\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_INV_EPCDAT_16_19}
{\qr HST_INV_EPCDAT_16_19{\bkmkstart AAAAAAAAPP}
{\bkmkend AAAAAAAAPP}
\cell }{\cell }{\row }
{\xe \v HST_INV_EPCDAT_20_23\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_INV_EPCDAT_20_23}
{\qr HST_INV_EPCDAT_20_23{\bkmkstart AAAAAAAAPQ}
{\bkmkend AAAAAAAAPQ}
\cell }{\cell }{\row }
{\xe \v HST_INV_EPCDAT_24_27\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_INV_EPCDAT_24_27}
{\qr HST_INV_EPCDAT_24_27{\bkmkstart AAAAAAAAPR}
{\bkmkend AAAAAAAAPR}
\cell }{\cell }{\row }
{\xe \v HST_INV_EPCDAT_28_31\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_INV_EPCDAT_28_31}
{\qr HST_INV_EPCDAT_28_31{\bkmkstart AAAAAAAAPS}
{\bkmkend AAAAAAAAPS}
\cell }{\cell }{\row }
{\xe \v HST_INV_EPCDAT_32_35\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_INV_EPCDAT_32_35}
{\qr HST_INV_EPCDAT_32_35{\bkmkstart AAAAAAAAPT}
{\bkmkend AAAAAAAAPT}
\cell }{\cell }{\row }
{\xe \v HST_INV_EPCDAT_36_39\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_INV_EPCDAT_36_39}
{\qr HST_INV_EPCDAT_36_39{\bkmkstart AAAAAAAAPU}
{\bkmkend AAAAAAAAPU}
\cell }{\cell }{\row }
{\xe \v HST_INV_EPCDAT_40_43\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_INV_EPCDAT_40_43}
{\qr HST_INV_EPCDAT_40_43{\bkmkstart AAAAAAAAPV}
{\bkmkend AAAAAAAAPV}
\cell }{\cell }{\row }
{\xe \v HST_INV_EPCDAT_44_47\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_INV_EPCDAT_44_47}
{\qr HST_INV_EPCDAT_44_47{\bkmkstart AAAAAAAAPW}
{\bkmkend AAAAAAAAPW}
\cell }{\cell }{\row }
{\xe \v HST_INV_EPCDAT_48_51\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_INV_EPCDAT_48_51}
{\qr HST_INV_EPCDAT_48_51{\bkmkstart AAAAAAAAPX}
{\bkmkend AAAAAAAAPX}
\cell }{\cell }{\row }
{\xe \v HST_INV_EPCDAT_52_55\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_INV_EPCDAT_52_55}
{\qr HST_INV_EPCDAT_52_55{\bkmkstart AAAAAAAAPY}
{\bkmkend AAAAAAAAPY}
\cell }{\cell }{\row }
{\xe \v HST_INV_EPCDAT_56_59\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_INV_EPCDAT_56_59}
{\qr HST_INV_EPCDAT_56_59{\bkmkstart AAAAAAAAPZ}
{\bkmkend AAAAAAAAPZ}
\cell }{\cell }{\row }
{\xe \v HST_INV_EPCDAT_60_63\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_INV_EPCDAT_60_63}
{\qr HST_INV_EPCDAT_60_63{\bkmkstart AAAAAAAAQA}
{\bkmkend AAAAAAAAQA}
\cell }{\cell }{\row }
{\xe \v HST_TAGACC_DESC_SEL\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_TAGACC_DESC_SEL}
{\qr HST_TAGACC_DESC_SEL{\bkmkstart AAAAAAAAQB}
{\bkmkend AAAAAAAAQB}
\cell }{\cell }{\row }
{\xe \v HST_TAGACC_DESC_CFG\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_TAGACC_DESC_CFG}
{\qr HST_TAGACC_DESC_CFG{\bkmkstart AAAAAAAAQC}
{\bkmkend AAAAAAAAQC}
\cell }{\cell }{\row }
{\xe \v HST_TAGACC_BANK\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_TAGACC_BANK}
{\qr HST_TAGACC_BANK{\bkmkstart AAAAAAAAQD}
{\bkmkend AAAAAAAAQD}
\cell }{\cell }{\row }
{\xe \v HST_TAGACC_PTR\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_TAGACC_PTR}
{\qr HST_TAGACC_PTR{\bkmkstart AAAAAAAAQE}
{\bkmkend AAAAAAAAQE}
\cell }{\cell }{\row }
{\xe \v HST_TAGACC_CNT\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_TAGACC_CNT}
{\qr HST_TAGACC_CNT{\bkmkstart AAAAAAAAQF}
{\bkmkend AAAAAAAAQF}
\cell }{\cell }{\row }
{\xe \v HST_TAGACC_LOCKCFG\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_TAGACC_LOCKCFG}
{\qr HST_TAGACC_LOCKCFG{\bkmkstart AAAAAAAAQG}
{\bkmkend AAAAAAAAQG}
\cell }{\cell }{\row }
{\xe \v HST_TAGACC_ACCPWD\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_TAGACC_ACCPWD}
{\qr HST_TAGACC_ACCPWD{\bkmkstart AAAAAAAAQH}
{\bkmkend AAAAAAAAQH}
\cell }{\cell }{\row }
{\xe \v HST_TAGACC_KILLPWD\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_TAGACC_KILLPWD}
{\qr HST_TAGACC_KILLPWD{\bkmkstart AAAAAAAAQI}
{\bkmkend AAAAAAAAQI}
\cell }{\cell }{\row }
{\xe \v HST_TAGWRDAT_SEL\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_TAGWRDAT_SEL}
{\qr HST_TAGWRDAT_SEL{\bkmkstart AAAAAAAAQJ}
{\bkmkend AAAAAAAAQJ}
\cell }{\cell }{\row }
{\xe \v HST_TAGWRDAT_0\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_TAGWRDAT_0}
{\qr HST_TAGWRDAT_0{\bkmkstart AAAAAAAAQK}
{\bkmkend AAAAAAAAQK}
\cell }{\cell }{\row }
{\xe \v HST_TAGWRDAT_1\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_TAGWRDAT_1}
{\qr HST_TAGWRDAT_1{\bkmkstart AAAAAAAAQL}
{\bkmkend AAAAAAAAQL}
\cell }{\cell }{\row }
{\xe \v HST_TAGWRDAT_2\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_TAGWRDAT_2}
{\qr HST_TAGWRDAT_2{\bkmkstart AAAAAAAAQM}
{\bkmkend AAAAAAAAQM}
\cell }{\cell }{\row }
{\xe \v HST_TAGWRDAT_3\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_TAGWRDAT_3}
{\qr HST_TAGWRDAT_3{\bkmkstart AAAAAAAAQN}
{\bkmkend AAAAAAAAQN}
\cell }{\cell }{\row }
{\xe \v HST_TAGWRDAT_4\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_TAGWRDAT_4}
{\qr HST_TAGWRDAT_4{\bkmkstart AAAAAAAAQO}
{\bkmkend AAAAAAAAQO}
\cell }{\cell }{\row }
{\xe \v HST_TAGWRDAT_5\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_TAGWRDAT_5}
{\qr HST_TAGWRDAT_5{\bkmkstart AAAAAAAAQP}
{\bkmkend AAAAAAAAQP}
\cell }{\cell }{\row }
{\xe \v HST_TAGWRDAT_6\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_TAGWRDAT_6}
{\qr HST_TAGWRDAT_6{\bkmkstart AAAAAAAAQQ}
{\bkmkend AAAAAAAAQQ}
\cell }{\cell }{\row }
{\xe \v HST_TAGWRDAT_7\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_TAGWRDAT_7}
{\qr HST_TAGWRDAT_7{\bkmkstart AAAAAAAAQR}
{\bkmkend AAAAAAAAQR}
\cell }{\cell }{\row }
{\xe \v HST_TAGWRDAT_8\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_TAGWRDAT_8}
{\qr HST_TAGWRDAT_8{\bkmkstart AAAAAAAAQS}
{\bkmkend AAAAAAAAQS}
\cell }{\cell }{\row }
{\xe \v HST_TAGWRDAT_9\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_TAGWRDAT_9}
{\qr HST_TAGWRDAT_9{\bkmkstart AAAAAAAAQT}
{\bkmkend AAAAAAAAQT}
\cell }{\cell }{\row }
{\xe \v HST_TAGWRDAT_10\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_TAGWRDAT_10}
{\qr HST_TAGWRDAT_10{\bkmkstart AAAAAAAAQU}
{\bkmkend AAAAAAAAQU}
\cell }{\cell }{\row }
{\xe \v HST_TAGWRDAT_11\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_TAGWRDAT_11}
{\qr HST_TAGWRDAT_11{\bkmkstart AAAAAAAAQV}
{\bkmkend AAAAAAAAQV}
\cell }{\cell }{\row }
{\xe \v HST_TAGWRDAT_12\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_TAGWRDAT_12}
{\qr HST_TAGWRDAT_12{\bkmkstart AAAAAAAAQW}
{\bkmkend AAAAAAAAQW}
\cell }{\cell }{\row }
{\xe \v HST_TAGWRDAT_13\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_TAGWRDAT_13}
{\qr HST_TAGWRDAT_13{\bkmkstart AAAAAAAAQX}
{\bkmkend AAAAAAAAQX}
\cell }{\cell }{\row }
{\xe \v HST_TAGWRDAT_14\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_TAGWRDAT_14}
{\qr HST_TAGWRDAT_14{\bkmkstart AAAAAAAAQY}
{\bkmkend AAAAAAAAQY}
\cell }{\cell }{\row }
{\xe \v HST_TAGWRDAT_15\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_TAGWRDAT_15}
{\qr HST_TAGWRDAT_15{\bkmkstart AAAAAAAAQZ}
{\bkmkend AAAAAAAAQZ}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_PAPWRLEV\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_PAPWRLEV}
{\qr MAC_RFTC_PAPWRLEV{\bkmkstart AAAAAAAARA}
{\bkmkend AAAAAAAARA}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_PAPWRCTL_PGAIN\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_PAPWRCTL_PGAIN}
{\qr HST_RFTC_PAPWRCTL_PGAIN{\bkmkstart AAAAAAAARB}
{\bkmkend AAAAAAAARB}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_PAPWRCTL_IGAIN\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_PAPWRCTL_IGAIN}
{\qr HST_RFTC_PAPWRCTL_IGAIN{\bkmkstart AAAAAAAARC}
{\bkmkend AAAAAAAARC}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_PAPWRCTL_DGAIN\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_PAPWRCTL_DGAIN}
{\qr HST_RFTC_PAPWRCTL_DGAIN{\bkmkstart AAAAAAAARD}
{\bkmkend AAAAAAAARD}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_REVPWRLEV\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_REVPWRLEV}
{\qr MAC_RFTC_REVPWRLEV{\bkmkstart AAAAAAAARE}
{\bkmkend AAAAAAAARE}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_REVPWRTHRSH\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_REVPWRTHRSH}
{\qr HST_RFTC_REVPWRTHRSH{\bkmkstart AAAAAAAARF}
{\bkmkend AAAAAAAARF}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_AMBIENTTEMP\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_AMBIENTTEMP}
{\qr MAC_RFTC_AMBIENTTEMP{\bkmkstart AAAAAAAARG}
{\bkmkend AAAAAAAARG}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_AMBIENTTEMPTHRSH\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_AMBIENTTEMPTHRSH}
{\qr HST_RFTC_AMBIENTTEMPTHRSH{\bkmkstart AAAAAAAARH}
{\bkmkend AAAAAAAARH}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_XCVRTEMP\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_XCVRTEMP}
{\qr MAC_RFTC_XCVRTEMP{\bkmkstart AAAAAAAARI}
{\bkmkend AAAAAAAARI}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_XCVRTEMPTHRSH\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_XCVRTEMPTHRSH}
{\qr HST_RFTC_XCVRTEMPTHRSH{\bkmkstart AAAAAAAARJ}
{\bkmkend AAAAAAAARJ}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_PATEMP\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_PATEMP}
{\qr MAC_RFTC_PATEMP{\bkmkstart AAAAAAAARK}
{\bkmkend AAAAAAAARK}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_PATEMPTHRSH\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_PATEMPTHRSH}
{\qr HST_RFTC_PATEMPTHRSH{\bkmkstart AAAAAAAARL}
{\bkmkend AAAAAAAARL}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_PADELTATEMPTHRSH\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_PADELTATEMPTHRSH}
{\qr HST_RFTC_PADELTATEMPTHRSH{\bkmkstart AAAAAAAARM}
{\bkmkend AAAAAAAARM}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_PAPWRCTL_AIWDELAY\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_PAPWRCTL_AIWDELAY}
{\qr HST_RFTC_PAPWRCTL_AIWDELAY{\bkmkstart AAAAAAAARN}
{\bkmkend AAAAAAAARN}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_PAPWRCTL_STAT0\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_PAPWRCTL_STAT0}
{\qr MAC_RFTC_PAPWRCTL_STAT0{\bkmkstart AAAAAAAARO}
{\bkmkend AAAAAAAARO}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_PAPWRCTL_STAT1\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_PAPWRCTL_STAT1}
{\qr MAC_RFTC_PAPWRCTL_STAT1{\bkmkstart AAAAAAAARP}
{\bkmkend AAAAAAAARP}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_PAPWRCTL_STAT2\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_PAPWRCTL_STAT2}
{\qr MAC_RFTC_PAPWRCTL_STAT2{\bkmkstart AAAAAAAARQ}
{\bkmkend AAAAAAAARQ}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_PAPWRCTL_STAT3\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_PAPWRCTL_STAT3}
{\qr MAC_RFTC_PAPWRCTL_STAT3{\bkmkstart AAAAAAAARR}
{\bkmkend AAAAAAAARR}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_ANTSENSRESTHRSH\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_ANTSENSRESTHRSH}
{\qr HST_RFTC_ANTSENSRESTHRSH{\bkmkstart AAAAAAAARS}
{\bkmkend AAAAAAAARS}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_IFLNAAGCRANGE\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_IFLNAAGCRANGE}
{\qr HST_RFTC_IFLNAAGCRANGE{\bkmkstart AAAAAAAART}
{\bkmkend AAAAAAAART}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_LAST_ANACTRL1\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_LAST_ANACTRL1}
{\qr MAC_RFTC_LAST_ANACTRL1{\bkmkstart AAAAAAAARU}
{\bkmkend AAAAAAAARU}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_OPENLOOPPWRCTRL\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_OPENLOOPPWRCTRL}
{\qr HST_RFTC_OPENLOOPPWRCTRL{\bkmkstart AAAAAAAARV}
{\bkmkend AAAAAAAARV}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B16\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B16}
{\qr HST_RFTC_RFU_0x0B16{\bkmkstart AAAAAAAARW}
{\bkmkend AAAAAAAARW}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B17\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B17}
{\qr HST_RFTC_RFU_0x0B17{\bkmkstart AAAAAAAARX}
{\bkmkend AAAAAAAARX}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B18\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B18}
{\qr HST_RFTC_RFU_0x0B18{\bkmkstart AAAAAAAARY}
{\bkmkend AAAAAAAARY}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B19\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B19}
{\qr HST_RFTC_RFU_0x0B19{\bkmkstart AAAAAAAARZ}
{\bkmkend AAAAAAAARZ}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_PREDIST_COEFF0\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_PREDIST_COEFF0}
{\qr HST_RFTC_PREDIST_COEFF0{\bkmkstart AAAAAAAASA}
{\bkmkend AAAAAAAASA}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B1B\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B1B}
{\qr HST_RFTC_RFU_0x0B1B{\bkmkstart AAAAAAAASB}
{\bkmkend AAAAAAAASB}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B1C\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B1C}
{\qr HST_RFTC_RFU_0x0B1C{\bkmkstart AAAAAAAASC}
{\bkmkend AAAAAAAASC}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B1D\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B1D}
{\qr HST_RFTC_RFU_0x0B1D{\bkmkstart AAAAAAAASD}
{\bkmkend AAAAAAAASD}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B1E\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B1E}
{\qr HST_RFTC_RFU_0x0B1E{\bkmkstart AAAAAAAASE}
{\bkmkend AAAAAAAASE}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B1F\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B1F}
{\qr HST_RFTC_RFU_0x0B1F{\bkmkstart AAAAAAAASF}
{\bkmkend AAAAAAAASF}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_CAL_GGNEG7\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_CAL_GGNEG7}
{\qr HST_RFTC_CAL_GGNEG7{\bkmkstart AAAAAAAASG}
{\bkmkend AAAAAAAASG}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_CAL_GGNEG5\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_CAL_GGNEG5}
{\qr HST_RFTC_CAL_GGNEG5{\bkmkstart AAAAAAAASH}
{\bkmkend AAAAAAAASH}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_CAL_GGNEG3\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_CAL_GGNEG3}
{\qr HST_RFTC_CAL_GGNEG3{\bkmkstart AAAAAAAASI}
{\bkmkend AAAAAAAASI}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_CAL_GGNEG1\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_CAL_GGNEG1}
{\qr HST_RFTC_CAL_GGNEG1{\bkmkstart AAAAAAAASJ}
{\bkmkend AAAAAAAASJ}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_CAL_GGPLUS1\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_CAL_GGPLUS1}
{\qr HST_RFTC_CAL_GGPLUS1{\bkmkstart AAAAAAAASK}
{\bkmkend AAAAAAAASK}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_CAL_GGPLUS3\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_CAL_GGPLUS3}
{\qr HST_RFTC_CAL_GGPLUS3{\bkmkstart AAAAAAAASL}
{\bkmkend AAAAAAAASL}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_CAL_GGPLUS5\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_CAL_GGPLUS5}
{\qr HST_RFTC_CAL_GGPLUS5{\bkmkstart AAAAAAAASM}
{\bkmkend AAAAAAAASM}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_CAL_GGPLUS7\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_CAL_GGPLUS7}
{\qr HST_RFTC_CAL_GGPLUS7{\bkmkstart AAAAAAAASN}
{\bkmkend AAAAAAAASN}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_CAL_MACADCREFV\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_CAL_MACADCREFV}
{\qr HST_RFTC_CAL_MACADCREFV{\bkmkstart AAAAAAAASO}
{\bkmkend AAAAAAAASO}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_CAL_RFFWDPWR_C0\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_CAL_RFFWDPWR_C0}
{\qr HST_RFTC_CAL_RFFWDPWR_C0{\bkmkstart AAAAAAAASP}
{\bkmkend AAAAAAAASP}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_CAL_RFFWDPWR_C1\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_CAL_RFFWDPWR_C1}
{\qr HST_RFTC_CAL_RFFWDPWR_C1{\bkmkstart AAAAAAAASQ}
{\bkmkend AAAAAAAASQ}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_CAL_RFFWDPWR_C2\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_CAL_RFFWDPWR_C2}
{\qr HST_RFTC_CAL_RFFWDPWR_C2{\bkmkstart AAAAAAAASR}
{\bkmkend AAAAAAAASR}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B2C\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B2C}
{\qr HST_RFTC_RFU_0x0B2C{\bkmkstart AAAAAAAASS}
{\bkmkend AAAAAAAASS}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B2D\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B2D}
{\qr HST_RFTC_RFU_0x0B2D{\bkmkstart AAAAAAAAST}
{\bkmkend AAAAAAAAST}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B2E\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B2E}
{\qr HST_RFTC_RFU_0x0B2E{\bkmkstart AAAAAAAASU}
{\bkmkend AAAAAAAASU}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B2F\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B2F}
{\qr HST_RFTC_RFU_0x0B2F{\bkmkstart AAAAAAAASV}
{\bkmkend AAAAAAAASV}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_CLKDBLR_CFG\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_CLKDBLR_CFG}
{\qr HST_RFTC_CLKDBLR_CFG{\bkmkstart AAAAAAAASW}
{\bkmkend AAAAAAAASW}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_CLKDBLR_SEL\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_CLKDBLR_SEL}
{\qr HST_RFTC_CLKDBLR_SEL{\bkmkstart AAAAAAAASX}
{\bkmkend AAAAAAAASX}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_CLKDBLR_LUTENTRY\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_CLKDBLR_LUTENTRY}
{\qr HST_RFTC_CLKDBLR_LUTENTRY{\bkmkstart AAAAAAAASY}
{\bkmkend AAAAAAAASY}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B33\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B33}
{\qr HST_RFTC_RFU_0x0B33{\bkmkstart AAAAAAAASZ}
{\bkmkend AAAAAAAASZ}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B34\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B34}
{\qr HST_RFTC_RFU_0x0B34{\bkmkstart AAAAAAAATA}
{\bkmkend AAAAAAAATA}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B35\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B35}
{\qr HST_RFTC_RFU_0x0B35{\bkmkstart AAAAAAAATB}
{\bkmkend AAAAAAAATB}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B36\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B36}
{\qr HST_RFTC_RFU_0x0B36{\bkmkstart AAAAAAAATC}
{\bkmkend AAAAAAAATC}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B37\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B37}
{\qr HST_RFTC_RFU_0x0B37{\bkmkstart AAAAAAAATD}
{\bkmkend AAAAAAAATD}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B38\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B38}
{\qr HST_RFTC_RFU_0x0B38{\bkmkstart AAAAAAAATE}
{\bkmkend AAAAAAAATE}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B39\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B39}
{\qr HST_RFTC_RFU_0x0B39{\bkmkstart AAAAAAAATF}
{\bkmkend AAAAAAAATF}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B3A\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B3A}
{\qr HST_RFTC_RFU_0x0B3A{\bkmkstart AAAAAAAATG}
{\bkmkend AAAAAAAATG}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B3B\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B3B}
{\qr HST_RFTC_RFU_0x0B3B{\bkmkstart AAAAAAAATH}
{\bkmkend AAAAAAAATH}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B3C\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B3C}
{\qr HST_RFTC_RFU_0x0B3C{\bkmkstart AAAAAAAATI}
{\bkmkend AAAAAAAATI}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B3D\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B3D}
{\qr HST_RFTC_RFU_0x0B3D{\bkmkstart AAAAAAAATJ}
{\bkmkend AAAAAAAATJ}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B3E\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B3E}
{\qr HST_RFTC_RFU_0x0B3E{\bkmkstart AAAAAAAATK}
{\bkmkend AAAAAAAATK}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B3F\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B3F}
{\qr HST_RFTC_RFU_0x0B3F{\bkmkstart AAAAAAAATL}
{\bkmkend AAAAAAAATL}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_FRQHOPMODE\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_FRQHOPMODE}
{\qr HST_RFTC_FRQHOPMODE{\bkmkstart AAAAAAAATM}
{\bkmkend AAAAAAAATM}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_FRQHOPENTRYCNT\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_FRQHOPENTRYCNT}
{\qr HST_RFTC_FRQHOPENTRYCNT{\bkmkstart AAAAAAAATN}
{\bkmkend AAAAAAAATN}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_FRQHOPTABLEINDEX\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_FRQHOPTABLEINDEX}
{\qr HST_RFTC_FRQHOPTABLEINDEX{\bkmkstart AAAAAAAATO}
{\bkmkend AAAAAAAATO}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_HOPCNT\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_HOPCNT}
{\qr MAC_RFTC_HOPCNT{\bkmkstart AAAAAAAATP}
{\bkmkend AAAAAAAATP}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_MINHOPDUR\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_MINHOPDUR}
{\qr HST_RFTC_MINHOPDUR{\bkmkstart AAAAAAAATQ}
{\bkmkend AAAAAAAATQ}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_MAXHOPDUR\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_MAXHOPDUR}
{\qr HST_RFTC_MAXHOPDUR{\bkmkstart AAAAAAAATR}
{\bkmkend AAAAAAAATR}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_FRQHOPRANDSEED\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_FRQHOPRANDSEED}
{\qr HST_RFTC_FRQHOPRANDSEED{\bkmkstart AAAAAAAATS}
{\bkmkend AAAAAAAATS}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_FRQHOPSHFTREGVAL\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_FRQHOPSHFTREGVAL}
{\qr MAC_RFTC_FRQHOPSHFTREGVAL{\bkmkstart AAAAAAAATT}
{\bkmkend AAAAAAAATT}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_FRQHOPRANDNUMCNT\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_FRQHOPRANDNUMCNT}
{\qr MAC_RFTC_FRQHOPRANDNUMCNT{\bkmkstart AAAAAAAATU}
{\bkmkend AAAAAAAATU}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_FRQCHINDEX\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_FRQCHINDEX}
{\qr HST_RFTC_FRQCHINDEX{\bkmkstart AAAAAAAATV}
{\bkmkend AAAAAAAATV}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_PLLLOCKTIMEOUT\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_PLLLOCKTIMEOUT}
{\qr HST_RFTC_PLLLOCKTIMEOUT{\bkmkstart AAAAAAAATW}
{\bkmkend AAAAAAAATW}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_PLLLOCK_DET_THRSH\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_PLLLOCK_DET_THRSH}
{\qr HST_RFTC_PLLLOCK_DET_THRSH{\bkmkstart AAAAAAAATX}
{\bkmkend AAAAAAAATX}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_PLLLOCK_DET_CNT\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_PLLLOCK_DET_CNT}
{\qr HST_RFTC_PLLLOCK_DET_CNT{\bkmkstart AAAAAAAATY}
{\bkmkend AAAAAAAATY}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_PLLLOCK_TO\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_PLLLOCK_TO}
{\qr HST_RFTC_PLLLOCK_TO{\bkmkstart AAAAAAAATZ}
{\bkmkend AAAAAAAATZ}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_BERREADDELAY\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_BERREADDELAY}
{\qr HST_RFTC_BERREADDELAY{\bkmkstart AAAAAAAAUA}
{\bkmkend AAAAAAAAUA}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B4F\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B4F}
{\qr HST_RFTC_RFU_0x0B4F{\bkmkstart AAAAAAAAUB}
{\bkmkend AAAAAAAAUB}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_FWDRFPWRRAWADC\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_FWDRFPWRRAWADC}
{\qr MAC_RFTC_FWDRFPWRRAWADC{\bkmkstart AAAAAAAAUC}
{\bkmkend AAAAAAAAUC}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_REVRFPWRRAWADC\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_REVRFPWRRAWADC}
{\qr MAC_RFTC_REVRFPWRRAWADC{\bkmkstart AAAAAAAAUD}
{\bkmkend AAAAAAAAUD}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_ANTSENSERAWADC\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_ANTSENSERAWADC}
{\qr MAC_RFTC_ANTSENSERAWADC{\bkmkstart AAAAAAAAUE}
{\bkmkend AAAAAAAAUE}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_AMBTEMPRAWADC\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_AMBTEMPRAWADC}
{\qr MAC_RFTC_AMBTEMPRAWADC{\bkmkstart AAAAAAAAUF}
{\bkmkend AAAAAAAAUF}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_PATEMPRAWADC\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_PATEMPRAWADC}
{\qr MAC_RFTC_PATEMPRAWADC{\bkmkstart AAAAAAAAUG}
{\bkmkend AAAAAAAAUG}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_XCVRTEMPRAWADC\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_XCVRTEMPRAWADC}
{\qr MAC_RFTC_XCVRTEMPRAWADC{\bkmkstart AAAAAAAAUH}
{\bkmkend AAAAAAAAUH}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B56\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B56}
{\qr HST_RFTC_RFU_0x0B56{\bkmkstart AAAAAAAAUI}
{\bkmkend AAAAAAAAUI}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B57\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B57}
{\qr HST_RFTC_RFU_0x0B57{\bkmkstart AAAAAAAAUJ}
{\bkmkend AAAAAAAAUJ}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B58\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B58}
{\qr HST_RFTC_RFU_0x0B58{\bkmkstart AAAAAAAAUK}
{\bkmkend AAAAAAAAUK}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B59\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B59}
{\qr HST_RFTC_RFU_0x0B59{\bkmkstart AAAAAAAAUL}
{\bkmkend AAAAAAAAUL}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B5A\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B5A}
{\qr HST_RFTC_RFU_0x0B5A{\bkmkstart AAAAAAAAUM}
{\bkmkend AAAAAAAAUM}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B5B\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B5B}
{\qr HST_RFTC_RFU_0x0B5B{\bkmkstart AAAAAAAAUN}
{\bkmkend AAAAAAAAUN}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B5C\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B5C}
{\qr HST_RFTC_RFU_0x0B5C{\bkmkstart AAAAAAAAUO}
{\bkmkend AAAAAAAAUO}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B5D\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B5D}
{\qr HST_RFTC_RFU_0x0B5D{\bkmkstart AAAAAAAAUP}
{\bkmkend AAAAAAAAUP}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B5E\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B5E}
{\qr HST_RFTC_RFU_0x0B5E{\bkmkstart AAAAAAAAUQ}
{\bkmkend AAAAAAAAUQ}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B5F\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B5F}
{\qr HST_RFTC_RFU_0x0B5F{\bkmkstart AAAAAAAAUR}
{\bkmkend AAAAAAAAUR}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_CURRENT_PROFILE\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_CURRENT_PROFILE}
{\qr HST_RFTC_CURRENT_PROFILE{\bkmkstart AAAAAAAAUS}
{\bkmkend AAAAAAAAUS}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_PROF_SEL\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_PROF_SEL}
{\qr HST_RFTC_PROF_SEL{\bkmkstart AAAAAAAAUT}
{\bkmkend AAAAAAAAUT}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_PROF_CFG\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_PROF_CFG}
{\qr MAC_RFTC_PROF_CFG{\bkmkstart AAAAAAAAUU}
{\bkmkend AAAAAAAAUU}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_PROF_ID_HIGH\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_PROF_ID_HIGH}
{\qr MAC_RFTC_PROF_ID_HIGH{\bkmkstart AAAAAAAAUV}
{\bkmkend AAAAAAAAUV}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_PROF_ID_LOW\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_PROF_ID_LOW}
{\qr MAC_RFTC_PROF_ID_LOW{\bkmkstart AAAAAAAAUW}
{\bkmkend AAAAAAAAUW}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_PROF_IDVER\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_PROF_IDVER}
{\qr MAC_RFTC_PROF_IDVER{\bkmkstart AAAAAAAAUX}
{\bkmkend AAAAAAAAUX}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_PROF_PROTOCOL\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_PROF_PROTOCOL}
{\qr MAC_RFTC_PROF_PROTOCOL{\bkmkstart AAAAAAAAUY}
{\bkmkend AAAAAAAAUY}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_PROF_R2TMODTYPE\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_PROF_R2TMODTYPE}
{\qr MAC_RFTC_PROF_R2TMODTYPE{\bkmkstart AAAAAAAAUZ}
{\bkmkend AAAAAAAAUZ}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_PROF_TARI\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_PROF_TARI}
{\qr MAC_RFTC_PROF_TARI{\bkmkstart AAAAAAAAVA}
{\bkmkend AAAAAAAAVA}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_PROF_X\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_PROF_X}
{\qr MAC_RFTC_PROF_X{\bkmkstart AAAAAAAAVB}
{\bkmkend AAAAAAAAVB}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_PROF_PW\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_PROF_PW}
{\qr MAC_RFTC_PROF_PW{\bkmkstart AAAAAAAAVC}
{\bkmkend AAAAAAAAVC}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_PROF_RTCAL\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_PROF_RTCAL}
{\qr MAC_RFTC_PROF_RTCAL{\bkmkstart AAAAAAAAVD}
{\bkmkend AAAAAAAAVD}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_PROF_TRCAL\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_PROF_TRCAL}
{\qr MAC_RFTC_PROF_TRCAL{\bkmkstart AAAAAAAAVE}
{\bkmkend AAAAAAAAVE}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_PROF_DIVIDERATIO\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_PROF_DIVIDERATIO}
{\qr MAC_RFTC_PROF_DIVIDERATIO{\bkmkstart AAAAAAAAVF}
{\bkmkend AAAAAAAAVF}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_PROF_MILLERNUM\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_PROF_MILLERNUM}
{\qr MAC_RFTC_PROF_MILLERNUM{\bkmkstart AAAAAAAAVG}
{\bkmkend AAAAAAAAVG}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_PROF_T2RLINKFREQ\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_PROF_T2RLINKFREQ}
{\qr MAC_RFTC_PROF_T2RLINKFREQ{\bkmkstart AAAAAAAAVH}
{\bkmkend AAAAAAAAVH}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_PROF_VART2DELAY\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_PROF_VART2DELAY}
{\qr MAC_RFTC_PROF_VART2DELAY{\bkmkstart AAAAAAAAVI}
{\bkmkend AAAAAAAAVI}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_PROF_RXDELAY\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_PROF_RXDELAY}
{\qr MAC_RFTC_PROF_RXDELAY{\bkmkstart AAAAAAAAVJ}
{\bkmkend AAAAAAAAVJ}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_PROF_MINTOTT2DELAY\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_PROF_MINTOTT2DELAY}
{\qr MAC_RFTC_PROF_MINTOTT2DELAY{\bkmkstart AAAAAAAAVK}
{\bkmkend AAAAAAAAVK}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_PROF_TXPROPDELAY\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_PROF_TXPROPDELAY}
{\qr MAC_RFTC_PROF_TXPROPDELAY{\bkmkstart AAAAAAAAVL}
{\bkmkend AAAAAAAAVL}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_PROF_RSSIAVECFG\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_PROF_RSSIAVECFG}
{\qr MAC_RFTC_PROF_RSSIAVECFG{\bkmkstart AAAAAAAAVM}
{\bkmkend AAAAAAAAVM}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_PROF_PREAMCMD\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_PROF_PREAMCMD}
{\qr MAC_RFTC_PROF_PREAMCMD{\bkmkstart AAAAAAAAVN}
{\bkmkend AAAAAAAAVN}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_PROF_FSYNCCMD\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_PROF_FSYNCCMD}
{\qr MAC_RFTC_PROF_FSYNCCMD{\bkmkstart AAAAAAAAVO}
{\bkmkend AAAAAAAAVO}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_PROF_T2WAITCMD\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_PROF_T2WAITCMD}
{\qr MAC_RFTC_PROF_T2WAITCMD{\bkmkstart AAAAAAAAVP}
{\bkmkend AAAAAAAAVP}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B78\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B78}
{\qr HST_RFTC_RFU_0x0B78{\bkmkstart AAAAAAAAVQ}
{\bkmkend AAAAAAAAVQ}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B79\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B79}
{\qr HST_RFTC_RFU_0x0B79{\bkmkstart AAAAAAAAVR}
{\bkmkend AAAAAAAAVR}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B7A\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B7A}
{\qr HST_RFTC_RFU_0x0B7A{\bkmkstart AAAAAAAAVS}
{\bkmkend AAAAAAAAVS}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B7B\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B7B}
{\qr HST_RFTC_RFU_0x0B7B{\bkmkstart AAAAAAAAVT}
{\bkmkend AAAAAAAAVT}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B7C\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B7C}
{\qr HST_RFTC_RFU_0x0B7C{\bkmkstart AAAAAAAAVU}
{\bkmkend AAAAAAAAVU}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B7D\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B7D}
{\qr HST_RFTC_RFU_0x0B7D{\bkmkstart AAAAAAAAVV}
{\bkmkend AAAAAAAAVV}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B7E\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B7E}
{\qr HST_RFTC_RFU_0x0B7E{\bkmkstart AAAAAAAAVW}
{\bkmkend AAAAAAAAVW}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B7F\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B7F}
{\qr HST_RFTC_RFU_0x0B7F{\bkmkstart AAAAAAAAVX}
{\bkmkend AAAAAAAAVX}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B80\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B80}
{\qr HST_RFTC_RFU_0x0B80{\bkmkstart AAAAAAAAVY}
{\bkmkend AAAAAAAAVY}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B81\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B81}
{\qr HST_RFTC_RFU_0x0B81{\bkmkstart AAAAAAAAVZ}
{\bkmkend AAAAAAAAVZ}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B82\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B82}
{\qr HST_RFTC_RFU_0x0B82{\bkmkstart AAAAAAAAWA}
{\bkmkend AAAAAAAAWA}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B83\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B83}
{\qr HST_RFTC_RFU_0x0B83{\bkmkstart AAAAAAAAWB}
{\bkmkend AAAAAAAAWB}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B84\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B84}
{\qr HST_RFTC_RFU_0x0B84{\bkmkstart AAAAAAAAWC}
{\bkmkend AAAAAAAAWC}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_FRQCH_ENTRYCNT\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_FRQCH_ENTRYCNT}
{\qr HST_RFTC_FRQCH_ENTRYCNT{\bkmkstart AAAAAAAAWD}
{\bkmkend AAAAAAAAWD}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_FRQCH_SEL\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_FRQCH_SEL}
{\qr HST_RFTC_FRQCH_SEL{\bkmkstart AAAAAAAAWE}
{\bkmkend AAAAAAAAWE}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_FRQCH_CFG\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_FRQCH_CFG}
{\qr HST_RFTC_FRQCH_CFG{\bkmkstart AAAAAAAAWF}
{\bkmkend AAAAAAAAWF}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_FRQCH_DESC_PLLDIVMULT\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_FRQCH_DESC_PLLDIVMULT}
{\qr HST_RFTC_FRQCH_DESC_PLLDIVMULT{\bkmkstart AAAAAAAAWG}
{\bkmkend AAAAAAAAWG}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_FRQCH_DESC_PLLDACCTL\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_FRQCH_DESC_PLLDACCTL}
{\qr HST_RFTC_FRQCH_DESC_PLLDACCTL{\bkmkstart AAAAAAAAWH}
{\bkmkend AAAAAAAAWH}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_FRQCH_DESC_PLLLOCKSTAT0\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_FRQCH_DESC_PLLLOCKSTAT0}
{\qr MAC_RFTC_FRQCH_DESC_PLLLOCKSTAT0{\bkmkstart AAAAAAAAWI}
{\bkmkend AAAAAAAAWI}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_FRQCH_DESC_PLLLOCKSTAT1\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_FRQCH_DESC_PLLLOCKSTAT1}
{\qr MAC_RFTC_FRQCH_DESC_PLLLOCKSTAT1{\bkmkstart AAAAAAAAWJ}
{\bkmkend AAAAAAAAWJ}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_FRQCH_DESC_PARFU3\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_FRQCH_DESC_PARFU3}
{\qr HST_RFTC_FRQCH_DESC_PARFU3{\bkmkstart AAAAAAAAWK}
{\bkmkend AAAAAAAAWK}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_FRQCH_CMDSTART\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_FRQCH_CMDSTART}
{\qr HST_RFTC_FRQCH_CMDSTART{\bkmkstart AAAAAAAAWL}
{\bkmkend AAAAAAAAWL}
\cell }{\cell }{\row }
{\xe \v HST_CMD\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_CMD}
{\qr HST_CMD{\bkmkstart AAAAAAAAWM}
{\bkmkend AAAAAAAAWM}
\cell }{\cell }{\row }
{\xe \v MAC_VER\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_VER}
{\qr MAC_VER{\bkmkstart AAAAAAAAMA}
{\bkmkend AAAAAAAAMA}
\cell }{\cell }{\row }
{\xe \v MAC_INFO\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_INFO}
{\qr MAC_INFO{\bkmkstart AAAAAAAAMB}
{\bkmkend AAAAAAAAMB}
\cell }{\cell }{\row }
{\xe \v MAC_RFTRANSINFO\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTRANSINFO}
{\qr MAC_RFTRANSINFO{\bkmkstart AAAAAAAAMC}
{\bkmkend AAAAAAAAMC}
\cell }{\cell }{\row }
{\xe \v MAC_DBG1\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_DBG1}
{\qr MAC_DBG1{\bkmkstart AAAAAAAAMD}
{\bkmkend AAAAAAAAMD}
\cell }{\cell }{\row }
{\xe \v MAC_DBG2\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_DBG2}
{\qr MAC_DBG2{\bkmkstart AAAAAAAAME}
{\bkmkend AAAAAAAAME}
\cell }{\cell }{\row }
{\xe \v MAC_ERROR\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_ERROR}
{\qr MAC_ERROR{\bkmkstart AAAAAAAAMF}
{\bkmkend AAAAAAAAMF}
\cell }{\cell }{\row }
{\xe \v HST_ENGTST_ARG0\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_ENGTST_ARG0}
{\qr HST_ENGTST_ARG0{\bkmkstart AAAAAAAAMG}
{\bkmkend AAAAAAAAMG}
\cell }{\cell }{\row }
{\xe \v HST_ENGTST_ARG1\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_ENGTST_ARG1}
{\qr HST_ENGTST_ARG1{\bkmkstart AAAAAAAAMH}
{\bkmkend AAAAAAAAMH}
\cell }{\cell }{\row }
{\xe \v HST_DBG1\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_DBG1}
{\qr HST_DBG1{\bkmkstart AAAAAAAAMI}
{\bkmkend AAAAAAAAMI}
\cell }{\cell }{\row }
{\xe \v HST_EMU\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_EMU}
{\qr HST_EMU{\bkmkstart AAAAAAAAMJ}
{\bkmkend AAAAAAAAMJ}
\cell }{\cell }{\row }
{\xe \v HST_PWRMGMT\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_PWRMGMT}
{\qr HST_PWRMGMT{\bkmkstart AAAAAAAAMK}
{\bkmkend AAAAAAAAMK}
\cell }{\cell }{\row }
{\xe \v HST_CMNDIAGS\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_CMNDIAGS}
{\qr HST_CMNDIAGS{\bkmkstart AAAAAAAAML}
{\bkmkend AAAAAAAAML}
\cell }{\cell }{\row }
{\xe \v MAC_BLK02RES1\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_BLK02RES1}
{\qr MAC_BLK02RES1{\bkmkstart AAAAAAAAMM}
{\bkmkend AAAAAAAAMM}
\cell }{\cell }{\row }
{\xe \v HST_CTR_GCFG\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_CTR_GCFG}
{\qr HST_CTR_GCFG{\bkmkstart AAAAAAAAMN}
{\bkmkend AAAAAAAAMN}
\cell }{\cell }{\row }
{\xe \v HST_CTR1_CFG\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_CTR1_CFG}
{\qr HST_CTR1_CFG{\bkmkstart AAAAAAAAMO}
{\bkmkend AAAAAAAAMO}
\cell }{\cell }{\row }
{\xe \v MAC_CTR1_VAL\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_CTR1_VAL}
{\qr MAC_CTR1_VAL{\bkmkstart AAAAAAAAMP}
{\bkmkend AAAAAAAAMP}
\cell }{\cell }{\row }
{\xe \v HST_CTR2_CFG\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_CTR2_CFG}
{\qr HST_CTR2_CFG{\bkmkstart AAAAAAAAMQ}
{\bkmkend AAAAAAAAMQ}
\cell }{\cell }{\row }
{\xe \v MAC_CTR2_VAL\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_CTR2_VAL}
{\qr MAC_CTR2_VAL{\bkmkstart AAAAAAAAMR}
{\bkmkend AAAAAAAAMR}
\cell }{\cell }{\row }
{\xe \v HST_CTR3_CFG\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_CTR3_CFG}
{\qr HST_CTR3_CFG{\bkmkstart AAAAAAAAMS}
{\bkmkend AAAAAAAAMS}
\cell }{\cell }{\row }
{\xe \v MAC_CTR3_VAL\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_CTR3_VAL}
{\qr MAC_CTR3_VAL{\bkmkstart AAAAAAAAMT}
{\bkmkend AAAAAAAAMT}
\cell }{\cell }{\row }
{\xe \v HST_CTR4_CFG\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_CTR4_CFG}
{\qr HST_CTR4_CFG{\bkmkstart AAAAAAAAMU}
{\bkmkend AAAAAAAAMU}
\cell }{\cell }{\row }
{\xe \v MAC_CTR4_VAL\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_CTR4_VAL}
{\qr MAC_CTR4_VAL{\bkmkstart AAAAAAAAMV}
{\bkmkend AAAAAAAAMV}
\cell }{\cell }{\row }
{\xe \v HST_PROTSCH_SMIDX\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_PROTSCH_SMIDX}
{\qr HST_PROTSCH_SMIDX{\bkmkstart AAAAAAAAMW}
{\bkmkend AAAAAAAAMW}
\cell }{\cell }{\row }
{\xe \v HST_PROTSCH_SMCFG\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_PROTSCH_SMCFG}
{\qr HST_PROTSCH_SMCFG{\bkmkstart AAAAAAAAMX}
{\bkmkend AAAAAAAAMX}
\cell }{\cell }{\row }
{\xe \v HST_PROTSCH_FTIME_SEL\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_PROTSCH_FTIME_SEL}
{\qr HST_PROTSCH_FTIME_SEL{\bkmkstart AAAAAAAAMY}
{\bkmkend AAAAAAAAMY}
\cell }{\cell }{\row }
{\xe \v HST_PROTSCH_FTIME\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_PROTSCH_FTIME}
{\qr HST_PROTSCH_FTIME{\bkmkstart AAAAAAAAMZ}
{\bkmkend AAAAAAAAMZ}
\cell }{\cell }{\row }
{\xe \v HST_PROTSCH_SMCFG_SEL\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_PROTSCH_SMCFG_SEL}
{\qr HST_PROTSCH_SMCFG_SEL{\bkmkstart AAAAAAAANA}
{\bkmkend AAAAAAAANA}
\cell }{\cell }{\row }
{\xe \v HST_PROTSCH_TXTIME_SEL\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_PROTSCH_TXTIME_SEL}
{\qr HST_PROTSCH_TXTIME_SEL{\bkmkstart AAAAAAAANB}
{\bkmkend AAAAAAAANB}
\cell }{\cell }{\row }
{\xe \v HST_PROTSCH_TXTIME_ON\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_PROTSCH_TXTIME_ON}
{\qr HST_PROTSCH_TXTIME_ON{\bkmkstart AAAAAAAANC}
{\bkmkend AAAAAAAANC}
\cell }{\cell }{\row }
{\xe \v HST_PROTSCH_TXTIME_OFF\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_PROTSCH_TXTIME_OFF}
{\qr HST_PROTSCH_TXTIME_OFF{\bkmkstart AAAAAAAAND}
{\bkmkend AAAAAAAAND}
\cell }{\cell }{\row }
{\xe \v HST_PROTSCH_CYCCFG_SEL\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_PROTSCH_CYCCFG_SEL}
{\qr HST_PROTSCH_CYCCFG_SEL{\bkmkstart AAAAAAAANE}
{\bkmkend AAAAAAAANE}
\cell }{\cell }{\row }
{\xe \v HST_PROTSCH_CYCCFG_DESC_ADJ1\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_PROTSCH_CYCCFG_DESC_ADJ1}
{\qr HST_PROTSCH_CYCCFG_DESC_ADJ1{\bkmkstart AAAAAAAANF}
{\bkmkend AAAAAAAANF}
\cell }{\cell }{\row }
{\xe \v HST_PROTSCH_ADJCW\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_PROTSCH_ADJCW}
{\qr HST_PROTSCH_ADJCW{\bkmkstart AAAAAAAANG}
{\bkmkend AAAAAAAANG}
\cell }{\cell }{\row }
{\xe \v HST_MBP_ADDR\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_MBP_ADDR}
{\qr HST_MBP_ADDR{\bkmkstart AAAAAAAANH}
{\bkmkend AAAAAAAANH}
\cell }{\cell }{\row }
{\xe \v HST_MBP_DATA\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_MBP_DATA}
{\qr HST_MBP_DATA{\bkmkstart AAAAAAAANI}
{\bkmkend AAAAAAAANI}
\cell }{\cell }{\row }
{\xe \v HST_MBP_RFU_0x0402\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_MBP_RFU_0x0402}
{\qr HST_MBP_RFU_0x0402{\bkmkstart AAAAAAAANJ}
{\bkmkend AAAAAAAANJ}
\cell }{\cell }{\row }
{\xe \v HST_MBP_RFU_0x0403\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_MBP_RFU_0x0403}
{\qr HST_MBP_RFU_0x0403{\bkmkstart AAAAAAAANK}
{\bkmkend AAAAAAAANK}
\cell }{\cell }{\row }
{\xe \v HST_MBP_RFU_0x0404\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_MBP_RFU_0x0404}
{\qr HST_MBP_RFU_0x0404{\bkmkstart AAAAAAAANL}
{\bkmkend AAAAAAAANL}
\cell }{\cell }{\row }
{\xe \v HST_MBP_RFU_0x0405\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_MBP_RFU_0x0405}
{\qr HST_MBP_RFU_0x0405{\bkmkstart AAAAAAAANM}
{\bkmkend AAAAAAAANM}
\cell }{\cell }{\row }
{\xe \v HST_MBP_RFU_0x0406\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_MBP_RFU_0x0406}
{\qr HST_MBP_RFU_0x0406{\bkmkstart AAAAAAAANN}
{\bkmkend AAAAAAAANN}
\cell }{\cell }{\row }
{\xe \v HST_MBP_RFU_0x0407\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_MBP_RFU_0x0407}
{\qr HST_MBP_RFU_0x0407{\bkmkstart AAAAAAAANO}
{\bkmkend AAAAAAAANO}
\cell }{\cell }{\row }
{\xe \v HST_LPROF_SEL\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_LPROF_SEL}
{\qr HST_LPROF_SEL{\bkmkstart AAAAAAAANP}
{\bkmkend AAAAAAAANP}
\cell }{\cell }{\row }
{\xe \v HST_LPROF_ADDR\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_LPROF_ADDR}
{\qr HST_LPROF_ADDR{\bkmkstart AAAAAAAANQ}
{\bkmkend AAAAAAAANQ}
\cell }{\cell }{\row }
{\xe \v HST_LPROF_DATA\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_LPROF_DATA}
{\qr HST_LPROF_DATA{\bkmkstart AAAAAAAANR}
{\bkmkend AAAAAAAANR}
\cell }{\cell }{\row }
{\xe \v HST_OEM_ADDR\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_OEM_ADDR}
{\qr HST_OEM_ADDR{\bkmkstart AAAAAAAANS}
{\bkmkend AAAAAAAANS}
\cell }{\cell }{\row }
{\xe \v HST_OEM_DATA\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_OEM_DATA}
{\qr HST_OEM_DATA{\bkmkstart AAAAAAAANT}
{\bkmkend AAAAAAAANT}
\cell }{\cell }{\row }
{\xe \v HST_GPIO_INMSK\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_GPIO_INMSK}
{\qr HST_GPIO_INMSK{\bkmkstart AAAAAAAANU}
{\bkmkend AAAAAAAANU}
\cell }{\cell }{\row }
{\xe \v HST_GPIO_OUTMSK\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_GPIO_OUTMSK}
{\qr HST_GPIO_OUTMSK{\bkmkstart AAAAAAAANV}
{\bkmkend AAAAAAAANV}
\cell }{\cell }{\row }
{\xe \v HST_GPIO_OUTVAL\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_GPIO_OUTVAL}
{\qr HST_GPIO_OUTVAL{\bkmkstart AAAAAAAANW}
{\bkmkend AAAAAAAANW}
\cell }{\cell }{\row }
{\xe \v HST_GPIO_CFG\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_GPIO_CFG}
{\qr HST_GPIO_CFG{\bkmkstart AAAAAAAANX}
{\bkmkend AAAAAAAANX}
\cell }{\cell }{\row }
{\xe \v HST_ANT_CYCLES\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_ANT_CYCLES}
{\qr HST_ANT_CYCLES{\bkmkstart AAAAAAAANY}
{\bkmkend AAAAAAAANY}
\cell }{\cell }{\row }
{\xe \v HST_ANT_DESC_SEL\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_ANT_DESC_SEL}
{\qr HST_ANT_DESC_SEL{\bkmkstart AAAAAAAANZ}
{\bkmkend AAAAAAAANZ}
\cell }{\cell }{\row }
{\xe \v HST_ANT_DESC_CFG\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_ANT_DESC_CFG}
{\qr HST_ANT_DESC_CFG{\bkmkstart AAAAAAAAOA}
{\bkmkend AAAAAAAAOA}
\cell }{\cell }{\row }
{\xe \v MAC_ANT_DESC_STAT\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_ANT_DESC_STAT}
{\qr MAC_ANT_DESC_STAT{\bkmkstart AAAAAAAAOB}
{\bkmkend AAAAAAAAOB}
\cell }{\cell }{\row }
{\xe \v HST_ANT_DESC_PORTDEF\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_ANT_DESC_PORTDEF}
{\qr HST_ANT_DESC_PORTDEF{\bkmkstart AAAAAAAAOC}
{\bkmkend AAAAAAAAOC}
\cell }{\cell }{\row }
{\xe \v HST_ANT_DESC_DWELL\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_ANT_DESC_DWELL}
{\qr HST_ANT_DESC_DWELL{\bkmkstart AAAAAAAAOD}
{\bkmkend AAAAAAAAOD}
\cell }{\cell }{\row }
{\xe \v HST_ANT_DESC_RFPOWER\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_ANT_DESC_RFPOWER}
{\qr HST_ANT_DESC_RFPOWER{\bkmkstart AAAAAAAAOE}
{\bkmkend AAAAAAAAOE}
\cell }{\cell }{\row }
{\xe \v HST_ANT_DESC_INV_CNT\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_ANT_DESC_INV_CNT}
{\qr HST_ANT_DESC_INV_CNT{\bkmkstart AAAAAAAAOF}
{\bkmkend AAAAAAAAOF}
\cell }{\cell }{\row }
{\xe \v HST_TAGMSK_DESC_SEL\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_TAGMSK_DESC_SEL}
{\qr HST_TAGMSK_DESC_SEL{\bkmkstart AAAAAAAAOG}
{\bkmkend AAAAAAAAOG}
\cell }{\cell }{\row }
{\xe \v HST_TAGMSK_DESC_CFG\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_TAGMSK_DESC_CFG}
{\qr HST_TAGMSK_DESC_CFG{\bkmkstart AAAAAAAAOH}
{\bkmkend AAAAAAAAOH}
\cell }{\cell }{\row }
{\xe \v HST_TAGMSK_BANK\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_TAGMSK_BANK}
{\qr HST_TAGMSK_BANK{\bkmkstart AAAAAAAAOI}
{\bkmkend AAAAAAAAOI}
\cell }{\cell }{\row }
{\xe \v HST_TAGMSK_PTR\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_TAGMSK_PTR}
{\qr HST_TAGMSK_PTR{\bkmkstart AAAAAAAAOJ}
{\bkmkend AAAAAAAAOJ}
\cell }{\cell }{\row }
{\xe \v HST_TAGMSK_LEN\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_TAGMSK_LEN}
{\qr HST_TAGMSK_LEN{\bkmkstart AAAAAAAAOK}
{\bkmkend AAAAAAAAOK}
\cell }{\cell }{\row }
{\xe \v HST_TAGMSK_0_3\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_TAGMSK_0_3}
{\qr HST_TAGMSK_0_3{\bkmkstart AAAAAAAAOL}
{\bkmkend AAAAAAAAOL}
\cell }{\cell }{\row }
{\xe \v HST_TAGMSK_4_7\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_TAGMSK_4_7}
{\qr HST_TAGMSK_4_7{\bkmkstart AAAAAAAAOM}
{\bkmkend AAAAAAAAOM}
\cell }{\cell }{\row }
{\xe \v HST_TAGMSK_8_11\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_TAGMSK_8_11}
{\qr HST_TAGMSK_8_11{\bkmkstart AAAAAAAAON}
{\bkmkend AAAAAAAAON}
\cell }{\cell }{\row }
{\xe \v HST_TAGMSK_12_15\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_TAGMSK_12_15}
{\qr HST_TAGMSK_12_15{\bkmkstart AAAAAAAAOO}
{\bkmkend AAAAAAAAOO}
\cell }{\cell }{\row }
{\xe \v HST_TAGMSK_16_19\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_TAGMSK_16_19}
{\qr HST_TAGMSK_16_19{\bkmkstart AAAAAAAAOP}
{\bkmkend AAAAAAAAOP}
\cell }{\cell }{\row }
{\xe \v HST_TAGMSK_20_23\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_TAGMSK_20_23}
{\qr HST_TAGMSK_20_23{\bkmkstart AAAAAAAAOQ}
{\bkmkend AAAAAAAAOQ}
\cell }{\cell }{\row }
{\xe \v HST_TAGMSK_24_27\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_TAGMSK_24_27}
{\qr HST_TAGMSK_24_27{\bkmkstart AAAAAAAAOR}
{\bkmkend AAAAAAAAOR}
\cell }{\cell }{\row }
{\xe \v HST_TAGMSK_28_31\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_TAGMSK_28_31}
{\qr HST_TAGMSK_28_31{\bkmkstart AAAAAAAAOS}
{\bkmkend AAAAAAAAOS}
\cell }{\cell }{\row }
{\xe \v HST_QUERY_CFG\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_QUERY_CFG}
{\qr HST_QUERY_CFG{\bkmkstart AAAAAAAAOT}
{\bkmkend AAAAAAAAOT}
\cell }{\cell }{\row }
{\xe \v HST_INV_CFG\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_INV_CFG}
{\qr HST_INV_CFG{\bkmkstart AAAAAAAAOU}
{\bkmkend AAAAAAAAOU}
\cell }{\cell }{\row }
{\xe \v HST_INV_SEL\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_INV_SEL}
{\qr HST_INV_SEL{\bkmkstart AAAAAAAAOV}
{\bkmkend AAAAAAAAOV}
\cell }{\cell }{\row }
{\xe \v HST_INV_ALG_PARM_0\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_INV_ALG_PARM_0}
{\qr HST_INV_ALG_PARM_0{\bkmkstart AAAAAAAAOW}
{\bkmkend AAAAAAAAOW}
\cell }{\cell }{\row }
{\xe \v HST_INV_ALG_PARM_1\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_INV_ALG_PARM_1}
{\qr HST_INV_ALG_PARM_1{\bkmkstart AAAAAAAAOX}
{\bkmkend AAAAAAAAOX}
\cell }{\cell }{\row }
{\xe \v HST_INV_ALG_PARM_2\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_INV_ALG_PARM_2}
{\qr HST_INV_ALG_PARM_2{\bkmkstart AAAAAAAAOY}
{\bkmkend AAAAAAAAOY}
\cell }{\cell }{\row }
{\xe \v HST_INV_ALG_PARM_3\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_INV_ALG_PARM_3}
{\qr HST_INV_ALG_PARM_3{\bkmkstart AAAAAAAAOZ}
{\bkmkend AAAAAAAAOZ}
\cell }{\cell }{\row }
{\xe \v HST_INV_RFU_0x0907\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_INV_RFU_0x0907}
{\qr HST_INV_RFU_0x0907{\bkmkstart AAAAAAAAPA}
{\bkmkend AAAAAAAAPA}
\cell }{\cell }{\row }
{\xe \v HST_INV_RFU_0x0908\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_INV_RFU_0x0908}
{\qr HST_INV_RFU_0x0908{\bkmkstart AAAAAAAAPB}
{\bkmkend AAAAAAAAPB}
\cell }{\cell }{\row }
{\xe \v HST_INV_RFU_0x0909\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_INV_RFU_0x0909}
{\qr HST_INV_RFU_0x0909{\bkmkstart AAAAAAAAPC}
{\bkmkend AAAAAAAAPC}
\cell }{\cell }{\row }
{\xe \v HST_INV_RFU_0x090A\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_INV_RFU_0x090A}
{\qr HST_INV_RFU_0x090A{\bkmkstart AAAAAAAAPD}
{\bkmkend AAAAAAAAPD}
\cell }{\cell }{\row }
{\xe \v HST_INV_RFU_0x090B\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_INV_RFU_0x090B}
{\qr HST_INV_RFU_0x090B{\bkmkstart AAAAAAAAPE}
{\bkmkend AAAAAAAAPE}
\cell }{\cell }{\row }
{\xe \v HST_INV_RFU_0x090C\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_INV_RFU_0x090C}
{\qr HST_INV_RFU_0x090C{\bkmkstart AAAAAAAAPF}
{\bkmkend AAAAAAAAPF}
\cell }{\cell }{\row }
{\xe \v HST_INV_RFU_0x090D\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_INV_RFU_0x090D}
{\qr HST_INV_RFU_0x090D{\bkmkstart AAAAAAAAPG}
{\bkmkend AAAAAAAAPG}
\cell }{\cell }{\row }
{\xe \v HST_INV_RFU_0x090E\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_INV_RFU_0x090E}
{\qr HST_INV_RFU_0x090E{\bkmkstart AAAAAAAAPH}
{\bkmkend AAAAAAAAPH}
\cell }{\cell }{\row }
{\xe \v HST_INV_RFU_0x090F\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_INV_RFU_0x090F}
{\qr HST_INV_RFU_0x090F{\bkmkstart AAAAAAAAPI}
{\bkmkend AAAAAAAAPI}
\cell }{\cell }{\row }
{\xe \v HST_INV_EPC_MATCH_SEL\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_INV_EPC_MATCH_SEL}
{\qr HST_INV_EPC_MATCH_SEL{\bkmkstart AAAAAAAAPJ}
{\bkmkend AAAAAAAAPJ}
\cell }{\cell }{\row }
{\xe \v HST_INV_EPC_MATCH_CFG\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_INV_EPC_MATCH_CFG}
{\qr HST_INV_EPC_MATCH_CFG{\bkmkstart AAAAAAAAPK}
{\bkmkend AAAAAAAAPK}
\cell }{\cell }{\row }
{\xe \v HST_INV_EPCDAT_0_3\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_INV_EPCDAT_0_3}
{\qr HST_INV_EPCDAT_0_3{\bkmkstart AAAAAAAAPL}
{\bkmkend AAAAAAAAPL}
\cell }{\cell }{\row }
{\xe \v HST_INV_EPCDAT_4_7\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_INV_EPCDAT_4_7}
{\qr HST_INV_EPCDAT_4_7{\bkmkstart AAAAAAAAPM}
{\bkmkend AAAAAAAAPM}
\cell }{\cell }{\row }
{\xe \v HST_INV_EPCDAT_8_11\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_INV_EPCDAT_8_11}
{\qr HST_INV_EPCDAT_8_11{\bkmkstart AAAAAAAAPN}
{\bkmkend AAAAAAAAPN}
\cell }{\cell }{\row }
{\xe \v HST_INV_EPCDAT_12_15\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_INV_EPCDAT_12_15}
{\qr HST_INV_EPCDAT_12_15{\bkmkstart AAAAAAAAPO}
{\bkmkend AAAAAAAAPO}
\cell }{\cell }{\row }
{\xe \v HST_INV_EPCDAT_16_19\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_INV_EPCDAT_16_19}
{\qr HST_INV_EPCDAT_16_19{\bkmkstart AAAAAAAAPP}
{\bkmkend AAAAAAAAPP}
\cell }{\cell }{\row }
{\xe \v HST_INV_EPCDAT_20_23\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_INV_EPCDAT_20_23}
{\qr HST_INV_EPCDAT_20_23{\bkmkstart AAAAAAAAPQ}
{\bkmkend AAAAAAAAPQ}
\cell }{\cell }{\row }
{\xe \v HST_INV_EPCDAT_24_27\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_INV_EPCDAT_24_27}
{\qr HST_INV_EPCDAT_24_27{\bkmkstart AAAAAAAAPR}
{\bkmkend AAAAAAAAPR}
\cell }{\cell }{\row }
{\xe \v HST_INV_EPCDAT_28_31\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_INV_EPCDAT_28_31}
{\qr HST_INV_EPCDAT_28_31{\bkmkstart AAAAAAAAPS}
{\bkmkend AAAAAAAAPS}
\cell }{\cell }{\row }
{\xe \v HST_INV_EPCDAT_32_35\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_INV_EPCDAT_32_35}
{\qr HST_INV_EPCDAT_32_35{\bkmkstart AAAAAAAAPT}
{\bkmkend AAAAAAAAPT}
\cell }{\cell }{\row }
{\xe \v HST_INV_EPCDAT_36_39\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_INV_EPCDAT_36_39}
{\qr HST_INV_EPCDAT_36_39{\bkmkstart AAAAAAAAPU}
{\bkmkend AAAAAAAAPU}
\cell }{\cell }{\row }
{\xe \v HST_INV_EPCDAT_40_43\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_INV_EPCDAT_40_43}
{\qr HST_INV_EPCDAT_40_43{\bkmkstart AAAAAAAAPV}
{\bkmkend AAAAAAAAPV}
\cell }{\cell }{\row }
{\xe \v HST_INV_EPCDAT_44_47\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_INV_EPCDAT_44_47}
{\qr HST_INV_EPCDAT_44_47{\bkmkstart AAAAAAAAPW}
{\bkmkend AAAAAAAAPW}
\cell }{\cell }{\row }
{\xe \v HST_INV_EPCDAT_48_51\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_INV_EPCDAT_48_51}
{\qr HST_INV_EPCDAT_48_51{\bkmkstart AAAAAAAAPX}
{\bkmkend AAAAAAAAPX}
\cell }{\cell }{\row }
{\xe \v HST_INV_EPCDAT_52_55\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_INV_EPCDAT_52_55}
{\qr HST_INV_EPCDAT_52_55{\bkmkstart AAAAAAAAPY}
{\bkmkend AAAAAAAAPY}
\cell }{\cell }{\row }
{\xe \v HST_INV_EPCDAT_56_59\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_INV_EPCDAT_56_59}
{\qr HST_INV_EPCDAT_56_59{\bkmkstart AAAAAAAAPZ}
{\bkmkend AAAAAAAAPZ}
\cell }{\cell }{\row }
{\xe \v HST_INV_EPCDAT_60_63\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_INV_EPCDAT_60_63}
{\qr HST_INV_EPCDAT_60_63{\bkmkstart AAAAAAAAQA}
{\bkmkend AAAAAAAAQA}
\cell }{\cell }{\row }
{\xe \v HST_TAGACC_DESC_SEL\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_TAGACC_DESC_SEL}
{\qr HST_TAGACC_DESC_SEL{\bkmkstart AAAAAAAAQB}
{\bkmkend AAAAAAAAQB}
\cell }{\cell }{\row }
{\xe \v HST_TAGACC_DESC_CFG\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_TAGACC_DESC_CFG}
{\qr HST_TAGACC_DESC_CFG{\bkmkstart AAAAAAAAQC}
{\bkmkend AAAAAAAAQC}
\cell }{\cell }{\row }
{\xe \v HST_TAGACC_BANK\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_TAGACC_BANK}
{\qr HST_TAGACC_BANK{\bkmkstart AAAAAAAAQD}
{\bkmkend AAAAAAAAQD}
\cell }{\cell }{\row }
{\xe \v HST_TAGACC_PTR\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_TAGACC_PTR}
{\qr HST_TAGACC_PTR{\bkmkstart AAAAAAAAQE}
{\bkmkend AAAAAAAAQE}
\cell }{\cell }{\row }
{\xe \v HST_TAGACC_CNT\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_TAGACC_CNT}
{\qr HST_TAGACC_CNT{\bkmkstart AAAAAAAAQF}
{\bkmkend AAAAAAAAQF}
\cell }{\cell }{\row }
{\xe \v HST_TAGACC_LOCKCFG\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_TAGACC_LOCKCFG}
{\qr HST_TAGACC_LOCKCFG{\bkmkstart AAAAAAAAQG}
{\bkmkend AAAAAAAAQG}
\cell }{\cell }{\row }
{\xe \v HST_TAGACC_ACCPWD\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_TAGACC_ACCPWD}
{\qr HST_TAGACC_ACCPWD{\bkmkstart AAAAAAAAQH}
{\bkmkend AAAAAAAAQH}
\cell }{\cell }{\row }
{\xe \v HST_TAGACC_KILLPWD\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_TAGACC_KILLPWD}
{\qr HST_TAGACC_KILLPWD{\bkmkstart AAAAAAAAQI}
{\bkmkend AAAAAAAAQI}
\cell }{\cell }{\row }
{\xe \v HST_TAGWRDAT_SEL\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_TAGWRDAT_SEL}
{\qr HST_TAGWRDAT_SEL{\bkmkstart AAAAAAAAQJ}
{\bkmkend AAAAAAAAQJ}
\cell }{\cell }{\row }
{\xe \v HST_TAGWRDAT_0\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_TAGWRDAT_0}
{\qr HST_TAGWRDAT_0{\bkmkstart AAAAAAAAQK}
{\bkmkend AAAAAAAAQK}
\cell }{\cell }{\row }
{\xe \v HST_TAGWRDAT_1\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_TAGWRDAT_1}
{\qr HST_TAGWRDAT_1{\bkmkstart AAAAAAAAQL}
{\bkmkend AAAAAAAAQL}
\cell }{\cell }{\row }
{\xe \v HST_TAGWRDAT_2\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_TAGWRDAT_2}
{\qr HST_TAGWRDAT_2{\bkmkstart AAAAAAAAQM}
{\bkmkend AAAAAAAAQM}
\cell }{\cell }{\row }
{\xe \v HST_TAGWRDAT_3\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_TAGWRDAT_3}
{\qr HST_TAGWRDAT_3{\bkmkstart AAAAAAAAQN}
{\bkmkend AAAAAAAAQN}
\cell }{\cell }{\row }
{\xe \v HST_TAGWRDAT_4\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_TAGWRDAT_4}
{\qr HST_TAGWRDAT_4{\bkmkstart AAAAAAAAQO}
{\bkmkend AAAAAAAAQO}
\cell }{\cell }{\row }
{\xe \v HST_TAGWRDAT_5\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_TAGWRDAT_5}
{\qr HST_TAGWRDAT_5{\bkmkstart AAAAAAAAQP}
{\bkmkend AAAAAAAAQP}
\cell }{\cell }{\row }
{\xe \v HST_TAGWRDAT_6\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_TAGWRDAT_6}
{\qr HST_TAGWRDAT_6{\bkmkstart AAAAAAAAQQ}
{\bkmkend AAAAAAAAQQ}
\cell }{\cell }{\row }
{\xe \v HST_TAGWRDAT_7\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_TAGWRDAT_7}
{\qr HST_TAGWRDAT_7{\bkmkstart AAAAAAAAQR}
{\bkmkend AAAAAAAAQR}
\cell }{\cell }{\row }
{\xe \v HST_TAGWRDAT_8\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_TAGWRDAT_8}
{\qr HST_TAGWRDAT_8{\bkmkstart AAAAAAAAQS}
{\bkmkend AAAAAAAAQS}
\cell }{\cell }{\row }
{\xe \v HST_TAGWRDAT_9\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_TAGWRDAT_9}
{\qr HST_TAGWRDAT_9{\bkmkstart AAAAAAAAQT}
{\bkmkend AAAAAAAAQT}
\cell }{\cell }{\row }
{\xe \v HST_TAGWRDAT_10\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_TAGWRDAT_10}
{\qr HST_TAGWRDAT_10{\bkmkstart AAAAAAAAQU}
{\bkmkend AAAAAAAAQU}
\cell }{\cell }{\row }
{\xe \v HST_TAGWRDAT_11\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_TAGWRDAT_11}
{\qr HST_TAGWRDAT_11{\bkmkstart AAAAAAAAQV}
{\bkmkend AAAAAAAAQV}
\cell }{\cell }{\row }
{\xe \v HST_TAGWRDAT_12\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_TAGWRDAT_12}
{\qr HST_TAGWRDAT_12{\bkmkstart AAAAAAAAQW}
{\bkmkend AAAAAAAAQW}
\cell }{\cell }{\row }
{\xe \v HST_TAGWRDAT_13\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_TAGWRDAT_13}
{\qr HST_TAGWRDAT_13{\bkmkstart AAAAAAAAQX}
{\bkmkend AAAAAAAAQX}
\cell }{\cell }{\row }
{\xe \v HST_TAGWRDAT_14\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_TAGWRDAT_14}
{\qr HST_TAGWRDAT_14{\bkmkstart AAAAAAAAQY}
{\bkmkend AAAAAAAAQY}
\cell }{\cell }{\row }
{\xe \v HST_TAGWRDAT_15\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_TAGWRDAT_15}
{\qr HST_TAGWRDAT_15{\bkmkstart AAAAAAAAQZ}
{\bkmkend AAAAAAAAQZ}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_PAPWRLEV\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_PAPWRLEV}
{\qr MAC_RFTC_PAPWRLEV{\bkmkstart AAAAAAAARA}
{\bkmkend AAAAAAAARA}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_PAPWRCTL_PGAIN\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_PAPWRCTL_PGAIN}
{\qr HST_RFTC_PAPWRCTL_PGAIN{\bkmkstart AAAAAAAARB}
{\bkmkend AAAAAAAARB}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_PAPWRCTL_IGAIN\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_PAPWRCTL_IGAIN}
{\qr HST_RFTC_PAPWRCTL_IGAIN{\bkmkstart AAAAAAAARC}
{\bkmkend AAAAAAAARC}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_PAPWRCTL_DGAIN\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_PAPWRCTL_DGAIN}
{\qr HST_RFTC_PAPWRCTL_DGAIN{\bkmkstart AAAAAAAARD}
{\bkmkend AAAAAAAARD}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_REVPWRLEV\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_REVPWRLEV}
{\qr MAC_RFTC_REVPWRLEV{\bkmkstart AAAAAAAARE}
{\bkmkend AAAAAAAARE}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_REVPWRTHRSH\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_REVPWRTHRSH}
{\qr HST_RFTC_REVPWRTHRSH{\bkmkstart AAAAAAAARF}
{\bkmkend AAAAAAAARF}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_AMBIENTTEMP\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_AMBIENTTEMP}
{\qr MAC_RFTC_AMBIENTTEMP{\bkmkstart AAAAAAAARG}
{\bkmkend AAAAAAAARG}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_AMBIENTTEMPTHRSH\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_AMBIENTTEMPTHRSH}
{\qr HST_RFTC_AMBIENTTEMPTHRSH{\bkmkstart AAAAAAAARH}
{\bkmkend AAAAAAAARH}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_XCVRTEMP\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_XCVRTEMP}
{\qr MAC_RFTC_XCVRTEMP{\bkmkstart AAAAAAAARI}
{\bkmkend AAAAAAAARI}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_XCVRTEMPTHRSH\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_XCVRTEMPTHRSH}
{\qr HST_RFTC_XCVRTEMPTHRSH{\bkmkstart AAAAAAAARJ}
{\bkmkend AAAAAAAARJ}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_PATEMP\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_PATEMP}
{\qr MAC_RFTC_PATEMP{\bkmkstart AAAAAAAARK}
{\bkmkend AAAAAAAARK}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_PATEMPTHRSH\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_PATEMPTHRSH}
{\qr HST_RFTC_PATEMPTHRSH{\bkmkstart AAAAAAAARL}
{\bkmkend AAAAAAAARL}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_PADELTATEMPTHRSH\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_PADELTATEMPTHRSH}
{\qr HST_RFTC_PADELTATEMPTHRSH{\bkmkstart AAAAAAAARM}
{\bkmkend AAAAAAAARM}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_PAPWRCTL_AIWDELAY\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_PAPWRCTL_AIWDELAY}
{\qr HST_RFTC_PAPWRCTL_AIWDELAY{\bkmkstart AAAAAAAARN}
{\bkmkend AAAAAAAARN}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_PAPWRCTL_STAT0\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_PAPWRCTL_STAT0}
{\qr MAC_RFTC_PAPWRCTL_STAT0{\bkmkstart AAAAAAAARO}
{\bkmkend AAAAAAAARO}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_PAPWRCTL_STAT1\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_PAPWRCTL_STAT1}
{\qr MAC_RFTC_PAPWRCTL_STAT1{\bkmkstart AAAAAAAARP}
{\bkmkend AAAAAAAARP}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_PAPWRCTL_STAT2\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_PAPWRCTL_STAT2}
{\qr MAC_RFTC_PAPWRCTL_STAT2{\bkmkstart AAAAAAAARQ}
{\bkmkend AAAAAAAARQ}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_PAPWRCTL_STAT3\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_PAPWRCTL_STAT3}
{\qr MAC_RFTC_PAPWRCTL_STAT3{\bkmkstart AAAAAAAARR}
{\bkmkend AAAAAAAARR}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_ANTSENSRESTHRSH\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_ANTSENSRESTHRSH}
{\qr HST_RFTC_ANTSENSRESTHRSH{\bkmkstart AAAAAAAARS}
{\bkmkend AAAAAAAARS}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_IFLNAAGCRANGE\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_IFLNAAGCRANGE}
{\qr HST_RFTC_IFLNAAGCRANGE{\bkmkstart AAAAAAAART}
{\bkmkend AAAAAAAART}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_LAST_ANACTRL1\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_LAST_ANACTRL1}
{\qr MAC_RFTC_LAST_ANACTRL1{\bkmkstart AAAAAAAARU}
{\bkmkend AAAAAAAARU}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_OPENLOOPPWRCTRL\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_OPENLOOPPWRCTRL}
{\qr HST_RFTC_OPENLOOPPWRCTRL{\bkmkstart AAAAAAAARV}
{\bkmkend AAAAAAAARV}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B16\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B16}
{\qr HST_RFTC_RFU_0x0B16{\bkmkstart AAAAAAAARW}
{\bkmkend AAAAAAAARW}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B17\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B17}
{\qr HST_RFTC_RFU_0x0B17{\bkmkstart AAAAAAAARX}
{\bkmkend AAAAAAAARX}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B18\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B18}
{\qr HST_RFTC_RFU_0x0B18{\bkmkstart AAAAAAAARY}
{\bkmkend AAAAAAAARY}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B19\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B19}
{\qr HST_RFTC_RFU_0x0B19{\bkmkstart AAAAAAAARZ}
{\bkmkend AAAAAAAARZ}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_PREDIST_COEFF0\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_PREDIST_COEFF0}
{\qr HST_RFTC_PREDIST_COEFF0{\bkmkstart AAAAAAAASA}
{\bkmkend AAAAAAAASA}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B1B\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B1B}
{\qr HST_RFTC_RFU_0x0B1B{\bkmkstart AAAAAAAASB}
{\bkmkend AAAAAAAASB}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B1C\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B1C}
{\qr HST_RFTC_RFU_0x0B1C{\bkmkstart AAAAAAAASC}
{\bkmkend AAAAAAAASC}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B1D\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B1D}
{\qr HST_RFTC_RFU_0x0B1D{\bkmkstart AAAAAAAASD}
{\bkmkend AAAAAAAASD}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B1E\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B1E}
{\qr HST_RFTC_RFU_0x0B1E{\bkmkstart AAAAAAAASE}
{\bkmkend AAAAAAAASE}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B1F\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B1F}
{\qr HST_RFTC_RFU_0x0B1F{\bkmkstart AAAAAAAASF}
{\bkmkend AAAAAAAASF}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_CAL_GGNEG7\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_CAL_GGNEG7}
{\qr HST_RFTC_CAL_GGNEG7{\bkmkstart AAAAAAAASG}
{\bkmkend AAAAAAAASG}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_CAL_GGNEG5\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_CAL_GGNEG5}
{\qr HST_RFTC_CAL_GGNEG5{\bkmkstart AAAAAAAASH}
{\bkmkend AAAAAAAASH}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_CAL_GGNEG3\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_CAL_GGNEG3}
{\qr HST_RFTC_CAL_GGNEG3{\bkmkstart AAAAAAAASI}
{\bkmkend AAAAAAAASI}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_CAL_GGNEG1\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_CAL_GGNEG1}
{\qr HST_RFTC_CAL_GGNEG1{\bkmkstart AAAAAAAASJ}
{\bkmkend AAAAAAAASJ}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_CAL_GGPLUS1\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_CAL_GGPLUS1}
{\qr HST_RFTC_CAL_GGPLUS1{\bkmkstart AAAAAAAASK}
{\bkmkend AAAAAAAASK}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_CAL_GGPLUS3\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_CAL_GGPLUS3}
{\qr HST_RFTC_CAL_GGPLUS3{\bkmkstart AAAAAAAASL}
{\bkmkend AAAAAAAASL}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_CAL_GGPLUS5\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_CAL_GGPLUS5}
{\qr HST_RFTC_CAL_GGPLUS5{\bkmkstart AAAAAAAASM}
{\bkmkend AAAAAAAASM}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_CAL_GGPLUS7\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_CAL_GGPLUS7}
{\qr HST_RFTC_CAL_GGPLUS7{\bkmkstart AAAAAAAASN}
{\bkmkend AAAAAAAASN}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_CAL_MACADCREFV\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_CAL_MACADCREFV}
{\qr HST_RFTC_CAL_MACADCREFV{\bkmkstart AAAAAAAASO}
{\bkmkend AAAAAAAASO}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_CAL_RFFWDPWR_C0\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_CAL_RFFWDPWR_C0}
{\qr HST_RFTC_CAL_RFFWDPWR_C0{\bkmkstart AAAAAAAASP}
{\bkmkend AAAAAAAASP}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_CAL_RFFWDPWR_C1\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_CAL_RFFWDPWR_C1}
{\qr HST_RFTC_CAL_RFFWDPWR_C1{\bkmkstart AAAAAAAASQ}
{\bkmkend AAAAAAAASQ}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_CAL_RFFWDPWR_C2\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_CAL_RFFWDPWR_C2}
{\qr HST_RFTC_CAL_RFFWDPWR_C2{\bkmkstart AAAAAAAASR}
{\bkmkend AAAAAAAASR}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B2C\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B2C}
{\qr HST_RFTC_RFU_0x0B2C{\bkmkstart AAAAAAAASS}
{\bkmkend AAAAAAAASS}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B2D\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B2D}
{\qr HST_RFTC_RFU_0x0B2D{\bkmkstart AAAAAAAAST}
{\bkmkend AAAAAAAAST}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B2E\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B2E}
{\qr HST_RFTC_RFU_0x0B2E{\bkmkstart AAAAAAAASU}
{\bkmkend AAAAAAAASU}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B2F\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B2F}
{\qr HST_RFTC_RFU_0x0B2F{\bkmkstart AAAAAAAASV}
{\bkmkend AAAAAAAASV}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_CLKDBLR_CFG\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_CLKDBLR_CFG}
{\qr HST_RFTC_CLKDBLR_CFG{\bkmkstart AAAAAAAASW}
{\bkmkend AAAAAAAASW}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_CLKDBLR_SEL\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_CLKDBLR_SEL}
{\qr HST_RFTC_CLKDBLR_SEL{\bkmkstart AAAAAAAASX}
{\bkmkend AAAAAAAASX}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_CLKDBLR_LUTENTRY\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_CLKDBLR_LUTENTRY}
{\qr HST_RFTC_CLKDBLR_LUTENTRY{\bkmkstart AAAAAAAASY}
{\bkmkend AAAAAAAASY}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B33\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B33}
{\qr HST_RFTC_RFU_0x0B33{\bkmkstart AAAAAAAASZ}
{\bkmkend AAAAAAAASZ}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B34\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B34}
{\qr HST_RFTC_RFU_0x0B34{\bkmkstart AAAAAAAATA}
{\bkmkend AAAAAAAATA}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B35\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B35}
{\qr HST_RFTC_RFU_0x0B35{\bkmkstart AAAAAAAATB}
{\bkmkend AAAAAAAATB}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B36\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B36}
{\qr HST_RFTC_RFU_0x0B36{\bkmkstart AAAAAAAATC}
{\bkmkend AAAAAAAATC}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B37\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B37}
{\qr HST_RFTC_RFU_0x0B37{\bkmkstart AAAAAAAATD}
{\bkmkend AAAAAAAATD}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B38\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B38}
{\qr HST_RFTC_RFU_0x0B38{\bkmkstart AAAAAAAATE}
{\bkmkend AAAAAAAATE}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B39\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B39}
{\qr HST_RFTC_RFU_0x0B39{\bkmkstart AAAAAAAATF}
{\bkmkend AAAAAAAATF}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B3A\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B3A}
{\qr HST_RFTC_RFU_0x0B3A{\bkmkstart AAAAAAAATG}
{\bkmkend AAAAAAAATG}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B3B\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B3B}
{\qr HST_RFTC_RFU_0x0B3B{\bkmkstart AAAAAAAATH}
{\bkmkend AAAAAAAATH}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B3C\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B3C}
{\qr HST_RFTC_RFU_0x0B3C{\bkmkstart AAAAAAAATI}
{\bkmkend AAAAAAAATI}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B3D\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B3D}
{\qr HST_RFTC_RFU_0x0B3D{\bkmkstart AAAAAAAATJ}
{\bkmkend AAAAAAAATJ}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B3E\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B3E}
{\qr HST_RFTC_RFU_0x0B3E{\bkmkstart AAAAAAAATK}
{\bkmkend AAAAAAAATK}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B3F\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B3F}
{\qr HST_RFTC_RFU_0x0B3F{\bkmkstart AAAAAAAATL}
{\bkmkend AAAAAAAATL}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_FRQHOPMODE\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_FRQHOPMODE}
{\qr HST_RFTC_FRQHOPMODE{\bkmkstart AAAAAAAATM}
{\bkmkend AAAAAAAATM}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_FRQHOPENTRYCNT\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_FRQHOPENTRYCNT}
{\qr HST_RFTC_FRQHOPENTRYCNT{\bkmkstart AAAAAAAATN}
{\bkmkend AAAAAAAATN}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_FRQHOPTABLEINDEX\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_FRQHOPTABLEINDEX}
{\qr HST_RFTC_FRQHOPTABLEINDEX{\bkmkstart AAAAAAAATO}
{\bkmkend AAAAAAAATO}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_HOPCNT\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_HOPCNT}
{\qr MAC_RFTC_HOPCNT{\bkmkstart AAAAAAAATP}
{\bkmkend AAAAAAAATP}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_MINHOPDUR\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_MINHOPDUR}
{\qr HST_RFTC_MINHOPDUR{\bkmkstart AAAAAAAATQ}
{\bkmkend AAAAAAAATQ}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_MAXHOPDUR\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_MAXHOPDUR}
{\qr HST_RFTC_MAXHOPDUR{\bkmkstart AAAAAAAATR}
{\bkmkend AAAAAAAATR}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_FRQHOPRANDSEED\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_FRQHOPRANDSEED}
{\qr HST_RFTC_FRQHOPRANDSEED{\bkmkstart AAAAAAAATS}
{\bkmkend AAAAAAAATS}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_FRQHOPSHFTREGVAL\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_FRQHOPSHFTREGVAL}
{\qr MAC_RFTC_FRQHOPSHFTREGVAL{\bkmkstart AAAAAAAATT}
{\bkmkend AAAAAAAATT}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_FRQHOPRANDNUMCNT\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_FRQHOPRANDNUMCNT}
{\qr MAC_RFTC_FRQHOPRANDNUMCNT{\bkmkstart AAAAAAAATU}
{\bkmkend AAAAAAAATU}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_FRQCHINDEX\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_FRQCHINDEX}
{\qr HST_RFTC_FRQCHINDEX{\bkmkstart AAAAAAAATV}
{\bkmkend AAAAAAAATV}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_PLLLOCKTIMEOUT\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_PLLLOCKTIMEOUT}
{\qr HST_RFTC_PLLLOCKTIMEOUT{\bkmkstart AAAAAAAATW}
{\bkmkend AAAAAAAATW}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_PLLLOCK_DET_THRSH\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_PLLLOCK_DET_THRSH}
{\qr HST_RFTC_PLLLOCK_DET_THRSH{\bkmkstart AAAAAAAATX}
{\bkmkend AAAAAAAATX}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_PLLLOCK_DET_CNT\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_PLLLOCK_DET_CNT}
{\qr HST_RFTC_PLLLOCK_DET_CNT{\bkmkstart AAAAAAAATY}
{\bkmkend AAAAAAAATY}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_PLLLOCK_TO\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_PLLLOCK_TO}
{\qr HST_RFTC_PLLLOCK_TO{\bkmkstart AAAAAAAATZ}
{\bkmkend AAAAAAAATZ}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_BERREADDELAY\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_BERREADDELAY}
{\qr HST_RFTC_BERREADDELAY{\bkmkstart AAAAAAAAUA}
{\bkmkend AAAAAAAAUA}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B4F\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B4F}
{\qr HST_RFTC_RFU_0x0B4F{\bkmkstart AAAAAAAAUB}
{\bkmkend AAAAAAAAUB}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_FWDRFPWRRAWADC\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_FWDRFPWRRAWADC}
{\qr MAC_RFTC_FWDRFPWRRAWADC{\bkmkstart AAAAAAAAUC}
{\bkmkend AAAAAAAAUC}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_REVRFPWRRAWADC\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_REVRFPWRRAWADC}
{\qr MAC_RFTC_REVRFPWRRAWADC{\bkmkstart AAAAAAAAUD}
{\bkmkend AAAAAAAAUD}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_ANTSENSERAWADC\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_ANTSENSERAWADC}
{\qr MAC_RFTC_ANTSENSERAWADC{\bkmkstart AAAAAAAAUE}
{\bkmkend AAAAAAAAUE}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_AMBTEMPRAWADC\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_AMBTEMPRAWADC}
{\qr MAC_RFTC_AMBTEMPRAWADC{\bkmkstart AAAAAAAAUF}
{\bkmkend AAAAAAAAUF}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_PATEMPRAWADC\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_PATEMPRAWADC}
{\qr MAC_RFTC_PATEMPRAWADC{\bkmkstart AAAAAAAAUG}
{\bkmkend AAAAAAAAUG}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_XCVRTEMPRAWADC\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_XCVRTEMPRAWADC}
{\qr MAC_RFTC_XCVRTEMPRAWADC{\bkmkstart AAAAAAAAUH}
{\bkmkend AAAAAAAAUH}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B56\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B56}
{\qr HST_RFTC_RFU_0x0B56{\bkmkstart AAAAAAAAUI}
{\bkmkend AAAAAAAAUI}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B57\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B57}
{\qr HST_RFTC_RFU_0x0B57{\bkmkstart AAAAAAAAUJ}
{\bkmkend AAAAAAAAUJ}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B58\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B58}
{\qr HST_RFTC_RFU_0x0B58{\bkmkstart AAAAAAAAUK}
{\bkmkend AAAAAAAAUK}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B59\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B59}
{\qr HST_RFTC_RFU_0x0B59{\bkmkstart AAAAAAAAUL}
{\bkmkend AAAAAAAAUL}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B5A\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B5A}
{\qr HST_RFTC_RFU_0x0B5A{\bkmkstart AAAAAAAAUM}
{\bkmkend AAAAAAAAUM}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B5B\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B5B}
{\qr HST_RFTC_RFU_0x0B5B{\bkmkstart AAAAAAAAUN}
{\bkmkend AAAAAAAAUN}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B5C\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B5C}
{\qr HST_RFTC_RFU_0x0B5C{\bkmkstart AAAAAAAAUO}
{\bkmkend AAAAAAAAUO}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B5D\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B5D}
{\qr HST_RFTC_RFU_0x0B5D{\bkmkstart AAAAAAAAUP}
{\bkmkend AAAAAAAAUP}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B5E\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B5E}
{\qr HST_RFTC_RFU_0x0B5E{\bkmkstart AAAAAAAAUQ}
{\bkmkend AAAAAAAAUQ}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B5F\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B5F}
{\qr HST_RFTC_RFU_0x0B5F{\bkmkstart AAAAAAAAUR}
{\bkmkend AAAAAAAAUR}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_CURRENT_PROFILE\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_CURRENT_PROFILE}
{\qr HST_RFTC_CURRENT_PROFILE{\bkmkstart AAAAAAAAUS}
{\bkmkend AAAAAAAAUS}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_PROF_SEL\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_PROF_SEL}
{\qr HST_RFTC_PROF_SEL{\bkmkstart AAAAAAAAUT}
{\bkmkend AAAAAAAAUT}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_PROF_CFG\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_PROF_CFG}
{\qr MAC_RFTC_PROF_CFG{\bkmkstart AAAAAAAAUU}
{\bkmkend AAAAAAAAUU}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_PROF_ID_HIGH\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_PROF_ID_HIGH}
{\qr MAC_RFTC_PROF_ID_HIGH{\bkmkstart AAAAAAAAUV}
{\bkmkend AAAAAAAAUV}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_PROF_ID_LOW\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_PROF_ID_LOW}
{\qr MAC_RFTC_PROF_ID_LOW{\bkmkstart AAAAAAAAUW}
{\bkmkend AAAAAAAAUW}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_PROF_IDVER\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_PROF_IDVER}
{\qr MAC_RFTC_PROF_IDVER{\bkmkstart AAAAAAAAUX}
{\bkmkend AAAAAAAAUX}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_PROF_PROTOCOL\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_PROF_PROTOCOL}
{\qr MAC_RFTC_PROF_PROTOCOL{\bkmkstart AAAAAAAAUY}
{\bkmkend AAAAAAAAUY}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_PROF_R2TMODTYPE\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_PROF_R2TMODTYPE}
{\qr MAC_RFTC_PROF_R2TMODTYPE{\bkmkstart AAAAAAAAUZ}
{\bkmkend AAAAAAAAUZ}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_PROF_TARI\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_PROF_TARI}
{\qr MAC_RFTC_PROF_TARI{\bkmkstart AAAAAAAAVA}
{\bkmkend AAAAAAAAVA}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_PROF_X\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_PROF_X}
{\qr MAC_RFTC_PROF_X{\bkmkstart AAAAAAAAVB}
{\bkmkend AAAAAAAAVB}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_PROF_PW\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_PROF_PW}
{\qr MAC_RFTC_PROF_PW{\bkmkstart AAAAAAAAVC}
{\bkmkend AAAAAAAAVC}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_PROF_RTCAL\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_PROF_RTCAL}
{\qr MAC_RFTC_PROF_RTCAL{\bkmkstart AAAAAAAAVD}
{\bkmkend AAAAAAAAVD}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_PROF_TRCAL\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_PROF_TRCAL}
{\qr MAC_RFTC_PROF_TRCAL{\bkmkstart AAAAAAAAVE}
{\bkmkend AAAAAAAAVE}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_PROF_DIVIDERATIO\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_PROF_DIVIDERATIO}
{\qr MAC_RFTC_PROF_DIVIDERATIO{\bkmkstart AAAAAAAAVF}
{\bkmkend AAAAAAAAVF}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_PROF_MILLERNUM\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_PROF_MILLERNUM}
{\qr MAC_RFTC_PROF_MILLERNUM{\bkmkstart AAAAAAAAVG}
{\bkmkend AAAAAAAAVG}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_PROF_T2RLINKFREQ\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_PROF_T2RLINKFREQ}
{\qr MAC_RFTC_PROF_T2RLINKFREQ{\bkmkstart AAAAAAAAVH}
{\bkmkend AAAAAAAAVH}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_PROF_VART2DELAY\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_PROF_VART2DELAY}
{\qr MAC_RFTC_PROF_VART2DELAY{\bkmkstart AAAAAAAAVI}
{\bkmkend AAAAAAAAVI}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_PROF_RXDELAY\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_PROF_RXDELAY}
{\qr MAC_RFTC_PROF_RXDELAY{\bkmkstart AAAAAAAAVJ}
{\bkmkend AAAAAAAAVJ}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_PROF_MINTOTT2DELAY\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_PROF_MINTOTT2DELAY}
{\qr MAC_RFTC_PROF_MINTOTT2DELAY{\bkmkstart AAAAAAAAVK}
{\bkmkend AAAAAAAAVK}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_PROF_TXPROPDELAY\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_PROF_TXPROPDELAY}
{\qr MAC_RFTC_PROF_TXPROPDELAY{\bkmkstart AAAAAAAAVL}
{\bkmkend AAAAAAAAVL}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_PROF_RSSIAVECFG\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_PROF_RSSIAVECFG}
{\qr MAC_RFTC_PROF_RSSIAVECFG{\bkmkstart AAAAAAAAVM}
{\bkmkend AAAAAAAAVM}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_PROF_PREAMCMD\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_PROF_PREAMCMD}
{\qr MAC_RFTC_PROF_PREAMCMD{\bkmkstart AAAAAAAAVN}
{\bkmkend AAAAAAAAVN}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_PROF_FSYNCCMD\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_PROF_FSYNCCMD}
{\qr MAC_RFTC_PROF_FSYNCCMD{\bkmkstart AAAAAAAAVO}
{\bkmkend AAAAAAAAVO}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_PROF_T2WAITCMD\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_PROF_T2WAITCMD}
{\qr MAC_RFTC_PROF_T2WAITCMD{\bkmkstart AAAAAAAAVP}
{\bkmkend AAAAAAAAVP}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B78\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B78}
{\qr HST_RFTC_RFU_0x0B78{\bkmkstart AAAAAAAAVQ}
{\bkmkend AAAAAAAAVQ}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B79\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B79}
{\qr HST_RFTC_RFU_0x0B79{\bkmkstart AAAAAAAAVR}
{\bkmkend AAAAAAAAVR}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B7A\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B7A}
{\qr HST_RFTC_RFU_0x0B7A{\bkmkstart AAAAAAAAVS}
{\bkmkend AAAAAAAAVS}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B7B\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B7B}
{\qr HST_RFTC_RFU_0x0B7B{\bkmkstart AAAAAAAAVT}
{\bkmkend AAAAAAAAVT}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B7C\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B7C}
{\qr HST_RFTC_RFU_0x0B7C{\bkmkstart AAAAAAAAVU}
{\bkmkend AAAAAAAAVU}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B7D\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B7D}
{\qr HST_RFTC_RFU_0x0B7D{\bkmkstart AAAAAAAAVV}
{\bkmkend AAAAAAAAVV}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B7E\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B7E}
{\qr HST_RFTC_RFU_0x0B7E{\bkmkstart AAAAAAAAVW}
{\bkmkend AAAAAAAAVW}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B7F\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B7F}
{\qr HST_RFTC_RFU_0x0B7F{\bkmkstart AAAAAAAAVX}
{\bkmkend AAAAAAAAVX}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B80\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B80}
{\qr HST_RFTC_RFU_0x0B80{\bkmkstart AAAAAAAAVY}
{\bkmkend AAAAAAAAVY}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B81\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B81}
{\qr HST_RFTC_RFU_0x0B81{\bkmkstart AAAAAAAAVZ}
{\bkmkend AAAAAAAAVZ}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B82\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B82}
{\qr HST_RFTC_RFU_0x0B82{\bkmkstart AAAAAAAAWA}
{\bkmkend AAAAAAAAWA}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B83\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B83}
{\qr HST_RFTC_RFU_0x0B83{\bkmkstart AAAAAAAAWB}
{\bkmkend AAAAAAAAWB}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_RFU_0x0B84\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_RFU_0x0B84}
{\qr HST_RFTC_RFU_0x0B84{\bkmkstart AAAAAAAAWC}
{\bkmkend AAAAAAAAWC}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_FRQCH_ENTRYCNT\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_FRQCH_ENTRYCNT}
{\qr HST_RFTC_FRQCH_ENTRYCNT{\bkmkstart AAAAAAAAWD}
{\bkmkend AAAAAAAAWD}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_FRQCH_SEL\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_FRQCH_SEL}
{\qr HST_RFTC_FRQCH_SEL{\bkmkstart AAAAAAAAWE}
{\bkmkend AAAAAAAAWE}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_FRQCH_CFG\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_FRQCH_CFG}
{\qr HST_RFTC_FRQCH_CFG{\bkmkstart AAAAAAAAWF}
{\bkmkend AAAAAAAAWF}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_FRQCH_DESC_PLLDIVMULT\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_FRQCH_DESC_PLLDIVMULT}
{\qr HST_RFTC_FRQCH_DESC_PLLDIVMULT{\bkmkstart AAAAAAAAWG}
{\bkmkend AAAAAAAAWG}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_FRQCH_DESC_PLLDACCTL\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_FRQCH_DESC_PLLDACCTL}
{\qr HST_RFTC_FRQCH_DESC_PLLDACCTL{\bkmkstart AAAAAAAAWH}
{\bkmkend AAAAAAAAWH}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_FRQCH_DESC_PLLLOCKSTAT0\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_FRQCH_DESC_PLLLOCKSTAT0}
{\qr MAC_RFTC_FRQCH_DESC_PLLLOCKSTAT0{\bkmkstart AAAAAAAAWI}
{\bkmkend AAAAAAAAWI}
\cell }{\cell }{\row }
{\xe \v MAC_RFTC_FRQCH_DESC_PLLLOCKSTAT1\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAC_RFTC_FRQCH_DESC_PLLLOCKSTAT1}
{\qr MAC_RFTC_FRQCH_DESC_PLLLOCKSTAT1{\bkmkstart AAAAAAAAWJ}
{\bkmkend AAAAAAAAWJ}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_FRQCH_DESC_PARFU3\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_FRQCH_DESC_PARFU3}
{\qr HST_RFTC_FRQCH_DESC_PARFU3{\bkmkstart AAAAAAAAWK}
{\bkmkend AAAAAAAAWK}
\cell }{\cell }{\row }
{\xe \v HST_RFTC_FRQCH_CMDSTART\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_RFTC_FRQCH_CMDSTART}
{\qr HST_RFTC_FRQCH_CMDSTART{\bkmkstart AAAAAAAAWL}
{\bkmkend AAAAAAAAWL}
\cell }{\cell }{\row }
{\xe \v HST_CMD\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HST_CMD}
{\qr HST_CMD{\bkmkstart AAAAAAAAWM}
{\bkmkend AAAAAAAAWM}
\cell }{\cell }{\row }
}
}
{\xe \v RFIDREADERCMDSTATUS\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:RFIDREADERCMDSTATUS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b CSLibrary.RFIDReader.RFIDREADERCMDSTATUS}{\f2 [strong]}, {\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAWN}
{\bkmkend AAAAAAAAWN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v IDLE\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:IDLE}
{\qr IDLE{\bkmkstart AAAAAAAAWO}
{\bkmkend AAAAAAAAWO}
\cell }{\cell }{\row }
{\xe \v GETREGISTER\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:GETREGISTER}
{\qr GETREGISTER{\bkmkstart AAAAAAAAWP}
{\bkmkend AAAAAAAAWP}
\cell }{\cell }{\row }
{\xe \v EXECCMD\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:EXECCMD}
{\qr EXECCMD{\bkmkstart AAAAAAAAWQ}
{\bkmkend AAAAAAAAWQ}
\cell }{\cell }{\row }
{\xe \v INVENTORY\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:INVENTORY}
{\qr INVENTORY{\bkmkstart AAAAAAAAWR}
{\bkmkend AAAAAAAAWR}
\cell }{\cell }{\row }
{\xe \v ABORT\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:ABORT}
{\qr ABORT{\bkmkstart AAAAAAAAWS}
{\bkmkend AAAAAAAAWS}
\cell }{\cell }{\row }
{\xe \v IDLE\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:IDLE}
{\qr IDLE{\bkmkstart AAAAAAAAWO}
{\bkmkend AAAAAAAAWO}
\cell }{\cell }{\row }
{\xe \v GETREGISTER\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:GETREGISTER}
{\qr GETREGISTER{\bkmkstart AAAAAAAAWP}
{\bkmkend AAAAAAAAWP}
\cell }{\cell }{\row }
{\xe \v EXECCMD\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:EXECCMD}
{\qr EXECCMD{\bkmkstart AAAAAAAAWQ}
{\bkmkend AAAAAAAAWQ}
\cell }{\cell }{\row }
{\xe \v INVENTORY\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:INVENTORY}
{\qr INVENTORY{\bkmkstart AAAAAAAAWR}
{\bkmkend AAAAAAAAWR}
\cell }{\cell }{\row }
{\xe \v ABORT\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:ABORT}
{\qr ABORT{\bkmkstart AAAAAAAAWS}
{\bkmkend AAAAAAAAWS}
\cell }{\cell }{\row }
}
}
{\xe \v RFIDREADERCMDSTATUS\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:RFIDREADERCMDSTATUS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b CSLibrary.RFIDReader.RFIDREADERCMDSTATUS}{\f2 [strong]}, {\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAWN}
{\bkmkend AAAAAAAAWN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v IDLE\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:IDLE}
{\qr IDLE{\bkmkstart AAAAAAAAWO}
{\bkmkend AAAAAAAAWO}
\cell }{\cell }{\row }
{\xe \v GETREGISTER\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:GETREGISTER}
{\qr GETREGISTER{\bkmkstart AAAAAAAAWP}
{\bkmkend AAAAAAAAWP}
\cell }{\cell }{\row }
{\xe \v EXECCMD\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:EXECCMD}
{\qr EXECCMD{\bkmkstart AAAAAAAAWQ}
{\bkmkend AAAAAAAAWQ}
\cell }{\cell }{\row }
{\xe \v INVENTORY\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:INVENTORY}
{\qr INVENTORY{\bkmkstart AAAAAAAAWR}
{\bkmkend AAAAAAAAWR}
\cell }{\cell }{\row }
{\xe \v ABORT\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:ABORT}
{\qr ABORT{\bkmkstart AAAAAAAAWS}
{\bkmkend AAAAAAAAWS}
\cell }{\cell }{\row }
{\xe \v IDLE\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:IDLE}
{\qr IDLE{\bkmkstart AAAAAAAAWO}
{\bkmkend AAAAAAAAWO}
\cell }{\cell }{\row }
{\xe \v GETREGISTER\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:GETREGISTER}
{\qr GETREGISTER{\bkmkstart AAAAAAAAWP}
{\bkmkend AAAAAAAAWP}
\cell }{\cell }{\row }
{\xe \v EXECCMD\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:EXECCMD}
{\qr EXECCMD{\bkmkstart AAAAAAAAWQ}
{\bkmkend AAAAAAAAWQ}
\cell }{\cell }{\row }
{\xe \v INVENTORY\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:INVENTORY}
{\qr INVENTORY{\bkmkstart AAAAAAAAWR}
{\bkmkend AAAAAAAAWR}
\cell }{\cell }{\row }
{\xe \v ABORT\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:ABORT}
{\qr ABORT{\bkmkstart AAAAAAAAWS}
{\bkmkend AAAAAAAAWS}
\cell }{\cell }{\row }
}
}
{\xe \v SENDREMARK\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:SENDREMARK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b CSLibrary.RFIDReader.SENDREMARK}{\f2 [strong]}, {\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAWT}
{\bkmkend AAAAAAAAWT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v GENERAL\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:GENERAL}
{\qr GENERAL{\bkmkstart AAAAAAAAWU}
{\bkmkend AAAAAAAAWU}
\cell }{\cell }{\row }
{\xe \v GETREGISTER\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:GETREGISTER}
{\qr GETREGISTER{\bkmkstart AAAAAAAAWV}
{\bkmkend AAAAAAAAWV}
\cell }{\cell }{\row }
{\xe \v INVENTORY\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:INVENTORY}
{\qr INVENTORY{\bkmkstart AAAAAAAAWW}
{\bkmkend AAAAAAAAWW}
\cell }{\cell }{\row }
{\xe \v EXECCMD\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:EXECCMD}
{\qr EXECCMD{\bkmkstart AAAAAAAAWX}
{\bkmkend AAAAAAAAWX}
\cell }{\cell }{\row }
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v RFIDReader\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:RFIDReader}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CSLibrary.RFIDReader.RFIDReader ({\b HighLevelInterface}  {\i deviceHandler})}}
\par
{\bkmkstart AAAAAAAAWY}
{\bkmkend AAAAAAAAWY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ~RFIDReader\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:~RFIDReader}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CSLibrary.RFIDReader.~RFIDReader (){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAWZ}
{\bkmkend AAAAAAAAWZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ~RFIDReader\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:~RFIDReader}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CSLibrary.RFIDReader.~RFIDReader (){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAWZ}
{\bkmkend AAAAAAAAWZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v ClearBuffer\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:ClearBuffer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CSLibrary.RFIDReader.ClearBuffer ()}}
\par
{\bkmkstart AAAAAAAAXA}
{\bkmkend AAAAAAAAXA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Connect\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:Connect}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CSLibrary.RFIDReader.Connect ()}}
\par
{\bkmkstart AAAAAAAAXB}
{\bkmkend AAAAAAAAXB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v CUST_18K6CTagRead\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:CUST_18K6CTagRead}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool CSLibrary.RFIDReader.CUST_18K6CTagRead ({\b CSLibrary.Constants.MemoryBank}  {\i bank}, int  {\i offset}, int  {\i count}, UInt16 []  {\i data}, UInt32  {\i password}, {\b CSLibrary.Constants.SelectFlags}  {\i flags}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAXC}
{\bkmkend AAAAAAAAXC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v CUST_18K6CTagWrite\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:CUST_18K6CTagWrite}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b CSLibrary.Constants.Result} CSLibrary.RFIDReader.CUST_18K6CTagWrite ({\b CSLibrary.Constants.MemoryBank}  {\i bank}, UInt32  {\i offset}, UInt32  {\i count}, UInt16 []  {\i data}, UInt32  {\i password}, {\b CSLibrary.Constants.SelectFlags}  {\i flags}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAXD}
{\bkmkend AAAAAAAAXD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
}}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i bank} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i offset} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i count} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i data} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i password} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i retry} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i flags} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v DeviceRecvData\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:DeviceRecvData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CSLibrary.RFIDReader.DeviceRecvData (byte []  {\i recvData})}}
\par
{\bkmkstart AAAAAAAAXE}
{\bkmkend AAAAAAAAXE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Transfer BT API packet to R2000 packet }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i recvData} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i offset} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i size} \cell }{\cell }
{\row }
}
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
inventory \par
}}
{\xe \v ExeTagRangingThreadProc\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:ExeTagRangingThreadProc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CSLibrary.RFIDReader.ExeTagRangingThreadProc (){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAXF}
{\bkmkend AAAAAAAAXF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v FireAccessCompletedEvent\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:FireAccessCompletedEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CSLibrary.RFIDReader.FireAccessCompletedEvent ({\b OnAccessCompletedEventArgs}  {\i args}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAXG}
{\bkmkend AAAAAAAAXG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v FireStateChangedEvent\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:FireStateChangedEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CSLibrary.RFIDReader.FireStateChangedEvent ({\b RFState}  {\i e}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAXH}
{\bkmkend AAAAAAAAXH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v FourByteArraryToInt\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:FourByteArraryToInt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int CSLibrary.RFIDReader.FourByteArraryToInt (byte []  {\i data}, int  {\i startIndex}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAXI}
{\bkmkend AAAAAAAAXI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v FreqChnCnt\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:FreqChnCnt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint CSLibrary.RFIDReader.FreqChnCnt ({\b RegionCode}  {\i prof}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAXJ}
{\bkmkend AAAAAAAAXJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v FreqChnCnt\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:FreqChnCnt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint CSLibrary.RFIDReader.FreqChnCnt ({\b RegionCode}  {\i prof}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAXJ}
{\bkmkend AAAAAAAAXJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v FreqChnWithinRange\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:FreqChnWithinRange}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool CSLibrary.RFIDReader.FreqChnWithinRange (uint  {\i Channel}, {\b RegionCode}  {\i region}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAXK}
{\bkmkend AAAAAAAAXK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v FreqChnWithinRange\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:FreqChnWithinRange}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool CSLibrary.RFIDReader.FreqChnWithinRange (uint  {\i Channel}, {\b RegionCode}  {\i region}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAXK}
{\bkmkend AAAAAAAAXK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v FreqIndex\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:FreqIndex}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint [] CSLibrary.RFIDReader.FreqIndex ({\b RegionCode}  {\i prof}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAXL}
{\bkmkend AAAAAAAAXL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v FreqIndex\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:FreqIndex}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint [] CSLibrary.RFIDReader.FreqIndex ({\b RegionCode}  {\i prof}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAXL}
{\bkmkend AAAAAAAAXL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v FreqSortedIdxTbls\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:FreqSortedIdxTbls}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int CSLibrary.RFIDReader.FreqSortedIdxTbls ({\b RegionCode}  {\i Prof}, uint  {\i Channel}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAXM}
{\bkmkend AAAAAAAAXM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v FreqSortedIdxTbls\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:FreqSortedIdxTbls}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int CSLibrary.RFIDReader.FreqSortedIdxTbls ({\b RegionCode}  {\i Prof}, uint  {\i Channel}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAXM}
{\bkmkend AAAAAAAAXM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v FreqTable\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:FreqTable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint [] CSLibrary.RFIDReader.FreqTable ({\b RegionCode}  {\i prof}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAXN}
{\bkmkend AAAAAAAAXN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v FreqTable\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:FreqTable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint [] CSLibrary.RFIDReader.FreqTable ({\b RegionCode}  {\i prof}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAXN}
{\bkmkend AAAAAAAAXN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GenCountryList\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:GenCountryList}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CSLibrary.RFIDReader.GenCountryList (){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAXO}
{\bkmkend AAAAAAAAXO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GenCountryList\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:GenCountryList}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CSLibrary.RFIDReader.GenCountryList (){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAXO}
{\bkmkend AAAAAAAAXO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GetActiveLinkProfile\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:GetActiveLinkProfile}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint [] CSLibrary.RFIDReader.GetActiveLinkProfile ()}}
\par
{\bkmkstart AAAAAAAAXP}
{\bkmkend AAAAAAAAXP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GetActiveLinkProfile\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:GetActiveLinkProfile}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint [] CSLibrary.RFIDReader.GetActiveLinkProfile (uint  {\i region} = {\f2 0})}}
\par
{\bkmkstart AAAAAAAAXQ}
{\bkmkend AAAAAAAAXQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GetActiveMaxPowerLevel\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:GetActiveMaxPowerLevel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint CSLibrary.RFIDReader.GetActiveMaxPowerLevel ()}}
\par
{\bkmkstart AAAAAAAAXR}
{\bkmkend AAAAAAAAXR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Available Maximum Power you can set on specific region }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v GetActiveRegionCode\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:GetActiveRegionCode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
List<{\b RegionCode}> CSLibrary.RFIDReader.GetActiveRegionCode ()}}
\par
{\bkmkstart AAAAAAAAXS}
{\bkmkend AAAAAAAAXS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Available region you can use }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v GetAvailableFrequencyTable\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:GetAvailableFrequencyTable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double [] CSLibrary.RFIDReader.GetAvailableFrequencyTable ({\b RegionCode}  {\i region})}}
\par
{\bkmkstart AAAAAAAAXT}
{\bkmkend AAAAAAAAXT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get frequency table on specific region }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i region} \cell }{Region Code\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v GetAvailableFrequencyTable\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:GetAvailableFrequencyTable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double [] CSLibrary.RFIDReader.GetAvailableFrequencyTable ({\b RegionCode}  {\i region})}}
\par
{\bkmkstart AAAAAAAAXT}
{\bkmkend AAAAAAAAXT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get frequency table on specific region }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i region} \cell }{Region Code\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v GetCountryCode\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:GetCountryCode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Result} CSLibrary.RFIDReader.GetCountryCode (ref uint  {\i code})}}
\par
{\bkmkstart AAAAAAAAXU}
{\bkmkend AAAAAAAAXU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
GetCountryCode }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Result\par
}}}
{\xe \v GetCountryCode\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:GetCountryCode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string CSLibrary.RFIDReader.GetCountryCode ()}}
\par
{\bkmkstart AAAAAAAAXV}
{\bkmkend AAAAAAAAXV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GetCurrentSingulationAlgorithm\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:GetCurrentSingulationAlgorithm}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Result} CSLibrary.RFIDReader.GetCurrentSingulationAlgorithm (ref {\b SingulationAlgorithm}  {\i SingulationAlgorithm})}}
\par
{\bkmkstart AAAAAAAAXW}
{\bkmkend AAAAAAAAXW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get Current Singulation Algorithm }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i SingulationAlgorithm} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v GetDynamicQParms\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:GetDynamicQParms}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Result} CSLibrary.RFIDReader.GetDynamicQParms ({\b DynamicQParms}  {\i parms})}}
\par
{\bkmkstart AAAAAAAAXX}
{\bkmkend AAAAAAAAXX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get DynamicQ Singulation Algorithm }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i parms} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v GetFirmwareVersion\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:GetFirmwareVersion}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CSLibrary.RFIDReader.GetFirmwareVersion ()}}
\par
{\bkmkstart AAAAAAAAXY}
{\bkmkend AAAAAAAAXY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GetFirmwareVersion\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:GetFirmwareVersion}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt32 CSLibrary.RFIDReader.GetFirmwareVersion ()}}
\par
{\bkmkstart AAAAAAAAXZ}
{\bkmkend AAAAAAAAXZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GetFixedQParms\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:GetFixedQParms}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Result} CSLibrary.RFIDReader.GetFixedQParms ({\b FixedQParms}  {\i fixedQ})}}
\par
{\bkmkstart AAAAAAAAYA}
{\bkmkend AAAAAAAAYA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get FixedQ Singulation Algorithm }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i fixedQ} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v GetInventoryDelayTime\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:GetInventoryDelayTime}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt32 CSLibrary.RFIDReader.GetInventoryDelayTime ()}}
\par
{\bkmkstart AAAAAAAAYB}
{\bkmkend AAAAAAAAYB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GetInventoryDelayTime\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:GetInventoryDelayTime}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt32 CSLibrary.RFIDReader.GetInventoryDelayTime ()}}
\par
{\bkmkstart AAAAAAAAYB}
{\bkmkend AAAAAAAAYB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GetModelName\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:GetModelName}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string CSLibrary.RFIDReader.GetModelName ()}}
\par
{\bkmkstart AAAAAAAAYC}
{\bkmkend AAAAAAAAYC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GetOEMData\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:GetOEMData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool CSLibrary.RFIDReader.GetOEMData (UInt32  {\i address}, ref UInt32  {\i value}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAYD}
{\bkmkend AAAAAAAAYD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GetOperationMode\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:GetOperationMode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CSLibrary.RFIDReader.GetOperationMode (ref {\b RadioOperationMode}  {\i mode})}}
\par
{\bkmkstart AAAAAAAAYE}
{\bkmkend AAAAAAAAYE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Retrieves the operation mode for the RFID radio module. The operation mode cannot be retrieved while a radio module is executing a tag-protocol operation. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i mode} \cell }{return will receive the current operation mode.\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v GetOperationMode\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:GetOperationMode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Result} CSLibrary.RFIDReader.GetOperationMode (ref ushort  {\i cycles}, ref {\b AntennaSequenceMode}  {\i mode}, ref uint  {\i sequenceSize})}}
\par
{\bkmkstart AAAAAAAAYF}
{\bkmkend AAAAAAAAYF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Retrieves the operation mode for the RFID radio module. The operation mode cannot be retrieved while a radio module is executing a tag-protocol operation. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i cycles} \cell }{The number of antenna cycles to be completed for command execution. \cell }
{\row }
}
0x0001 = once cycle through\par
0xFFFF = cycle forever until a CANCEL is received.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i mode} \cell }{Antenna Sequence mode.\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i sequenceSize} \cell }{Sequence size. Maximum value is 48\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v GetOperationMode\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:GetOperationMode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CSLibrary.RFIDReader.GetOperationMode (ref {\b RadioOperationMode}  {\i mode})}}
\par
{\bkmkstart AAAAAAAAYE}
{\bkmkend AAAAAAAAYE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Retrieves the operation mode for the RFID radio module. The operation mode cannot be retrieved while a radio module is executing a tag-protocol operation. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i mode} \cell }{return will receive the current operation mode.\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v GetPllcc\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:GetPllcc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint CSLibrary.RFIDReader.GetPllcc ({\b RegionCode}  {\i prof}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAYG}
{\bkmkend AAAAAAAAYG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GetPllcc\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:GetPllcc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint CSLibrary.RFIDReader.GetPllcc ({\b RegionCode}  {\i prof}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAYG}
{\bkmkend AAAAAAAAYG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GetPowerLevel\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:GetPowerLevel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Result} CSLibrary.RFIDReader.GetPowerLevel (ref uint  {\i pwrlvl})}}
\par
{\bkmkstart AAAAAAAAYH}
{\bkmkend AAAAAAAAYH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get Power Level }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v GetPowerLevel\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:GetPowerLevel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt32 CSLibrary.RFIDReader.GetPowerLevel ()}}
\par
{\bkmkstart AAAAAAAAYI}
{\bkmkend AAAAAAAAYI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GetSingulationAlgorithmParms\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:GetSingulationAlgorithmParms}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Result} CSLibrary.RFIDReader.GetSingulationAlgorithmParms ({\b SingulationAlgorithm}  {\i alg}, {\b SingulationAlgorithmParms}  {\i parms})}}
\par
{\bkmkstart AAAAAAAAYJ}
{\bkmkend AAAAAAAAYJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
GetSingulationAlgorithmParms }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i alg} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i parms} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v GetTagGroup\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:GetTagGroup}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Result} CSLibrary.RFIDReader.GetTagGroup ({\b TagGroup}  {\i tagGroup})}}
\par
{\bkmkstart AAAAAAAAYK}
{\bkmkend AAAAAAAAYK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get Tag Group }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i tagGroup} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v MacReadOemData\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MacReadOemData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Result} CSLibrary.RFIDReader.MacReadOemData (UInt32  {\i address}, ref UInt32  {\i value}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAYL}
{\bkmkend AAAAAAAAYL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v MacReadRegister\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MacReadRegister}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool CSLibrary.RFIDReader.MacReadRegister ({\b MACREGISTER}  {\i add}, ref UInt32  {\i data}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAYM}
{\bkmkend AAAAAAAAYM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
for compatible with old library }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i add} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i value} \cell }{\cell }
{\row }
}
}}
{\xe \v MacReadRegister\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MacReadRegister}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CSLibrary.RFIDReader.MacReadRegister ({\b MACREGISTER}  {\i add})}}
\par
{\bkmkstart AAAAAAAAYN}
{\bkmkend AAAAAAAAYN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v MacReadRegister\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MacReadRegister}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool CSLibrary.RFIDReader.MacReadRegister ({\b MACREGISTER}  {\i add}, ref UInt32  {\i data}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAYM}
{\bkmkend AAAAAAAAYM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v MacReadRegister\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MacReadRegister}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
async void CSLibrary.RFIDReader.MacReadRegister (UInt16  {\i add})}}
\par
{\bkmkstart AAAAAAAAYO}
{\bkmkend AAAAAAAAYO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v MacWriteOemData\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MacWriteOemData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Result} CSLibrary.RFIDReader.MacWriteOemData (uint  {\i address}, uint  {\i value}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAYP}
{\bkmkend AAAAAAAAYP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v MacWriteRegister\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MacWriteRegister}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CSLibrary.RFIDReader.MacWriteRegister ({\b MACREGISTER}  {\i add}, UInt32  {\i value}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAYQ}
{\bkmkend AAAAAAAAYQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
for compatible with old library }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i add} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i value} \cell }{\cell }
{\row }
}
}}
{\xe \v MacWriteRegister\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MacWriteRegister}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CSLibrary.RFIDReader.MacWriteRegister (UInt16  {\i add}, UInt32  {\i value}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAYR}
{\bkmkend AAAAAAAAYR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v MacWriteRegister\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MacWriteRegister}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CSLibrary.RFIDReader.MacWriteRegister ({\b MACREGISTER}  {\i add}, UInt32  {\i value}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAYQ}
{\bkmkend AAAAAAAAYQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v MacWriteRegister\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MacWriteRegister}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
async void CSLibrary.RFIDReader.MacWriteRegister (UInt16  {\i add}, UInt32  {\i value}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAYS}
{\bkmkend AAAAAAAAYS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v PacketData\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:PacketData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte [] CSLibrary.RFIDReader.PacketData (UInt16  {\i add}, UInt32?  {\i value} = {\f2 null}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAYT}
{\bkmkend AAAAAAAAYT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
rfid reader packet }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i RW} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i add} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i value} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v PacketData\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:PacketData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte [] CSLibrary.RFIDReader.PacketData (UInt16  {\i add}, UInt32?  {\i value} = {\f2 null}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAYT}
{\bkmkend AAAAAAAAYT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
rfid reader packet }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i RW} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i add} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i value} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v PowerOff\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:PowerOff}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CSLibrary.RFIDReader.PowerOff ()}}
\par
{\bkmkstart AAAAAAAAYU}
{\bkmkend AAAAAAAAYU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v PowerOn\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:PowerOn}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CSLibrary.RFIDReader.PowerOn ()}}
\par
{\bkmkstart AAAAAAAAYV}
{\bkmkend AAAAAAAAYV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v PreFilter\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:PreFilter}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CSLibrary.RFIDReader.PreFilter (){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAYW}
{\bkmkend AAAAAAAAYW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v PreTagRangingThreadProc\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:PreTagRangingThreadProc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CSLibrary.RFIDReader.PreTagRangingThreadProc (){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAYX}
{\bkmkend AAAAAAAAYX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v R2000_RssiTranslation\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:R2000_RssiTranslation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Single CSLibrary.RFIDReader.R2000_RssiTranslation (byte  {\i rawValue}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAYY}
{\bkmkend AAAAAAAAYY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v R2000Packet_Inventory\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:R2000Packet_Inventory}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool CSLibrary.RFIDReader.R2000Packet_Inventory (byte []  {\i recvData}, int  {\i offset} = {\f2 0}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAYZ}
{\bkmkend AAAAAAAAYZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v R2000Packet_NewInventory\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:R2000Packet_NewInventory}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool CSLibrary.RFIDReader.R2000Packet_NewInventory (byte []  {\i recvData}, int  {\i offset} = {\f2 0}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAZA}
{\bkmkend AAAAAAAAZA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v R2000Packet_TagAccess\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:R2000Packet_TagAccess}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool CSLibrary.RFIDReader.R2000Packet_TagAccess (byte []  {\i recvData}, int  {\i offset} = {\f2 0}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAZB}
{\bkmkend AAAAAAAAZB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ReadReaderOEMData\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:ReadReaderOEMData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CSLibrary.RFIDReader.ReadReaderOEMData (){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAZC}
{\bkmkend AAAAAAAAZC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ReadReaderRegister\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:ReadReaderRegister}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CSLibrary.RFIDReader.ReadReaderRegister (UInt16  {\i add}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAZD}
{\bkmkend AAAAAAAAZD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Reconnect\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:Reconnect}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CSLibrary.RFIDReader.Reconnect ()}}
\par
{\bkmkstart AAAAAAAAZE}
{\bkmkend AAAAAAAAZE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v RFID_18K6CTagKill\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:RFID_18K6CTagKill}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool CSLibrary.RFIDReader.RFID_18K6CTagKill (){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAZF}
{\bkmkend AAAAAAAAZF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SetAgileChannels\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:SetAgileChannels}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Result} CSLibrary.RFIDReader.SetAgileChannels ({\b RegionCode}  {\i prof})}}
\par
{\bkmkstart AAAAAAAAZG}
{\bkmkend AAAAAAAAZG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set to frequency agile mode }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i prof} \cell }{Country Profile\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Result\par
}}}
{\xe \v SetCurrentLinkProfile\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:SetCurrentLinkProfile}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Result} CSLibrary.RFIDReader.SetCurrentLinkProfile (uint  {\i profile})}}
\par
{\bkmkstart AAAAAAAAZH}
{\bkmkend AAAAAAAAZH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Allows the application to set the current link profile for the radio module. A link profile will remain in effect until changed by a subsequent call to RFID_RadioSetCurrentLinkProfile. The current link profile cannot be set while a radio module is executing a tag-protocol operation. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i profile} \cell }{The link profile to make the current link profile. If this parameter does not represent a valid link profile, RFID_ERROR_INVALID_PARAMETER is returned. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v SetCurrentLinkProfile\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:SetCurrentLinkProfile}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int CSLibrary.RFIDReader.SetCurrentLinkProfile (uint  {\i profile})}}
\par
{\bkmkstart AAAAAAAAZI}
{\bkmkend AAAAAAAAZI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
0 = Success }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i profile} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v SetCurrentSingulationAlgorithm\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:SetCurrentSingulationAlgorithm}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Result} CSLibrary.RFIDReader.SetCurrentSingulationAlgorithm ({\b SingulationAlgorithm}  {\i SingulationAlgorithm})}}
\par
{\bkmkstart AAAAAAAAZJ}
{\bkmkend AAAAAAAAZJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Allows the application to set the currently-active singulation algorithm (i.e., the one that is used when performing a tag- protocol operation (e.g., inventory, tag read, etc.)). The currently-active singulation algorithm may not be changed while a radio module is executing a tag-protocol operation. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i SingulationAlgorithm} \cell }{The singulation algorithm that is to be used for subsequent tag-access operations. If this parameter does not represent a valid singulation algorithm, RFID_ERROR_INVALID_PARAMETER is returned. \cell }
{\row }
}
}}
{\xe \v SetDefaultChannel\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:SetDefaultChannel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Result} CSLibrary.RFIDReader.SetDefaultChannel ()}}
\par
{\bkmkstart AAAAAAAAZK}
{\bkmkend AAAAAAAAZK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SetDynamicQParms\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:SetDynamicQParms}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Result} CSLibrary.RFIDReader.SetDynamicQParms (uint  {\i StartQValue}, uint  {\i MinQValue}, uint  {\i MaxQValue}, uint  {\i RetryCount}, uint  {\i ThresholdMultiplier}, uint  {\i ToggleTarget})}}
\par
{\bkmkstart AAAAAAAAZL}
{\bkmkend AAAAAAAAZL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The parameters for the dynamic-Q algorithm with application-controlled Q-adjustment-threshold, MAC singulation algorithm 3 }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i StartQValue} \cell }{The starting Q value to use. Valid values are 0-15, inclusive. startQValue must be greater than or equal to minQValue and less than or equal to maxQValue. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i MinQValue} \cell }{The minimum Q value to use. Valid values are 0-15, inclusive. minQValue must be less than or equal to startQValue and maxQValue. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i MaxQValue} \cell }{The maximum Q value to use. Valid values are 0-15, inclusive. maxQValue must be greater than or equal to startQValue and minQValue. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i RetryCount} \cell }{Specifies the number of times to try another execution of the singulation algorithm for the specified session/target before either toggling the target (if toggleTarget is non- zero) or terminating the inventory/tag access operation. Valid values are 0-255, inclusive. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i ThresholdMultiplier} \cell }{The multiplier, specified in units of fourths (i.e., 0.25), that will be applied to the Q-adjustment threshold as part of the dynamic-Q algorithm. For example, a value of 7 represents a multiplier of 1.75. See [MAC-EDS] for specifics on how the Q-adjustment threshold is used in the dynamic Q algorithm. Valid values are 0- 255, inclusive. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i ToggleTarget} \cell }{A flag that indicates if, after performing the inventory cycle for the specified target (i.e., A or B), if the target should be toggled (i.e., A to B or B to A) and another inventory cycle run. A non-zero value indicates that the target should be toggled. A zero value indicates that the target should not be toggled. Note that if the target is toggled, retryCount and maxQueryRepCount will also apply to the new target. \cell }
{\row }
}
}}
{\xe \v SetDynamicQParms\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:SetDynamicQParms}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Result} CSLibrary.RFIDReader.SetDynamicQParms ({\b DynamicQParms}  {\i dynParm})}}
\par
{\bkmkstart AAAAAAAAZM}
{\bkmkend AAAAAAAAZM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The parameters for the dynamic-Q algorithm with application-controlled Q-adjustment-threshold, MAC singulation algorithm 3 }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v SetDynamicQParms\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:SetDynamicQParms}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Result} CSLibrary.RFIDReader.SetDynamicQParms ()}}
\par
{\bkmkstart AAAAAAAAZN}
{\bkmkend AAAAAAAAZN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The parameters for the dynamic-Q algorithm with application-controlled Q-adjustment-threshold, MAC singulation algorithm 3 }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v SetFixedChannel\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:SetFixedChannel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Result} CSLibrary.RFIDReader.SetFixedChannel ({\b RegionCode}  {\i prof} = {\f2 RegionCode.CURRENT}, uint  {\i channel} = {\f2 0})}}
\par
{\bkmkstart AAAAAAAAZO}
{\bkmkend AAAAAAAAZO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set Fixed Frequency Channel All region can be used to set a fixed channel }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i prof} \cell }{Region Code\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i channel} \cell }{Channel number start from zero, you can get the available channels from CSLibrary.HighLevelInterface.AvailableFrequencyTable({\b CSLibrary.Constants.RegionCode})\cell }
{\row }
}
}}
{\xe \v SetFixedQParms\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:SetFixedQParms}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Result} CSLibrary.RFIDReader.SetFixedQParms (uint  {\i QValue}, uint  {\i RetryCount}, uint  {\i ToggleTarget}, uint  {\i RepeatUnitNoTags})}}
\par
{\bkmkstart AAAAAAAAZP}
{\bkmkend AAAAAAAAZP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The parameters for the fixed-Q algorithm, MAC singulation algorithm 0 If running a same operation, it only need to config once times }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i QValue} \cell }{The Q value to use. Valid values are 0-15, inclusive.\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i RetryCount} \cell }{Specifies the number of times to try another execution of the singulation algorithm for the specified session/target before either toggling the target (if toggleTarget is non-zero) or terminating the inventory/tag access operation. Valid values are 0- 255, inclusive. Valid values are 0-255, inclusive.\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i ToggleTarget} \cell }{A non-zero value indicates that the target should be toggled.A zero value indicates that the target should not be toggled. Note that if the target is toggled, retryCount and repeatUntilNoTags will also apply to the new target. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i RepeatUnitNoTags} \cell }{A flag that indicates whether or not the singulation algorithm should continue performing inventory rounds until no tags are singulated. A non-zero value indicates that, for each execution of the singulation algorithm, inventory rounds should be performed until no tags are singulated. A zero value indicates that a single inventory round should be performed for each execution of the singulation algorithm.\cell }
{\row }
}
}}
{\xe \v SetFixedQParms\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:SetFixedQParms}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Result} CSLibrary.RFIDReader.SetFixedQParms ({\b FixedQParms}  {\i fixedQParm})}}
\par
{\bkmkstart AAAAAAAAZQ}
{\bkmkend AAAAAAAAZQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The parameters for the fixed-Q algorithm, MAC singulation algorithm 0 If running a same operation, it only need to config once times }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v SetFixedQParms\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:SetFixedQParms}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Result} CSLibrary.RFIDReader.SetFixedQParms ()}}
\par
{\bkmkstart AAAAAAAAZR}
{\bkmkend AAAAAAAAZR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The parameters for the fixed-Q algorithm, MAC singulation algorithm 0 If running a same operation, it only need to config once times }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v SetFrequencyBand\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:SetFrequencyBand}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Result} CSLibrary.RFIDReader.SetFrequencyBand (UInt32  {\i frequencySelector}, {\b BandState}  {\i config}, UInt32  {\i multdiv}, UInt32  {\i pllcc}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAZS}
{\bkmkend AAAAAAAAZS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set Frequency Band - Basic Function }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i m_radioIndex} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i frequencySelector} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i config} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i multdiv} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pllcc} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v SetFrequencyBand\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:SetFrequencyBand}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Result} CSLibrary.RFIDReader.SetFrequencyBand (UInt32  {\i frequencySelector}, {\b BandState}  {\i config}, UInt32  {\i multdiv}, UInt32  {\i pllcc}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAZS}
{\bkmkend AAAAAAAAZS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set Frequency Band - Basic Function }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i m_radioIndex} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i frequencySelector} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i config} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i multdiv} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pllcc} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v SetHoppingChannels\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:SetHoppingChannels}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Result} CSLibrary.RFIDReader.SetHoppingChannels ({\b RegionCode}  {\i prof})}}
\par
{\bkmkstart AAAAAAAAZT}
{\bkmkend AAAAAAAAZT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set to the specific frequency profile }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i prof} \cell }{Country Profile\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Result\par
}}}
{\xe \v SetHoppingChannels\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:SetHoppingChannels}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Result} CSLibrary.RFIDReader.SetHoppingChannels ()}}
\par
{\bkmkstart AAAAAAAAZU}
{\bkmkend AAAAAAAAZU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reset current frequency profile }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v SetInventoryDuration\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:SetInventoryDuration}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Result} CSLibrary.RFIDReader.SetInventoryDuration (uint  {\i duration}, uint  {\i antennaPort} = {\f2 0})}}
\par
{\bkmkstart AAAAAAAAZV}
{\bkmkend AAAAAAAAZV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is used to set inventory duration }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i duration} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v SetInventoryTimeDelay\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:SetInventoryTimeDelay}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool CSLibrary.RFIDReader.SetInventoryTimeDelay (UInt32  {\i ms})}}
\par
{\bkmkstart AAAAAAAAZW}
{\bkmkend AAAAAAAAZW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SetInventoryTimeDelay\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:SetInventoryTimeDelay}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool CSLibrary.RFIDReader.SetInventoryTimeDelay (UInt32  {\i ms})}}
\par
{\bkmkstart AAAAAAAAZW}
{\bkmkend AAAAAAAAZW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SetMaskThreadProc\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:SetMaskThreadProc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CSLibrary.RFIDReader.SetMaskThreadProc (){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAZX}
{\bkmkend AAAAAAAAZX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SetOperationMode\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:SetOperationMode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CSLibrary.RFIDReader.SetOperationMode ({\b RadioOperationMode}  {\i mode})}}
\par
{\bkmkstart AAAAAAAAZY}
{\bkmkend AAAAAAAAZY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the operation mode of RFID radio module. By default, when an application opens a radio, the RFID Reader Library sets the reporting mode to non-continuous. An RFID radio module's operation mode will remain in effect until it is explicitly changed via RFID_RadioSetOperationMode, or the radio is closed and re- opened (at which point it will be set to non-continuous mode). The operation mode may not be changed while a radio module is executing a tag-protocol operation. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i mode} \cell }{The operation mode for the radio module.\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v SetOperationMode\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:SetOperationMode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CSLibrary.RFIDReader.SetOperationMode (ushort  {\i cycles}, {\b Events.AntennaSequenceMode}  {\i mode}, uint  {\i sequenceSize})}}
\par
{\bkmkstart AAAAAAAAZZ}
{\bkmkend AAAAAAAAZZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the operation mode of RFID radio module. By default, when an application opens a radio, the RFID Reader Library sets the reporting mode to non-continuous. An RFID radio module's operation mode will remain in effect until it is explicitly changed via RFID_RadioSetOperationMode, or the radio is closed and re- opened (at which point it will be set to non-continuous mode). The operation mode may not be changed while a radio module is executing a tag-protocol operation. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i cycles} \cell }{The number of antenna cycles to be completed for command execution. \cell }
{\row }
}
0x0001 = once cycle through\par
0xFFFF = cycle forever until a CANCEL is received.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i mode} \cell }{Antenna Sequence mode.\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i sequenceSize} \cell }{Sequence size. Maximum value is 48\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v SetOperationMode\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:SetOperationMode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Result} CSLibrary.RFIDReader.SetOperationMode ({\b RadioOperationMode}  {\i mode})}}
\par
{\bkmkstart AAAAAAABAA}
{\bkmkend AAAAAAABAA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the operation mode of RFID radio module. By default, when an application opens a radio, the RFID Reader Library sets the reporting mode to non-continuous. An RFID radio module's operation mode will remain in effect until it is explicitly changed via RFID_RadioSetOperationMode, or the radio is closed and re- opened (at which point it will be set to non-continuous mode). The operation mode may not be changed while a radio module is executing a tag-protocol operation. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i mode} \cell }{The operation mode for the radio module.\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v SetOperationMode\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:SetOperationMode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Result} CSLibrary.RFIDReader.SetOperationMode (UInt16  {\i cycles})}}
\par
{\bkmkstart AAAAAAABAB}
{\bkmkend AAAAAAABAB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the operation mode of RFID radio module. By default, when an application opens a radio, the RFID Reader Library sets the reporting mode to non-continuous. An RFID radio module's operation mode will remain in effect until it is explicitly changed via RFID_RadioSetOperationMode, or the radio is closed and re- opened (at which point it will be set to non-continuous mode). The operation mode may not be changed while a radio module is executing a tag-protocol operation. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i cycles} \cell }{The number of antenna cycles to be completed for command execution. \cell }
{\row }
}
0x0001 = once cycle through\par
0xFFFF = cycle forever until a CANCEL is received.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v SetOperationMode\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:SetOperationMode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Result} CSLibrary.RFIDReader.SetOperationMode (ushort  {\i cycles}, {\b Events.AntennaSequenceMode}  {\i mode} = {\f2 AntennaSequenceMode.NORMAL}, uint  {\i sequenceSize} = {\f2 0})}}
\par
{\bkmkstart AAAAAAABAC}
{\bkmkend AAAAAAABAC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the operation mode of RFID radio module. By default, when an application opens a radio, the RFID Reader Library sets the reporting mode to non-continuous. An RFID radio module's operation mode will remain in effect until it is explicitly changed via RFID_RadioSetOperationMode, or the radio is closed and re- opened (at which point it will be set to non-continuous mode). The operation mode may not be changed while a radio module is executing a tag-protocol operation. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i cycles} \cell }{The number of antenna cycles to be completed for command execution. \cell }
{\row }
}
0x0001 = once cycle through\par
0xFFFF = cycle forever until a CANCEL is received.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i mode} \cell }{Antenna Sequence mode.\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i sequenceSize} \cell }{Sequence size. Maximum value is 48\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v SetPostMatchCriteria\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:SetPostMatchCriteria}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Result} CSLibrary.RFIDReader.SetPostMatchCriteria ({\b SingulationCriterion} []  {\i postmatch})}}
\par
{\bkmkstart AAAAAAABAD}
{\bkmkend AAAAAAABAD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Configures the post-singulation match criteria to be used by the RFID radio module. The supplied post-singulation match criteria will be used for any tag-protocol operations (i.e., Inventory, etc.) in which the application specifies that a post-singulation match should be performed on the tags that are singulated by the tag-protocol operation (i.e., the SelectFlags.POST_MATCH flag is provided to the appropriate RFID_18K6CTag* function). The post-singulation match criteria will stay in effect until the next call to SetPostMatchCriteria. Post-singulation match criteria may not be changed while a radio module is executing a tag-protocol operation. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i postmatch} \cell }{An array that specifies the post- singulation match criteria that are to be applied to the tag's Electronic Product Code after it is singulated to determine if it is to have the tag-protocol operation applied to it. If the countCriteria field is zero, all post- singulation criteria will be disabled. This parameter must not be NULL. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v SetPowerLevel\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:SetPowerLevel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CSLibrary.RFIDReader.SetPowerLevel (UInt32  {\i pwrlevel})}}
\par
{\bkmkstart AAAAAAABAE}
{\bkmkend AAAAAAABAE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SetPowerLevel\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:SetPowerLevel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CSLibrary.RFIDReader.SetPowerLevel (UInt32  {\i pwrlevel})}}
\par
{\bkmkstart AAAAAAABAE}
{\bkmkend AAAAAAABAE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SetRadioLBT\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:SetRadioLBT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Result} CSLibrary.RFIDReader.SetRadioLBT ({\b LBT}  {\i enable}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAABAF}
{\bkmkend AAAAAAABAF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SetRadioLBT\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:SetRadioLBT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Result} CSLibrary.RFIDReader.SetRadioLBT ({\b LBT}  {\i enable}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAABAF}
{\bkmkend AAAAAAABAF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SetSelectCriteria\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:SetSelectCriteria}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Result} CSLibrary.RFIDReader.SetSelectCriteria ({\b SelectCriterion} []  {\i critlist})}}
\par
{\bkmkstart AAAAAAABAG}
{\bkmkend AAAAAAABAG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Configures the tag-selection criteria for the ISO 18000-6C select command. The supplied tag-selection criteria will be used for any tag-protocol operations (i.e., Inventory, etc.) in which the application specifies that an ISO 18000-6C select command should be issued prior to executing the tag-protocol operation (i.e., the SelectFlags.SELECT flag is provided to the appropriate RFID_18K6CTag* function). The tag-selection criteria will stay in effect until the next call to SetSelectCriteria. Tag-selection criteria may not be changed while a radio module is executing a tag-protocol operation. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i critlist} \cell }{SelectCriteria array, containing countCriteria entries, of selection criterion structures that are to be applied sequentially, beginning with pCriteria[0], to the tag population. If this field is NULL, countCriteria must be zero. /param> \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}\cell }
{\row }
}
}}
{\xe \v SetSingulationAlgorithmParms\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:SetSingulationAlgorithmParms}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Result} CSLibrary.RFIDReader.SetSingulationAlgorithmParms ({\b SingulationAlgorithm}  {\i alg}, {\b SingulationAlgorithmParms}  {\i parms})}}
\par
{\bkmkstart AAAAAAABAH}
{\bkmkend AAAAAAABAH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SetSingulationAlgorithmParms }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i alg} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i parms} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v SetTagGroup\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:SetTagGroup}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Result} CSLibrary.RFIDReader.SetTagGroup ({\b Selected}  {\i gpSelect}, {\b Session}  {\i gpSession}, {\b SessionTarget}  {\i gpSessionTarget})}}
\par
{\bkmkstart AAAAAAABAI}
{\bkmkend AAAAAAABAI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Once the tag population has been partitioned into disjoint groups, a subsequent tag-protocol operation (i.e., an inventory operation or access command) is then applied to one of the tag groups. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i gpSelect} \cell }{Specifies the state of the selected (SL) flag for tags that will have the operation applied to them. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i gpSession} \cell }{Specifies which inventory session flag (i.e., S0, S1, S2, or S3) will be matched against the inventory state specified by target. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i gpSessionTarget} \cell }{Specifies the state of the inventory session flag (i.e., A or B), specified by session, for tags that will have the operation applied to them. \cell }
{\row }
}
}}
{\xe \v SetTagGroup\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:SetTagGroup}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Result} CSLibrary.RFIDReader.SetTagGroup ({\b TagGroup}  {\i tagGroup})}}
\par
{\bkmkstart AAAAAAABAJ}
{\bkmkend AAAAAAABAJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Once the tag population has been partitioned into disjoint groups, a subsequent tag-protocol operation (i.e., an inventory operation or access command) is then applied to one of the tag groups. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i tagGroup} \cell }{TagGroup\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v Setup18K6CReadRegisters\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:Setup18K6CReadRegisters}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CSLibrary.RFIDReader.Setup18K6CReadRegisters (UInt32  {\i bank}, UInt32  {\i offset}, UInt32  {\i count}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAABAK}
{\bkmkend AAAAAAABAK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Setup18K6CReadRegisters\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:Setup18K6CReadRegisters}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CSLibrary.RFIDReader.Setup18K6CReadRegisters (UInt32  {\i bank}, UInt32  {\i offset}, UInt32  {\i count}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAABAK}
{\bkmkend AAAAAAABAK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Setup18K6CWriteRegisters\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:Setup18K6CWriteRegisters}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CSLibrary.RFIDReader.Setup18K6CWriteRegisters ({\b CSLibrary.Constants.MemoryBank}  {\i WriteBank}, uint  {\i WriteOffset}, uint  {\i WriteSize}, UInt16 []  {\i WriteBuf}, uint  {\i BufOffset}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAABAL}
{\bkmkend AAAAAAABAL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Start18K6CRead\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:Start18K6CRead}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int CSLibrary.RFIDReader.Start18K6CRead (uint  {\i bank}, uint  {\i offset}, uint  {\i count}, UInt16 []  {\i data}, uint  {\i accessPassword}, uint  {\i retry}, {\b CSLibrary.Constants.SelectFlags}  {\i flags})}}
\par
{\bkmkstart AAAAAAABAM}
{\bkmkend AAAAAAABAM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Start18K6CRead\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:Start18K6CRead}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int CSLibrary.RFIDReader.Start18K6CRead (uint  {\i bank}, uint  {\i offset}, uint  {\i count}, UInt16 []  {\i data}, uint  {\i accessPassword}, uint  {\i retry}, {\b SelectFlags}  {\i flags})}}
\par
{\bkmkstart AAAAAAABAN}
{\bkmkend AAAAAAABAN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Start18K6CRequest\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:Start18K6CRequest}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CSLibrary.RFIDReader.Start18K6CRequest (uint  {\i tagStopCount}, {\b SelectFlags}  {\i flags}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAABAO}
{\bkmkend AAAAAAABAO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Start18K6CRequest\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:Start18K6CRequest}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CSLibrary.RFIDReader.Start18K6CRequest (uint  {\i tagStopCount}, {\b SelectFlags}  {\i flags}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAABAO}
{\bkmkend AAAAAAABAO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Start18K6CWrite\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:Start18K6CWrite}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int CSLibrary.RFIDReader.Start18K6CWrite (uint  {\i bank}, uint  {\i offset}, uint  {\i count}, UInt16 []  {\i data}, uint  {\i accessPassword}, uint  {\i retry}, UInt16  {\i flags})}}
\par
{\bkmkstart AAAAAAABAP}
{\bkmkend AAAAAAABAP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v StartInventory\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:StartInventory}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CSLibrary.RFIDReader.StartInventory ()}}
\par
{\bkmkstart AAAAAAABAQ}
{\bkmkend AAAAAAABAQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v StartOperation\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:StartOperation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Result} CSLibrary.RFIDReader.StartOperation ({\b Operation}  {\i opertion})}}
\par
{\bkmkstart AAAAAAABAR}
{\bkmkend AAAAAAABAR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v StartOperation\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:StartOperation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CSLibrary.RFIDReader.StartOperation ()}}
\par
{\bkmkstart AAAAAAABAS}
{\bkmkend AAAAAAABAS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v StopOperation\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:StopOperation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CSLibrary.RFIDReader.StopOperation ()}}
\par
{\bkmkstart AAAAAAABAT}
{\bkmkend AAAAAAABAT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v StopOperation\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:StopOperation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CSLibrary.RFIDReader.StopOperation ()}}
\par
{\bkmkstart AAAAAAABAT}
{\bkmkend AAAAAAABAT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v StoreOEMData\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:StoreOEMData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool CSLibrary.RFIDReader.StoreOEMData (UInt32  {\i address}, UInt32  {\i value}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAABAU}
{\bkmkend AAAAAAABAU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v TagBlockLockThreadProc\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:TagBlockLockThreadProc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CSLibrary.RFIDReader.TagBlockLockThreadProc (){\f2 [private]}}}
\par
{\bkmkstart AAAAAAABAV}
{\bkmkend AAAAAAABAV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v TagKillThreadProc\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:TagKillThreadProc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CSLibrary.RFIDReader.TagKillThreadProc (){\f2 [private]}}}
\par
{\bkmkstart AAAAAAABAW}
{\bkmkend AAAAAAABAW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v TagLockThreadProc\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:TagLockThreadProc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CSLibrary.RFIDReader.TagLockThreadProc (){\f2 [private]}}}
\par
{\bkmkstart AAAAAAABAX}
{\bkmkend AAAAAAABAX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v TagRangingThreadProc\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:TagRangingThreadProc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CSLibrary.RFIDReader.TagRangingThreadProc (){\f2 [private]}}}
\par
{\bkmkstart AAAAAAABAY}
{\bkmkend AAAAAAABAY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v TagReadAccPwdThreadProc\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:TagReadAccPwdThreadProc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CSLibrary.RFIDReader.TagReadAccPwdThreadProc (){\f2 [private]}}}
\par
{\bkmkstart AAAAAAABAZ}
{\bkmkend AAAAAAABAZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v TagReadEPCThreadProc\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:TagReadEPCThreadProc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CSLibrary.RFIDReader.TagReadEPCThreadProc (){\f2 [private]}}}
\par
{\bkmkstart AAAAAAABBA}
{\bkmkend AAAAAAABBA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v TagReadKillPwdThreadProc\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:TagReadKillPwdThreadProc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CSLibrary.RFIDReader.TagReadKillPwdThreadProc (){\f2 [private]}}}
\par
{\bkmkstart AAAAAAABBB}
{\bkmkend AAAAAAABBB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v TagReadPCThreadProc\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:TagReadPCThreadProc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CSLibrary.RFIDReader.TagReadPCThreadProc (){\f2 [private]}}}
\par
{\bkmkstart AAAAAAABBC}
{\bkmkend AAAAAAABBC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v TagReadTidThreadProc\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:TagReadTidThreadProc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CSLibrary.RFIDReader.TagReadTidThreadProc (){\f2 [private]}}}
\par
{\bkmkstart AAAAAAABBD}
{\bkmkend AAAAAAABBD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v TagReadUsrMemThreadProc\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:TagReadUsrMemThreadProc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CSLibrary.RFIDReader.TagReadUsrMemThreadProc (){\f2 [private]}}}
\par
{\bkmkstart AAAAAAABBE}
{\bkmkend AAAAAAABBE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v TagSearchOneTagThreadProc\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:TagSearchOneTagThreadProc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CSLibrary.RFIDReader.TagSearchOneTagThreadProc (){\f2 [private]}}}
\par
{\bkmkstart AAAAAAABBF}
{\bkmkend AAAAAAABBF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v TagSelected\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:TagSelected}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CSLibrary.RFIDReader.TagSelected (){\f2 [private]}}}
\par
{\bkmkstart AAAAAAABBG}
{\bkmkend AAAAAAABBG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v TagSelected\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:TagSelected}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CSLibrary.RFIDReader.TagSelected (){\f2 [private]}}}
\par
{\bkmkstart AAAAAAABBG}
{\bkmkend AAAAAAABBG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v TagWriteAccPwdThreadProc\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:TagWriteAccPwdThreadProc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CSLibrary.RFIDReader.TagWriteAccPwdThreadProc (){\f2 [private]}}}
\par
{\bkmkstart AAAAAAABBH}
{\bkmkend AAAAAAABBH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v TagWriteEPCThreadProc\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:TagWriteEPCThreadProc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CSLibrary.RFIDReader.TagWriteEPCThreadProc (){\f2 [private]}}}
\par
{\bkmkstart AAAAAAABBI}
{\bkmkend AAAAAAABBI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v TagWriteKillPwdThreadProc\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:TagWriteKillPwdThreadProc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CSLibrary.RFIDReader.TagWriteKillPwdThreadProc (){\f2 [private]}}}
\par
{\bkmkstart AAAAAAABBJ}
{\bkmkend AAAAAAABBJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v TagWritePCThreadProc\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:TagWritePCThreadProc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CSLibrary.RFIDReader.TagWritePCThreadProc (){\f2 [private]}}}
\par
{\bkmkstart AAAAAAABBK}
{\bkmkend AAAAAAABBK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v TagWriteUsrMemThreadProc\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:TagWriteUsrMemThreadProc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CSLibrary.RFIDReader.TagWriteUsrMemThreadProc (){\f2 [private]}}}
\par
{\bkmkstart AAAAAAABBL}
{\bkmkend AAAAAAABBL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v TellThemOnAccessCompleted\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:TellThemOnAccessCompleted}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CSLibrary.RFIDReader.TellThemOnAccessCompleted (object  {\i sender}, {\b OnAccessCompletedEventArgs}  {\i e}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAABBM}
{\bkmkend AAAAAAABBM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v TellThemOnStateChanged\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:TellThemOnStateChanged}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CSLibrary.RFIDReader.TellThemOnStateChanged (object  {\i sender}, {\b OnStateChangedEventArgs}  {\i e}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAABBN}
{\bkmkend AAAAAAABBN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v test\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:test}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CSLibrary.RFIDReader.test ()}}
\par
{\bkmkstart AAAAAAABBO}
{\bkmkend AAAAAAABBO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v TwoByteArraryToInt\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:TwoByteArraryToInt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int CSLibrary.RFIDReader.TwoByteArraryToInt (byte []  {\i data}, int  {\i startIndex}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAABBP}
{\bkmkend AAAAAAABBP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v uint32ArrayToString\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:uint32ArrayToString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
String CSLibrary.RFIDReader.uint32ArrayToString (UInt32 []  {\i source}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAABBQ}
{\bkmkend AAAAAAABBQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v WriteMacMaskRegisters\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:WriteMacMaskRegisters}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CSLibrary.RFIDReader.WriteMacMaskRegisters (UInt16  {\i registerAddress}, UInt32  {\i bitCount}, byte []  {\i pMask}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAABBR}
{\bkmkend AAAAAAABBR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v _dataBuffer\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:_dataBuffer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CSLibrary Tools Queue CSLibrary.RFIDReader._dataBuffer = new {\b Tools.Queue}(409600){\f2 [private]}}}
\par
{\bkmkstart AAAAAAABBS}
{\bkmkend AAAAAAABBS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v _deviceHandler\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:_deviceHandler}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b HighLevelInterface} CSLibrary.RFIDReader._deviceHandler{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABBT}
{\bkmkend AAAAAAABBT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v _readerStatus\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:_readerStatus}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RFIDREADERCMDSTATUS} CSLibrary.RFIDReader._readerStatus = {\b RFIDREADERCMDSTATUS.IDLE}{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABBU}
{\bkmkend AAAAAAABBU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v _registerData\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:_registerData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt32 [] CSLibrary.RFIDReader._registerData = new UInt32[0xffff]{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABBV}
{\bkmkend AAAAAAABBV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v _tagRangingParms\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:_tagRangingParms}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b CSLibrary.Structures.TagRangingParms} CSLibrary.RFIDReader._tagRangingParms{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABBW}
{\bkmkend AAAAAAABBW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v _tagSelectedParms\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:_tagSelectedParms}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Structures.TagSelectedParms} CSLibrary.RFIDReader._tagSelectedParms{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABBX}
{\bkmkend AAAAAAABBX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ACC_PWD_START_OFFSET\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:ACC_PWD_START_OFFSET}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const ushort CSLibrary.RFIDReader.ACC_PWD_START_OFFSET = 2{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABBY}
{\bkmkend AAAAAAABBY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ACC_PWD_WORD_LENGTH\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:ACC_PWD_WORD_LENGTH}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const ushort CSLibrary.RFIDReader.ACC_PWD_WORD_LENGTH = 2{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABBZ}
{\bkmkend AAAAAAABBZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ANT_FIELD_INDEX\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:ANT_FIELD_INDEX}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int CSLibrary.RFIDReader.ANT_FIELD_INDEX = 14{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABCA}
{\bkmkend AAAAAAABCA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v AUS_CHN_CNT\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:AUS_CHN_CNT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const uint CSLibrary.RFIDReader.AUS_CHN_CNT = 10{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABCB}
{\bkmkend AAAAAAABCB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Australia Frequency Channel number }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v ausFreqSortedIdx\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:ausFreqSortedIdx}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly uint [] CSLibrary.RFIDReader.ausFreqSortedIdx{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABCC}
{\bkmkend AAAAAAABCC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = new uint[]\{\par
                                                    0, 3, 6, 8, 1,\par
                                                    4, 7, 9, 2, 5,\}\par
}
}
{\xe \v AusFreqTable\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:AusFreqTable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly uint [] CSLibrary.RFIDReader.AusFreqTable{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABCD}
{\bkmkend AAAAAAABCD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = new uint[]\par
        \{\par
            0x00180E63, \par
            0x00180E69, \par
            0x00180E6F, \par
            0x00180E73, \par
            0x00180E65, \par
            0x00180E6B, \par
            0x00180E71, \par
            0x00180E75, \par
            0x00180E67, \par
            0x00180E6D, \par
        \}\par
}
}
{\xe \v AUSTableOfFreq\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:AUSTableOfFreq}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly double [] CSLibrary.RFIDReader.AUSTableOfFreq{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABCE}
{\bkmkend AAAAAAABCE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = new double[]\par
        \{\par
            920.75,\par
            921.25,\par
            921.75,\par
            922.25,\par
            922.75,\par
            923.25,\par
            923.75,\par
            924.25,\par
            924.75,\par
            925.25,\par
        \}\par
}
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Australia Frequency Table }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v BR1_CHN_CNT\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:BR1_CHN_CNT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const uint CSLibrary.RFIDReader.BR1_CHN_CNT = 24{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABCF}
{\bkmkend AAAAAAABCF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Brazil1 Frequency Channel number }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v br1FreqSortedIdx\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:br1FreqSortedIdx}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly uint [] CSLibrary.RFIDReader.br1FreqSortedIdx{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABCG}
{\bkmkend AAAAAAABCG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = new uint[]\{\par
            0, 22, 21, 23,\par
            9, 7, 6, 4,\par
            19, 12, 13, 3,\par
            5, 1, 18, 8,\par
            2, 16, 20, 17,\par
            11, 10, 14, 15,\par
        \}\par
}
}
{\xe \v br1FreqTable\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:br1FreqTable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint [] CSLibrary.RFIDReader.br1FreqTable{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABCH}
{\bkmkend AAAAAAABCH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v BR1TableOfFreq\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:BR1TableOfFreq}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double [] CSLibrary.RFIDReader.BR1TableOfFreq{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABCI}
{\bkmkend AAAAAAABCI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = new double[]\par
            \{\par
                \par
                915.75,\par
                916.25,\par
                916.75,\par
                917.25,\par
                917.75,\par
                918.25,\par
                918.75,\par
                919.25,\par
                919.75,\par
                920.25,\par
                920.75,\par
                921.25,\par
                921.75,\par
                922.25,\par
                922.75,\par
                923.25,\par
                923.75,\par
                924.25,\par
                924.75,\par
                925.25,\par
                925.75,\par
                926.25,\par
                926.75,\par
                927.25,\par
            \}\par
}
}
{\xe \v BR2_CHN_CNT\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:BR2_CHN_CNT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const uint CSLibrary.RFIDReader.BR2_CHN_CNT = 33{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABCJ}
{\bkmkend AAAAAAABCJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Brazil2 Frequency Channel number }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v br2FreqSortedIdx\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:br2FreqSortedIdx}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly uint [] CSLibrary.RFIDReader.br2FreqSortedIdx{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABCK}
{\bkmkend AAAAAAABCK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = new uint[]\{\par
            9, 1, 31,\par
            30, 3, 32,\par
            18, 16, 15,\par
            13, 5, 4,\par
            28, 21, 8,\par
            22, 2, 6,\par
            7, 12, 14,\par
            10, 27, 17,\par
            11, 25, 29,\par
            26, 20, 19,\par
            23, 0, 24,\par
        \}\par
}
}
{\xe \v br2FreqTable\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:br2FreqTable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint [] CSLibrary.RFIDReader.br2FreqTable{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABCL}
{\bkmkend AAAAAAABCL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v BR2TableOfFreq\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:BR2TableOfFreq}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double [] CSLibrary.RFIDReader.BR2TableOfFreq{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABCM}
{\bkmkend AAAAAAABCM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v BR3_CHN_CNT\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:BR3_CHN_CNT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const uint CSLibrary.RFIDReader.BR3_CHN_CNT = 9{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABCN}
{\bkmkend AAAAAAABCN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Brazil3 Frequency Channel number }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v br3FreqSortedIdx\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:br3FreqSortedIdx}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly uint [] CSLibrary.RFIDReader.br3FreqSortedIdx{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABCO}
{\bkmkend AAAAAAABCO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = new uint[]\{\par
            1, 3, 5, 4, 8, 2, 6, 7, 0\par
        \}\par
}
}
{\xe \v br3FreqTable\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:br3FreqTable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint [] CSLibrary.RFIDReader.br3FreqTable{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABCP}
{\bkmkend AAAAAAABCP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = new uint[]\par
            \{\par
                0x00180E1D, \par
                0x00180E21, \par
                0x00180E25, \par
                0x00180E23, \par
                0x00180E2B, \par
                0x00180E1F, \par
                0x00180E27, \par
                0x00180E29, \par
                0x00180E1B, \par
            \}\par
}
}
{\xe \v BR3TableOfFreq\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:BR3TableOfFreq}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double [] CSLibrary.RFIDReader.BR3TableOfFreq{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABCQ}
{\bkmkend AAAAAAABCQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = new double[]\par
            \{\par
                902.75, \par
                903.25, \par
                903.75, \par
                904.25, \par
                904.75, \par
                905.25, \par
                905.75, \par
                906.25, \par
                906.75, \par
            \}\par
}
}
{\xe \v BR4_CHN_CNT\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:BR4_CHN_CNT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const uint CSLibrary.RFIDReader.BR4_CHN_CNT = 4{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABCR}
{\bkmkend AAAAAAABCR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Brazil2 Frequency Channel number }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v br4FreqSortedIdx\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:br4FreqSortedIdx}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly uint [] CSLibrary.RFIDReader.br4FreqSortedIdx{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABCS}
{\bkmkend AAAAAAABCS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = new uint[]\{\par
            1, 3, 2, 0\par
        \}\par
}
}
{\xe \v br4FreqTable\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:br4FreqTable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint [] CSLibrary.RFIDReader.br4FreqTable{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABCT}
{\bkmkend AAAAAAABCT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = new uint[]\par
            \{\par
                0x00180E1D, \par
                0x00180E21, \par
                0x00180E1F, \par
                0x00180E1B, \par
            \}\par
}
}
{\xe \v BR4TableOfFreq\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:BR4TableOfFreq}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double [] CSLibrary.RFIDReader.BR4TableOfFreq{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABCU}
{\bkmkend AAAAAAABCU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = new double[]\par
            \{\par
                902.75,\par
                903.25,\par
                903.75,\par
                904.25,\par
            \}\par
}
}
{\xe \v BR5_CHN_CNT\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:BR5_CHN_CNT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const uint CSLibrary.RFIDReader.BR5_CHN_CNT = 14{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABCV}
{\bkmkend AAAAAAABCV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Brazil2 Frequency Channel number }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v br5FreqSortedIdx\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:br5FreqSortedIdx}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly uint [] CSLibrary.RFIDReader.br5FreqSortedIdx{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABCW}
{\bkmkend AAAAAAABCW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = new uint[]\{\par
            5, 3, 2, 0, 8, 9, 1, 4, 12, 13, 7, 6, 10, 11\par
        \}\par
}
}
{\xe \v br5FreqTable\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:br5FreqTable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint [] CSLibrary.RFIDReader.br5FreqTable{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABCX}
{\bkmkend AAAAAAABCX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = new uint[]\par
            \{\par
                0x00180E61, \par
                0x00180E5D, \par
                0x00180E5B, \par
                0x00180E57, \par
                0x00180E67, \par
                0x00180E69, \par
                0x00180E59, \par
                0x00180E5F, \par
                0x00180E6F, \par
                0x00180E71, \par
                0x00180E65, \par
                0x00180E63, \par
                0x00180E6B, \par
                0x00180E6D, \par
\par
            \}\par
}
}
{\xe \v BR5TableOfFreq\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:BR5TableOfFreq}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double [] CSLibrary.RFIDReader.BR5TableOfFreq{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABCY}
{\bkmkend AAAAAAABCY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = new double[]\par
            \{\par
                917.75, \par
                918.25, \par
                918.75, \par
                919.25, \par
                919.75, \par
                920.25, \par
                920.75, \par
                921.25, \par
                921.75, \par
                922.25, \par
                922.75, \par
                923.25, \par
                923.75, \par
                924.25, \par
            \}\par
}
}
{\xe \v BYTES_PER_LEN_UNIT\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:BYTES_PER_LEN_UNIT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int CSLibrary.RFIDReader.BYTES_PER_LEN_UNIT = 4{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABCZ}
{\bkmkend AAAAAAABCZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v CHN10TableOfFreq\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:CHN10TableOfFreq}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly double [] CSLibrary.RFIDReader.CHN10TableOfFreq{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABDA}
{\bkmkend AAAAAAABDA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = new double[]\par
        \{\par
            921.625,\par
            921.875,\par
            922.125,\par
        \}\par
}
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
China Frequency Table }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v CHN11TableOfFreq\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:CHN11TableOfFreq}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly double [] CSLibrary.RFIDReader.CHN11TableOfFreq{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABDB}
{\bkmkend AAAAAAABDB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = new double[]\par
        \{\par
            922.625,\par
            922.875,\par
            923.125,\par
        \}\par
}
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
China Frequency Table }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v CHN12TableOfFreq\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:CHN12TableOfFreq}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly double [] CSLibrary.RFIDReader.CHN12TableOfFreq{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABDC}
{\bkmkend AAAAAAABDC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = new double[]\par
        \{\par
            923.625,\par
            923.875,\par
            924.125,\par
        \}\par
}
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
China Frequency Table }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v CHN1TableOfFreq\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:CHN1TableOfFreq}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly double [] CSLibrary.RFIDReader.CHN1TableOfFreq{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABDD}
{\bkmkend AAAAAAABDD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = new double[]\par
        \{\par
            920.625,\par
            920.875,\par
            921.125,\par
            921.375,\par
        \}\par
}
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
China Frequency Table }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v CHN2TableOfFreq\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:CHN2TableOfFreq}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly double [] CSLibrary.RFIDReader.CHN2TableOfFreq{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABDE}
{\bkmkend AAAAAAABDE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = new double[]\par
        \{\par
            921.625,\par
            921.875,\par
            922.125,\par
            922.375,\par
        \}\par
}
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
China Frequency Table }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v CHN3TableOfFreq\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:CHN3TableOfFreq}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly double [] CSLibrary.RFIDReader.CHN3TableOfFreq{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABDF}
{\bkmkend AAAAAAABDF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = new double[]\par
        \{\par
            922.625,\par
            922.875,\par
            923.125,\par
            923.375,\par
        \}\par
}
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
China Frequency Table }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v CHN4TableOfFreq\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:CHN4TableOfFreq}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly double [] CSLibrary.RFIDReader.CHN4TableOfFreq{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABDG}
{\bkmkend AAAAAAABDG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = new double[]\par
        \{\par
            923.625,\par
            923.875,\par
            924.125,\par
            924.375,\par
        \}\par
}
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
China Frequency Table }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v CHN5TableOfFreq\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:CHN5TableOfFreq}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly double [] CSLibrary.RFIDReader.CHN5TableOfFreq{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABDH}
{\bkmkend AAAAAAABDH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = new double[]\par
        \{\par
            920.625,\par
            921.625,\par
            922.625,\par
            923.625,\par
        \}\par
}
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
China Frequency Table }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v CHN6TableOfFreq\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:CHN6TableOfFreq}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly double [] CSLibrary.RFIDReader.CHN6TableOfFreq{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABDI}
{\bkmkend AAAAAAABDI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = new double[]\par
        \{\par
            920.875,\par
            921.875,\par
            922.875,\par
            923.875,\par
        \}\par
}
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
China Frequency Table }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v CHN7TableOfFreq\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:CHN7TableOfFreq}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly double [] CSLibrary.RFIDReader.CHN7TableOfFreq{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABDJ}
{\bkmkend AAAAAAABDJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = new double[]\par
        \{\par
            921.125,\par
            922.125,\par
            923.125,\par
            924.125,\par
        \}\par
}
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
China Frequency Table }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v CHN8TableOfFreq\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:CHN8TableOfFreq}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly double [] CSLibrary.RFIDReader.CHN8TableOfFreq{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABDK}
{\bkmkend AAAAAAABDK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = new double[]\par
        \{\par
            921.375,\par
            922.375,\par
            923.375,\par
            924.375,\par
        \}\par
}
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
China Frequency Table }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v CHN9TableOfFreq\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:CHN9TableOfFreq}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly double [] CSLibrary.RFIDReader.CHN9TableOfFreq{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABDL}
{\bkmkend AAAAAAABDL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = new double[]\par
        \{\par
            920.625,\par
            920.875,\par
            921.125,\par
        \}\par
}
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
China Frequency Table }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v CHNTableOfFreq\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:CHNTableOfFreq}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly double [] CSLibrary.RFIDReader.CHNTableOfFreq{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABDM}
{\bkmkend AAAAAAABDM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = new double[]\par
        \{\par
            920.625,\par
            920.875,\par
            921.125,\par
            921.375,\par
            921.625,\par
            921.875,\par
            922.125,\par
            922.375,\par
            922.625,\par
            922.875,\par
            923.125,\par
            923.375,\par
            923.625,\par
            923.875,\par
            924.125,\par
            924.375,\par
        \}\par
}
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
China Frequency Table }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v cn10FreqTable\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:cn10FreqTable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly uint [] CSLibrary.RFIDReader.cn10FreqTable{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABDN}
{\bkmkend AAAAAAABDN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = new uint[]\par
        \{\par
            0x00301CCD, \par
            0x00301CCF, \par
            0x00301CD1, \par
        \}\par
}
}
{\xe \v cn11FreqTable\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:cn11FreqTable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly uint [] CSLibrary.RFIDReader.cn11FreqTable{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABDO}
{\bkmkend AAAAAAABDO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = new uint[]\par
        \{\par
            0x00301CD5, \par
            0x00301CD7, \par
            0x00301CD9, \par
        \}\par
}
}
{\xe \v cn12FreqTable\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:cn12FreqTable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly uint [] CSLibrary.RFIDReader.cn12FreqTable{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABDP}
{\bkmkend AAAAAAABDP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = new uint[]\par
        \{\par
            0x00301CDD, \par
            0x00301CDF, \par
            0x00301CE1, \par
        \}\par
}
}
{\xe \v CN1_CHN_CNT\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:CN1_CHN_CNT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const uint CSLibrary.RFIDReader.CN1_CHN_CNT = 4{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABDQ}
{\bkmkend AAAAAAABDQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
China Frequency Channel number }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v cn1FreqSortedIdx\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:cn1FreqSortedIdx}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly uint [] CSLibrary.RFIDReader.cn1FreqSortedIdx{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABDR}
{\bkmkend AAAAAAABDR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = new uint[]\{\par
                                                0,1,2,3\par
                                                \}\par
}
}
{\xe \v cn1FreqTable\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:cn1FreqTable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly uint [] CSLibrary.RFIDReader.cn1FreqTable{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABDS}
{\bkmkend AAAAAAABDS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = new uint[]\par
        \{\par
            0x00301CC5, \par
            0x00301CC7, \par
            0x00301CC9, \par
            0x00301CCB, \par
        \}\par
}
}
{\xe \v cn2FreqTable\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:cn2FreqTable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly uint [] CSLibrary.RFIDReader.cn2FreqTable{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABDT}
{\bkmkend AAAAAAABDT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = new uint[]\par
        \{\par
            0x00301CCD, \par
            0x00301CCF, \par
            0x00301CD1, \par
            0x00301CD3, \par
        \}\par
}
}
{\xe \v cn3FreqTable\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:cn3FreqTable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly uint [] CSLibrary.RFIDReader.cn3FreqTable{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABDU}
{\bkmkend AAAAAAABDU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = new uint[]\par
        \{\par
            0x00301CD5, \par
            0x00301CD7, \par
            0x00301CD9, \par
            0x00301CDB, \par
        \}\par
}
}
{\xe \v cn4FreqTable\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:cn4FreqTable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly uint [] CSLibrary.RFIDReader.cn4FreqTable{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABDV}
{\bkmkend AAAAAAABDV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = new uint[]\par
        \{\par
            0x00301CDD, \par
            0x00301CDF, \par
            0x00301CE1, \par
            0x00301CE3, \par
        \}\par
}
}
{\xe \v cn5FreqTable\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:cn5FreqTable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly uint [] CSLibrary.RFIDReader.cn5FreqTable{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABDW}
{\bkmkend AAAAAAABDW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = new uint[]\par
        \{\par
            0x00301CC5, \par
            0x00301CCD, \par
            0x00301CD5, \par
            0x00301CDD, \par
        \}\par
}
}
{\xe \v cn6FreqTable\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:cn6FreqTable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly uint [] CSLibrary.RFIDReader.cn6FreqTable{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABDX}
{\bkmkend AAAAAAABDX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = new uint[]\par
        \{\par
            0x00301CC7, \par
            0x00301CCF, \par
            0x00301CD7, \par
            0x00301CDF, \par
        \}\par
}
}
{\xe \v cn7FreqTable\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:cn7FreqTable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly uint [] CSLibrary.RFIDReader.cn7FreqTable{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABDY}
{\bkmkend AAAAAAABDY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = new uint[]\par
        \{\par
             0x00301CC9, \par
             0x00301CD1, \par
             0x00301CD9, \par
             0x00301CE1, \par
        \}\par
}
}
{\xe \v cn8FreqTable\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:cn8FreqTable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly uint [] CSLibrary.RFIDReader.cn8FreqTable{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABDZ}
{\bkmkend AAAAAAABDZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = new uint[]\par
        \{\par
            0x00301CCB, \par
            0x00301CD3, \par
            0x00301CDB, \par
            0x00301CE3, \par
        \}\par
}
}
{\xe \v CN9_CHN_CNT\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:CN9_CHN_CNT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const uint CSLibrary.RFIDReader.CN9_CHN_CNT = 3{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABEA}
{\bkmkend AAAAAAABEA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
China Frequency Channel number }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v cn9FreqSortedIdx\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:cn9FreqSortedIdx}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly uint [] CSLibrary.RFIDReader.cn9FreqSortedIdx{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABEB}
{\bkmkend AAAAAAABEB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = new uint[]\{\par
                                                0,1,2\par
                                                \}\par
}
}
{\xe \v cn9FreqTable\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:cn9FreqTable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly uint [] CSLibrary.RFIDReader.cn9FreqTable{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABEC}
{\bkmkend AAAAAAABEC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = new uint[]\par
        \{\par
            0x00301CC5, \par
            0x00301CC7, \par
            0x00301CC9, \par
        \}\par
}
}
{\xe \v CN_CHN_CNT\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:CN_CHN_CNT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const uint CSLibrary.RFIDReader.CN_CHN_CNT = 16{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABED}
{\bkmkend AAAAAAABED}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
China Frequency Channel number }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v cnFreqSortedIdx\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:cnFreqSortedIdx}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly uint [] CSLibrary.RFIDReader.cnFreqSortedIdx{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABEE}
{\bkmkend AAAAAAABEE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = new uint[]\{\par
                                                7, 6, 4, 0,\par
                                                10, 14, 3, 1,\par
                                                9, 8, 2, 13,\par
                                                12, 11, 5, 15,\par
                                                \}\par
}
}
{\xe \v cnFreqTable\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:cnFreqTable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly uint [] CSLibrary.RFIDReader.cnFreqTable{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABEF}
{\bkmkend AAAAAAABEF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = new uint[]\par
        \{\par
            0x00301CD3, \par
            0x00301CD1, \par
            0x00301CCD, \par
            0x00301CC5, \par
            0x00301CD9, \par
            0x00301CE1, \par
            0x00301CCB, \par
            0x00301CC7, \par
            0x00301CD7, \par
            0x00301CD5, \par
            0x00301CC9, \par
            0x00301CDF, \par
            0x00301CDD, \par
            0x00301CDB, \par
            0x00301CCF, \par
            0x00301CE3, \par
        \}\par
}
}
{\xe \v currentInventoryFreqRevIndex\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:currentInventoryFreqRevIndex}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint [] CSLibrary.RFIDReader.currentInventoryFreqRevIndex = null{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABEG}
{\bkmkend AAAAAAABEG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v CurrentOperation\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:CurrentOperation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Operation} CSLibrary.RFIDReader.CurrentOperation{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABEH}
{\bkmkend AAAAAAABEH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v CurrentOperationResult\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:CurrentOperationResult}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Result} CSLibrary.RFIDReader.CurrentOperationResult{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABEI}
{\bkmkend AAAAAAABEI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DATA_FIELD_INDEX\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:DATA_FIELD_INDEX}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int CSLibrary.RFIDReader.DATA_FIELD_INDEX = 20{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABEJ}
{\bkmkend AAAAAAABEJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v EPC_START_OFFSET\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:EPC_START_OFFSET}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const ushort CSLibrary.RFIDReader.EPC_START_OFFSET = 2{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABEK}
{\bkmkend AAAAAAABEK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v EPC_WORD_LENGTH\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:EPC_WORD_LENGTH}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const ushort CSLibrary.RFIDReader.EPC_WORD_LENGTH = 6{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABEL}
{\bkmkend AAAAAAABEL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ETSI_CHN_CNT\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:ETSI_CHN_CNT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const uint CSLibrary.RFIDReader.ETSI_CHN_CNT = 4{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABEM}
{\bkmkend AAAAAAABEM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ETSI Frequency Channel number }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v etsiBackoffTable\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:etsiBackoffTable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt32 [] CSLibrary.RFIDReader.etsiBackoffTable{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABEN}
{\bkmkend AAAAAAABEN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = new uint[]\par
        \{\par
            0x0000175a, \par
            0x000016d5, \par
            0x0000225a, \par
            0x0000219f, \par
            0x00001fdd, \par
            0x00001cb4, \par
            0x000026c9, \par
            0x000026c6, \par
            0x00001e66, \par
            0x0000140d, \par
            0x00001ead  \par
        \}\par
}
}
{\xe \v etsiFreqSortedIdx\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:etsiFreqSortedIdx}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly uint [] CSLibrary.RFIDReader.etsiFreqSortedIdx{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABEO}
{\bkmkend AAAAAAABEO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = new uint[]\{\par
            0,\par
            1,\par
            2,\par
            3\par
        \}\par
}
}
{\xe \v etsiFreqTable\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:etsiFreqTable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly uint [] CSLibrary.RFIDReader.etsiFreqTable{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABEP}
{\bkmkend AAAAAAABEP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = new uint[]\par
        \{\par
            0x003C21D1, \par
            0x003C21D7, \par
            0x003C21DD, \par
            0x003C21E3, \par
        \}\par
}
}
{\xe \v ETSITableOfFreq\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:ETSITableOfFreq}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly double [] CSLibrary.RFIDReader.ETSITableOfFreq{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABEQ}
{\bkmkend AAAAAAABEQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = new double[]\par
        \{\par
            865.70,\par
            866.30,\par
            866.90,\par
            867.50,\par
        \}\par
}
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ETSI, G800 and India Frequency Table }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v ETSIUPPERBAND_CHN_CNT\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:ETSIUPPERBAND_CHN_CNT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const uint CSLibrary.RFIDReader.ETSIUPPERBAND_CHN_CNT = 4{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABER}
{\bkmkend AAAAAAABER}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Brazil1 Frequency Channel number }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v etsiupperbandFreqSortedIdx\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:etsiupperbandFreqSortedIdx}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly uint [] CSLibrary.RFIDReader.etsiupperbandFreqSortedIdx{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABES}
{\bkmkend AAAAAAABES}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = new uint[]\{\par
            0, 1, 2, 3\par
        \}\par
}
}
{\xe \v etsiupperbandFreqTable\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:etsiupperbandFreqTable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint [] CSLibrary.RFIDReader.etsiupperbandFreqTable{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABET}
{\bkmkend AAAAAAABET}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = new uint[]\par
        \{\par
            0x003C23CB, \par
            0x003C23D7, \par
            0x003C23E3, \par
            0x003C23EF, \par
        \}\par
}
}
{\xe \v ETSIUPPERBANDTableOfFreq\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:ETSIUPPERBANDTableOfFreq}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double [] CSLibrary.RFIDReader.ETSIUPPERBANDTableOfFreq{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABEU}
{\bkmkend AAAAAAABEU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = new double[]\par
        \{\par
            916.3,\par
            917.5,\par
            918.7,\par
            919.9,\par
        \}\par
}
}
{\xe \v FCC_CHN_CNT\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:FCC_CHN_CNT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const uint CSLibrary.RFIDReader.FCC_CHN_CNT = 50{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABEV}
{\bkmkend AAAAAAABEV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
FCC Frequency Channel number }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v fccFreqSortedIdx\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:fccFreqSortedIdx}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly uint [] CSLibrary.RFIDReader.fccFreqSortedIdx{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABEW}
{\bkmkend AAAAAAABEW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = new uint[]\{\par
            2, 19, 10, 15, 40,\par
            41, 42, 25, 13, 20,\par
            16, 22, 14, 5, 18,\par
            0, 23, 31, 47, 46,\par
            36, 35, 9, 24, 34,\par
            39, 1, 7, 6, 48,\par
            43, 4, 45, 44, 33,\par
            28, 17, 37, 11, 12,\par
            21, 27, 3, 8, 30,\par
            38, 29, 49, 32, 26\par
        \}\par
}
}
{\xe \v fccFreqSortedIdx_Ver20170001\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:fccFreqSortedIdx_Ver20170001}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly uint [] CSLibrary.RFIDReader.fccFreqSortedIdx_Ver20170001{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABEX}
{\bkmkend AAAAAAABEX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = new uint[]\{\par
            25, 36, 13, 19, 31,\par
            35, 14, 15, 34, 40,\par
            12, 22, 2, 33, 39,\par
            10, 18, 42, 28, 47,\par
            11, 20, 43, 27, 49,\par
            9, 16, 1, 30, 48,\par
            5, 17, 44, 29, 46,\par
            8, 23, 4, 32, 41,\par
            0, 24, 6, 26, 45,\par
            7, 37, 21, 38, 3\par
        \}\par
}
}
{\xe \v fccFreqTable\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:fccFreqTable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint [] CSLibrary.RFIDReader.fccFreqTable{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABEY}
{\bkmkend AAAAAAABEY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v fccFreqTable_Ver20170001\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:fccFreqTable_Ver20170001}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint [] CSLibrary.RFIDReader.fccFreqTable_Ver20170001{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABEZ}
{\bkmkend AAAAAAABEZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v FCCTableOfFreq\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:FCCTableOfFreq}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly double [] CSLibrary.RFIDReader.FCCTableOfFreq{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABFA}
{\bkmkend AAAAAAABFA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
FCC Frequency Table }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v HK_CHN_CNT\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HK_CHN_CNT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const uint CSLibrary.RFIDReader.HK_CHN_CNT = 8{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABFB}
{\bkmkend AAAAAAABFB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Hong Kong Frequency Channel number }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v hkFreqSortedIdx\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:hkFreqSortedIdx}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly uint [] CSLibrary.RFIDReader.hkFreqSortedIdx{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABFC}
{\bkmkend AAAAAAABFC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = new uint[]\{\par
            0, 3, 7, 1,\par
            3, 5, 6, 2,\par
        \}\par
}
}
{\xe \v hkFreqTable\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:hkFreqTable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly uint [] CSLibrary.RFIDReader.hkFreqTable{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABFD}
{\bkmkend AAAAAAABFD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = new uint[]\par
        \{\par
            0x00180E63, \par
            0x00180E69, \par
            0x00180E71, \par
            0x00180E65, \par
            0x00180E6B, \par
            0x00180E6D, \par
            0x00180E6F, \par
            0x00180E67, \par
        \}\par
}
}
{\xe \v HKTableOfFreq\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:HKTableOfFreq}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly double [] CSLibrary.RFIDReader.HKTableOfFreq{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABFE}
{\bkmkend AAAAAAABFE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = new double[]\par
        \{\par
            920.75,\par
            921.25,\par
            921.75,\par
            922.25,\par
            922.75,\par
            923.25,\par
            923.75,\par
            924.25,\par
        \}\par
}
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Hong Kong and Singapo Frequency Table }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v ID_CHN_CNT\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:ID_CHN_CNT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const uint CSLibrary.RFIDReader.ID_CHN_CNT = 4{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABFF}
{\bkmkend AAAAAAABFF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Indonesia Frequency Channel number }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v IDA_CHN_CNT\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:IDA_CHN_CNT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const uint CSLibrary.RFIDReader.IDA_CHN_CNT = 3{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABFG}
{\bkmkend AAAAAAABFG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
India Frequency Channel number }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v IDATableOfFreq\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:IDATableOfFreq}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly double [] CSLibrary.RFIDReader.IDATableOfFreq{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABFH}
{\bkmkend AAAAAAABFH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = new double[]\par
        \{\par
            865.70,\par
            866.30,\par
            866.90,\par
        \}\par
}
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
India Frequency Table }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v IDTableOfFreq\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:IDTableOfFreq}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly double [] CSLibrary.RFIDReader.IDTableOfFreq{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABFI}
{\bkmkend AAAAAAABFI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = new double[]\par
        \{\par
            923.25,\par
            923.75,\par
            924.25,\par
            924.75,\par
        \}\par
}
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Indonesia Frequency Table }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v indiaFreqSortedIdx\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:indiaFreqSortedIdx}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly uint [] CSLibrary.RFIDReader.indiaFreqSortedIdx{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABFJ}
{\bkmkend AAAAAAABFJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = new uint[]\{\par
            0,\par
            1,\par
            2,\par
        \}\par
}
}
{\xe \v indiaFreqTable\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:indiaFreqTable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly uint [] CSLibrary.RFIDReader.indiaFreqTable{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABFK}
{\bkmkend AAAAAAABFK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = new uint[]\par
        \{\par
            0x003C21D1, \par
            0x003C21D7, \par
            0x003C21DD, \par
        \}\par
}
}
{\xe \v indonesiaFreqSortedIdx\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:indonesiaFreqSortedIdx}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly uint [] CSLibrary.RFIDReader.indonesiaFreqSortedIdx{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABFL}
{\bkmkend AAAAAAABFL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = new uint[]\{\par
            0,\par
            1,\par
            2,\par
            3\par
        \}\par
}
}
{\xe \v indonesiaFreqTable\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:indonesiaFreqTable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly uint [] CSLibrary.RFIDReader.indonesiaFreqTable{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABFM}
{\bkmkend AAAAAAABFM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = new uint[]\par
        \{\par
            0x00180E6D, \par
            0x00180E6F, \par
            0x00180E71, \par
            0x00180E73, \par
\par
        \}\par
}
}
{\xe \v INVALID_POWER_VALUE\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:INVALID_POWER_VALUE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const uint CSLibrary.RFIDReader.INVALID_POWER_VALUE = uint.MaxValue{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABFN}
{\bkmkend AAAAAAABFN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v INVALID_PROFILE_VALUE\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:INVALID_PROFILE_VALUE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const uint CSLibrary.RFIDReader.INVALID_PROFILE_VALUE = uint.MaxValue{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABFO}
{\bkmkend AAAAAAABFO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v japanBackoffTable\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:japanBackoffTable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt32 [] CSLibrary.RFIDReader.japanBackoffTable{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABFP}
{\bkmkend AAAAAAABFP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = new uint[]\par
        \{\par
            0x00001388, \par
            0x00001388, \par
            0x00001388, \par
            0x00001388, \par
            0x00001388, \par
            0x00001388, \par
            0x00001388, \par
            0x00001388, \par
            0x00001388, \par
            0x00001388, \par
            0x00001388  \par
        \}\par
}
}
{\xe \v JE_CHN_CNT\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:JE_CHN_CNT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const uint CSLibrary.RFIDReader.JE_CHN_CNT = 7{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABFQ}
{\bkmkend AAAAAAABFQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Brazil1 Frequency Channel number }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v jeFreqSortedIdx\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:jeFreqSortedIdx}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly uint [] CSLibrary.RFIDReader.jeFreqSortedIdx{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABFR}
{\bkmkend AAAAAAABFR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = new uint[]\{\par
        0, 4, 1, 5, 2, 6, 3\par
        \}\par
}
}
{\xe \v jeFreqTable\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:jeFreqTable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint [] CSLibrary.RFIDReader.jeFreqTable{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABFS}
{\bkmkend AAAAAAABFS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = new uint[]\par
        \{\par
            0x00180E4D, \par
            0x00180E51, \par
            0x00180E4E, \par
            0x00180E52, \par
            0x00180E4F, \par
            0x00180E53, \par
            0x00180E50, \par
        \}\par
}
}
{\xe \v JETableOfFreq\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:JETableOfFreq}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double [] CSLibrary.RFIDReader.JETableOfFreq{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABFT}
{\bkmkend AAAAAAABFT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = new double[]\par
        \{\par
                915.25, \par
                915.5,  \par
                915.75, \par
                916.0,  \par
                916.25, \par
                916.5,  \par
                916.75, \par
            \}\par
}
}
{\xe \v JPN2012_CHN_CNT\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:JPN2012_CHN_CNT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const uint CSLibrary.RFIDReader.JPN2012_CHN_CNT = 4{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABFU}
{\bkmkend AAAAAAABFU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Japan Frequency Channel number }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v jpn2012FreqSortedIdx\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:jpn2012FreqSortedIdx}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly uint [] CSLibrary.RFIDReader.jpn2012FreqSortedIdx{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABFV}
{\bkmkend AAAAAAABFV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = new uint[]\{\par
            0, 1, 2, 3\par
        \}\par
}
}
{\xe \v jpn2012FreqTable\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:jpn2012FreqTable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly uint [] CSLibrary.RFIDReader.jpn2012FreqTable{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABFW}
{\bkmkend AAAAAAABFW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = new uint[]\par
        \{\par
            0x003C23D0, \par
            0x003C23DC, \par
            0x003C23E8, \par
            0x003C23F4, \par
            \par
            \par
        \}\par
}
}
{\xe \v JPN2012TableOfFreq\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:JPN2012TableOfFreq}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly double [] CSLibrary.RFIDReader.JPN2012TableOfFreq{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABFX}
{\bkmkend AAAAAAABFX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = new double[]\par
        \{\par
            916.80,\par
            918.00,\par
            919.20,\par
            920.40,\par
            \par
            \par
        \}\par
}
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Japan 2012 Frequency Table }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v JPN_CHN_CNT\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:JPN_CHN_CNT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const uint CSLibrary.RFIDReader.JPN_CHN_CNT = 9{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABFY}
{\bkmkend AAAAAAABFY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Japan Frequency Channel number }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v JPN_CHN_CNT28\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:JPN_CHN_CNT28}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const uint CSLibrary.RFIDReader.JPN_CHN_CNT28 = 7{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABFZ}
{\bkmkend AAAAAAABFZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v JPN_CHN_CNT29\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:JPN_CHN_CNT29}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const uint CSLibrary.RFIDReader.JPN_CHN_CNT29 = 8{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABGA}
{\bkmkend AAAAAAABGA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v jpnFreqSortedIdx\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:jpnFreqSortedIdx}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly uint [] CSLibrary.RFIDReader.jpnFreqSortedIdx{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABGB}
{\bkmkend AAAAAAABGB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = new uint[]\{\par
            0, 4, 6, 2, 5, 7, 3, 1, 8\par
        \}\par
}
}
{\xe \v jpnFreqSortedIdx28\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:jpnFreqSortedIdx28}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly uint [] CSLibrary.RFIDReader.jpnFreqSortedIdx28{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABGC}
{\bkmkend AAAAAAABGC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = new uint[]\{\par
            0, 4, 6, 2, 5, 3, 1\par
        \}\par
}
}
{\xe \v jpnFreqSortedIdx29\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:jpnFreqSortedIdx29}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly uint [] CSLibrary.RFIDReader.jpnFreqSortedIdx29{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABGD}
{\bkmkend AAAAAAABGD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = new uint[]\{\par
            0, 4, 6, 2, 5, 7, 3, 1\par
        \}\par
}
}
{\xe \v jpnFreqTable\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:jpnFreqTable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly uint [] CSLibrary.RFIDReader.jpnFreqTable{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABGE}
{\bkmkend AAAAAAABGE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = new uint[]\par
        \{\par
            0x003C2534, \par
            0x003C2542, \par
            0x003C253A, \par
            0x003C2540, \par
            0x003C2536, \par
            0x003C253C, \par
            0x003C2538, \par
            0x003C253E, \par
            0x003C2532, \par
        \}\par
}
}
{\xe \v jpnFreqTable28\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:jpnFreqTable28}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly uint [] CSLibrary.RFIDReader.jpnFreqTable28{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABGF}
{\bkmkend AAAAAAABGF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = new uint[]\par
        \{\par
            0x003C2534, \par
            0x003C253A, \par
            0x003C2540, \par
            0x003C2536, \par
            0x003C253C, \par
            0x003C2538, \par
            0x003C253E, \par
        \}\par
}
}
{\xe \v jpnFreqTable29\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:jpnFreqTable29}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly uint [] CSLibrary.RFIDReader.jpnFreqTable29{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABGG}
{\bkmkend AAAAAAABGG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = new uint[]\par
        \{\par
            0x003C2534, \par
            0x003C2542, \par
            0x003C253A, \par
            0x003C2540, \par
            0x003C2536, \par
            0x003C253C, \par
            0x003C2538, \par
            0x003C253E, \par
        \}\par
}
}
{\xe \v JPNTableOfFreq\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:JPNTableOfFreq}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly double [] CSLibrary.RFIDReader.JPNTableOfFreq{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABGH}
{\bkmkend AAAAAAABGH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = new double[]\par
        \{\par
            952.20,\par
            952.40,\par
            952.60,\par
            952.80,\par
            953.00,\par
            953.20,\par
            953.40,\par
            953.60,\par
            953.80,\par
        \}\par
}
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Japan Frequency Table }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v JPNTableOfFreq28\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:JPNTableOfFreq28}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly double [] CSLibrary.RFIDReader.JPNTableOfFreq28{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABGI}
{\bkmkend AAAAAAABGI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = new double[]\par
        \{\par
            \par
            952.40,\par
            952.60,\par
            952.80,\par
            953.00,\par
            953.20,\par
            953.40,\par
            953.60,\par
            \par
        \}\par
}
}
{\xe \v JPNTableOfFreq29\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:JPNTableOfFreq29}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly double [] CSLibrary.RFIDReader.JPNTableOfFreq29{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABGJ}
{\bkmkend AAAAAAABGJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = new double[]\par
        \{\par
            \par
            952.40,\par
            952.60,\par
            952.80,\par
            953.00,\par
            953.20,\par
            953.40,\par
            953.60,\par
            953.80,\par
        \}\par
}
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Japan Frequency Table }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v KILL_PWD_START_OFFSET\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:KILL_PWD_START_OFFSET}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const ushort CSLibrary.RFIDReader.KILL_PWD_START_OFFSET = 0{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABGK}
{\bkmkend AAAAAAABGK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v KILL_PWD_WORD_LENGTH\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:KILL_PWD_WORD_LENGTH}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const ushort CSLibrary.RFIDReader.KILL_PWD_WORD_LENGTH = 2{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABGL}
{\bkmkend AAAAAAABGL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v KR_CHN_CNT\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:KR_CHN_CNT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const uint CSLibrary.RFIDReader.KR_CHN_CNT = 19{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABGM}
{\bkmkend AAAAAAABGM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Korea Frequency Channel number }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v krFreqSortedIdx\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:krFreqSortedIdx}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly uint [] CSLibrary.RFIDReader.krFreqSortedIdx{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABGN}
{\bkmkend AAAAAAABGN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = new uint[]\{\par
            13, 9, 15, 8, 11,\par
            18, 2, 17, 1, 7,\par
            4, 10, 0, 12, 5,\par
            3, 16, 6, 14\par
        \}\par
}
}
{\xe \v krFreqTable\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:krFreqTable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint [] CSLibrary.RFIDReader.krFreqTable{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABGO}
{\bkmkend AAAAAAABGO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = new uint[]\par
        \{\par
            0x003C23A8, \par
            0x003C23A0, \par
            0x003C23AC, \par
            0x003C239E, \par
            0x003C23A4, \par
            0x003C23B2, \par
            0x003C2392, \par
            0x003C23B0, \par
            0x003C2390, \par
            0x003C239C, \par
            0x003C2396, \par
            0x003C23A2, \par
            0x003C238E, \par
            0x003C23A6, \par
            0x003C2398, \par
            0x003C2394, \par
            0x003C23AE, \par
            0x003C239A, \par
            0x003C23AA, \par
        \}\par
}
}
{\xe \v KRTableOfFreq\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:KRTableOfFreq}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double [] CSLibrary.RFIDReader.KRTableOfFreq{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABGP}
{\bkmkend AAAAAAABGP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = new double[]\par
        \{\par
            910.20,\par
            910.40,\par
            910.60,\par
            910.80,\par
            911.00,\par
            911.20,\par
            911.40,\par
            911.60,\par
            911.80,\par
            912.00,\par
            912.20,\par
            912.40,\par
            912.60,\par
            912.80,\par
            913.00,\par
            913.20,\par
            913.40,\par
            913.60,\par
            913.80,\par
        \}\par
}
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Korea Frequency Table }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v LastMacErrorCode\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:LastMacErrorCode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt32 CSLibrary.RFIDReader.LastMacErrorCode}}
\par
{\bkmkstart AAAAAAABGQ}
{\bkmkend AAAAAAABGQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v LH1_CHN_CNT\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:LH1_CHN_CNT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const uint CSLibrary.RFIDReader.LH1_CHN_CNT = 14{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABGR}
{\bkmkend AAAAAAABGR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Brazil1 Frequency Channel number }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v lh1FreqSortedIdx\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:lh1FreqSortedIdx}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly uint [] CSLibrary.RFIDReader.lh1FreqSortedIdx{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABGS}
{\bkmkend AAAAAAABGS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = new uint[]\{\par
        0, 13, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12 \par
        \}\par
}
}
{\xe \v lh1FreqTable\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:lh1FreqTable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint [] CSLibrary.RFIDReader.lh1FreqTable{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABGT}
{\bkmkend AAAAAAABGT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = new uint[]\par
        \{\par
            0x00180E1B, \par
            0x00180E35, \par
            0x00180E1D, \par
            0x00180E1F, \par
            0x00180E21, \par
            0x00180E23, \par
            0x00180E25, \par
            0x00180E27, \par
            0x00180E29, \par
            0x00180E2B, \par
            0x00180E2D, \par
            0x00180E2F, \par
            0x00180E31, \par
            0x00180E33, \par
        \}\par
}
}
{\xe \v LH1TableOfFreq\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:LH1TableOfFreq}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double [] CSLibrary.RFIDReader.LH1TableOfFreq{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABGU}
{\bkmkend AAAAAAABGU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = new double[]\par
            \{\par
                902.75, \par
                903.25, \par
                903.75, \par
                904.25, \par
                904.75, \par
                905.25, \par
                905.75, \par
                906.25, \par
                906.75, \par
                907.25, \par
                907.75, \par
                908.25, \par
                908.75, \par
                909.25, \par
            \}\par
}
}
{\xe \v LH2_CHN_CNT\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:LH2_CHN_CNT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const uint CSLibrary.RFIDReader.LH2_CHN_CNT = 11{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABGV}
{\bkmkend AAAAAAABGV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Brazil1 Frequency Channel number }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v lh2FreqSortedIdx\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:lh2FreqSortedIdx}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly uint [] CSLibrary.RFIDReader.lh2FreqSortedIdx{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABGW}
{\bkmkend AAAAAAABGW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = new uint[]\{\par
        0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10\par
        \}\par
}
}
{\xe \v lh2FreqTable\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:lh2FreqTable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint [] CSLibrary.RFIDReader.lh2FreqTable{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABGX}
{\bkmkend AAAAAAABGX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = new uint[]\par
        \{\par
            0x00180E37, \par
            0x00180E39, \par
            0x00180E3B, \par
            0x00180E3D, \par
            0x00180E3F, \par
            0x00180E41, \par
            0x00180E43, \par
            0x00180E45, \par
            0x00180E47, \par
            0x00180E49, \par
            0x00180E4B, \par
        \}\par
}
}
{\xe \v LH2TableOfFreq\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:LH2TableOfFreq}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double [] CSLibrary.RFIDReader.LH2TableOfFreq{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABGY}
{\bkmkend AAAAAAABGY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = new double[]\par
            \{\par
                909.75, \par
                910.25, \par
                910.75, \par
                911.25, \par
                911.75, \par
                912.25, \par
                912.75, \par
                913.25, \par
                913.75, \par
                914.25, \par
                914.75, \par
            \}\par
}
}
{\xe \v LH_CHN_CNT\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:LH_CHN_CNT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const uint CSLibrary.RFIDReader.LH_CHN_CNT = 26{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABGZ}
{\bkmkend AAAAAAABGZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Brazil1 Frequency Channel number }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v lhFreqSortedIdx\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:lhFreqSortedIdx}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly uint [] CSLibrary.RFIDReader.lhFreqSortedIdx{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABHA}
{\bkmkend AAAAAAABHA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = new uint[]\{\par
        0, 13, 1, 14, 2, 15, 3, 16, 4, 17, 5, 18, 6, 19, 7, 20, 8, 21, 9, 22, 10, 23, 11, 24, 12, 25 \par
            \par
        \}\par
}
}
{\xe \v lhFreqTable\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:lhFreqTable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint [] CSLibrary.RFIDReader.lhFreqTable{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABHB}
{\bkmkend AAAAAAABHB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v LHTableOfFreq\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:LHTableOfFreq}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double [] CSLibrary.RFIDReader.LHTableOfFreq{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABHC}
{\bkmkend AAAAAAABHC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v m_oem_freq_modification_flag\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:m_oem_freq_modification_flag}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int CSLibrary.RFIDReader.m_oem_freq_modification_flag{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABHD}
{\bkmkend AAAAAAABHD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v m_oem_machine\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:m_oem_machine}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Machine} CSLibrary.RFIDReader.m_oem_machine = Machine.UNKNOWN{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABHE}
{\bkmkend AAAAAAABHE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v m_oem_special_country_version\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:m_oem_special_country_version}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint CSLibrary.RFIDReader.m_oem_special_country_version{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABHF}
{\bkmkend AAAAAAABHF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v m_oem_table_version\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:m_oem_table_version}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint CSLibrary.RFIDReader.m_oem_table_version{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABHG}
{\bkmkend AAAAAAABHG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v m_rdr_opt_parms\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:m_rdr_opt_parms}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b CSLibraryOperationParms} CSLibrary.RFIDReader.m_rdr_opt_parms = new {\b CSLibraryOperationParms}(){\f2 [private]}}}
\par
{\bkmkstart AAAAAAABHH}
{\bkmkend AAAAAAABHH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v m_Result\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:m_Result}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Result} CSLibrary.RFIDReader.m_Result{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABHI}
{\bkmkend AAAAAAABHI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v m_save_agile_channel\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:m_save_agile_channel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool CSLibrary.RFIDReader.m_save_agile_channel = false{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABHJ}
{\bkmkend AAAAAAABHJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v m_save_country_code\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:m_save_country_code}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint CSLibrary.RFIDReader.m_save_country_code = 0{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABHK}
{\bkmkend AAAAAAABHK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v m_save_country_list\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:m_save_country_list}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
List< {\b RegionCode} > CSLibrary.RFIDReader.m_save_country_list = new List<{\b RegionCode}>(){\f2 [private]}}}
\par
{\bkmkstart AAAAAAABHL}
{\bkmkend AAAAAAABHL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v m_save_fixed_channel\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:m_save_fixed_channel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool CSLibrary.RFIDReader.m_save_fixed_channel = false{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABHM}
{\bkmkend AAAAAAABHM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v m_save_freq_channel\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:m_save_freq_channel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint CSLibrary.RFIDReader.m_save_freq_channel = 0{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABHN}
{\bkmkend AAAAAAABHN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v m_save_region_code\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:m_save_region_code}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RegionCode} CSLibrary.RFIDReader.m_save_region_code = RegionCode.UNKNOWN{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABHO}
{\bkmkend AAAAAAABHO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v m_state\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:m_state}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RFState} CSLibrary.RFIDReader.m_state = RFState.IDLE{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABHP}
{\bkmkend AAAAAAABHP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v MAX_WR_CNT\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAX_WR_CNT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int CSLibrary.RFIDReader.MAX_WR_CNT = 0x8{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABHQ}
{\bkmkend AAAAAAABHQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v MAXFRECHANNEL\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MAXFRECHANNEL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const uint CSLibrary.RFIDReader.MAXFRECHANNEL = 50{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABHR}
{\bkmkend AAAAAAABHR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v MS_FIELD_INDEX\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MS_FIELD_INDEX}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int CSLibrary.RFIDReader.MS_FIELD_INDEX = 8{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABHS}
{\bkmkend AAAAAAABHS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v MYS_CHN_CNT\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MYS_CHN_CNT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const uint CSLibrary.RFIDReader.MYS_CHN_CNT = 8{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABHT}
{\bkmkend AAAAAAABHT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Malaysia Frequency Channel number }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v mysFreqSortedIdx\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:mysFreqSortedIdx}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly uint [] CSLibrary.RFIDReader.mysFreqSortedIdx{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABHU}
{\bkmkend AAAAAAABHU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = new uint[]\{\par
                                                    0, 3, 6, 1,\par
                                                    4, 7, 2, 5,\par
                                                    \}\par
}
}
{\xe \v mysFreqTable\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:mysFreqTable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint [] CSLibrary.RFIDReader.mysFreqTable{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABHV}
{\bkmkend AAAAAAABHV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = new uint[]\par
        \{\par
            0x00180E5F, \par
            0x00180E65, \par
            0x00180E6B, \par
            0x00180E61, \par
            0x00180E67, \par
            0x00180E6D, \par
            0x00180E63, \par
            0x00180E69, \par
        \}\par
}
}
{\xe \v MYSTableOfFreq\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:MYSTableOfFreq}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double [] CSLibrary.RFIDReader.MYSTableOfFreq{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABHW}
{\bkmkend AAAAAAABHW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = new double[]\par
        \{\par
            919.75,\par
            920.25,\par
            920.75,\par
            921.25,\par
            921.75,\par
            922.25,\par
            922.75,\par
            923.25,\par
        \}\par
}
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Malaysia Frequency Table }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v NZ_CHN_CNT\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:NZ_CHN_CNT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const uint CSLibrary.RFIDReader.NZ_CHN_CNT = 11{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABHX}
{\bkmkend AAAAAAABHX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Brazil1 Frequency Channel number }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v nzFreqSortedIdx\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:nzFreqSortedIdx}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly uint [] CSLibrary.RFIDReader.nzFreqSortedIdx{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABHY}
{\bkmkend AAAAAAABHY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = new uint[]\{\par
            4, 7, 0, 9, 2, 10, 6, 1, 8, 3, 5\par
        \}\par
}
}
{\xe \v nzFreqTable\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:nzFreqTable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint [] CSLibrary.RFIDReader.nzFreqTable{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABHZ}
{\bkmkend AAAAAAABHZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = new uint[]\par
        \{\par
            0x00180E71, \par
            0x00180E77, \par
            0x00180E69, \par
            0x00180E7B, \par
            0x00180E6D, \par
            0x00180E7D, \par
            0x00180E75, \par
            0x00180E6B, \par
            0x00180E79, \par
            0x00180E6F, \par
            0x00180E73, \par
        \}\par
}
}
{\xe \v NZTableOfFreq\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:NZTableOfFreq}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double [] CSLibrary.RFIDReader.NZTableOfFreq{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABIA}
{\bkmkend AAAAAAABIA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = new double[]\par
        \{\par
            922.25,\par
            922.75,\par
            923.25,\par
            923.75,\par
            924.25,\par
            924.75,\par
            925.25,\par
            925.75,\par
            926.25,\par
            926.75,\par
            927.25,\par
        \}\par
}
}
{\xe \v oemAddress\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:oemAddress}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly UInt32 [] CSLibrary.RFIDReader.oemAddress = new UInt32[] \{ 0x02, 0x0B, 0x8E, 0x8F, 0x9D, 0xA3, 0xA4, 0xA5 \}{\f2 [static]}, {\f2 [private]}}}
\par
{\bkmkstart AAAAAAABIB}
{\bkmkend AAAAAAABIB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v oemValue\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:oemValue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt32 [] CSLibrary.RFIDReader.oemValue = new UInt32[oemAddress.Length]{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABIC}
{\bkmkend AAAAAAABIC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ONE_WORD_LEN\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:ONE_WORD_LEN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const ushort CSLibrary.RFIDReader.ONE_WORD_LEN = 1{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABID}
{\bkmkend AAAAAAABID}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v PC_START_OFFSET\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:PC_START_OFFSET}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const ushort CSLibrary.RFIDReader.PC_START_OFFSET = 1{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABIE}
{\bkmkend AAAAAAABIE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v PC_WORD_LENGTH\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:PC_WORD_LENGTH}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const ushort CSLibrary.RFIDReader.PC_WORD_LENGTH = 1{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABIF}
{\bkmkend AAAAAAABIF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v PH_CHN_CNT\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:PH_CHN_CNT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const uint CSLibrary.RFIDReader.PH_CHN_CNT = 8{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABIG}
{\bkmkend AAAAAAABIG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Brazil1 Frequency Channel number }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v phFreqSortedIdx\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:phFreqSortedIdx}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly uint [] CSLibrary.RFIDReader.phFreqSortedIdx{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABIH}
{\bkmkend AAAAAAABIH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = new uint[]\{\par
            0, 5, 3, 7, 1, 6, 2, 4\par
        \}\par
}
}
{\xe \v phFreqTable\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:phFreqTable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint [] CSLibrary.RFIDReader.phFreqTable{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABII}
{\bkmkend AAAAAAABII}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = new uint[]\par
        \{\par
            0x00301CB1, \par
            0x00301CBB, \par
            0x00301CB7, \par
            0x00301CBF, \par
            0x00301CB3, \par
            0x00301CBD, \par
            0x00301CB5, \par
            0x00301CB9, \par
        \}\par
}
}
{\xe \v PHTableOfFreq\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:PHTableOfFreq}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double [] CSLibrary.RFIDReader.PHTableOfFreq{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABIJ}
{\bkmkend AAAAAAABIJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = new double[]\par
            \{\par
                918.125, \par
                918.375, \par
                918.625, \par
                918.875, \par
                919.125, \par
                919.375, \par
                919.625, \par
                919.875, \par
            \}\par
}
}
{\xe \v RFID_PACKET_COMMON_SIZE\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:RFID_PACKET_COMMON_SIZE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int CSLibrary.RFIDReader.RFID_PACKET_COMMON_SIZE = 8{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABIK}
{\bkmkend AAAAAAABIK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v RSSI_FIELD_INDEX\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:RSSI_FIELD_INDEX}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int CSLibrary.RFIDReader.RSSI_FIELD_INDEX = 12{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABIL}
{\bkmkend AAAAAAABIL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v TW_CHN_CNT\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:TW_CHN_CNT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const uint CSLibrary.RFIDReader.TW_CHN_CNT = 12{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABIM}
{\bkmkend AAAAAAABIM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Taiwan Frequency Channel number }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v twFreqSortedIdx\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:twFreqSortedIdx}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly uint [] CSLibrary.RFIDReader.twFreqSortedIdx{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABIN}
{\bkmkend AAAAAAABIN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = new uint[]\{\par
            10, 5, 1, 6,\par
            11, 4, 8, 2,\par
            9, 0, 7, 3,\par
        \}\par
}
}
{\xe \v twFreqTable\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:twFreqTable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint [] CSLibrary.RFIDReader.twFreqTable{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABIO}
{\bkmkend AAAAAAABIO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = new uint[]\par
        \{\par
            0x00180E7D, \par
            0x00180E73, \par
            0x00180E6B, \par
            0x00180E75, \par
            0x00180E7F, \par
            0x00180E71, \par
            0x00180E79, \par
            0x00180E6D, \par
            0x00180E7B, \par
            0x00180E69, \par
            0x00180E77, \par
            0x00180E6F, \par
        \}\par
}
}
{\xe \v TWO_WORD_LEN\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:TWO_WORD_LEN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const ushort CSLibrary.RFIDReader.TWO_WORD_LEN = 2{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABIP}
{\bkmkend AAAAAAABIP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v TWTableOfFreq\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:TWTableOfFreq}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double [] CSLibrary.RFIDReader.TWTableOfFreq{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABIQ}
{\bkmkend AAAAAAABIQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = new double[]\par
        \{\par
            922.25,\par
            922.75,\par
            923.25,\par
            923.75,\par
            924.25,\par
            924.75,\par
            925.25,\par
            925.75,\par
            926.25,\par
            926.75,\par
            927.25,\par
            927.75,\par
        \}\par
}
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Taiwan Frequency Table }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v UH1_CHN_CNT\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:UH1_CHN_CNT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const uint CSLibrary.RFIDReader.UH1_CHN_CNT = 10{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABIR}
{\bkmkend AAAAAAABIR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
FCC UH Frequency Channel number }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v uh1FreqSortedIdx\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:uh1FreqSortedIdx}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly uint [] CSLibrary.RFIDReader.uh1FreqSortedIdx{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABIS}
{\bkmkend AAAAAAABIS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = new uint[]\{\par
            1, 0, 8, 7, 5, 4, 6, 2, 9, 3\par
        \}\par
}
}
{\xe \v uh1FreqTable\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:uh1FreqTable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint [] CSLibrary.RFIDReader.uh1FreqTable{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABIT}
{\bkmkend AAAAAAABIT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = new uint[]\par
        \{\par
            0x00180E4F, \par
            0x00180E4D, \par
            0x00180E5D, \par
            0x00180E5B, \par
            0x00180E57, \par
            0x00180E55, \par
            0x00180E59, \par
            0x00180E51, \par
            0x00180E5F, \par
            0x00180E53, \par
        \}\par
}
}
{\xe \v UH1TableOfFreq\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:UH1TableOfFreq}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly double [] CSLibrary.RFIDReader.UH1TableOfFreq{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABIU}
{\bkmkend AAAAAAABIU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = new double[]\par
            \{\par
                915.25,     \par
                915.75,     \par
                916.25,     \par
                916.75,     \par
                917.25,     \par
                917.75,     \par
                918.25,     \par
                918.75,     \par
                919.25,     \par
                919.75,     \par
            \}\par
}
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
FCC UH Frequency Table 915-920 }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v UH2_CHN_CNT\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:UH2_CHN_CNT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const uint CSLibrary.RFIDReader.UH2_CHN_CNT = 15{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABIV}
{\bkmkend AAAAAAABIV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
FCC UH Frequency Channel number }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v uh2FreqSortedIdx\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:uh2FreqSortedIdx}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly uint [] CSLibrary.RFIDReader.uh2FreqSortedIdx{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABIW}
{\bkmkend AAAAAAABIW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = new uint[]\{\par
            13, 12, 14, 0, 10, 3, 4, 9, 7, 11, 8, 2, 1, 5, 6,\par
        \}\par
}
}
{\xe \v uh2FreqTable\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:uh2FreqTable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint [] CSLibrary.RFIDReader.uh2FreqTable{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABIX}
{\bkmkend AAAAAAABIX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = new uint[]\par
        \{\par
            0x00180E7B, \par
            0x00180E79, \par
            0x00180E7D, \par
            0x00180E61, \par
            0x00180E75, \par
            0x00180E67, \par
            0x00180E69, \par
            0x00180E73, \par
            0x00180E6F, \par
            0x00180E77, \par
            0x00180E71, \par
            0x00180E65, \par
            0x00180E63, \par
            0x00180E6B, \par
            0x00180E6D, \par
        \}\par
}
}
{\xe \v UH2TableOfFreq\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:UH2TableOfFreq}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly double [] CSLibrary.RFIDReader.UH2TableOfFreq{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABIY}
{\bkmkend AAAAAAABIY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = new double[]\par
            \{\par
                920.25,   \par
                920.75,   \par
                921.25,   \par
                921.75,   \par
                922.25,   \par
                922.75,   \par
                923.25,   \par
                923.75,   \par
                924.25,   \par
                924.75,   \par
                925.25,   \par
                925.75,   \par
                926.25,   \par
                926.75,   \par
                927.25,   \par
            \}\par
}
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
FCC UH Frequency Table 920-928 }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v USER_WORD_LENGTH\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:USER_WORD_LENGTH}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const ushort CSLibrary.RFIDReader.USER_WORD_LENGTH = 1{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABIZ}
{\bkmkend AAAAAAABIZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v VE_CHN_CNT\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:VE_CHN_CNT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const uint CSLibrary.RFIDReader.VE_CHN_CNT = 10{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABJA}
{\bkmkend AAAAAAABJA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
FCC Frequency Channel number }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v veFreqSortedIdx\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:veFreqSortedIdx}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly uint [] CSLibrary.RFIDReader.veFreqSortedIdx{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABJB}
{\bkmkend AAAAAAABJB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = new uint[]\{\par
            6, 0, 9, 5, 1,\par
            8, 4, 2, 7, 3\par
        \}\par
}
}
{\xe \v veFreqTable\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:veFreqTable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint [] CSLibrary.RFIDReader.veFreqTable{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABJC}
{\bkmkend AAAAAAABJC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = new uint[]\par
        \{\par
            0x00180E77, \par
            0x00180E6B, \par
            0x00180E7D, \par
            0x00180E75, \par
            0x00180E6D, \par
            0x00180E7B, \par
            0x00180E73, \par
            0x00180E6F, \par
            0x00180E79, \par
            0x00180E71, \par
\}\par
}
}
{\xe \v VETableOfFreq\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:VETableOfFreq}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly double [] CSLibrary.RFIDReader.VETableOfFreq{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABJD}
{\bkmkend AAAAAAABJD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = new double[]\par
        \{\par
            922.75,\par
            923.25,\par
            923.75,\par
            924.25,\par
            924.75,\par
            925.25,\par
            925.75,\par
            926.25,\par
            926.75,\par
            927.25,\par
        \}\par
}
}
{\xe \v ZA_CHN_CNT\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:ZA_CHN_CNT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const uint CSLibrary.RFIDReader.ZA_CHN_CNT = 16{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABJE}
{\bkmkend AAAAAAABJE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
FCC Frequency Channel number }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v zaFreqSortedIdx\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:zaFreqSortedIdx}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly uint [] CSLibrary.RFIDReader.zaFreqSortedIdx{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABJF}
{\bkmkend AAAAAAABJF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = new uint[]\{\par
            0,1,2,3,\par
            4,5,6,7,\par
            8,9,10,11,\par
            12,13,14,15\par
        \}\par
}
}
{\xe \v zaFreqTable\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:zaFreqTable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint [] CSLibrary.RFIDReader.zaFreqTable{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABJG}
{\bkmkend AAAAAAABJG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = new uint[]\par
        \{\par
            0x003C23C5,  \par
            0x003C23C7, \par
            0x003C23C9, \par
            0x003C23CB, \par
            0x003C23CD, \par
            0x003C23CF, \par
            0x003C23D1, \par
            0x003C23D3, \par
            0x003C23D5, \par
            0x003C23D7, \par
            0x003C23D9, \par
            0x003C23DB, \par
            0x003C23DD, \par
            0x003C23DF, \par
            0x003C23E1, \par
            0x003C23E3, \par
        \}\par
}
}
{\xe \v ZATableOfFreq\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:ZATableOfFreq}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly double [] CSLibrary.RFIDReader.ZATableOfFreq{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABJH}
{\bkmkend AAAAAAABJH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = new double[]\par
            \{\par
                915.7,\par
                915.9,\par
                916.1,\par
                916.3,\par
                916.5,\par
                916.7,\par
                916.9,\par
                917.1,\par
                917.3,\par
                917.5,\par
                917.7,\par
                917.9,\par
                918.1,\par
                918.3,\par
                918.5,\par
                918.7,\par
            \}\par
}
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
South Africa Frequency Table }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Property Documentation\par
\pard\plain 
{\xe \v GetOEMCountryCode\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:GetOEMCountryCode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint CSLibrary.RFIDReader.GetOEMCountryCode{\f2 [get]}, {\f2 [private]}}}
\par
{\bkmkstart AAAAAAABJI}
{\bkmkend AAAAAAABJI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v IsFixedChannel\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:IsFixedChannel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool CSLibrary.RFIDReader.IsFixedChannel{\f2 [get]}}}
\par
{\bkmkstart AAAAAAABJJ}
{\bkmkend AAAAAAABJJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get Fixed frequency channel }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v IsFixedChannelOnly\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:IsFixedChannelOnly}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool CSLibrary.RFIDReader.IsFixedChannelOnly{\f2 [get]}}}
\par
{\bkmkstart AAAAAAABJK}
{\bkmkend AAAAAAABJK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
If true, it can only set to fixed channel. Otherwise, both fixed and hopping can be set. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v IsHoppingChannelOnly\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:IsHoppingChannelOnly}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool CSLibrary.RFIDReader.IsHoppingChannelOnly{\f2 [get]}}}
\par
{\bkmkstart AAAAAAABJL}
{\bkmkend AAAAAAABJL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
If true, it can only set to hopping channel. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v OEMChipSetID\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:OEMChipSetID}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b ChipSetID} CSLibrary.RFIDReader.OEMChipSetID{\f2 [get]}}}
\par
{\bkmkstart AAAAAAABJM}
{\bkmkend AAAAAAABJM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Options\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:Options}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b CSLibraryOperationParms} CSLibrary.RFIDReader.Options{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAABJN}
{\bkmkend AAAAAAABJN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b CSLibrary} Operation parameters Notes : you must config this parameters before perform any operation }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v SelectedChannel\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:SelectedChannel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint CSLibrary.RFIDReader.SelectedChannel{\f2 [get]}}}
\par
{\bkmkstart AAAAAAABJO}
{\bkmkend AAAAAAABJO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get Current Selected Frequency Channel }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v SelectedRegionCode\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:SelectedRegionCode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RegionCode} CSLibrary.RFIDReader.SelectedRegionCode{\f2 [get]}}}
\par
{\bkmkstart AAAAAAABJP}
{\bkmkend AAAAAAABJP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get Region Profile }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v State\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:State}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RFState} CSLibrary.RFIDReader.State{\f2 [get]}, {\f2 [private set]}}}
\par
{\bkmkstart AAAAAAABJQ}
{\bkmkend AAAAAAABJQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Current Operation State }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Event Documentation\par
\pard\plain 
{\xe \v OnAccessCompleted\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:OnAccessCompleted}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
EventHandler< {\b CSLibrary.Events.OnAccessCompletedEventArgs} > CSLibrary.RFIDReader.OnAccessCompleted}}
\par
{\bkmkstart AAAAAAABJR}
{\bkmkend AAAAAAABJR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tag Access (including Tag read/write/kill/lock) completed event }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v OnAsyncCallback\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:OnAsyncCallback}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
EventHandler< {\b CSLibrary.Events.OnAsyncCallbackEventArgs} > CSLibrary.RFIDReader.OnAsyncCallback}}
\par
{\bkmkstart AAAAAAABJS}
{\bkmkend AAAAAAABJS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tag Inventory(including Inventory and search) callback event }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v OnStateChanged\:CSLibrary::RFIDReader}
{\xe \v CSLibrary::RFIDReader\:OnStateChanged}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
EventHandler< {\b CSLibrary.Events.OnStateChangedEventArgs} > CSLibrary.RFIDReader.OnStateChanged}}
\par
{\bkmkstart AAAAAAABJT}
{\bkmkend AAAAAAABJT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reader Operation State Event }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
CSLibrary/RFIDReader/backup/{\b ClassRFID.cs}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
CSLibrary/RFIDReader/backup/{\b CSLibrary.HighLevelInterface.Private.cs}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
CSLibrary/RFIDReader/{\b ClassRFID.Private.Country.cs}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
CSLibrary/RFIDReader/{\b ClassRFID.Private.Country1.cs}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
CSLibrary/RFIDReader/{\b ClassRFID.Private.cs}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
CSLibrary/RFIDReader/{\b ClassRFID.Private.FrequencyChannel.cs}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
CSLibrary/RFIDReader/{\b ClassRFID.Private.FrequencyChannel1.cs}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
CSLibrary/RFIDReader/{\b ClassRFID.Private.Inventory.cs}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
CSLibrary/RFIDReader/{\b ClassRFID.Private.OEM.cs}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
CSLibrary/RFIDReader/{\b ClassRFID.Private.Select.cs}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
CSLibrary/RFIDReader/{\b ClassRFID.Private.Write.cs}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
CSLibrary/RFIDReader/{\b ClassRFID.Public.Country.cs}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
CSLibrary/RFIDReader/{\b ClassRFID.Public.FrequencyChannel.cs}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
CSLibrary/RFIDReader/{\b ClassRFID.Public.Operation.cs}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
CSLibrary/RFIDReader/{\b ClassRFID.Private.Read.cs}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
CSLibrary/RFIDReader/{\b ClassRFID.Public.Algorithm.cs}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
CSLibrary/RFIDReader/{\b ClassRFID.Public.Power.cs}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
CSLibrary/RFIDReader/{\b ClassRFID.Public.Profile.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary.Structures.S_DATA Class Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary.Structures.S_DATA}
{\xe \v CSLibrary.Structures.S_DATA}
{\bkmkstart AAAAAAADWU}
{\bkmkend AAAAAAADWU}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Custom Data Structure }}\par
Inheritance diagram for CSLibrary.Structures.S_DATA:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_c_s_library_1_1_structures_1_1_s___d_a_t_a.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b S_DATA} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b S_DATA} (string src)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Custom constructor }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b S_DATA} (byte[] src)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Custom constructor }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b S_DATA} (ushort[] src)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Custom constructor }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
short [] {\b ToShorts} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert to short array }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ushort [] {\b ToUshorts} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert to ushort array }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte [] {\b ToBytes} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert to byte array }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override string {\b ToString} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert to HexString }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Int32 {\b GetLength} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get Byte Data Length. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Int32 {\b CompareTo} (object item)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compare Data if equal return 0 }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static implicit {\b operator UInt16[]} ({\b S_DATA} p)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static implicit {\b operator S_DATA} (UInt16 [] p)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b Compare} (byte[] b1, byte[] b2)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte [] {\b m_data}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Custom Data Structure \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v S_DATA\:CSLibrary::Structures::S_DATA}
{\xe \v CSLibrary::Structures::S_DATA\:S_DATA}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CSLibrary.Structures.S_DATA.S_DATA ()}}
\par
{\bkmkstart AAAAAAADWV}
{\bkmkend AAAAAAADWV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v S_DATA\:CSLibrary::Structures::S_DATA}
{\xe \v CSLibrary::Structures::S_DATA\:S_DATA}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CSLibrary.Structures.S_DATA.S_DATA (string  {\i src})}}
\par
{\bkmkstart AAAAAAADWW}
{\bkmkend AAAAAAADWW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Custom constructor }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i src} \cell }{data in string format\cell }
{\row }
}
}}
{\xe \v S_DATA\:CSLibrary::Structures::S_DATA}
{\xe \v CSLibrary::Structures::S_DATA\:S_DATA}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CSLibrary.Structures.S_DATA.S_DATA (byte []  {\i src})}}
\par
{\bkmkstart AAAAAAADWX}
{\bkmkend AAAAAAADWX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Custom constructor }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i src} \cell }{data in byte array format\cell }
{\row }
}
}}
{\xe \v S_DATA\:CSLibrary::Structures::S_DATA}
{\xe \v CSLibrary::Structures::S_DATA\:S_DATA}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CSLibrary.Structures.S_DATA.S_DATA (ushort []  {\i src})}}
\par
{\bkmkstart AAAAAAADWY}
{\bkmkend AAAAAAADWY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Custom constructor }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i src} \cell }{data in ushort array format\cell }
{\row }
}
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Compare\:CSLibrary::Structures::S_DATA}
{\xe \v CSLibrary::Structures::S_DATA\:Compare}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int CSLibrary.Structures.S_DATA.Compare (byte []  {\i b1}, byte []  {\i b2}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAADWZ}
{\bkmkend AAAAAAADWZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v CompareTo\:CSLibrary::Structures::S_DATA}
{\xe \v CSLibrary::Structures::S_DATA\:CompareTo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Int32 CSLibrary.Structures.S_DATA.CompareTo (object  {\i item})}}
\par
{\bkmkstart AAAAAAADXA}
{\bkmkend AAAAAAADXA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compare Data if equal return 0 }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i item} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v GetLength\:CSLibrary::Structures::S_DATA}
{\xe \v CSLibrary::Structures::S_DATA\:GetLength}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Int32 CSLibrary.Structures.S_DATA.GetLength ()}}
\par
{\bkmkstart AAAAAAADOC}
{\bkmkend AAAAAAADOC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get Byte Data Length. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}{
Implements {\b CSLibrary.Structures.IBANK} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADOA \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v operator S_DATA\:CSLibrary::Structures::S_DATA}
{\xe \v CSLibrary::Structures::S_DATA\:operator S_DATA}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static implicit CSLibrary.Structures.S_DATA.operator {\b S_DATA} (UInt16 []  {\i p}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADXB}
{\bkmkend AAAAAAADXB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v operator UInt16[]\:CSLibrary::Structures::S_DATA}
{\xe \v CSLibrary::Structures::S_DATA\:operator UInt16[]}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static implicit CSLibrary.Structures.S_DATA.operator UInt16[] ({\b S_DATA}  {\i p}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADXC}
{\bkmkend AAAAAAADXC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ToBytes\:CSLibrary::Structures::S_DATA}
{\xe \v CSLibrary::Structures::S_DATA\:ToBytes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte [] CSLibrary.Structures.S_DATA.ToBytes ()}}
\par
{\bkmkstart AAAAAAADOL}
{\bkmkend AAAAAAADOL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert to byte array }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}{
Implements {\b CSLibrary.Structures.IBANK} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADOJ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v ToShorts\:CSLibrary::Structures::S_DATA}
{\xe \v CSLibrary::Structures::S_DATA\:ToShorts}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
short [] CSLibrary.Structures.S_DATA.ToShorts ()}}
\par
{\bkmkstart AAAAAAADOU}
{\bkmkend AAAAAAADOU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert to short array }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}{
Implements {\b CSLibrary.Structures.IBANK} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADOS \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v ToString\:CSLibrary::Structures::S_DATA}
{\xe \v CSLibrary::Structures::S_DATA\:ToString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override string CSLibrary.Structures.S_DATA.ToString ()}}
\par
{\bkmkstart AAAAAAADPD}
{\bkmkend AAAAAAADPD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert to HexString }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}{
Implements {\b CSLibrary.Structures.IBANK} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADPB \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v ToUshorts\:CSLibrary::Structures::S_DATA}
{\xe \v CSLibrary::Structures::S_DATA\:ToUshorts}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ushort [] CSLibrary.Structures.S_DATA.ToUshorts ()}}
\par
{\bkmkstart AAAAAAADPM}
{\bkmkend AAAAAAADPM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert to ushort array }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}{
Implements {\b CSLibrary.Structures.IBANK} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADPK \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v m_data\:CSLibrary::Structures::S_DATA}
{\xe \v CSLibrary::Structures::S_DATA\:m_data}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte [] CSLibrary.Structures.S_DATA.m_data{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADXD}
{\bkmkend AAAAAAADXD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
CSLibrary/RFIDReader/Structures/{\b CSLibrary.Structures.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary.Structures.S_EPC Class Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary.Structures.S_EPC}
{\xe \v CSLibrary.Structures.S_EPC}
{\bkmkstart AAAAAAADXE}
{\bkmkend AAAAAAADXE}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Electronic Product Code }}\par
Inheritance diagram for CSLibrary.Structures.S_EPC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_c_s_library_1_1_structures_1_1_s___e_p_c.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b S_EPC} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b S_EPC} (string epc)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Custom constructor }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b S_EPC} (ushort[] epc)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Custom constructor }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b S_EPC} (ushort[] epc, int count)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Custom constructor }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b S_EPC} (Byte[] epc)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Custom constructor }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
short [] {\b ToShorts} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert to short array }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ushort [] {\b ToUshorts} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert to ushort array }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte [] {\b ToBytes} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert to byte array }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override string {\b ToString} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert to HexString }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Int32 {\b GetLength} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get Data Length, Data in word format }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Int32 {\b CompareTo} (object item)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compare Data if equal return 0 }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b Compare} (ushort[] b1, ushort[] b2)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ushort [] {\b m_data}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Electronic Product Code \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v S_EPC\:CSLibrary::Structures::S_EPC}
{\xe \v CSLibrary::Structures::S_EPC\:S_EPC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CSLibrary.Structures.S_EPC.S_EPC ()}}
\par
{\bkmkstart AAAAAAADXF}
{\bkmkend AAAAAAADXF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v S_EPC\:CSLibrary::Structures::S_EPC}
{\xe \v CSLibrary::Structures::S_EPC\:S_EPC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CSLibrary.Structures.S_EPC.S_EPC (string  {\i epc})}}
\par
{\bkmkstart AAAAAAADXG}
{\bkmkend AAAAAAADXG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Custom constructor }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i epc} \cell }{epc in string format, must be smaller than or equal to 62 hex numbers\cell }
{\row }
}
}}
{\xe \v S_EPC\:CSLibrary::Structures::S_EPC}
{\xe \v CSLibrary::Structures::S_EPC\:S_EPC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CSLibrary.Structures.S_EPC.S_EPC (ushort []  {\i epc})}}
\par
{\bkmkstart AAAAAAADXH}
{\bkmkend AAAAAAADXH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Custom constructor }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i epc} \cell }{epc in ushort array format, must be smaller than or equal to 31\cell }
{\row }
}
}}
{\xe \v S_EPC\:CSLibrary::Structures::S_EPC}
{\xe \v CSLibrary::Structures::S_EPC\:S_EPC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CSLibrary.Structures.S_EPC.S_EPC (ushort []  {\i epc}, int  {\i count})}}
\par
{\bkmkstart AAAAAAADXI}
{\bkmkend AAAAAAADXI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Custom constructor }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i epc} \cell }{epc in ushort array format, must be smaller than or equal to 31\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i count} \cell }{number of ushort copy to local\cell }
{\row }
}
}}
{\xe \v S_EPC\:CSLibrary::Structures::S_EPC}
{\xe \v CSLibrary::Structures::S_EPC\:S_EPC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CSLibrary.Structures.S_EPC.S_EPC (Byte []  {\i epc})}}
\par
{\bkmkstart AAAAAAADXJ}
{\bkmkend AAAAAAADXJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Custom constructor }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i epc} \cell }{epc in byte array format, must be smaller than or equal to 62 bytes\cell }
{\row }
}
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Compare\:CSLibrary::Structures::S_EPC}
{\xe \v CSLibrary::Structures::S_EPC\:Compare}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int CSLibrary.Structures.S_EPC.Compare (ushort []  {\i b1}, ushort []  {\i b2}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAADXK}
{\bkmkend AAAAAAADXK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v CompareTo\:CSLibrary::Structures::S_EPC}
{\xe \v CSLibrary::Structures::S_EPC\:CompareTo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Int32 CSLibrary.Structures.S_EPC.CompareTo (object  {\i item})}}
\par
{\bkmkstart AAAAAAADXL}
{\bkmkend AAAAAAADXL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compare Data if equal return 0 }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i item} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v GetLength\:CSLibrary::Structures::S_EPC}
{\xe \v CSLibrary::Structures::S_EPC\:GetLength}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Int32 CSLibrary.Structures.S_EPC.GetLength ()}}
\par
{\bkmkstart AAAAAAADOI}
{\bkmkend AAAAAAADOI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get Data Length, Data in word format }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}{
Implements {\b CSLibrary.Structures.IBANK} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADOA \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v ToBytes\:CSLibrary::Structures::S_EPC}
{\xe \v CSLibrary::Structures::S_EPC\:ToBytes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte [] CSLibrary.Structures.S_EPC.ToBytes ()}}
\par
{\bkmkstart AAAAAAADOR}
{\bkmkend AAAAAAADOR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert to byte array }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}{
Implements {\b CSLibrary.Structures.IBANK} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADOJ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v ToShorts\:CSLibrary::Structures::S_EPC}
{\xe \v CSLibrary::Structures::S_EPC\:ToShorts}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
short [] CSLibrary.Structures.S_EPC.ToShorts ()}}
\par
{\bkmkstart AAAAAAADPA}
{\bkmkend AAAAAAADPA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert to short array }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}{
Implements {\b CSLibrary.Structures.IBANK} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADOS \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v ToString\:CSLibrary::Structures::S_EPC}
{\xe \v CSLibrary::Structures::S_EPC\:ToString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override string CSLibrary.Structures.S_EPC.ToString ()}}
\par
{\bkmkstart AAAAAAADPJ}
{\bkmkend AAAAAAADPJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert to HexString }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}{
Implements {\b CSLibrary.Structures.IBANK} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADPB \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v ToUshorts\:CSLibrary::Structures::S_EPC}
{\xe \v CSLibrary::Structures::S_EPC\:ToUshorts}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ushort [] CSLibrary.Structures.S_EPC.ToUshorts ()}}
\par
{\bkmkstart AAAAAAADPS}
{\bkmkend AAAAAAADPS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert to ushort array }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}{
Implements {\b CSLibrary.Structures.IBANK} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADPK \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v m_data\:CSLibrary::Structures::S_EPC}
{\xe \v CSLibrary::Structures::S_EPC\:m_data}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ushort [] CSLibrary.Structures.S_EPC.m_data{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADXM}
{\bkmkend AAAAAAADXM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
CSLibrary/RFIDReader/Structures/{\b CSLibrary.Structures.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary.Structures.S_MASK Struct Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary.Structures.S_MASK}
{\xe \v CSLibrary.Structures.S_MASK}
{\bkmkstart AAAAAAADXN}
{\bkmkend AAAAAAADXN}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Custom Data Structure }}\par
Inheritance diagram for CSLibrary.Structures.S_MASK:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "struct_c_s_library_1_1_structures_1_1_s___m_a_s_k.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b S_MASK} (string mask)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Custom constructor }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b S_MASK} (byte[] mask)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Custom constructor }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b S_MASK} (ushort[] mask)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Custom constructor }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b S_MASK} (byte[] mask, uint count)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Custom constructor }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
short [] {\b ToShorts} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert to short array }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ushort [] {\b ToUshorts} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert to ushort array }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte [] {\b ToBytes} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert to byte array }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override string {\b ToString} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert to HexString }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Int32 {\b GetLength} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get Data Length, Data in word format }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Int32 {\b CompareTo} (object item)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compare Data if equal return 0 }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static implicit {\b operator string} ({\b S_MASK} mask)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert to string }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static implicit {\b operator ushort[]} ({\b S_MASK} mask)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert mask to ushort[] }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static implicit {\b operator S_MASK} (ushort[] mask)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert ushort[] to mask }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Properties\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Int32 {\b Length}{\f2  [get]}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
total byte length of mask }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b Compare} (byte[] b1, byte[] b2)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte [] {\b m_mask}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Protocol Control Value }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Custom Data Structure \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v S_MASK\:CSLibrary::Structures::S_MASK}
{\xe \v CSLibrary::Structures::S_MASK\:S_MASK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CSLibrary.Structures.S_MASK.S_MASK (string  {\i mask})}}
\par
{\bkmkstart AAAAAAADXO}
{\bkmkend AAAAAAADXO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Custom constructor }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i mask} \cell }{mask in string format\cell }
{\row }
}
}}
{\xe \v S_MASK\:CSLibrary::Structures::S_MASK}
{\xe \v CSLibrary::Structures::S_MASK\:S_MASK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CSLibrary.Structures.S_MASK.S_MASK (byte []  {\i mask})}}
\par
{\bkmkstart AAAAAAADXP}
{\bkmkend AAAAAAADXP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Custom constructor }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i mask} \cell }{mask in byte array format\cell }
{\row }
}
}}
{\xe \v S_MASK\:CSLibrary::Structures::S_MASK}
{\xe \v CSLibrary::Structures::S_MASK\:S_MASK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CSLibrary.Structures.S_MASK.S_MASK (ushort []  {\i mask})}}
\par
{\bkmkstart AAAAAAADXQ}
{\bkmkend AAAAAAADXQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Custom constructor }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i mask} \cell }{mask in byte array format\cell }
{\row }
}
}}
{\xe \v S_MASK\:CSLibrary::Structures::S_MASK}
{\xe \v CSLibrary::Structures::S_MASK\:S_MASK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CSLibrary.Structures.S_MASK.S_MASK (byte []  {\i mask}, uint  {\i count})}}
\par
{\bkmkstart AAAAAAADXR}
{\bkmkend AAAAAAADXR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Custom constructor }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i mask} \cell }{mask in byte array format\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i count} \cell }{total byte length to copy\cell }
{\row }
}
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Compare\:CSLibrary::Structures::S_MASK}
{\xe \v CSLibrary::Structures::S_MASK\:Compare}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int CSLibrary.Structures.S_MASK.Compare (byte []  {\i b1}, byte []  {\i b2}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAADXS}
{\bkmkend AAAAAAADXS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v CompareTo\:CSLibrary::Structures::S_MASK}
{\xe \v CSLibrary::Structures::S_MASK\:CompareTo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Int32 CSLibrary.Structures.S_MASK.CompareTo (object  {\i item})}}
\par
{\bkmkstart AAAAAAADXT}
{\bkmkend AAAAAAADXT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compare Data if equal return 0 }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i item} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v GetLength\:CSLibrary::Structures::S_MASK}
{\xe \v CSLibrary::Structures::S_MASK\:GetLength}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Int32 CSLibrary.Structures.S_MASK.GetLength ()}}
\par
{\bkmkstart AAAAAAADOB}
{\bkmkend AAAAAAADOB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get Data Length, Data in word format }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}{
Implements {\b CSLibrary.Structures.IBANK} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADOA \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v operator S_MASK\:CSLibrary::Structures::S_MASK}
{\xe \v CSLibrary::Structures::S_MASK\:operator S_MASK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static implicit CSLibrary.Structures.S_MASK.operator {\b S_MASK} (ushort []  {\i mask}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADXU}
{\bkmkend AAAAAAADXU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert ushort[] to mask }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v operator string\:CSLibrary::Structures::S_MASK}
{\xe \v CSLibrary::Structures::S_MASK\:operator string}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static implicit CSLibrary.Structures.S_MASK.operator string ({\b S_MASK}  {\i mask}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADXV}
{\bkmkend AAAAAAADXV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert to string }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v operator ushort[]\:CSLibrary::Structures::S_MASK}
{\xe \v CSLibrary::Structures::S_MASK\:operator ushort[]}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static implicit CSLibrary.Structures.S_MASK.operator ushort[] ({\b S_MASK}  {\i mask}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADXW}
{\bkmkend AAAAAAADXW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert mask to ushort[] }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v ToBytes\:CSLibrary::Structures::S_MASK}
{\xe \v CSLibrary::Structures::S_MASK\:ToBytes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte [] CSLibrary.Structures.S_MASK.ToBytes ()}}
\par
{\bkmkstart AAAAAAADOK}
{\bkmkend AAAAAAADOK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert to byte array }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}{
Implements {\b CSLibrary.Structures.IBANK} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADOJ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v ToShorts\:CSLibrary::Structures::S_MASK}
{\xe \v CSLibrary::Structures::S_MASK\:ToShorts}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
short [] CSLibrary.Structures.S_MASK.ToShorts ()}}
\par
{\bkmkstart AAAAAAADOT}
{\bkmkend AAAAAAADOT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert to short array }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}{
Implements {\b CSLibrary.Structures.IBANK} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADOS \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v ToString\:CSLibrary::Structures::S_MASK}
{\xe \v CSLibrary::Structures::S_MASK\:ToString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override string CSLibrary.Structures.S_MASK.ToString ()}}
\par
{\bkmkstart AAAAAAADPC}
{\bkmkend AAAAAAADPC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert to HexString }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}{
Implements {\b CSLibrary.Structures.IBANK} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADPB \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v ToUshorts\:CSLibrary::Structures::S_MASK}
{\xe \v CSLibrary::Structures::S_MASK\:ToUshorts}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ushort [] CSLibrary.Structures.S_MASK.ToUshorts ()}}
\par
{\bkmkstart AAAAAAADPL}
{\bkmkend AAAAAAADPL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert to ushort array }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}{
Implements {\b CSLibrary.Structures.IBANK} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADPK \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v m_mask\:CSLibrary::Structures::S_MASK}
{\xe \v CSLibrary::Structures::S_MASK\:m_mask}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte [] CSLibrary.Structures.S_MASK.m_mask{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADXX}
{\bkmkend AAAAAAADXX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Protocol Control Value }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Property Documentation\par
\pard\plain 
{\xe \v Length\:CSLibrary::Structures::S_MASK}
{\xe \v CSLibrary::Structures::S_MASK\:Length}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Int32 CSLibrary.Structures.S_MASK.Length{\f2 [get]}}}
\par
{\bkmkstart AAAAAAADXY}
{\bkmkend AAAAAAADXY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
total byte length of mask }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
CSLibrary/RFIDReader/Structures/{\b CSLibrary.Structures.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary.Structures.S_PC Class Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary.Structures.S_PC}
{\xe \v CSLibrary.Structures.S_PC}
{\bkmkstart AAAAAAADXZ}
{\bkmkend AAAAAAADXZ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Protocol Control(must be 2 Bytes) }}\par
Inheritance diagram for CSLibrary.Structures.S_PC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_c_s_library_1_1_structures_1_1_s___p_c.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b S_PC} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b S_PC} (string pc)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Custom constructor }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b S_PC} (ushort pc)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Custom constructor }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
short [] {\b ToShorts} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert to short array }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ushort [] {\b ToUshorts} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert to ushort array }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte [] {\b ToBytes} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert to byte array }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override string {\b ToString} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert to HexString }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Int32 {\b GetLength} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get Data Length, Data in word format }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Int32 {\b CompareTo} (object item)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compare Data if equal return 0 }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static implicit {\b operator UInt16} ({\b S_PC} p)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static implicit {\b operator S_PC} (UInt16 p)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Properties\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint {\b EPCLength}{\f2  [get]}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get EPC Word(16bit) Length from current PC value }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b UMI}{\f2  [get]}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
User Memory Indicator, true if user memory contains data. Notes: Not all tags support this function }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b XI}{\f2  [get]}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
An XPC_W1 Indicator, true if XPC_W1 is non-zero value Notes: Not all tags support this function }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b Compare} (ushort[] b1, ushort[] b2)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ushort [] {\b m_data}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Protocol Control(must be 2 Bytes) \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v S_PC\:CSLibrary::Structures::S_PC}
{\xe \v CSLibrary::Structures::S_PC\:S_PC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CSLibrary.Structures.S_PC.S_PC ()}}
\par
{\bkmkstart AAAAAAADYA}
{\bkmkend AAAAAAADYA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v S_PC\:CSLibrary::Structures::S_PC}
{\xe \v CSLibrary::Structures::S_PC\:S_PC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CSLibrary.Structures.S_PC.S_PC (string  {\i pc})}}
\par
{\bkmkstart AAAAAAADYB}
{\bkmkend AAAAAAADYB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Custom constructor }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pc} \cell }{pc in string format, must be 4 hex numbers\cell }
{\row }
}
}}
{\xe \v S_PC\:CSLibrary::Structures::S_PC}
{\xe \v CSLibrary::Structures::S_PC\:S_PC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CSLibrary.Structures.S_PC.S_PC (ushort  {\i pc})}}
\par
{\bkmkstart AAAAAAADYC}
{\bkmkend AAAAAAADYC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Custom constructor }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pc} \cell }{pc in ushort format\cell }
{\row }
}
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Compare\:CSLibrary::Structures::S_PC}
{\xe \v CSLibrary::Structures::S_PC\:Compare}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int CSLibrary.Structures.S_PC.Compare (ushort []  {\i b1}, ushort []  {\i b2}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAADYD}
{\bkmkend AAAAAAADYD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v CompareTo\:CSLibrary::Structures::S_PC}
{\xe \v CSLibrary::Structures::S_PC\:CompareTo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Int32 CSLibrary.Structures.S_PC.CompareTo (object  {\i item})}}
\par
{\bkmkstart AAAAAAADYE}
{\bkmkend AAAAAAADYE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compare Data if equal return 0 }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i item} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v GetLength\:CSLibrary::Structures::S_PC}
{\xe \v CSLibrary::Structures::S_PC\:GetLength}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Int32 CSLibrary.Structures.S_PC.GetLength ()}}
\par
{\bkmkstart AAAAAAADOH}
{\bkmkend AAAAAAADOH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get Data Length, Data in word format }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}{
Implements {\b CSLibrary.Structures.IBANK} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADOA \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v operator S_PC\:CSLibrary::Structures::S_PC}
{\xe \v CSLibrary::Structures::S_PC\:operator S_PC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static implicit CSLibrary.Structures.S_PC.operator {\b S_PC} (UInt16  {\i p}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADYF}
{\bkmkend AAAAAAADYF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v operator UInt16\:CSLibrary::Structures::S_PC}
{\xe \v CSLibrary::Structures::S_PC\:operator UInt16}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static implicit CSLibrary.Structures.S_PC.operator UInt16 ({\b S_PC}  {\i p}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADYG}
{\bkmkend AAAAAAADYG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ToBytes\:CSLibrary::Structures::S_PC}
{\xe \v CSLibrary::Structures::S_PC\:ToBytes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte [] CSLibrary.Structures.S_PC.ToBytes ()}}
\par
{\bkmkstart AAAAAAADOQ}
{\bkmkend AAAAAAADOQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert to byte array }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}{
Implements {\b CSLibrary.Structures.IBANK} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADOJ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v ToShorts\:CSLibrary::Structures::S_PC}
{\xe \v CSLibrary::Structures::S_PC\:ToShorts}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
short [] CSLibrary.Structures.S_PC.ToShorts ()}}
\par
{\bkmkstart AAAAAAADOZ}
{\bkmkend AAAAAAADOZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert to short array }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}{
Implements {\b CSLibrary.Structures.IBANK} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADOS \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v ToString\:CSLibrary::Structures::S_PC}
{\xe \v CSLibrary::Structures::S_PC\:ToString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override string CSLibrary.Structures.S_PC.ToString ()}}
\par
{\bkmkstart AAAAAAADPI}
{\bkmkend AAAAAAADPI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert to HexString }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}{
Implements {\b CSLibrary.Structures.IBANK} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADPB \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v ToUshorts\:CSLibrary::Structures::S_PC}
{\xe \v CSLibrary::Structures::S_PC\:ToUshorts}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ushort [] CSLibrary.Structures.S_PC.ToUshorts ()}}
\par
{\bkmkstart AAAAAAADPR}
{\bkmkend AAAAAAADPR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert to ushort array }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}{
Implements {\b CSLibrary.Structures.IBANK} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADPK \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v m_data\:CSLibrary::Structures::S_PC}
{\xe \v CSLibrary::Structures::S_PC\:m_data}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ushort [] CSLibrary.Structures.S_PC.m_data{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADYH}
{\bkmkend AAAAAAADYH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Property Documentation\par
\pard\plain 
{\xe \v EPCLength\:CSLibrary::Structures::S_PC}
{\xe \v CSLibrary::Structures::S_PC\:EPCLength}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint CSLibrary.Structures.S_PC.EPCLength{\f2 [get]}}}
\par
{\bkmkstart AAAAAAADYI}
{\bkmkend AAAAAAADYI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get EPC Word(16bit) Length from current PC value }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v UMI\:CSLibrary::Structures::S_PC}
{\xe \v CSLibrary::Structures::S_PC\:UMI}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool CSLibrary.Structures.S_PC.UMI{\f2 [get]}}}
\par
{\bkmkstart AAAAAAADYJ}
{\bkmkend AAAAAAADYJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
User Memory Indicator, true if user memory contains data. Notes: Not all tags support this function }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v XI\:CSLibrary::Structures::S_PC}
{\xe \v CSLibrary::Structures::S_PC\:XI}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool CSLibrary.Structures.S_PC.XI{\f2 [get]}}}
\par
{\bkmkstart AAAAAAADYK}
{\bkmkend AAAAAAADYK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
An XPC_W1 Indicator, true if XPC_W1 is non-zero value Notes: Not all tags support this function }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
CSLibrary/RFIDReader/Structures/{\b CSLibrary.Structures.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary.Structures.S_PWD Class Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary.Structures.S_PWD}
{\xe \v CSLibrary.Structures.S_PWD}
{\bkmkstart AAAAAAADYL}
{\bkmkend AAAAAAADYL}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Custom Password Structure }}\par
Inheritance diagram for CSLibrary.Structures.S_PWD:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_c_s_library_1_1_structures_1_1_s___p_w_d.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b S_PWD} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b S_PWD} (string data)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Custom constructor }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b S_PWD} (uint pwd)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Custom constructor }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
short [] {\b ToShorts} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert to short array }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ushort [] {\b ToUshorts} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert to ushort array }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte [] {\b ToBytes} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert to byte array }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override string {\b ToString} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert to HexString }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b ToString} (string format)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Int32 {\b GetLength} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get Data Length, Data in word format }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Int32 {\b CompareTo} (object item)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compare Data if equal return 0 }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static implicit {\b operator UInt32} ({\b S_PWD} p)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static implicit {\b operator S_PWD} (UInt32 p)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Properties\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt32 {\b m_pwd}{\f2  [get, set]}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Password }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b Compare} (ushort[] b1, ushort[] b2)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ushort [] {\b m_data}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Custom Password Structure \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v S_PWD\:CSLibrary::Structures::S_PWD}
{\xe \v CSLibrary::Structures::S_PWD\:S_PWD}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CSLibrary.Structures.S_PWD.S_PWD ()}}
\par
{\bkmkstart AAAAAAADYM}
{\bkmkend AAAAAAADYM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v S_PWD\:CSLibrary::Structures::S_PWD}
{\xe \v CSLibrary::Structures::S_PWD\:S_PWD}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CSLibrary.Structures.S_PWD.S_PWD (string  {\i data})}}
\par
{\bkmkstart AAAAAAADYN}
{\bkmkend AAAAAAADYN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Custom constructor }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i data} \cell }{pc in string format, must be 8 hex numbers\cell }
{\row }
}
}}
{\xe \v S_PWD\:CSLibrary::Structures::S_PWD}
{\xe \v CSLibrary::Structures::S_PWD\:S_PWD}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CSLibrary.Structures.S_PWD.S_PWD (uint  {\i pwd})}}
\par
{\bkmkstart AAAAAAADYO}
{\bkmkend AAAAAAADYO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Custom constructor }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pwd} \cell }{password in Uint32 format\cell }
{\row }
}
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Compare\:CSLibrary::Structures::S_PWD}
{\xe \v CSLibrary::Structures::S_PWD\:Compare}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int CSLibrary.Structures.S_PWD.Compare (ushort []  {\i b1}, ushort []  {\i b2}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAADYP}
{\bkmkend AAAAAAADYP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v CompareTo\:CSLibrary::Structures::S_PWD}
{\xe \v CSLibrary::Structures::S_PWD\:CompareTo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Int32 CSLibrary.Structures.S_PWD.CompareTo (object  {\i item})}}
\par
{\bkmkstart AAAAAAADYQ}
{\bkmkend AAAAAAADYQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compare Data if equal return 0 }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i item} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v GetLength\:CSLibrary::Structures::S_PWD}
{\xe \v CSLibrary::Structures::S_PWD\:GetLength}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Int32 CSLibrary.Structures.S_PWD.GetLength ()}}
\par
{\bkmkstart AAAAAAADOD}
{\bkmkend AAAAAAADOD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get Data Length, Data in word format }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}{
Implements {\b CSLibrary.Structures.IBANK} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADOA \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v operator S_PWD\:CSLibrary::Structures::S_PWD}
{\xe \v CSLibrary::Structures::S_PWD\:operator S_PWD}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static implicit CSLibrary.Structures.S_PWD.operator {\b S_PWD} (UInt32  {\i p}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADYR}
{\bkmkend AAAAAAADYR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v operator UInt32\:CSLibrary::Structures::S_PWD}
{\xe \v CSLibrary::Structures::S_PWD\:operator UInt32}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static implicit CSLibrary.Structures.S_PWD.operator UInt32 ({\b S_PWD}  {\i p}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADYS}
{\bkmkend AAAAAAADYS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ToBytes\:CSLibrary::Structures::S_PWD}
{\xe \v CSLibrary::Structures::S_PWD\:ToBytes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte [] CSLibrary.Structures.S_PWD.ToBytes ()}}
\par
{\bkmkstart AAAAAAADOM}
{\bkmkend AAAAAAADOM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert to byte array }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}{
Implements {\b CSLibrary.Structures.IBANK} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADOJ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v ToShorts\:CSLibrary::Structures::S_PWD}
{\xe \v CSLibrary::Structures::S_PWD\:ToShorts}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
short [] CSLibrary.Structures.S_PWD.ToShorts ()}}
\par
{\bkmkstart AAAAAAADOV}
{\bkmkend AAAAAAADOV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert to short array }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}{
Implements {\b CSLibrary.Structures.IBANK} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADOS \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v ToString\:CSLibrary::Structures::S_PWD}
{\xe \v CSLibrary::Structures::S_PWD\:ToString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override string CSLibrary.Structures.S_PWD.ToString ()}}
\par
{\bkmkstart AAAAAAADPE}
{\bkmkend AAAAAAADPE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert to HexString }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}{
Implements {\b CSLibrary.Structures.IBANK} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADPB \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v ToString\:CSLibrary::Structures::S_PWD}
{\xe \v CSLibrary::Structures::S_PWD\:ToString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string CSLibrary.Structures.S_PWD.ToString (string  {\i format})}}
\par
{\bkmkstart AAAAAAADYT}
{\bkmkend AAAAAAADYT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ToUshorts\:CSLibrary::Structures::S_PWD}
{\xe \v CSLibrary::Structures::S_PWD\:ToUshorts}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ushort [] CSLibrary.Structures.S_PWD.ToUshorts ()}}
\par
{\bkmkstart AAAAAAADPN}
{\bkmkend AAAAAAADPN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert to ushort array }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}{
Implements {\b CSLibrary.Structures.IBANK} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADPK \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v m_data\:CSLibrary::Structures::S_PWD}
{\xe \v CSLibrary::Structures::S_PWD\:m_data}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ushort [] CSLibrary.Structures.S_PWD.m_data{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADYU}
{\bkmkend AAAAAAADYU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Property Documentation\par
\pard\plain 
{\xe \v m_pwd\:CSLibrary::Structures::S_PWD}
{\xe \v CSLibrary::Structures::S_PWD\:m_pwd}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt32 CSLibrary.Structures.S_PWD.m_pwd{\f2 [get]}, {\f2 [set]}, {\f2 [private]}}}
\par
{\bkmkstart AAAAAAADYV}
{\bkmkend AAAAAAADYV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Password }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
CSLibrary/RFIDReader/Structures/{\b CSLibrary.Structures.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary.Structures.S_TID Class Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary.Structures.S_TID}
{\xe \v CSLibrary.Structures.S_TID}
{\bkmkstart AAAAAAADYW}
{\bkmkend AAAAAAADYW}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
TID }}\par
Inheritance diagram for CSLibrary.Structures.S_TID:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_c_s_library_1_1_structures_1_1_s___t_i_d.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b S_TID} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b S_TID} (string tid)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Custom constructor }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b S_TID} (ushort[] tid)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Custom constructor }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b S_TID} (ushort[] tid, int count)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Custom constructor }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
short [] {\b ToShorts} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert to short array }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ushort [] {\b ToUshorts} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert to ushort array }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte [] {\b ToBytes} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert to byte array }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override string {\b ToString} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert to HexString }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Int32 {\b GetLength} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get Data Length, Data in word format }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Int32 {\b CompareTo} (object item)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compare Data if equal return 0 }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Properties\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ACID} {\b GetACID}{\f2  [get]}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get Allocation Class ID }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EpcMDID} {\b GetEpcID}{\f2  [get]}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get EPC Mask Designer ID }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b IsoMDID} {\b GetIsoID}{\f2  [get]}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get ISO Mask Designer ID }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b Compare} (ushort[] b1, ushort[] b2)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ushort [] {\b m_data}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
TID \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v S_TID\:CSLibrary::Structures::S_TID}
{\xe \v CSLibrary::Structures::S_TID\:S_TID}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CSLibrary.Structures.S_TID.S_TID ()}}
\par
{\bkmkstart AAAAAAADYX}
{\bkmkend AAAAAAADYX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v S_TID\:CSLibrary::Structures::S_TID}
{\xe \v CSLibrary::Structures::S_TID\:S_TID}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CSLibrary.Structures.S_TID.S_TID (string  {\i tid})}}
\par
{\bkmkstart AAAAAAADYY}
{\bkmkend AAAAAAADYY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Custom constructor }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i tid} \cell }{pc in string format, must be 4 hex numbers\cell }
{\row }
}
}}
{\xe \v S_TID\:CSLibrary::Structures::S_TID}
{\xe \v CSLibrary::Structures::S_TID\:S_TID}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CSLibrary.Structures.S_TID.S_TID (ushort []  {\i tid})}}
\par
{\bkmkstart AAAAAAADYZ}
{\bkmkend AAAAAAADYZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Custom constructor }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i tid} \cell }{Tid in byte array format\cell }
{\row }
}
}}
{\xe \v S_TID\:CSLibrary::Structures::S_TID}
{\xe \v CSLibrary::Structures::S_TID\:S_TID}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CSLibrary.Structures.S_TID.S_TID (ushort []  {\i tid}, int  {\i count})}}
\par
{\bkmkstart AAAAAAADZA}
{\bkmkend AAAAAAADZA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Custom constructor }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i tid} \cell }{Tid in byte array format\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i count} \cell }{number of ushort copy to local\cell }
{\row }
}
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Compare\:CSLibrary::Structures::S_TID}
{\xe \v CSLibrary::Structures::S_TID\:Compare}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int CSLibrary.Structures.S_TID.Compare (ushort []  {\i b1}, ushort []  {\i b2}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAADZB}
{\bkmkend AAAAAAADZB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v CompareTo\:CSLibrary::Structures::S_TID}
{\xe \v CSLibrary::Structures::S_TID\:CompareTo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Int32 CSLibrary.Structures.S_TID.CompareTo (object  {\i item})}}
\par
{\bkmkstart AAAAAAADZC}
{\bkmkend AAAAAAADZC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compare Data if equal return 0 }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i item} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v GetLength\:CSLibrary::Structures::S_TID}
{\xe \v CSLibrary::Structures::S_TID\:GetLength}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Int32 CSLibrary.Structures.S_TID.GetLength ()}}
\par
{\bkmkstart AAAAAAADOE}
{\bkmkend AAAAAAADOE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get Data Length, Data in word format }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}{
Implements {\b CSLibrary.Structures.IBANK} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADOA \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v ToBytes\:CSLibrary::Structures::S_TID}
{\xe \v CSLibrary::Structures::S_TID\:ToBytes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte [] CSLibrary.Structures.S_TID.ToBytes ()}}
\par
{\bkmkstart AAAAAAADON}
{\bkmkend AAAAAAADON}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert to byte array }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}{
Implements {\b CSLibrary.Structures.IBANK} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADOJ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v ToShorts\:CSLibrary::Structures::S_TID}
{\xe \v CSLibrary::Structures::S_TID\:ToShorts}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
short [] CSLibrary.Structures.S_TID.ToShorts ()}}
\par
{\bkmkstart AAAAAAADOW}
{\bkmkend AAAAAAADOW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert to short array }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}{
Implements {\b CSLibrary.Structures.IBANK} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADOS \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v ToString\:CSLibrary::Structures::S_TID}
{\xe \v CSLibrary::Structures::S_TID\:ToString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override string CSLibrary.Structures.S_TID.ToString ()}}
\par
{\bkmkstart AAAAAAADPF}
{\bkmkend AAAAAAADPF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert to HexString }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}{
Implements {\b CSLibrary.Structures.IBANK} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADPB \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v ToUshorts\:CSLibrary::Structures::S_TID}
{\xe \v CSLibrary::Structures::S_TID\:ToUshorts}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ushort [] CSLibrary.Structures.S_TID.ToUshorts ()}}
\par
{\bkmkstart AAAAAAADPO}
{\bkmkend AAAAAAADPO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert to ushort array }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}{
Implements {\b CSLibrary.Structures.IBANK} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADPK \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v m_data\:CSLibrary::Structures::S_TID}
{\xe \v CSLibrary::Structures::S_TID\:m_data}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ushort [] CSLibrary.Structures.S_TID.m_data{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADZD}
{\bkmkend AAAAAAADZD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Property Documentation\par
\pard\plain 
{\xe \v GetACID\:CSLibrary::Structures::S_TID}
{\xe \v CSLibrary::Structures::S_TID\:GetACID}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b ACID} CSLibrary.Structures.S_TID.GetACID{\f2 [get]}}}
\par
{\bkmkstart AAAAAAADZE}
{\bkmkend AAAAAAADZE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get Allocation Class ID }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v GetEpcID\:CSLibrary::Structures::S_TID}
{\xe \v CSLibrary::Structures::S_TID\:GetEpcID}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EpcMDID} CSLibrary.Structures.S_TID.GetEpcID{\f2 [get]}}}
\par
{\bkmkstart AAAAAAADZF}
{\bkmkend AAAAAAADZF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get EPC Mask Designer ID }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v GetIsoID\:CSLibrary::Structures::S_TID}
{\xe \v CSLibrary::Structures::S_TID\:GetIsoID}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b IsoMDID} CSLibrary.Structures.S_TID.GetIsoID{\f2 [get]}}}
\par
{\bkmkstart AAAAAAADZG}
{\bkmkend AAAAAAADZG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get ISO Mask Designer ID }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
CSLibrary/RFIDReader/Structures/{\b CSLibrary.Structures.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary.Structures.S_XPC_W1 Class Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary.Structures.S_XPC_W1}
{\xe \v CSLibrary.Structures.S_XPC_W1}
{\bkmkstart AAAAAAADZH}
{\bkmkend AAAAAAADZH}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
X Protocol Control W1 (must be 2 Bytes) }}\par
Inheritance diagram for CSLibrary.Structures.S_XPC_W1:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_c_s_library_1_1_structures_1_1_s___x_p_c___w1.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b S_XPC_W1} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b S_XPC_W1} (string pc)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Custom constructor }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b S_XPC_W1} (ushort pc)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Custom constructor }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
short [] {\b ToShorts} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert to short array }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ushort [] {\b ToUshorts} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert to ushort array }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte [] {\b ToBytes} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert to byte array }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override string {\b ToString} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert to HexString }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Int32 {\b GetLength} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get Data Length, Data in word format }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Int32 {\b CompareTo} (object item)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compare Data if equal return 0 }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Properties\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b XEB}{\f2  [get]}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
An XPC_W2 Indicator, true if XPC_W2 is non-zero value Notes: Not all tags support this function }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b Compare} (ushort[] b1, ushort[] b2)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ushort [] {\b m_data}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
X Protocol Control W1 (must be 2 Bytes) \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v S_XPC_W1\:CSLibrary::Structures::S_XPC_W1}
{\xe \v CSLibrary::Structures::S_XPC_W1\:S_XPC_W1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CSLibrary.Structures.S_XPC_W1.S_XPC_W1 ()}}
\par
{\bkmkstart AAAAAAADZI}
{\bkmkend AAAAAAADZI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v S_XPC_W1\:CSLibrary::Structures::S_XPC_W1}
{\xe \v CSLibrary::Structures::S_XPC_W1\:S_XPC_W1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CSLibrary.Structures.S_XPC_W1.S_XPC_W1 (string  {\i pc})}}
\par
{\bkmkstart AAAAAAADZJ}
{\bkmkend AAAAAAADZJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Custom constructor }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pc} \cell }{pc in string format, must be 4 hex numbers\cell }
{\row }
}
}}
{\xe \v S_XPC_W1\:CSLibrary::Structures::S_XPC_W1}
{\xe \v CSLibrary::Structures::S_XPC_W1\:S_XPC_W1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CSLibrary.Structures.S_XPC_W1.S_XPC_W1 (ushort  {\i pc})}}
\par
{\bkmkstart AAAAAAADZK}
{\bkmkend AAAAAAADZK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Custom constructor }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pc} \cell }{pc in ushort format\cell }
{\row }
}
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Compare\:CSLibrary::Structures::S_XPC_W1}
{\xe \v CSLibrary::Structures::S_XPC_W1\:Compare}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int CSLibrary.Structures.S_XPC_W1.Compare (ushort []  {\i b1}, ushort []  {\i b2}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAADZL}
{\bkmkend AAAAAAADZL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v CompareTo\:CSLibrary::Structures::S_XPC_W1}
{\xe \v CSLibrary::Structures::S_XPC_W1\:CompareTo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Int32 CSLibrary.Structures.S_XPC_W1.CompareTo (object  {\i item})}}
\par
{\bkmkstart AAAAAAADZM}
{\bkmkend AAAAAAADZM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compare Data if equal return 0 }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i item} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v GetLength\:CSLibrary::Structures::S_XPC_W1}
{\xe \v CSLibrary::Structures::S_XPC_W1\:GetLength}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Int32 CSLibrary.Structures.S_XPC_W1.GetLength ()}}
\par
{\bkmkstart AAAAAAADOG}
{\bkmkend AAAAAAADOG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get Data Length, Data in word format }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}{
Implements {\b CSLibrary.Structures.IBANK} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADOA \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v ToBytes\:CSLibrary::Structures::S_XPC_W1}
{\xe \v CSLibrary::Structures::S_XPC_W1\:ToBytes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte [] CSLibrary.Structures.S_XPC_W1.ToBytes ()}}
\par
{\bkmkstart AAAAAAADOP}
{\bkmkend AAAAAAADOP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert to byte array }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}{
Implements {\b CSLibrary.Structures.IBANK} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADOJ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v ToShorts\:CSLibrary::Structures::S_XPC_W1}
{\xe \v CSLibrary::Structures::S_XPC_W1\:ToShorts}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
short [] CSLibrary.Structures.S_XPC_W1.ToShorts ()}}
\par
{\bkmkstart AAAAAAADOY}
{\bkmkend AAAAAAADOY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert to short array }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}{
Implements {\b CSLibrary.Structures.IBANK} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADOS \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v ToString\:CSLibrary::Structures::S_XPC_W1}
{\xe \v CSLibrary::Structures::S_XPC_W1\:ToString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override string CSLibrary.Structures.S_XPC_W1.ToString ()}}
\par
{\bkmkstart AAAAAAADPH}
{\bkmkend AAAAAAADPH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert to HexString }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}{
Implements {\b CSLibrary.Structures.IBANK} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADPB \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v ToUshorts\:CSLibrary::Structures::S_XPC_W1}
{\xe \v CSLibrary::Structures::S_XPC_W1\:ToUshorts}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ushort [] CSLibrary.Structures.S_XPC_W1.ToUshorts ()}}
\par
{\bkmkstart AAAAAAADPQ}
{\bkmkend AAAAAAADPQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert to ushort array }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}{
Implements {\b CSLibrary.Structures.IBANK} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADPK \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v m_data\:CSLibrary::Structures::S_XPC_W1}
{\xe \v CSLibrary::Structures::S_XPC_W1\:m_data}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ushort [] CSLibrary.Structures.S_XPC_W1.m_data{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADZN}
{\bkmkend AAAAAAADZN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Property Documentation\par
\pard\plain 
{\xe \v XEB\:CSLibrary::Structures::S_XPC_W1}
{\xe \v CSLibrary::Structures::S_XPC_W1\:XEB}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool CSLibrary.Structures.S_XPC_W1.XEB{\f2 [get]}}}
\par
{\bkmkstart AAAAAAADZO}
{\bkmkend AAAAAAADZO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
An XPC_W2 Indicator, true if XPC_W2 is non-zero value Notes: Not all tags support this function }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
CSLibrary/RFIDReader/Structures/{\b CSLibrary.Structures.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary.Structures.S_XPC_W2 Class Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary.Structures.S_XPC_W2}
{\xe \v CSLibrary.Structures.S_XPC_W2}
{\bkmkstart AAAAAAADZP}
{\bkmkend AAAAAAADZP}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
X Protocol Control W2 (must be 2 Bytes) }}\par
Inheritance diagram for CSLibrary.Structures.S_XPC_W2:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_c_s_library_1_1_structures_1_1_s___x_p_c___w2.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b S_XPC_W2} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b S_XPC_W2} (string pc)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Custom constructor }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b S_XPC_W2} (ushort pc)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Custom constructor }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
short [] {\b ToShorts} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert to short array }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ushort [] {\b ToUshorts} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert to ushort array }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte [] {\b ToBytes} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert to byte array }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override string {\b ToString} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert to HexString }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Int32 {\b GetLength} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get Data Length, Data in word format }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Int32 {\b CompareTo} (object item)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compare Data if equal return 0 }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b Compare} (ushort[] b1, ushort[] b2)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ushort [] {\b m_data}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
X Protocol Control W2 (must be 2 Bytes) \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v S_XPC_W2\:CSLibrary::Structures::S_XPC_W2}
{\xe \v CSLibrary::Structures::S_XPC_W2\:S_XPC_W2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CSLibrary.Structures.S_XPC_W2.S_XPC_W2 ()}}
\par
{\bkmkstart AAAAAAADZQ}
{\bkmkend AAAAAAADZQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v S_XPC_W2\:CSLibrary::Structures::S_XPC_W2}
{\xe \v CSLibrary::Structures::S_XPC_W2\:S_XPC_W2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CSLibrary.Structures.S_XPC_W2.S_XPC_W2 (string  {\i pc})}}
\par
{\bkmkstart AAAAAAADZR}
{\bkmkend AAAAAAADZR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Custom constructor }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pc} \cell }{pc in string format, must be 4 hex numbers\cell }
{\row }
}
}}
{\xe \v S_XPC_W2\:CSLibrary::Structures::S_XPC_W2}
{\xe \v CSLibrary::Structures::S_XPC_W2\:S_XPC_W2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CSLibrary.Structures.S_XPC_W2.S_XPC_W2 (ushort  {\i pc})}}
\par
{\bkmkstart AAAAAAADZS}
{\bkmkend AAAAAAADZS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Custom constructor }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pc} \cell }{pc in ushort format\cell }
{\row }
}
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Compare\:CSLibrary::Structures::S_XPC_W2}
{\xe \v CSLibrary::Structures::S_XPC_W2\:Compare}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int CSLibrary.Structures.S_XPC_W2.Compare (ushort []  {\i b1}, ushort []  {\i b2}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAADZT}
{\bkmkend AAAAAAADZT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v CompareTo\:CSLibrary::Structures::S_XPC_W2}
{\xe \v CSLibrary::Structures::S_XPC_W2\:CompareTo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Int32 CSLibrary.Structures.S_XPC_W2.CompareTo (object  {\i item})}}
\par
{\bkmkstart AAAAAAADZU}
{\bkmkend AAAAAAADZU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compare Data if equal return 0 }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i item} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v GetLength\:CSLibrary::Structures::S_XPC_W2}
{\xe \v CSLibrary::Structures::S_XPC_W2\:GetLength}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Int32 CSLibrary.Structures.S_XPC_W2.GetLength ()}}
\par
{\bkmkstart AAAAAAADOF}
{\bkmkend AAAAAAADOF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get Data Length, Data in word format }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}{
Implements {\b CSLibrary.Structures.IBANK} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADOA \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v ToBytes\:CSLibrary::Structures::S_XPC_W2}
{\xe \v CSLibrary::Structures::S_XPC_W2\:ToBytes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte [] CSLibrary.Structures.S_XPC_W2.ToBytes ()}}
\par
{\bkmkstart AAAAAAADOO}
{\bkmkend AAAAAAADOO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert to byte array }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}{
Implements {\b CSLibrary.Structures.IBANK} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADOJ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v ToShorts\:CSLibrary::Structures::S_XPC_W2}
{\xe \v CSLibrary::Structures::S_XPC_W2\:ToShorts}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
short [] CSLibrary.Structures.S_XPC_W2.ToShorts ()}}
\par
{\bkmkstart AAAAAAADOX}
{\bkmkend AAAAAAADOX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert to short array }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}{
Implements {\b CSLibrary.Structures.IBANK} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADOS \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v ToString\:CSLibrary::Structures::S_XPC_W2}
{\xe \v CSLibrary::Structures::S_XPC_W2\:ToString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override string CSLibrary.Structures.S_XPC_W2.ToString ()}}
\par
{\bkmkstart AAAAAAADPG}
{\bkmkend AAAAAAADPG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert to HexString }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}{
Implements {\b CSLibrary.Structures.IBANK} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADPB \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v ToUshorts\:CSLibrary::Structures::S_XPC_W2}
{\xe \v CSLibrary::Structures::S_XPC_W2\:ToUshorts}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ushort [] CSLibrary.Structures.S_XPC_W2.ToUshorts ()}}
\par
{\bkmkstart AAAAAAADPP}
{\bkmkend AAAAAAADPP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert to ushort array }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}{
Implements {\b CSLibrary.Structures.IBANK} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADPK \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v m_data\:CSLibrary::Structures::S_XPC_W2}
{\xe \v CSLibrary::Structures::S_XPC_W2\:m_data}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ushort [] CSLibrary.Structures.S_XPC_W2.m_data{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADZV}
{\bkmkend AAAAAAADZV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
CSLibrary/RFIDReader/Structures/{\b CSLibrary.Structures.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary.Structures.SelectAction Class Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary.Structures.SelectAction}
{\xe \v CSLibrary.Structures.SelectAction}
{\bkmkstart AAAAAAADZW}
{\bkmkend AAAAAAADZW}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The partitioning of tags into disjoint groups is accomplished by applying actions to the tags that match and/or do not match the specified mask. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SelectAction} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SelectAction} ({\b Target} {\b target}, {\b CSLibrary.Constants.Action} {\b action}, Int32 {\b enableTruncate})\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Custom constructor }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Target} {\b target} = {\b Target.UNKNOWN}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Specifies what flag, selected (i.e., SL) or one of the four inventory flags (i.e., S0, S1, S2, or S3), will be modified by the action. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CSLibrary.Constants.Action} {\b action} = {\b CSLibrary.Constants.Action.UNKNOWN}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Specifies the action that will be applied to the tag populations (i.e, the matching and non-matching tags). }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Int32 {\b enableTruncate} = 0\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Specifies if, during singulation, a tag will respond to a subsequent inventory operation with its entire Electronic Product Code (EPC) or will only respond with the portion of the EPC that immediately follows the bit pattern (as long as the bit pattern falls within the EPC \'96 if the bit pattern does not fall within the tag\'92s EPC, the tag ignores the tag partitioning operation2). If this parameter is non-zero: }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The partitioning of tags into disjoint groups is accomplished by applying actions to the tags that match and/or do not match the specified mask. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v SelectAction\:CSLibrary::Structures::SelectAction}
{\xe \v CSLibrary::Structures::SelectAction\:SelectAction}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CSLibrary.Structures.SelectAction.SelectAction ()}}
\par
{\bkmkstart AAAAAAADZX}
{\bkmkend AAAAAAADZX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v SelectAction\:CSLibrary::Structures::SelectAction}
{\xe \v CSLibrary::Structures::SelectAction\:SelectAction}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CSLibrary.Structures.SelectAction.SelectAction ({\b Target}  {\i target}, {\b CSLibrary.Constants.Action}  {\i action}, Int32  {\i enableTruncate})}}
\par
{\bkmkstart AAAAAAADZY}
{\bkmkend AAAAAAADZY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Custom constructor }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i target} \cell }{Target\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i action} \cell }{{\b CSLibrary.Constants.Action}\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i enableTruncate} \cell }{\cell }
{\row }
}
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v action\:CSLibrary::Structures::SelectAction}
{\xe \v CSLibrary::Structures::SelectAction\:action}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b CSLibrary.Constants.Action} CSLibrary.Structures.SelectAction.action = {\b CSLibrary.Constants.Action.UNKNOWN}}}
\par
{\bkmkstart AAAAAAADZZ}
{\bkmkend AAAAAAADZZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Specifies the action that will be applied to the tag populations (i.e, the matching and non-matching tags). }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v enableTruncate\:CSLibrary::Structures::SelectAction}
{\xe \v CSLibrary::Structures::SelectAction\:enableTruncate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Int32 CSLibrary.Structures.SelectAction.enableTruncate = 0}}
\par
{\bkmkstart AAAAAAAEAA}
{\bkmkend AAAAAAAEAA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Specifies if, during singulation, a tag will respond to a subsequent inventory operation with its entire Electronic Product Code (EPC) or will only respond with the portion of the EPC that immediately follows the bit pattern (as long as the bit pattern falls within the EPC \'96 if the bit pattern does not fall within the tag\'92s EPC, the tag ignores the tag partitioning operation2). If this parameter is non-zero: }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
bank must be MemoryBank.EPC. \par
target must be Target.SELECTED. \par
This action must correspond to the last tag select operation issued before the inventory operation or access command. \par
}}
{\xe \v target\:CSLibrary::Structures::SelectAction}
{\xe \v CSLibrary::Structures::SelectAction\:target}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Target} CSLibrary.Structures.SelectAction.target = {\b Target.UNKNOWN}}}
\par
{\bkmkstart AAAAAAAEAB}
{\bkmkend AAAAAAAEAB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Specifies what flag, selected (i.e., SL) or one of the four inventory flags (i.e., S0, S1, S2, or S3), will be modified by the action. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
CSLibrary/RFIDReader/Structures/{\b Intel.Structures.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary.Structures.SelectCriteria Class Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary.Structures.SelectCriteria}
{\xe \v CSLibrary.Structures.SelectCriteria}
{\bkmkstart AAAAAAAEAC}
{\bkmkend AAAAAAAEAC}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tag-selection criteria }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SelectCriteria} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt32 {\b countCriteria} = 0\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The number of selection criteria in the array pointed to by the pCriteria field. This field must be greater than or equal to zero and less than or equal to the maximum number of selection criteria as specified in [MAC- EDS]. Calling RFID_18K6CSetSelectCriteria with this field set to zero Results in disabling all selection criteria (i.e., even if the SelectFlags.SELECT flag is provided to the appropriate RFID_18K6CTag* function, no selects will be issued). If this field is zero, pCriteria may be NULL. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SelectCriterion} [] {\b pCriteria} = new {\b SelectCriterion}[0]\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A pointer to an array, containing countCriteria entries, of selection criterion structures that are to be applied sequentially, beginning with pCriteria[0], to the tag population. If this field is NULL, countCriteria must be zero. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tag-selection criteria \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v SelectCriteria\:CSLibrary::Structures::SelectCriteria}
{\xe \v CSLibrary::Structures::SelectCriteria\:SelectCriteria}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CSLibrary.Structures.SelectCriteria.SelectCriteria ()}}
\par
{\bkmkstart AAAAAAAEAD}
{\bkmkend AAAAAAAEAD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v countCriteria\:CSLibrary::Structures::SelectCriteria}
{\xe \v CSLibrary::Structures::SelectCriteria\:countCriteria}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt32 CSLibrary.Structures.SelectCriteria.countCriteria = 0}}
\par
{\bkmkstart AAAAAAAEAE}
{\bkmkend AAAAAAAEAE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The number of selection criteria in the array pointed to by the pCriteria field. This field must be greater than or equal to zero and less than or equal to the maximum number of selection criteria as specified in [MAC- EDS]. Calling RFID_18K6CSetSelectCriteria with this field set to zero Results in disabling all selection criteria (i.e., even if the SelectFlags.SELECT flag is provided to the appropriate RFID_18K6CTag* function, no selects will be issued). If this field is zero, pCriteria may be NULL. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v pCriteria\:CSLibrary::Structures::SelectCriteria}
{\xe \v CSLibrary::Structures::SelectCriteria\:pCriteria}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b SelectCriterion} [] CSLibrary.Structures.SelectCriteria.pCriteria = new {\b SelectCriterion}[0]}}
\par
{\bkmkstart AAAAAAAEAF}
{\bkmkend AAAAAAAEAF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A pointer to an array, containing countCriteria entries, of selection criterion structures that are to be applied sequentially, beginning with pCriteria[0], to the tag population. If this field is NULL, countCriteria must be zero. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
CSLibrary/RFIDReader/Structures/{\b Intel.Structures.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary.Structures.SelectCriterion Class Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary.Structures.SelectCriterion}
{\xe \v CSLibrary.Structures.SelectCriterion}
{\bkmkstart AAAAAAAEAG}
{\bkmkend AAAAAAAEAG}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Together, the selection mask and selection action form a single selection criterion. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SelectCriterion} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SelectMask} {\b mask} = new {\b SelectMask}()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The mask that will be applied to a tag to determine if it is matching or non- matching. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SelectAction} {\b action} = new {\b SelectAction}()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The action that is to be applied to matching and/or non-matching tags (as defined by the mask field). }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Together, the selection mask and selection action form a single selection criterion. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v SelectCriterion\:CSLibrary::Structures::SelectCriterion}
{\xe \v CSLibrary::Structures::SelectCriterion\:SelectCriterion}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CSLibrary.Structures.SelectCriterion.SelectCriterion ()}}
\par
{\bkmkstart AAAAAAAEAH}
{\bkmkend AAAAAAAEAH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v action\:CSLibrary::Structures::SelectCriterion}
{\xe \v CSLibrary::Structures::SelectCriterion\:action}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b SelectAction} CSLibrary.Structures.SelectCriterion.action = new {\b SelectAction}()}}
\par
{\bkmkstart AAAAAAAEAI}
{\bkmkend AAAAAAAEAI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The action that is to be applied to matching and/or non-matching tags (as defined by the mask field). }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v mask\:CSLibrary::Structures::SelectCriterion}
{\xe \v CSLibrary::Structures::SelectCriterion\:mask}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b SelectMask} CSLibrary.Structures.SelectCriterion.mask = new {\b SelectMask}()}}
\par
{\bkmkstart AAAAAAAEAJ}
{\bkmkend AAAAAAAEAJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The mask that will be applied to a tag to determine if it is matching or non- matching. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
CSLibrary/RFIDReader/Structures/{\b Intel.Structures.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary.Structures.SelectMask Class Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary.Structures.SelectMask}
{\xe \v CSLibrary.Structures.SelectMask}
{\bkmkstart AAAAAAAEAK}
{\bkmkend AAAAAAAEAK}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The tag mask is used to specify a bit pattern that is used to match against one of a tag's memory banks to determine if it is matching or non-matching. A mask is a combination of a memory bank and a sequence of bits that will be matched at the specified offset within the chosen memory bank. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SelectMask} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SelectMask} ({\b MemoryBank} {\b bank}, UInt32 {\b offset}, UInt32 {\b count}, Byte[] epc)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Custom constructor }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b MemoryBank} {\b bank} = {\b MemoryBank.UNKNOWN}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The memory bank that contains the bits that will be compared against the bit pattern specified in mask. For a tag mask, MemoryBank.RESERVED is not a valid value. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt32 {\b offset} = 0\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The offset, in bits, from the start of the memory bank, of the first bit that will be matched against the mask. If offset falls beyond the end of the memory bank, the tag is considered non-matching. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt32 {\b count} = 0\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The number of bits in the mask. A length of zero will cause all tags to match. If (offset+count) falls beyond the end of the memory bank, the tag is considered non-matching. Valid values are 0 to 255, inclusive. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Byte [] {\b m_mask} = new Byte[32]\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A buffer that contains a left-justified bit array that represents that bit pattern to match }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Properties\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Byte [] {\b mask}{\f2  [get, set]}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A buffer that contains a left-justified bit array that represents that bit pattern to match \'96 i.e., the most significant bit of the bit array appears in the most-significant bit (i.e., bit 7) of the first byte of the buffer (i.e., mask[0]). All bits beyond count are ignored. For example, if the application wished to find tags with the following 12 bits 1000.1100.1101, starting at offset 16 in the EPC memory bank, then the fields would be set as follows: bank = RFID_18K6C_MEMORY_BANK_EPC offset = 16 count = 12 mask[0] = 0x8C (1000.1100) mask[1] = 0xD? (1101.????) }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The tag mask is used to specify a bit pattern that is used to match against one of a tag's memory banks to determine if it is matching or non-matching. A mask is a combination of a memory bank and a sequence of bits that will be matched at the specified offset within the chosen memory bank. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v SelectMask\:CSLibrary::Structures::SelectMask}
{\xe \v CSLibrary::Structures::SelectMask\:SelectMask}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CSLibrary.Structures.SelectMask.SelectMask ()}}
\par
{\bkmkstart AAAAAAAEAL}
{\bkmkend AAAAAAAEAL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v SelectMask\:CSLibrary::Structures::SelectMask}
{\xe \v CSLibrary::Structures::SelectMask\:SelectMask}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CSLibrary.Structures.SelectMask.SelectMask ({\b MemoryBank}  {\i bank}, UInt32  {\i offset}, UInt32  {\i count}, Byte []  {\i epc})}}
\par
{\bkmkstart AAAAAAAEAM}
{\bkmkend AAAAAAAEAM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Custom constructor }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i bank} \cell }{Memory bank\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i offset} \cell }{offset in bit\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i count} \cell }{count in bit\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i epc} \cell }{epc mask\cell }
{\row }
}
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v bank\:CSLibrary::Structures::SelectMask}
{\xe \v CSLibrary::Structures::SelectMask\:bank}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b MemoryBank} CSLibrary.Structures.SelectMask.bank = {\b MemoryBank.UNKNOWN}}}
\par
{\bkmkstart AAAAAAAEAN}
{\bkmkend AAAAAAAEAN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The memory bank that contains the bits that will be compared against the bit pattern specified in mask. For a tag mask, MemoryBank.RESERVED is not a valid value. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v count\:CSLibrary::Structures::SelectMask}
{\xe \v CSLibrary::Structures::SelectMask\:count}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt32 CSLibrary.Structures.SelectMask.count = 0}}
\par
{\bkmkstart AAAAAAAEAO}
{\bkmkend AAAAAAAEAO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The number of bits in the mask. A length of zero will cause all tags to match. If (offset+count) falls beyond the end of the memory bank, the tag is considered non-matching. Valid values are 0 to 255, inclusive. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v m_mask\:CSLibrary::Structures::SelectMask}
{\xe \v CSLibrary::Structures::SelectMask\:m_mask}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Byte [] CSLibrary.Structures.SelectMask.m_mask = new Byte[32]{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEAP}
{\bkmkend AAAAAAAEAP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A buffer that contains a left-justified bit array that represents that bit pattern to match }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v offset\:CSLibrary::Structures::SelectMask}
{\xe \v CSLibrary::Structures::SelectMask\:offset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt32 CSLibrary.Structures.SelectMask.offset = 0}}
\par
{\bkmkstart AAAAAAAEAQ}
{\bkmkend AAAAAAAEAQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The offset, in bits, from the start of the memory bank, of the first bit that will be matched against the mask. If offset falls beyond the end of the memory bank, the tag is considered non-matching. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Property Documentation\par
\pard\plain 
{\xe \v mask\:CSLibrary::Structures::SelectMask}
{\xe \v CSLibrary::Structures::SelectMask\:mask}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Byte [] CSLibrary.Structures.SelectMask.mask{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAAEAR}
{\bkmkend AAAAAAAEAR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A buffer that contains a left-justified bit array that represents that bit pattern to match \'96 i.e., the most significant bit of the bit array appears in the most-significant bit (i.e., bit 7) of the first byte of the buffer (i.e., mask[0]). All bits beyond count are ignored. For example, if the application wished to find tags with the following 12 bits 1000.1100.1101, starting at offset 16 in the EPC memory bank, then the fields would be set as follows: bank = RFID_18K6C_MEMORY_BANK_EPC offset = 16 count = 12 mask[0] = 0x8C (1000.1100) mask[1] = 0xD? (1101.????) }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
CSLibrary/RFIDReader/Structures/{\b Intel.Structures.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary.Structures.SequenceBarcodeParms Class Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary.Structures.SequenceBarcodeParms}
{\xe \v CSLibrary.Structures.SequenceBarcodeParms}
{\bkmkstart AAAAAAAEAS}
{\bkmkend AAAAAAAEAS}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sequence mode barcode descriptor }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Symbol} {\b nSymId}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Symbology Identifier SYM_xxxx }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Int32 {\b nLength}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Match length or 9999 to match any length. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
String {\b tcStartChars}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Match string (from start) }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sequence mode barcode descriptor \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v nLength\:CSLibrary::Barcode::Structures::SequenceBarcodeParms}
{\xe \v CSLibrary::Barcode::Structures::SequenceBarcodeParms\:nLength}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Int32 CSLibrary.Structures.SequenceBarcodeParms.nLength}}
\par
{\bkmkstart AAAAAAAEAT}
{\bkmkend AAAAAAAEAT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Match length or 9999 to match any length. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v nSymId\:CSLibrary::Barcode::Structures::SequenceBarcodeParms}
{\xe \v CSLibrary::Barcode::Structures::SequenceBarcodeParms\:nSymId}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Symbol} CSLibrary.Structures.SequenceBarcodeParms.nSymId}}
\par
{\bkmkstart AAAAAAAEAU}
{\bkmkend AAAAAAAEAU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Symbology Identifier SYM_xxxx }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v tcStartChars\:CSLibrary::Barcode::Structures::SequenceBarcodeParms}
{\xe \v CSLibrary::Barcode::Structures::SequenceBarcodeParms\:tcStartChars}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
String CSLibrary.Structures.SequenceBarcodeParms.tcStartChars}}
\par
{\bkmkstart AAAAAAAEAV}
{\bkmkend AAAAAAAEAV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Match string (from start) }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
CSLibrary/BarcodeReader/Structures/{\b CSLibrary.Barcode.Structures.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary.Structures.SequenceModeParms Class Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary.Structures.SequenceModeParms}
{\xe \v CSLibrary.Structures.SequenceModeParms}
{\bkmkstart AAAAAAAEAW}
{\bkmkend AAAAAAAEAW}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sequence Mode control }}\par
Inheritance diagram for CSLibrary.Structures.SequenceModeParms:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_c_s_library_1_1_barcode_1_1_structures_1_1_sequence_mode_parms.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SequenceModeParms} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SequenceMask} {\b dwMask} = SequenceMask.ALL\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mask of active items. Notes: You can use OR to enable multiple items }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SequenceMode} {\b sequenceMode}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Disabled/Enabled/Enabled and Required. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint {\b dwNumBarCodes}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This MUST be sent if sending seqBarCodes. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SequenceBarcodeParms} [] {\b seqBarCodes} = new {\b SequenceBarcodeParms}[{\b Constants.Constants.MAX_SEQ_BARCODES}]\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Barcodes to sequence in order they are to be sent }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sequence Mode control \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v SequenceModeParms\:CSLibrary::Barcode::Structures::SequenceModeParms}
{\xe \v CSLibrary::Barcode::Structures::SequenceModeParms\:SequenceModeParms}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CSLibrary.Structures.SequenceModeParms.SequenceModeParms ()}}
\par
{\bkmkstart AAAAAAAEAX}
{\bkmkend AAAAAAAEAX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v dwMask\:CSLibrary::Barcode::Structures::SequenceModeParms}
{\xe \v CSLibrary::Barcode::Structures::SequenceModeParms\:dwMask}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b SequenceMask} CSLibrary.Structures.SequenceModeParms.dwMask = SequenceMask.ALL}}
\par
{\bkmkstart AAAAAAAEAY}
{\bkmkend AAAAAAAEAY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mask of active items. Notes: You can use OR to enable multiple items }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v dwNumBarCodes\:CSLibrary::Barcode::Structures::SequenceModeParms}
{\xe \v CSLibrary::Barcode::Structures::SequenceModeParms\:dwNumBarCodes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint CSLibrary.Structures.SequenceModeParms.dwNumBarCodes}}
\par
{\bkmkstart AAAAAAAEAZ}
{\bkmkend AAAAAAAEAZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This MUST be sent if sending seqBarCodes. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v seqBarCodes\:CSLibrary::Barcode::Structures::SequenceModeParms}
{\xe \v CSLibrary::Barcode::Structures::SequenceModeParms\:seqBarCodes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b SequenceBarcodeParms} [] CSLibrary.Structures.SequenceModeParms.seqBarCodes = new {\b SequenceBarcodeParms}[{\b Constants.Constants.MAX_SEQ_BARCODES}]}}
\par
{\bkmkstart AAAAAAAEBA}
{\bkmkend AAAAAAAEBA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Barcodes to sequence in order they are to be sent }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v sequenceMode\:CSLibrary::Barcode::Structures::SequenceModeParms}
{\xe \v CSLibrary::Barcode::Structures::SequenceModeParms\:sequenceMode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b SequenceMode} CSLibrary.Structures.SequenceModeParms.sequenceMode}}
\par
{\bkmkstart AAAAAAAEBB}
{\bkmkend AAAAAAAEBB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Disabled/Enabled/Enabled and Required. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
CSLibrary/BarcodeReader/Structures/{\b CSLibrary.Barcode.Structures.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary.SiliconLabIC Class Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary.SiliconLabIC}
{\xe \v CSLibrary.SiliconLabIC}
{\bkmkstart AAAAAAABJY}
{\bkmkend AAAAAAABJY}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Constants}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b DOWNLINKCMD}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Events}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt32 {\b GetFirmwareVersion} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b GetSerialNumber} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b _firmwareOlderT108} = false\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Events\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b CSLibrary.SiliconLabIC.Events.OnAccessCompletedEventArgs} > {\b OnAccessCompleted}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte [] {\b _version} = new byte[3]\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b HighLevelInterface} {\b _deviceHandler}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v GetFirmwareVersion\:CSLibrary::SiliconLabIC}
{\xe \v CSLibrary::SiliconLabIC\:GetFirmwareVersion}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt32 CSLibrary.SiliconLabIC.GetFirmwareVersion ()}}
\par
{\bkmkstart AAAAAAABJZ}
{\bkmkend AAAAAAABJZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GetSerialNumber\:CSLibrary::SiliconLabIC}
{\xe \v CSLibrary::SiliconLabIC\:GetSerialNumber}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CSLibrary.SiliconLabIC.GetSerialNumber ()}}
\par
{\bkmkstart AAAAAAABKA}
{\bkmkend AAAAAAABKA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v _deviceHandler\:CSLibrary::SiliconLabIC}
{\xe \v CSLibrary::SiliconLabIC\:_deviceHandler}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b HighLevelInterface} CSLibrary.SiliconLabIC._deviceHandler{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABKB}
{\bkmkend AAAAAAABKB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v _firmwareOlderT108\:CSLibrary::SiliconLabIC}
{\xe \v CSLibrary::SiliconLabIC\:_firmwareOlderT108}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool CSLibrary.SiliconLabIC._firmwareOlderT108 = false}}
\par
{\bkmkstart AAAAAAABKC}
{\bkmkend AAAAAAABKC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v _version\:CSLibrary::SiliconLabIC}
{\xe \v CSLibrary::SiliconLabIC\:_version}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte [] CSLibrary.SiliconLabIC._version = new byte[3]{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABKD}
{\bkmkend AAAAAAABKD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Event Documentation\par
\pard\plain 
{\xe \v OnAccessCompleted\:CSLibrary::SiliconLabIC}
{\xe \v CSLibrary::SiliconLabIC\:OnAccessCompleted}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
EventHandler<{\b CSLibrary.SiliconLabIC.Events.OnAccessCompletedEventArgs}> CSLibrary.SiliconLabIC.OnAccessCompleted}}
\par
{\bkmkstart AAAAAAABKE}
{\bkmkend AAAAAAABKE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
CSLibrary/SiliconLabIC/{\b ClassEvent.cs}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
CSLibrary/SiliconLabIC/{\b ClassSiliconLabIC.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary.Structures.SingulationAlgorithmParms Class Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary.Structures.SingulationAlgorithmParms}
{\xe \v CSLibrary.Structures.SingulationAlgorithmParms}
{\bkmkstart AAAAAAAEBC}
{\bkmkend AAAAAAAEBC}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b SingulationAlgorithmParms} }}\par
Inheritance diagram for CSLibrary.Structures.SingulationAlgorithmParms:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_c_s_library_1_1_structures_1_1_singulation_algorithm_parms.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SingulationAlgorithmParms} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt32 {\b length_} = 4\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure size }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Properties\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt32 {\b length}{\f2  [get]}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure size }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b SingulationAlgorithmParms} \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v SingulationAlgorithmParms\:CSLibrary::Structures::SingulationAlgorithmParms}
{\xe \v CSLibrary::Structures::SingulationAlgorithmParms\:SingulationAlgorithmParms}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CSLibrary.Structures.SingulationAlgorithmParms.SingulationAlgorithmParms ()}}
\par
{\bkmkstart AAAAAAAEBD}
{\bkmkend AAAAAAAEBD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v length_\:CSLibrary::Structures::SingulationAlgorithmParms}
{\xe \v CSLibrary::Structures::SingulationAlgorithmParms\:length_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt32 CSLibrary.Structures.SingulationAlgorithmParms.length_ = 4{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEBE}
{\bkmkend AAAAAAAEBE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure size }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Property Documentation\par
\pard\plain 
{\xe \v length\:CSLibrary::Structures::SingulationAlgorithmParms}
{\xe \v CSLibrary::Structures::SingulationAlgorithmParms\:length}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt32 CSLibrary.Structures.SingulationAlgorithmParms.length{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAEBF}
{\bkmkend AAAAAAAEBF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure size }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
CSLibrary/RFIDReader/Structures/{\b Intel.Structures.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary.Structures.SingulationCriteria Class Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary.Structures.SingulationCriteria}
{\xe \v CSLibrary.Structures.SingulationCriteria}
{\bkmkstart AAAAAAAEBG}
{\bkmkend AAAAAAAEBG}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Post-singulation match criteria can be grouped together using the following: }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SingulationCriteria} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt32 {\b countCriteria} = 0\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The number of singulation criteria in the array pointed to by the pCriteria field. This field must be greater than or equal to zero and less than or equal to the maximum number of post-singulation criteria as specified in [MAC-EDS]. Calling CSLibrary.HighLevelInterface.SetPostMatchCriteria(CSLibrary.Structures.SingulationCriterion[]) with this field set to zero Results in disabling all post-singulation criteria (i.e., even if the SelectFlags.POST_MATCH flag is provided to the appropriate RFID_18K6CTag* function, no post-singulation matching will be performed \'96 the Result is that all tags are considered matching). If this field is zero, pCriteria may be NULL. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SingulationCriterion} [] {\b pCriteria} = new {\b SingulationCriterion}[0]\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A pointer to an array, containing countCriteria entries, of post- singulation criterion structures that are to be applied sequentially, beginning with pCriteria[0], to singulated tags. This must not be NULL. If this field is NULL, countCriteria must be zero. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Post-singulation match criteria can be grouped together using the following: \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v SingulationCriteria\:CSLibrary::Structures::SingulationCriteria}
{\xe \v CSLibrary::Structures::SingulationCriteria\:SingulationCriteria}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CSLibrary.Structures.SingulationCriteria.SingulationCriteria ()}}
\par
{\bkmkstart AAAAAAAEBH}
{\bkmkend AAAAAAAEBH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v countCriteria\:CSLibrary::Structures::SingulationCriteria}
{\xe \v CSLibrary::Structures::SingulationCriteria\:countCriteria}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt32 CSLibrary.Structures.SingulationCriteria.countCriteria = 0}}
\par
{\bkmkstart AAAAAAAEBI}
{\bkmkend AAAAAAAEBI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The number of singulation criteria in the array pointed to by the pCriteria field. This field must be greater than or equal to zero and less than or equal to the maximum number of post-singulation criteria as specified in [MAC-EDS]. Calling CSLibrary.HighLevelInterface.SetPostMatchCriteria(CSLibrary.Structures.SingulationCriterion[]) with this field set to zero Results in disabling all post-singulation criteria (i.e., even if the SelectFlags.POST_MATCH flag is provided to the appropriate RFID_18K6CTag* function, no post-singulation matching will be performed \'96 the Result is that all tags are considered matching). If this field is zero, pCriteria may be NULL. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v pCriteria\:CSLibrary::Structures::SingulationCriteria}
{\xe \v CSLibrary::Structures::SingulationCriteria\:pCriteria}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b SingulationCriterion} [] CSLibrary.Structures.SingulationCriteria.pCriteria = new {\b SingulationCriterion}[0]}}
\par
{\bkmkstart AAAAAAAEBJ}
{\bkmkend AAAAAAAEBJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A pointer to an array, containing countCriteria entries, of post- singulation criterion structures that are to be applied sequentially, beginning with pCriteria[0], to singulated tags. This must not be NULL. If this field is NULL, countCriteria must be zero. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
CSLibrary/RFIDReader/Structures/{\b Intel.Structures.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary.Structures.SingulationCriterion Class Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary.Structures.SingulationCriterion}
{\xe \v CSLibrary.Structures.SingulationCriterion}
{\bkmkstart AAAAAAAEBK}
{\bkmkend AAAAAAAEBK}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Together, the selection mask and an indication if the application is interested in matching or non-matching tags form a single post-singulation match criterion. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SingulationCriterion} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt32 {\b match} = 0\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Determines if the associated tag-protocol operation will be applied to tags that match the mask or not. A non-zero value indicates that the tag-protocol operation should be applied to tags that match the mask. A value of zero indicates that the tag-protocol operation should be applied to tags that do not match the mask. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SingulationMask} {\b mask} = new {\b SingulationMask}()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The mask that will be applied to the tag\'92s Electronic Product Code to determine if it is matching or non-matching. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Together, the selection mask and an indication if the application is interested in matching or non-matching tags form a single post-singulation match criterion. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v SingulationCriterion\:CSLibrary::Structures::SingulationCriterion}
{\xe \v CSLibrary::Structures::SingulationCriterion\:SingulationCriterion}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CSLibrary.Structures.SingulationCriterion.SingulationCriterion ()}}
\par
{\bkmkstart AAAAAAAEBL}
{\bkmkend AAAAAAAEBL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v mask\:CSLibrary::Structures::SingulationCriterion}
{\xe \v CSLibrary::Structures::SingulationCriterion\:mask}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b SingulationMask} CSLibrary.Structures.SingulationCriterion.mask = new {\b SingulationMask}()}}
\par
{\bkmkstart AAAAAAAEBM}
{\bkmkend AAAAAAAEBM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The mask that will be applied to the tag\'92s Electronic Product Code to determine if it is matching or non-matching. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v match\:CSLibrary::Structures::SingulationCriterion}
{\xe \v CSLibrary::Structures::SingulationCriterion\:match}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt32 CSLibrary.Structures.SingulationCriterion.match = 0}}
\par
{\bkmkstart AAAAAAAEBN}
{\bkmkend AAAAAAAEBN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Determines if the associated tag-protocol operation will be applied to tags that match the mask or not. A non-zero value indicates that the tag-protocol operation should be applied to tags that match the mask. A value of zero indicates that the tag-protocol operation should be applied to tags that do not match the mask. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
CSLibrary/RFIDReader/Structures/{\b Intel.Structures.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary.Structures.SingulationMask Class Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary.Structures.SingulationMask}
{\xe \v CSLibrary.Structures.SingulationMask}
{\bkmkstart AAAAAAAEBO}
{\bkmkend AAAAAAAEBO}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The post-singulation match mask is used to specify a bit pattern of up to 496 bits that is used to match against the EPC backscattered by a tag during singulation to determine if a tag is matching or non-matching. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SingulationMask} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SingulationMask} (UInt32 {\b offset}, UInt32 {\b count}, Byte[] {\b mask})\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt32 {\b offset} = 0\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The offset in bits, from the start of the Electronic Product Code (EPC), of the first bit that will be matched against the mask. If offset falls beyond the end of EPC, the tag is considered non-matching. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt32 {\b count} = 0\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The number of bits in the mask. A length of zero will cause all tags to match. If (offset+count) falls beyond the end of the EPC, the tag is considered non-matching. Valid values are 0 to 496, inclusive. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Byte [] {\b m_mask} = new Byte[62]\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Properties\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Byte [] {\b mask}{\f2  [get, set]}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A buffer that contains a left-justified bit array that represents that bit pattern to match \'96 i.e., the most significant bit of the bit array appears in the most-significant bit (i.e., bit 7) of the first byte of the buffer (i.e., mask[0]). All bits beyond count are ignored. For example, if the application wished to find tags with the following 16 bits 1011.1111.1010.0101, starting at offset 20 in the Electronic Product Code, then the fields would be set as follows: offset = 20 count = 16 mask[0] = 0xBF (1011.1111) mask[1] = 0xA5 (1010.0101) }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The post-singulation match mask is used to specify a bit pattern of up to 496 bits that is used to match against the EPC backscattered by a tag during singulation to determine if a tag is matching or non-matching. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v SingulationMask\:CSLibrary::Structures::SingulationMask}
{\xe \v CSLibrary::Structures::SingulationMask\:SingulationMask}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CSLibrary.Structures.SingulationMask.SingulationMask ()}}
\par
{\bkmkstart AAAAAAAEBP}
{\bkmkend AAAAAAAEBP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v SingulationMask\:CSLibrary::Structures::SingulationMask}
{\xe \v CSLibrary::Structures::SingulationMask\:SingulationMask}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CSLibrary.Structures.SingulationMask.SingulationMask (UInt32  {\i offset}, UInt32  {\i count}, Byte []  {\i mask})}}
\par
{\bkmkstart AAAAAAAEBQ}
{\bkmkend AAAAAAAEBQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i offset} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i count} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i mask} \cell }{\cell }
{\row }
}
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v count\:CSLibrary::Structures::SingulationMask}
{\xe \v CSLibrary::Structures::SingulationMask\:count}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt32 CSLibrary.Structures.SingulationMask.count = 0}}
\par
{\bkmkstart AAAAAAAEBR}
{\bkmkend AAAAAAAEBR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The number of bits in the mask. A length of zero will cause all tags to match. If (offset+count) falls beyond the end of the EPC, the tag is considered non-matching. Valid values are 0 to 496, inclusive. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v m_mask\:CSLibrary::Structures::SingulationMask}
{\xe \v CSLibrary::Structures::SingulationMask\:m_mask}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Byte [] CSLibrary.Structures.SingulationMask.m_mask = new Byte[62]{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEBS}
{\bkmkend AAAAAAAEBS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
}}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v offset\:CSLibrary::Structures::SingulationMask}
{\xe \v CSLibrary::Structures::SingulationMask\:offset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt32 CSLibrary.Structures.SingulationMask.offset = 0}}
\par
{\bkmkstart AAAAAAAEBT}
{\bkmkend AAAAAAAEBT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The offset in bits, from the start of the Electronic Product Code (EPC), of the first bit that will be matched against the mask. If offset falls beyond the end of EPC, the tag is considered non-matching. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Property Documentation\par
\pard\plain 
{\xe \v mask\:CSLibrary::Structures::SingulationMask}
{\xe \v CSLibrary::Structures::SingulationMask\:mask}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Byte [] CSLibrary.Structures.SingulationMask.mask{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAAEBU}
{\bkmkend AAAAAAAEBU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A buffer that contains a left-justified bit array that represents that bit pattern to match \'96 i.e., the most significant bit of the bit array appears in the most-significant bit (i.e., bit 7) of the first byte of the buffer (i.e., mask[0]). All bits beyond count are ignored. For example, if the application wished to find tags with the following 16 bits 1011.1111.1010.0101, starting at offset 20 in the Electronic Product Code, then the fields would be set as follows: offset = 20 count = 16 mask[0] = 0xBF (1011.1111) mask[1] = 0xA5 (1010.0101) }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
CSLibrary/RFIDReader/Structures/{\b Intel.Structures.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary.Structures.SIZE Struct Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary.Structures.SIZE}
{\xe \v CSLibrary.Structures.SIZE}
{\bkmkstart AAAAAAAEBV}
{\bkmkend AAAAAAAEBV}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Image Size }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b width}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
width }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b height}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
height }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Image Size \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v height\:CSLibrary::Barcode::Structures::SIZE}
{\xe \v CSLibrary::Barcode::Structures::SIZE\:height}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int CSLibrary.Structures.SIZE.height}}
\par
{\bkmkstart AAAAAAAEBW}
{\bkmkend AAAAAAAEBW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
height }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v width\:CSLibrary::Barcode::Structures::SIZE}
{\xe \v CSLibrary::Barcode::Structures::SIZE\:width}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int CSLibrary.Structures.SIZE.width}}
\par
{\bkmkstart AAAAAAAEBX}
{\bkmkend AAAAAAAEBX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
width }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
CSLibrary/BarcodeReader/Structures/{\b CSLibrary.Barcode.Structures.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary.Structures.SymbologyParms Class Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary.Structures.SymbologyParms}
{\xe \v CSLibrary.Structures.SymbologyParms}
{\bkmkstart AAAAAAAEBY}
{\bkmkend AAAAAAAEBY}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure of structures, one for each symbology. /summary> }}\par
Inheritance diagram for CSLibrary.Structures.SymbologyParms:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_c_s_library_1_1_barcode_1_1_structures_1_1_symbology_parms.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SymbologyParms} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CODABAR_T} {\b codabar} = new {\b CODABAR_T}()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CODABAR Configuration }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CODE11_T} {\b code11} = new {\b CODE11_T}()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CODE11 Configuration }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CODE128_T} {\b code128} = new {\b CODE128_T}()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CODE11 Configuration }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CODE39_T} {\b code39} = new {\b CODE39_T}()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CODE39 Configuration }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CODE49_T} {\b code49} = new {\b CODE49_T}()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CODE49 Configuration }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CODE93_T} {\b code93} = new {\b CODE93_T}()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CODE93 Configuration }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b COMPOSITE_T} {\b composite} = new {\b COMPOSITE_T}()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
COMPOSITE Configuration }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DATAMATRIX_T} {\b datamatrix} = new {\b DATAMATRIX_T}()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
DATAMATRIX Configuration }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EAN8_T} {\b ean8} = new {\b EAN8_T}()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EAN8 Configuration }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EAN13_T} {\b ean13} = new {\b EAN13_T}()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EAN13 Configuration }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b IATA25_T} {\b iata25} = new {\b IATA25_T}()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
IATA25 Configuration }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b INT25_T} {\b int2of5} = new {\b INT25_T}()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
INT25 Configuration }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ISBT_T} {\b isbt} = new {\b ISBT_T}()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ISBT Configuration }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b MSI_T} {\b msi} = new {\b MSI_T}()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
MSI Configuration }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b UPCA_T} {\b upcA} = new {\b UPCA_T}()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
UPCA Configuration }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b UPCE_T} {\b upcE} = new {\b UPCE_T}()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
UPCE Configuration }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b AUSPOST_T} {\b australiaPost} = new {\b AUSPOST_T}()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
AUSPOST Configuration }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b BPO_T} {\b britishPost} = new {\b BPO_T}()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
BPO Configuration }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CANPOST_T} {\b canadaPost} = new {\b CANPOST_T}()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CANPOST Configuration }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DUTCHPOST_T} {\b dutchPost} = new {\b DUTCHPOST_T}()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
DUTCHPOST Configuration }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b JAPOST_T} {\b japanPost} = new {\b JAPOST_T}()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
JAPOST Configuration }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b PLANET_T} {\b usPlanet} = new {\b PLANET_T}()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PLANET Configuration }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b POSTNET_T} {\b usPostnet} = new {\b POSTNET_T}()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
POSTNET Configuration }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b AZTEC_T} {\b aztec} = new {\b AZTEC_T}()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
AZTEC Configuration }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b MESA_T} {\b aztecMesa} = new {\b MESA_T}()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
MESA Configuration }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CODABLOCK_T} {\b codablock} = new {\b CODABLOCK_T}()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CODABLOCK Configuration }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b MAXICODE_T} {\b maxicode} = new {\b MAXICODE_T}()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
MAXICODE Configuration }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b MICROPDF_T} {\b microPDF} = new {\b MICROPDF_T}()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
MICROPDF Configuration }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b PDF417_T} {\b pdf417} = new {\b PDF417_T}()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PDF417 Configuration }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QR_T} {\b qr} = new {\b QR_T}()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
QR Configuration }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RSS_T} {\b rss} = new {\b RSS_T}()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RSS Configuration }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TLCODE39_T} {\b tlCode39} = new {\b TLCODE39_T}()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
TLCODE39 Configuration }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b OCR_T} {\b ocr} = new {\b OCR_T}()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OCR Configuration }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b MATRIX25_T} {\b matrix25} = new {\b MATRIX25_T}()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
MATRIX25 Configuration }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b KORPOST_T} {\b koreaPost} = new {\b KORPOST_T}()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
KORPOST Configuration }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TRIOPTIC_T} {\b triopticCode} = new {\b TRIOPTIC_T}()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
TRIOPTIC Configuration }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CODE32_T} {\b code32} = new {\b CODE32_T}()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CODE32 Configuration }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CODE25_T} {\b code2of5} = new {\b CODE25_T}()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CODE25 Configuration }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b PLESSEY_T} {\b plesseyCode} = new {\b PLESSEY_T}()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PLESSEY Configuration }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CHINAPOST_T} {\b chinaPost} = new {\b CHINAPOST_T}()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CHINAPOST Configuration }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TELEPEN_T} {\b telepen} = new {\b TELEPEN_T}()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
TELEPEN Configuration }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CODE16K_T} {\b code16k} = new {\b CODE16K_T}()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CODE16K Configuration }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b POSICODE_T} {\b posiCode} = new {\b POSICODE_T}()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
POSICODE Configuration }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b COUPONCODE_T} {\b couponCode} = new {\b COUPONCODE_T}()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
COUPONCODE Configuration }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b UPUIDTAG_T} {\b upuIdTag} = new {\b UPUIDTAG_T}()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
UPUIDTAG Configuration }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CODE4CB_T} {\b code4CB} = new {\b CODE4CB_T}()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CODE4CB Configuration }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure of structures, one for each symbology. /summary> \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v SymbologyParms\:CSLibrary::Barcode::Structures::SymbologyParms}
{\xe \v CSLibrary::Barcode::Structures::SymbologyParms\:SymbologyParms}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CSLibrary.Structures.SymbologyParms.SymbologyParms ()}}
\par
{\bkmkstart AAAAAAAEBZ}
{\bkmkend AAAAAAAEBZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v australiaPost\:CSLibrary::Barcode::Structures::SymbologyParms}
{\xe \v CSLibrary::Barcode::Structures::SymbologyParms\:australiaPost}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b AUSPOST_T} CSLibrary.Structures.SymbologyParms.australiaPost = new {\b AUSPOST_T}()}}
\par
{\bkmkstart AAAAAAAECA}
{\bkmkend AAAAAAAECA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
AUSPOST Configuration }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v aztec\:CSLibrary::Barcode::Structures::SymbologyParms}
{\xe \v CSLibrary::Barcode::Structures::SymbologyParms\:aztec}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b AZTEC_T} CSLibrary.Structures.SymbologyParms.aztec = new {\b AZTEC_T}()}}
\par
{\bkmkstart AAAAAAAECB}
{\bkmkend AAAAAAAECB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
AZTEC Configuration }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v aztecMesa\:CSLibrary::Barcode::Structures::SymbologyParms}
{\xe \v CSLibrary::Barcode::Structures::SymbologyParms\:aztecMesa}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b MESA_T} CSLibrary.Structures.SymbologyParms.aztecMesa = new {\b MESA_T}()}}
\par
{\bkmkstart AAAAAAAECC}
{\bkmkend AAAAAAAECC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
MESA Configuration }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v britishPost\:CSLibrary::Barcode::Structures::SymbologyParms}
{\xe \v CSLibrary::Barcode::Structures::SymbologyParms\:britishPost}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b BPO_T} CSLibrary.Structures.SymbologyParms.britishPost = new {\b BPO_T}()}}
\par
{\bkmkstart AAAAAAAECD}
{\bkmkend AAAAAAAECD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
BPO Configuration }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v canadaPost\:CSLibrary::Barcode::Structures::SymbologyParms}
{\xe \v CSLibrary::Barcode::Structures::SymbologyParms\:canadaPost}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b CANPOST_T} CSLibrary.Structures.SymbologyParms.canadaPost = new {\b CANPOST_T}()}}
\par
{\bkmkstart AAAAAAAECE}
{\bkmkend AAAAAAAECE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CANPOST Configuration }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v chinaPost\:CSLibrary::Barcode::Structures::SymbologyParms}
{\xe \v CSLibrary::Barcode::Structures::SymbologyParms\:chinaPost}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b CHINAPOST_T} CSLibrary.Structures.SymbologyParms.chinaPost = new {\b CHINAPOST_T}()}}
\par
{\bkmkstart AAAAAAAECF}
{\bkmkend AAAAAAAECF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CHINAPOST Configuration }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v codabar\:CSLibrary::Barcode::Structures::SymbologyParms}
{\xe \v CSLibrary::Barcode::Structures::SymbologyParms\:codabar}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b CODABAR_T} CSLibrary.Structures.SymbologyParms.codabar = new {\b CODABAR_T}()}}
\par
{\bkmkstart AAAAAAAECG}
{\bkmkend AAAAAAAECG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CODABAR Configuration }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v codablock\:CSLibrary::Barcode::Structures::SymbologyParms}
{\xe \v CSLibrary::Barcode::Structures::SymbologyParms\:codablock}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b CODABLOCK_T} CSLibrary.Structures.SymbologyParms.codablock = new {\b CODABLOCK_T}()}}
\par
{\bkmkstart AAAAAAAECH}
{\bkmkend AAAAAAAECH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CODABLOCK Configuration }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v code11\:CSLibrary::Barcode::Structures::SymbologyParms}
{\xe \v CSLibrary::Barcode::Structures::SymbologyParms\:code11}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b CODE11_T} CSLibrary.Structures.SymbologyParms.code11 = new {\b CODE11_T}()}}
\par
{\bkmkstart AAAAAAAECI}
{\bkmkend AAAAAAAECI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CODE11 Configuration }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v code128\:CSLibrary::Barcode::Structures::SymbologyParms}
{\xe \v CSLibrary::Barcode::Structures::SymbologyParms\:code128}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b CODE128_T} CSLibrary.Structures.SymbologyParms.code128 = new {\b CODE128_T}()}}
\par
{\bkmkstart AAAAAAAECJ}
{\bkmkend AAAAAAAECJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CODE11 Configuration }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CODE128 Configuration \par
}}
{\xe \v code16k\:CSLibrary::Barcode::Structures::SymbologyParms}
{\xe \v CSLibrary::Barcode::Structures::SymbologyParms\:code16k}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b CODE16K_T} CSLibrary.Structures.SymbologyParms.code16k = new {\b CODE16K_T}()}}
\par
{\bkmkstart AAAAAAAECK}
{\bkmkend AAAAAAAECK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CODE16K Configuration }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v code2of5\:CSLibrary::Barcode::Structures::SymbologyParms}
{\xe \v CSLibrary::Barcode::Structures::SymbologyParms\:code2of5}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b CODE25_T} CSLibrary.Structures.SymbologyParms.code2of5 = new {\b CODE25_T}()}}
\par
{\bkmkstart AAAAAAAECL}
{\bkmkend AAAAAAAECL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CODE25 Configuration }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v code32\:CSLibrary::Barcode::Structures::SymbologyParms}
{\xe \v CSLibrary::Barcode::Structures::SymbologyParms\:code32}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b CODE32_T} CSLibrary.Structures.SymbologyParms.code32 = new {\b CODE32_T}()}}
\par
{\bkmkstart AAAAAAAECM}
{\bkmkend AAAAAAAECM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CODE32 Configuration }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v code39\:CSLibrary::Barcode::Structures::SymbologyParms}
{\xe \v CSLibrary::Barcode::Structures::SymbologyParms\:code39}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b CODE39_T} CSLibrary.Structures.SymbologyParms.code39 = new {\b CODE39_T}()}}
\par
{\bkmkstart AAAAAAAECN}
{\bkmkend AAAAAAAECN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CODE39 Configuration }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v code49\:CSLibrary::Barcode::Structures::SymbologyParms}
{\xe \v CSLibrary::Barcode::Structures::SymbologyParms\:code49}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b CODE49_T} CSLibrary.Structures.SymbologyParms.code49 = new {\b CODE49_T}()}}
\par
{\bkmkstart AAAAAAAECO}
{\bkmkend AAAAAAAECO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CODE49 Configuration }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v code4CB\:CSLibrary::Barcode::Structures::SymbologyParms}
{\xe \v CSLibrary::Barcode::Structures::SymbologyParms\:code4CB}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b CODE4CB_T} CSLibrary.Structures.SymbologyParms.code4CB = new {\b CODE4CB_T}()}}
\par
{\bkmkstart AAAAAAAECP}
{\bkmkend AAAAAAAECP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CODE4CB Configuration }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v code93\:CSLibrary::Barcode::Structures::SymbologyParms}
{\xe \v CSLibrary::Barcode::Structures::SymbologyParms\:code93}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b CODE93_T} CSLibrary.Structures.SymbologyParms.code93 = new {\b CODE93_T}()}}
\par
{\bkmkstart AAAAAAAECQ}
{\bkmkend AAAAAAAECQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CODE93 Configuration }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v composite\:CSLibrary::Barcode::Structures::SymbologyParms}
{\xe \v CSLibrary::Barcode::Structures::SymbologyParms\:composite}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b COMPOSITE_T} CSLibrary.Structures.SymbologyParms.composite = new {\b COMPOSITE_T}()}}
\par
{\bkmkstart AAAAAAAECR}
{\bkmkend AAAAAAAECR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
COMPOSITE Configuration }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v couponCode\:CSLibrary::Barcode::Structures::SymbologyParms}
{\xe \v CSLibrary::Barcode::Structures::SymbologyParms\:couponCode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b COUPONCODE_T} CSLibrary.Structures.SymbologyParms.couponCode = new {\b COUPONCODE_T}()}}
\par
{\bkmkstart AAAAAAAECS}
{\bkmkend AAAAAAAECS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
COUPONCODE Configuration }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v datamatrix\:CSLibrary::Barcode::Structures::SymbologyParms}
{\xe \v CSLibrary::Barcode::Structures::SymbologyParms\:datamatrix}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b DATAMATRIX_T} CSLibrary.Structures.SymbologyParms.datamatrix = new {\b DATAMATRIX_T}()}}
\par
{\bkmkstart AAAAAAAECT}
{\bkmkend AAAAAAAECT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
DATAMATRIX Configuration }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v dutchPost\:CSLibrary::Barcode::Structures::SymbologyParms}
{\xe \v CSLibrary::Barcode::Structures::SymbologyParms\:dutchPost}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b DUTCHPOST_T} CSLibrary.Structures.SymbologyParms.dutchPost = new {\b DUTCHPOST_T}()}}
\par
{\bkmkstart AAAAAAAECU}
{\bkmkend AAAAAAAECU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
DUTCHPOST Configuration }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v ean13\:CSLibrary::Barcode::Structures::SymbologyParms}
{\xe \v CSLibrary::Barcode::Structures::SymbologyParms\:ean13}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EAN13_T} CSLibrary.Structures.SymbologyParms.ean13 = new {\b EAN13_T}()}}
\par
{\bkmkstart AAAAAAAECV}
{\bkmkend AAAAAAAECV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EAN13 Configuration }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v ean8\:CSLibrary::Barcode::Structures::SymbologyParms}
{\xe \v CSLibrary::Barcode::Structures::SymbologyParms\:ean8}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EAN8_T} CSLibrary.Structures.SymbologyParms.ean8 = new {\b EAN8_T}()}}
\par
{\bkmkstart AAAAAAAECW}
{\bkmkend AAAAAAAECW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EAN8 Configuration }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v iata25\:CSLibrary::Barcode::Structures::SymbologyParms}
{\xe \v CSLibrary::Barcode::Structures::SymbologyParms\:iata25}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b IATA25_T} CSLibrary.Structures.SymbologyParms.iata25 = new {\b IATA25_T}()}}
\par
{\bkmkstart AAAAAAAECX}
{\bkmkend AAAAAAAECX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
IATA25 Configuration }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v int2of5\:CSLibrary::Barcode::Structures::SymbologyParms}
{\xe \v CSLibrary::Barcode::Structures::SymbologyParms\:int2of5}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b INT25_T} CSLibrary.Structures.SymbologyParms.int2of5 = new {\b INT25_T}()}}
\par
{\bkmkstart AAAAAAAECY}
{\bkmkend AAAAAAAECY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
INT25 Configuration }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v isbt\:CSLibrary::Barcode::Structures::SymbologyParms}
{\xe \v CSLibrary::Barcode::Structures::SymbologyParms\:isbt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b ISBT_T} CSLibrary.Structures.SymbologyParms.isbt = new {\b ISBT_T}()}}
\par
{\bkmkstart AAAAAAAECZ}
{\bkmkend AAAAAAAECZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ISBT Configuration }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v japanPost\:CSLibrary::Barcode::Structures::SymbologyParms}
{\xe \v CSLibrary::Barcode::Structures::SymbologyParms\:japanPost}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b JAPOST_T} CSLibrary.Structures.SymbologyParms.japanPost = new {\b JAPOST_T}()}}
\par
{\bkmkstart AAAAAAAEDA}
{\bkmkend AAAAAAAEDA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
JAPOST Configuration }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v koreaPost\:CSLibrary::Barcode::Structures::SymbologyParms}
{\xe \v CSLibrary::Barcode::Structures::SymbologyParms\:koreaPost}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b KORPOST_T} CSLibrary.Structures.SymbologyParms.koreaPost = new {\b KORPOST_T}()}}
\par
{\bkmkstart AAAAAAAEDB}
{\bkmkend AAAAAAAEDB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
KORPOST Configuration }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v matrix25\:CSLibrary::Barcode::Structures::SymbologyParms}
{\xe \v CSLibrary::Barcode::Structures::SymbologyParms\:matrix25}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b MATRIX25_T} CSLibrary.Structures.SymbologyParms.matrix25 = new {\b MATRIX25_T}()}}
\par
{\bkmkstart AAAAAAAEDC}
{\bkmkend AAAAAAAEDC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
MATRIX25 Configuration }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v maxicode\:CSLibrary::Barcode::Structures::SymbologyParms}
{\xe \v CSLibrary::Barcode::Structures::SymbologyParms\:maxicode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b MAXICODE_T} CSLibrary.Structures.SymbologyParms.maxicode = new {\b MAXICODE_T}()}}
\par
{\bkmkstart AAAAAAAEDD}
{\bkmkend AAAAAAAEDD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
MAXICODE Configuration }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v microPDF\:CSLibrary::Barcode::Structures::SymbologyParms}
{\xe \v CSLibrary::Barcode::Structures::SymbologyParms\:microPDF}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b MICROPDF_T} CSLibrary.Structures.SymbologyParms.microPDF = new {\b MICROPDF_T}()}}
\par
{\bkmkstart AAAAAAAEDE}
{\bkmkend AAAAAAAEDE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
MICROPDF Configuration }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v msi\:CSLibrary::Barcode::Structures::SymbologyParms}
{\xe \v CSLibrary::Barcode::Structures::SymbologyParms\:msi}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b MSI_T} CSLibrary.Structures.SymbologyParms.msi = new {\b MSI_T}()}}
\par
{\bkmkstart AAAAAAAEDF}
{\bkmkend AAAAAAAEDF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
MSI Configuration }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v ocr\:CSLibrary::Barcode::Structures::SymbologyParms}
{\xe \v CSLibrary::Barcode::Structures::SymbologyParms\:ocr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b OCR_T} CSLibrary.Structures.SymbologyParms.ocr = new {\b OCR_T}()}}
\par
{\bkmkstart AAAAAAAEDG}
{\bkmkend AAAAAAAEDG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OCR Configuration }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v pdf417\:CSLibrary::Barcode::Structures::SymbologyParms}
{\xe \v CSLibrary::Barcode::Structures::SymbologyParms\:pdf417}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b PDF417_T} CSLibrary.Structures.SymbologyParms.pdf417 = new {\b PDF417_T}()}}
\par
{\bkmkstart AAAAAAAEDH}
{\bkmkend AAAAAAAEDH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PDF417 Configuration }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v plesseyCode\:CSLibrary::Barcode::Structures::SymbologyParms}
{\xe \v CSLibrary::Barcode::Structures::SymbologyParms\:plesseyCode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b PLESSEY_T} CSLibrary.Structures.SymbologyParms.plesseyCode = new {\b PLESSEY_T}()}}
\par
{\bkmkstart AAAAAAAEDI}
{\bkmkend AAAAAAAEDI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PLESSEY Configuration }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v posiCode\:CSLibrary::Barcode::Structures::SymbologyParms}
{\xe \v CSLibrary::Barcode::Structures::SymbologyParms\:posiCode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b POSICODE_T} CSLibrary.Structures.SymbologyParms.posiCode = new {\b POSICODE_T}()}}
\par
{\bkmkstart AAAAAAAEDJ}
{\bkmkend AAAAAAAEDJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
POSICODE Configuration }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v qr\:CSLibrary::Barcode::Structures::SymbologyParms}
{\xe \v CSLibrary::Barcode::Structures::SymbologyParms\:qr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QR_T} CSLibrary.Structures.SymbologyParms.qr = new {\b QR_T}()}}
\par
{\bkmkstart AAAAAAAEDK}
{\bkmkend AAAAAAAEDK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
QR Configuration }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v rss\:CSLibrary::Barcode::Structures::SymbologyParms}
{\xe \v CSLibrary::Barcode::Structures::SymbologyParms\:rss}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RSS_T} CSLibrary.Structures.SymbologyParms.rss = new {\b RSS_T}()}}
\par
{\bkmkstart AAAAAAAEDL}
{\bkmkend AAAAAAAEDL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RSS Configuration }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v telepen\:CSLibrary::Barcode::Structures::SymbologyParms}
{\xe \v CSLibrary::Barcode::Structures::SymbologyParms\:telepen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b TELEPEN_T} CSLibrary.Structures.SymbologyParms.telepen = new {\b TELEPEN_T}()}}
\par
{\bkmkstart AAAAAAAEDM}
{\bkmkend AAAAAAAEDM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
TELEPEN Configuration }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v tlCode39\:CSLibrary::Barcode::Structures::SymbologyParms}
{\xe \v CSLibrary::Barcode::Structures::SymbologyParms\:tlCode39}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b TLCODE39_T} CSLibrary.Structures.SymbologyParms.tlCode39 = new {\b TLCODE39_T}()}}
\par
{\bkmkstart AAAAAAAEDN}
{\bkmkend AAAAAAAEDN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
TLCODE39 Configuration }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v triopticCode\:CSLibrary::Barcode::Structures::SymbologyParms}
{\xe \v CSLibrary::Barcode::Structures::SymbologyParms\:triopticCode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b TRIOPTIC_T} CSLibrary.Structures.SymbologyParms.triopticCode = new {\b TRIOPTIC_T}()}}
\par
{\bkmkstart AAAAAAAEDO}
{\bkmkend AAAAAAAEDO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
TRIOPTIC Configuration }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v upcA\:CSLibrary::Barcode::Structures::SymbologyParms}
{\xe \v CSLibrary::Barcode::Structures::SymbologyParms\:upcA}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b UPCA_T} CSLibrary.Structures.SymbologyParms.upcA = new {\b UPCA_T}()}}
\par
{\bkmkstart AAAAAAAEDP}
{\bkmkend AAAAAAAEDP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
UPCA Configuration }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v upcE\:CSLibrary::Barcode::Structures::SymbologyParms}
{\xe \v CSLibrary::Barcode::Structures::SymbologyParms\:upcE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b UPCE_T} CSLibrary.Structures.SymbologyParms.upcE = new {\b UPCE_T}()}}
\par
{\bkmkstart AAAAAAAEDQ}
{\bkmkend AAAAAAAEDQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
UPCE Configuration }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v upuIdTag\:CSLibrary::Barcode::Structures::SymbologyParms}
{\xe \v CSLibrary::Barcode::Structures::SymbologyParms\:upuIdTag}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b UPUIDTAG_T} CSLibrary.Structures.SymbologyParms.upuIdTag = new {\b UPUIDTAG_T}()}}
\par
{\bkmkstart AAAAAAAEDR}
{\bkmkend AAAAAAAEDR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
UPUIDTAG Configuration }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v usPlanet\:CSLibrary::Barcode::Structures::SymbologyParms}
{\xe \v CSLibrary::Barcode::Structures::SymbologyParms\:usPlanet}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b PLANET_T} CSLibrary.Structures.SymbologyParms.usPlanet = new {\b PLANET_T}()}}
\par
{\bkmkstart AAAAAAAEDS}
{\bkmkend AAAAAAAEDS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PLANET Configuration }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v usPostnet\:CSLibrary::Barcode::Structures::SymbologyParms}
{\xe \v CSLibrary::Barcode::Structures::SymbologyParms\:usPostnet}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b POSTNET_T} CSLibrary.Structures.SymbologyParms.usPostnet = new {\b POSTNET_T}()}}
\par
{\bkmkstart AAAAAAAEDT}
{\bkmkend AAAAAAAEDT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
POSTNET Configuration }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
CSLibrary/BarcodeReader/Structures/{\b CSLibrary.Barcode.Structures.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary.Structures.SymCodeOCR Class Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary.Structures.SymCodeOCR}
{\xe \v CSLibrary.Structures.SymCodeOCR}
{\bkmkstart AAAAAAAEDU}
{\bkmkend AAAAAAAEDU}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure for unusual OCR }}\par
Inheritance diagram for CSLibrary.Structures.SymCodeOCR:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_c_s_library_1_1_barcode_1_1_structures_1_1_sym_code_o_c_r.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SymCodeOCR} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SymbolMask} {\b dwMask} = SymbolMask.ALL\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mask of active items. Notes: You can use OR to enable multiple items }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b OCR} {\b ocrMode}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OCR Enable/Mode structure. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b OCRDirection} {\b ocrDirection}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OCR direction structure. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
String {\b tcTemplate}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Template for decoded data ('d' - decimal, 'a' - ASCII, 'l' - letter, 'e' - extended). Maximum len is 256 }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
String {\b tcGroupG}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Group G character string. Maximum len is 256 }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
String {\b tcGroupH}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Group H character string. Maximum len is 256 }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
String {\b tcCheckChar}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check character string. Maximum len is 64 }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure for unusual OCR \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v SymCodeOCR\:CSLibrary::Barcode::Structures::SymCodeOCR}
{\xe \v CSLibrary::Barcode::Structures::SymCodeOCR\:SymCodeOCR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CSLibrary.Structures.SymCodeOCR.SymCodeOCR ()}}
\par
{\bkmkstart AAAAAAAEDV}
{\bkmkend AAAAAAAEDV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v dwMask\:CSLibrary::Barcode::Structures::SymCodeOCR}
{\xe \v CSLibrary::Barcode::Structures::SymCodeOCR\:dwMask}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b SymbolMask} CSLibrary.Structures.SymCodeOCR.dwMask = SymbolMask.ALL}}
\par
{\bkmkstart AAAAAAAEDW}
{\bkmkend AAAAAAAEDW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mask of active items. Notes: You can use OR to enable multiple items }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v ocrDirection\:CSLibrary::Barcode::Structures::SymCodeOCR}
{\xe \v CSLibrary::Barcode::Structures::SymCodeOCR\:ocrDirection}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b OCRDirection} CSLibrary.Structures.SymCodeOCR.ocrDirection}}
\par
{\bkmkstart AAAAAAAEDX}
{\bkmkend AAAAAAAEDX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OCR direction structure. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v ocrMode\:CSLibrary::Barcode::Structures::SymCodeOCR}
{\xe \v CSLibrary::Barcode::Structures::SymCodeOCR\:ocrMode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b OCR} CSLibrary.Structures.SymCodeOCR.ocrMode}}
\par
{\bkmkstart AAAAAAAEDY}
{\bkmkend AAAAAAAEDY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OCR Enable/Mode structure. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v tcCheckChar\:CSLibrary::Barcode::Structures::SymCodeOCR}
{\xe \v CSLibrary::Barcode::Structures::SymCodeOCR\:tcCheckChar}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
String CSLibrary.Structures.SymCodeOCR.tcCheckChar}}
\par
{\bkmkstart AAAAAAAEDZ}
{\bkmkend AAAAAAAEDZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check character string. Maximum len is 64 }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v tcGroupG\:CSLibrary::Barcode::Structures::SymCodeOCR}
{\xe \v CSLibrary::Barcode::Structures::SymCodeOCR\:tcGroupG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
String CSLibrary.Structures.SymCodeOCR.tcGroupG}}
\par
{\bkmkstart AAAAAAAEEA}
{\bkmkend AAAAAAAEEA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Group G character string. Maximum len is 256 }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v tcGroupH\:CSLibrary::Barcode::Structures::SymCodeOCR}
{\xe \v CSLibrary::Barcode::Structures::SymCodeOCR\:tcGroupH}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
String CSLibrary.Structures.SymCodeOCR.tcGroupH}}
\par
{\bkmkstart AAAAAAAEEB}
{\bkmkend AAAAAAAEEB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Group H character string. Maximum len is 256 }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v tcTemplate\:CSLibrary::Barcode::Structures::SymCodeOCR}
{\xe \v CSLibrary::Barcode::Structures::SymCodeOCR\:tcTemplate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
String CSLibrary.Structures.SymCodeOCR.tcTemplate}}
\par
{\bkmkstart AAAAAAAEEC}
{\bkmkend AAAAAAAEEC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Template for decoded data ('d' - decimal, 'a' - ASCII, 'l' - letter, 'e' - extended). Maximum len is 256 }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
CSLibrary/BarcodeReader/Structures/{\b CSLibrary.Barcode.Structures.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary.Structures.SymFlagsOnly Class Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary.Structures.SymFlagsOnly}
{\xe \v CSLibrary.Structures.SymFlagsOnly}
{\bkmkstart AAAAAAAEED}
{\bkmkend AAAAAAAEED}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure for symbologies with no specified min or max length. }}\par
Inheritance diagram for CSLibrary.Structures.SymFlagsOnly:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_c_s_library_1_1_barcode_1_1_structures_1_1_sym_flags_only.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SymFlagsOnly} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SymbolMask} {\b dwMask} = SymbolMask.ALL\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mask of active items. Notes: You can use OR to enable multiple items }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SymbolFlags} {\b dwFlags}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OR of valid flags for the given symbology. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure for symbologies with no specified min or max length. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v SymFlagsOnly\:CSLibrary::Barcode::Structures::SymFlagsOnly}
{\xe \v CSLibrary::Barcode::Structures::SymFlagsOnly\:SymFlagsOnly}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CSLibrary.Structures.SymFlagsOnly.SymFlagsOnly ()}}
\par
{\bkmkstart AAAAAAAEEE}
{\bkmkend AAAAAAAEEE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v dwFlags\:CSLibrary::Barcode::Structures::SymFlagsOnly}
{\xe \v CSLibrary::Barcode::Structures::SymFlagsOnly\:dwFlags}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b SymbolFlags} CSLibrary.Structures.SymFlagsOnly.dwFlags}}
\par
{\bkmkstart AAAAAAAEEF}
{\bkmkend AAAAAAAEEF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OR of valid flags for the given symbology. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v dwMask\:CSLibrary::Barcode::Structures::SymFlagsOnly}
{\xe \v CSLibrary::Barcode::Structures::SymFlagsOnly\:dwMask}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b SymbolMask} CSLibrary.Structures.SymFlagsOnly.dwMask = SymbolMask.ALL}}
\par
{\bkmkstart AAAAAAAEEG}
{\bkmkend AAAAAAAEEG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mask of active items. Notes: You can use OR to enable multiple items }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
CSLibrary/BarcodeReader/Structures/{\b CSLibrary.Barcode.Structures.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary.Structures.SymFlagsRange Class Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary.Structures.SymFlagsRange}
{\xe \v CSLibrary.Structures.SymFlagsRange}
{\bkmkstart AAAAAAAEEH}
{\bkmkend AAAAAAAEEH}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure for symbologies with min or max length. }}\par
Inheritance diagram for CSLibrary.Structures.SymFlagsRange:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_c_s_library_1_1_barcode_1_1_structures_1_1_sym_flags_range.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SymFlagsRange} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SymbolMask} {\b dwMask} = SymbolMask.ALL\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mask of active items. Notes: You can use OR to enable multiple items }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SymbolFlags} {\b dwFlags}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OR of valid flags for the given symbology. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint {\b dwMinLen}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Minimum length for valid barcode string for this symbology. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint {\b dwMaxLen}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Maximum length for valid barcode string for this symbology. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure for symbologies with min or max length. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v SymFlagsRange\:CSLibrary::Barcode::Structures::SymFlagsRange}
{\xe \v CSLibrary::Barcode::Structures::SymFlagsRange\:SymFlagsRange}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CSLibrary.Structures.SymFlagsRange.SymFlagsRange ()}}
\par
{\bkmkstart AAAAAAAEEI}
{\bkmkend AAAAAAAEEI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v dwFlags\:CSLibrary::Barcode::Structures::SymFlagsRange}
{\xe \v CSLibrary::Barcode::Structures::SymFlagsRange\:dwFlags}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b SymbolFlags} CSLibrary.Structures.SymFlagsRange.dwFlags}}
\par
{\bkmkstart AAAAAAAEEJ}
{\bkmkend AAAAAAAEEJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OR of valid flags for the given symbology. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v dwMask\:CSLibrary::Barcode::Structures::SymFlagsRange}
{\xe \v CSLibrary::Barcode::Structures::SymFlagsRange\:dwMask}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b SymbolMask} CSLibrary.Structures.SymFlagsRange.dwMask = SymbolMask.ALL}}
\par
{\bkmkstart AAAAAAAEEK}
{\bkmkend AAAAAAAEEK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mask of active items. Notes: You can use OR to enable multiple items }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v dwMaxLen\:CSLibrary::Barcode::Structures::SymFlagsRange}
{\xe \v CSLibrary::Barcode::Structures::SymFlagsRange\:dwMaxLen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint CSLibrary.Structures.SymFlagsRange.dwMaxLen}}
\par
{\bkmkstart AAAAAAAEEL}
{\bkmkend AAAAAAAEEL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Maximum length for valid barcode string for this symbology. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v dwMinLen\:CSLibrary::Barcode::Structures::SymFlagsRange}
{\xe \v CSLibrary::Barcode::Structures::SymFlagsRange\:dwMinLen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint CSLibrary.Structures.SymFlagsRange.dwMinLen}}
\par
{\bkmkstart AAAAAAAEEM}
{\bkmkend AAAAAAAEEM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Minimum length for valid barcode string for this symbology. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
CSLibrary/BarcodeReader/Structures/{\b CSLibrary.Barcode.Structures.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary.Structures.TAG_ACCESS_PKT Struct Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary.Structures.TAG_ACCESS_PKT}
{\xe \v CSLibrary.Structures.TAG_ACCESS_PKT}
{\bkmkstart AAAAAAAEEN}
{\bkmkend AAAAAAAEEN}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tag Access Packet }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RFID_18K6C} {\b cmd}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ISO 18000-6C access command }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt32 {\b ms_ctr}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Current millisecond timer/counter }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TAG_BACKSCATTERED_ERROR} {\b errorCode}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Please check success flags first }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b S_DATA} {\b data}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tag Access data }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt32 {\b flags}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Private Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static readonly int {\b ISO_18000_6C_ErrorFlag}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static readonly int {\b ISO_18000_6C_BackscatterErrorFlag}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static readonly int {\b ISO_18000_6C_AckTimeoutFlag}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static readonly int {\b ISO_18000_6C_CRCInvalidFlag}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tag Access Packet \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v cmd\:CSLibrary::Structures::TAG_ACCESS_PKT}
{\xe \v CSLibrary::Structures::TAG_ACCESS_PKT\:cmd}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RFID_18K6C} CSLibrary.Structures.TAG_ACCESS_PKT.cmd}}
\par
{\bkmkstart AAAAAAAEEO}
{\bkmkend AAAAAAAEEO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ISO 18000-6C access command }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v data\:CSLibrary::Structures::TAG_ACCESS_PKT}
{\xe \v CSLibrary::Structures::TAG_ACCESS_PKT\:data}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b S_DATA} CSLibrary.Structures.TAG_ACCESS_PKT.data}}
\par
{\bkmkstart AAAAAAAEEP}
{\bkmkend AAAAAAAEEP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tag Access data }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v errorCode\:CSLibrary::Structures::TAG_ACCESS_PKT}
{\xe \v CSLibrary::Structures::TAG_ACCESS_PKT\:errorCode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b TAG_BACKSCATTERED_ERROR} CSLibrary.Structures.TAG_ACCESS_PKT.errorCode}}
\par
{\bkmkstart AAAAAAAEEQ}
{\bkmkend AAAAAAAEEQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Please check success flags first }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
If the tag backscattered an error (i.e. the tag backscatter error \par
flag is set), this value is the error code that the tag \par
backscattered. Values are: \par
\'96 general error (catch-all for errors not covered by codes) \par
\'96 specified memory location does not exist of the PC value \par
is not supported by the tag \par
\'96 specified memory location is locked and/or permalocked \par
and is not writeable \par
\'96 tag has insufficient power to perform the memory write \par
\'96 tag does not support error-specific codes \par
}}
{\xe \v flags\:CSLibrary::Structures::TAG_ACCESS_PKT}
{\xe \v CSLibrary::Structures::TAG_ACCESS_PKT\:flags}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt32 CSLibrary.Structures.TAG_ACCESS_PKT.flags{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAEER}
{\bkmkend AAAAAAAEER}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ISO_18000_6C_AckTimeoutFlag\:CSLibrary::Structures::TAG_ACCESS_PKT}
{\xe \v CSLibrary::Structures::TAG_ACCESS_PKT\:ISO_18000_6C_AckTimeoutFlag}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly int CSLibrary.Structures.TAG_ACCESS_PKT.ISO_18000_6C_AckTimeoutFlag{\f2 [static]}, {\f2 [private]}}}
\par
{\bkmkstart AAAAAAAEES}
{\bkmkend AAAAAAAEES}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ISO_18000_6C_BackscatterErrorFlag\:CSLibrary::Structures::TAG_ACCESS_PKT}
{\xe \v CSLibrary::Structures::TAG_ACCESS_PKT\:ISO_18000_6C_BackscatterErrorFlag}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly int CSLibrary.Structures.TAG_ACCESS_PKT.ISO_18000_6C_BackscatterErrorFlag{\f2 [static]}, {\f2 [private]}}}
\par
{\bkmkstart AAAAAAAEET}
{\bkmkend AAAAAAAEET}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ISO_18000_6C_CRCInvalidFlag\:CSLibrary::Structures::TAG_ACCESS_PKT}
{\xe \v CSLibrary::Structures::TAG_ACCESS_PKT\:ISO_18000_6C_CRCInvalidFlag}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly int CSLibrary.Structures.TAG_ACCESS_PKT.ISO_18000_6C_CRCInvalidFlag{\f2 [static]}, {\f2 [private]}}}
\par
{\bkmkstart AAAAAAAEEU}
{\bkmkend AAAAAAAEEU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ISO_18000_6C_ErrorFlag\:CSLibrary::Structures::TAG_ACCESS_PKT}
{\xe \v CSLibrary::Structures::TAG_ACCESS_PKT\:ISO_18000_6C_ErrorFlag}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly int CSLibrary.Structures.TAG_ACCESS_PKT.ISO_18000_6C_ErrorFlag{\f2 [static]}, {\f2 [private]}}}
\par
{\bkmkstart AAAAAAAEEV}
{\bkmkend AAAAAAAEEV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ms_ctr\:CSLibrary::Structures::TAG_ACCESS_PKT}
{\xe \v CSLibrary::Structures::TAG_ACCESS_PKT\:ms_ctr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt32 CSLibrary.Structures.TAG_ACCESS_PKT.ms_ctr}}
\par
{\bkmkstart AAAAAAAEEW}
{\bkmkend AAAAAAAEEW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Current millisecond timer/counter }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
CSLibrary/RFIDReader/Structures/{\b CSLibrary.Structures.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary.Structures.TagBlockPermalockParms Class Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary.Structures.TagBlockPermalockParms}
{\xe \v CSLibrary.Structures.TagBlockPermalockParms}
{\bkmkstart AAAAAAAEEX}
{\bkmkend AAAAAAAEEX}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
block lock structure, configure this before do block lock }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TagBlockPermalockParms} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
constructor }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
readonly UInt32 {\b length} = (UInt32)(24 + IntPtr.Size)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure size }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt32 {\b accessPassword}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The access password for the tags. A value of zero indicates no access password. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b setPermalock}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
True to set permalock, otherwise read it state }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt32 {\b retryCount}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Number of retries attemp to read. This field must be between 0 and 15, inclusive. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SelectFlags} {\b flags} = {\b SelectFlags.UNKNOWN}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Flag - Zero or combination of Select or Post-Match }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt16 {\b count}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt16 {\b offset}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt16 [] {\b mask} = new UInt16[0]\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
block lock structure, configure this before do block lock \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v TagBlockPermalockParms\:CSLibrary::Structures::TagBlockPermalockParms}
{\xe \v CSLibrary::Structures::TagBlockPermalockParms\:TagBlockPermalockParms}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CSLibrary.Structures.TagBlockPermalockParms.TagBlockPermalockParms ()}}
\par
{\bkmkstart AAAAAAAEEY}
{\bkmkend AAAAAAAEEY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
constructor }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v accessPassword\:CSLibrary::Structures::TagBlockPermalockParms}
{\xe \v CSLibrary::Structures::TagBlockPermalockParms\:accessPassword}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt32 CSLibrary.Structures.TagBlockPermalockParms.accessPassword}}
\par
{\bkmkstart AAAAAAAEEZ}
{\bkmkend AAAAAAAEEZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The access password for the tags. A value of zero indicates no access password. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v count\:CSLibrary::Structures::TagBlockPermalockParms}
{\xe \v CSLibrary::Structures::TagBlockPermalockParms\:count}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt16 CSLibrary.Structures.TagBlockPermalockParms.count}}
\par
{\bkmkstart AAAAAAAEFA}
{\bkmkend AAAAAAAEFA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
}}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v flags\:CSLibrary::Structures::TagBlockPermalockParms}
{\xe \v CSLibrary::Structures::TagBlockPermalockParms\:flags}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b SelectFlags} CSLibrary.Structures.TagBlockPermalockParms.flags = {\b SelectFlags.UNKNOWN}}}
\par
{\bkmkstart AAAAAAAEFB}
{\bkmkend AAAAAAAEFB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Flag - Zero or combination of Select or Post-Match }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v length\:CSLibrary::Structures::TagBlockPermalockParms}
{\xe \v CSLibrary::Structures::TagBlockPermalockParms\:length}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly UInt32 CSLibrary.Structures.TagBlockPermalockParms.length = (UInt32)(24 + IntPtr.Size)}}
\par
{\bkmkstart AAAAAAAEFC}
{\bkmkend AAAAAAAEFC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure size }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v mask\:CSLibrary::Structures::TagBlockPermalockParms}
{\xe \v CSLibrary::Structures::TagBlockPermalockParms\:mask}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt16 [] CSLibrary.Structures.TagBlockPermalockParms.mask = new UInt16[0]}}
\par
{\bkmkstart AAAAAAAEFD}
{\bkmkend AAAAAAAEFD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
}}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v offset\:CSLibrary::Structures::TagBlockPermalockParms}
{\xe \v CSLibrary::Structures::TagBlockPermalockParms\:offset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt16 CSLibrary.Structures.TagBlockPermalockParms.offset}}
\par
{\bkmkstart AAAAAAAEFE}
{\bkmkend AAAAAAAEFE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
}}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v retryCount\:CSLibrary::Structures::TagBlockPermalockParms}
{\xe \v CSLibrary::Structures::TagBlockPermalockParms\:retryCount}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt32 CSLibrary.Structures.TagBlockPermalockParms.retryCount}}
\par
{\bkmkstart AAAAAAAEFF}
{\bkmkend AAAAAAAEFF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Number of retries attemp to read. This field must be between 0 and 15, inclusive. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v setPermalock\:CSLibrary::Structures::TagBlockPermalockParms}
{\xe \v CSLibrary::Structures::TagBlockPermalockParms\:setPermalock}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool CSLibrary.Structures.TagBlockPermalockParms.setPermalock}}
\par
{\bkmkstart AAAAAAAEFG}
{\bkmkend AAAAAAAEFG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
True to set permalock, otherwise read it state }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
CSLibrary/RFIDReader/Structures/{\b CSLibrary.Structures.TagLock.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary.Structures.TagCallbackInfo Class Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary.Structures.TagCallbackInfo}
{\xe \v CSLibrary.Structures.TagCallbackInfo}
{\bkmkstart AAAAAAAEFH}
{\bkmkend AAAAAAAEFH}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tag Callback Information }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Int32 {\b index} = -1\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Index number, First come with small number. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b crcInvalid} = false\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Crc error flag }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b rssi} = 0\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The Receive Signal Strength Indicator (RSSI). }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt32 {\b count} = 1\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
total count }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt32 {\b antennaPort} = 0\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Current antenna port using. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint {\b freqChannel} = 0xffffffff\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tag deteched frequency }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Int16 {\b phase}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Phase }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b S_PC} {\b pc} = new {\b S_PC}()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PC Data (QT Private PC) }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b S_XPC_W1} {\b xpc_w1} = new {\b S_XPC_W1}()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
XPC W1 Data (QT Private XPC W1) }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b S_XPC_W2} {\b xpc_w2} = new {\b S_XPC_W2}()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
XPC W2 Data (QT Private XPC W2) }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b S_EPC} {\b epc} = new {\b S_EPC}()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EPC Data (QT Private EPC) }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint {\b epcstrlen} = 0\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EPC String Length (QT Private EPC Length) }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt16 [] {\b Bank1Data} = null\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Bank 1 data }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt16 [] {\b Bank2Data} = null\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Bank 2 data }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b S_PC} {\b pcpublic} = new {\b S_PC}()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
QT Public PC }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b S_EPC} {\b epcpublic} = new {\b S_EPC}()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
QT Publuc EPC Data }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint {\b epcpublicstrlen} = 0\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
QT Public EPC String Length }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt32 {\b ms_ctr} = 0\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ms_ctr }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt16 {\b crc16} = 0\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
crc16 }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
DateTime {\b receiveTime} = DateTime.Now\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Receive Time }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b name} = String.Empty\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RFID Device name }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tag Callback Information \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v antennaPort\:CSLibrary::Structures::TagCallbackInfo}
{\xe \v CSLibrary::Structures::TagCallbackInfo\:antennaPort}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt32 CSLibrary.Structures.TagCallbackInfo.antennaPort = 0}}
\par
{\bkmkstart AAAAAAAEFI}
{\bkmkend AAAAAAAEFI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Current antenna port using. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Bank1Data\:CSLibrary::Structures::TagCallbackInfo}
{\xe \v CSLibrary::Structures::TagCallbackInfo\:Bank1Data}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt16 [] CSLibrary.Structures.TagCallbackInfo.Bank1Data = null}}
\par
{\bkmkstart AAAAAAAEFJ}
{\bkmkend AAAAAAAEFJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Bank 1 data }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Bank2Data\:CSLibrary::Structures::TagCallbackInfo}
{\xe \v CSLibrary::Structures::TagCallbackInfo\:Bank2Data}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt16 [] CSLibrary.Structures.TagCallbackInfo.Bank2Data = null}}
\par
{\bkmkstart AAAAAAAEFK}
{\bkmkend AAAAAAAEFK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Bank 2 data }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v count\:CSLibrary::Structures::TagCallbackInfo}
{\xe \v CSLibrary::Structures::TagCallbackInfo\:count}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt32 CSLibrary.Structures.TagCallbackInfo.count = 1}}
\par
{\bkmkstart AAAAAAAEFL}
{\bkmkend AAAAAAAEFL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
total count }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v crc16\:CSLibrary::Structures::TagCallbackInfo}
{\xe \v CSLibrary::Structures::TagCallbackInfo\:crc16}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt16 CSLibrary.Structures.TagCallbackInfo.crc16 = 0}}
\par
{\bkmkstart AAAAAAAEFM}
{\bkmkend AAAAAAAEFM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
crc16 }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v crcInvalid\:CSLibrary::Structures::TagCallbackInfo}
{\xe \v CSLibrary::Structures::TagCallbackInfo\:crcInvalid}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool CSLibrary.Structures.TagCallbackInfo.crcInvalid = false}}
\par
{\bkmkstart AAAAAAAEFN}
{\bkmkend AAAAAAAEFN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Crc error flag }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v epc\:CSLibrary::Structures::TagCallbackInfo}
{\xe \v CSLibrary::Structures::TagCallbackInfo\:epc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b S_EPC} CSLibrary.Structures.TagCallbackInfo.epc = new {\b S_EPC}()}}
\par
{\bkmkstart AAAAAAAEFO}
{\bkmkend AAAAAAAEFO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EPC Data (QT Private EPC) }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v epcpublic\:CSLibrary::Structures::TagCallbackInfo}
{\xe \v CSLibrary::Structures::TagCallbackInfo\:epcpublic}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b S_EPC} CSLibrary.Structures.TagCallbackInfo.epcpublic = new {\b S_EPC}()}}
\par
{\bkmkstart AAAAAAAEFP}
{\bkmkend AAAAAAAEFP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
QT Publuc EPC Data }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v epcpublicstrlen\:CSLibrary::Structures::TagCallbackInfo}
{\xe \v CSLibrary::Structures::TagCallbackInfo\:epcpublicstrlen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint CSLibrary.Structures.TagCallbackInfo.epcpublicstrlen = 0}}
\par
{\bkmkstart AAAAAAAEFQ}
{\bkmkend AAAAAAAEFQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
QT Public EPC String Length }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v epcstrlen\:CSLibrary::Structures::TagCallbackInfo}
{\xe \v CSLibrary::Structures::TagCallbackInfo\:epcstrlen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint CSLibrary.Structures.TagCallbackInfo.epcstrlen = 0}}
\par
{\bkmkstart AAAAAAAEFR}
{\bkmkend AAAAAAAEFR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EPC String Length (QT Private EPC Length) }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v freqChannel\:CSLibrary::Structures::TagCallbackInfo}
{\xe \v CSLibrary::Structures::TagCallbackInfo\:freqChannel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint CSLibrary.Structures.TagCallbackInfo.freqChannel = 0xffffffff}}
\par
{\bkmkstart AAAAAAAEFS}
{\bkmkend AAAAAAAEFS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tag deteched frequency }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v index\:CSLibrary::Structures::TagCallbackInfo}
{\xe \v CSLibrary::Structures::TagCallbackInfo\:index}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Int32 CSLibrary.Structures.TagCallbackInfo.index = -1}}
\par
{\bkmkstart AAAAAAAEFT}
{\bkmkend AAAAAAAEFT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Index number, First come with small number. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v ms_ctr\:CSLibrary::Structures::TagCallbackInfo}
{\xe \v CSLibrary::Structures::TagCallbackInfo\:ms_ctr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt32 CSLibrary.Structures.TagCallbackInfo.ms_ctr = 0}}
\par
{\bkmkstart AAAAAAAEFU}
{\bkmkend AAAAAAAEFU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ms_ctr }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v name\:CSLibrary::Structures::TagCallbackInfo}
{\xe \v CSLibrary::Structures::TagCallbackInfo\:name}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string CSLibrary.Structures.TagCallbackInfo.name = String.Empty}}
\par
{\bkmkstart AAAAAAAEFV}
{\bkmkend AAAAAAAEFV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RFID Device name }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v pc\:CSLibrary::Structures::TagCallbackInfo}
{\xe \v CSLibrary::Structures::TagCallbackInfo\:pc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b S_PC} CSLibrary.Structures.TagCallbackInfo.pc = new {\b S_PC}()}}
\par
{\bkmkstart AAAAAAAEFW}
{\bkmkend AAAAAAAEFW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PC Data (QT Private PC) }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v pcpublic\:CSLibrary::Structures::TagCallbackInfo}
{\xe \v CSLibrary::Structures::TagCallbackInfo\:pcpublic}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b S_PC} CSLibrary.Structures.TagCallbackInfo.pcpublic = new {\b S_PC}()}}
\par
{\bkmkstart AAAAAAAEFX}
{\bkmkend AAAAAAAEFX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
QT Public PC }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v phase\:CSLibrary::Structures::TagCallbackInfo}
{\xe \v CSLibrary::Structures::TagCallbackInfo\:phase}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Int16 CSLibrary.Structures.TagCallbackInfo.phase}}
\par
{\bkmkstart AAAAAAAEFY}
{\bkmkend AAAAAAAEFY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Phase }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v receiveTime\:CSLibrary::Structures::TagCallbackInfo}
{\xe \v CSLibrary::Structures::TagCallbackInfo\:receiveTime}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
DateTime CSLibrary.Structures.TagCallbackInfo.receiveTime = DateTime.Now}}
\par
{\bkmkstart AAAAAAAEFZ}
{\bkmkend AAAAAAAEFZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Receive Time }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v rssi\:CSLibrary::Structures::TagCallbackInfo}
{\xe \v CSLibrary::Structures::TagCallbackInfo\:rssi}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float CSLibrary.Structures.TagCallbackInfo.rssi = 0}}
\par
{\bkmkstart AAAAAAAEGA}
{\bkmkend AAAAAAAEGA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The Receive Signal Strength Indicator (RSSI). }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v xpc_w1\:CSLibrary::Structures::TagCallbackInfo}
{\xe \v CSLibrary::Structures::TagCallbackInfo\:xpc_w1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b S_XPC_W1} CSLibrary.Structures.TagCallbackInfo.xpc_w1 = new {\b S_XPC_W1}()}}
\par
{\bkmkstart AAAAAAAEGB}
{\bkmkend AAAAAAAEGB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
XPC W1 Data (QT Private XPC W1) }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v xpc_w2\:CSLibrary::Structures::TagCallbackInfo}
{\xe \v CSLibrary::Structures::TagCallbackInfo\:xpc_w2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b S_XPC_W2} CSLibrary.Structures.TagCallbackInfo.xpc_w2 = new {\b S_XPC_W2}()}}
\par
{\bkmkstart AAAAAAAEGC}
{\bkmkend AAAAAAAEGC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
XPC W2 Data (QT Private XPC W2) }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
CSLibrary/RFIDReader/Structures/{\b CSLibrary.Structures.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary.Structures.TagGeneralSelectedParms Class Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary.Structures.TagGeneralSelectedParms}
{\xe \v CSLibrary.Structures.TagGeneralSelectedParms}
{\bkmkstart AAAAAAAEGD}
{\bkmkend AAAAAAAEGD}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Selected tag parameters, configure this before any specific tag operation }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TagGeneralSelectedParms} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
constructor }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SelectMaskFlags} {\b flags} = SelectMaskFlags.DISABLE_ALL\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A mask that indicates current parameters enalbe or not. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b MemoryBank} {\b bank} = MemoryBank.EPC\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
memory bank }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b S_MASK} {\b epcMask} = new {\b S_MASK}()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A buffer that contains a left-justified bit array that represents that bit pattern to match \'96 i.e., the most significant bit of the bit array appears in the most-significant bit (i.e., bit 7) of the first byte of the buffer (i.e., mask[0]). All bits beyond count are ignored. For example, if the application wished to find tags with the following 16 bits 1011.1111.1010.0101, starting at offset 20 in the Electronic Product Code, then the fields would be set as follows: offset = 20 count = 16 mask[0] = 0xBF (1011.1111) mask[1] = 0xA5 (1010.0101) }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt32 {\b epcMaskLength} = 0\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
epc mask length in bit, e.g. epc = 0x3000, length = 4 * 8 = 32 bits, epc = 0x300, length = 3 * 8 = 24 bits }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt32 {\b epcMaskOffset} = 0\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
epc mask offset in bit, note : if enable PC mask, this parameter is ignored. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte [] {\b Mask}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A buffer that contains a left-justified bit array that represents that bit pattern to match (use epcMask, if you select EPC) }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt32 {\b MaskLength} = 0\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
epc mask length in bit (use epcMaskLength, if you select EPC) }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt32 {\b MaskOffset} = 0\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
epc mask offset in bit (use epcMaskOffset, if you select EPC) }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b ParallelEncoding} = false\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
UCODE 7 Parallel Encoding }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Selected tag parameters, configure this before any specific tag operation \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v TagGeneralSelectedParms\:CSLibrary::Structures::TagGeneralSelectedParms}
{\xe \v CSLibrary::Structures::TagGeneralSelectedParms\:TagGeneralSelectedParms}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CSLibrary.Structures.TagGeneralSelectedParms.TagGeneralSelectedParms ()}}
\par
{\bkmkstart AAAAAAAEGE}
{\bkmkend AAAAAAAEGE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
constructor }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v bank\:CSLibrary::Structures::TagGeneralSelectedParms}
{\xe \v CSLibrary::Structures::TagGeneralSelectedParms\:bank}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b MemoryBank} CSLibrary.Structures.TagGeneralSelectedParms.bank = MemoryBank.EPC}}
\par
{\bkmkstart AAAAAAAEGF}
{\bkmkend AAAAAAAEGF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
memory bank }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v epcMask\:CSLibrary::Structures::TagGeneralSelectedParms}
{\xe \v CSLibrary::Structures::TagGeneralSelectedParms\:epcMask}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b S_MASK} CSLibrary.Structures.TagGeneralSelectedParms.epcMask = new {\b S_MASK}()}}
\par
{\bkmkstart AAAAAAAEGG}
{\bkmkend AAAAAAAEGG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A buffer that contains a left-justified bit array that represents that bit pattern to match \'96 i.e., the most significant bit of the bit array appears in the most-significant bit (i.e., bit 7) of the first byte of the buffer (i.e., mask[0]). All bits beyond count are ignored. For example, if the application wished to find tags with the following 16 bits 1011.1111.1010.0101, starting at offset 20 in the Electronic Product Code, then the fields would be set as follows: offset = 20 count = 16 mask[0] = 0xBF (1011.1111) mask[1] = 0xA5 (1010.0101) }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v epcMaskLength\:CSLibrary::Structures::TagGeneralSelectedParms}
{\xe \v CSLibrary::Structures::TagGeneralSelectedParms\:epcMaskLength}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt32 CSLibrary.Structures.TagGeneralSelectedParms.epcMaskLength = 0}}
\par
{\bkmkstart AAAAAAAEGH}
{\bkmkend AAAAAAAEGH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
epc mask length in bit, e.g. epc = 0x3000, length = 4 * 8 = 32 bits, epc = 0x300, length = 3 * 8 = 24 bits }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v epcMaskOffset\:CSLibrary::Structures::TagGeneralSelectedParms}
{\xe \v CSLibrary::Structures::TagGeneralSelectedParms\:epcMaskOffset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt32 CSLibrary.Structures.TagGeneralSelectedParms.epcMaskOffset = 0}}
\par
{\bkmkstart AAAAAAAEGI}
{\bkmkend AAAAAAAEGI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
epc mask offset in bit, note : if enable PC mask, this parameter is ignored. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v flags\:CSLibrary::Structures::TagGeneralSelectedParms}
{\xe \v CSLibrary::Structures::TagGeneralSelectedParms\:flags}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b SelectMaskFlags} CSLibrary.Structures.TagGeneralSelectedParms.flags = SelectMaskFlags.DISABLE_ALL}}
\par
{\bkmkstart AAAAAAAEGJ}
{\bkmkend AAAAAAAEGJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A mask that indicates current parameters enalbe or not. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Mask\:CSLibrary::Structures::TagGeneralSelectedParms}
{\xe \v CSLibrary::Structures::TagGeneralSelectedParms\:Mask}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte [] CSLibrary.Structures.TagGeneralSelectedParms.Mask}}
\par
{\bkmkstart AAAAAAAEGK}
{\bkmkend AAAAAAAEGK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A buffer that contains a left-justified bit array that represents that bit pattern to match (use epcMask, if you select EPC) }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v MaskLength\:CSLibrary::Structures::TagGeneralSelectedParms}
{\xe \v CSLibrary::Structures::TagGeneralSelectedParms\:MaskLength}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt32 CSLibrary.Structures.TagGeneralSelectedParms.MaskLength = 0}}
\par
{\bkmkstart AAAAAAAEGL}
{\bkmkend AAAAAAAEGL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
epc mask length in bit (use epcMaskLength, if you select EPC) }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v MaskOffset\:CSLibrary::Structures::TagGeneralSelectedParms}
{\xe \v CSLibrary::Structures::TagGeneralSelectedParms\:MaskOffset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt32 CSLibrary.Structures.TagGeneralSelectedParms.MaskOffset = 0}}
\par
{\bkmkstart AAAAAAAEGM}
{\bkmkend AAAAAAAEGM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
epc mask offset in bit (use epcMaskOffset, if you select EPC) }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v ParallelEncoding\:CSLibrary::Structures::TagGeneralSelectedParms}
{\xe \v CSLibrary::Structures::TagGeneralSelectedParms\:ParallelEncoding}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool CSLibrary.Structures.TagGeneralSelectedParms.ParallelEncoding = false}}
\par
{\bkmkstart AAAAAAAEGN}
{\bkmkend AAAAAAAEGN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
UCODE 7 Parallel Encoding }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
CSLibrary/RFIDReader/Structures/{\b Intel.Structures.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary.Structures.TagGroup Class Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary.Structures.TagGroup}
{\xe \v CSLibrary.Structures.TagGroup}
{\bkmkstart AAAAAAAEGO}
{\bkmkend AAAAAAAEGO}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A class that specifies the tag group that will have a subsequent tag-protocol operation applied to it. This parameter must not be NULL. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TagGroup} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TagGroup} ({\b Selected} {\b selected}, {\b Session} {\b session}, {\b SessionTarget} {\b target})\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Selected} {\b selected} = {\b Selected.UNKNOWN}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Specifies the state of the selected (SL) flag for tags that will have the operation applied to them. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Session} {\b session} = {\b Session.UNKNOWN}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Specifies which inventory session flag (i.e., S0, S1, S2, or S3) will be matched against the inventory state specified by target. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SessionTarget} {\b target} = {\b SessionTarget.UNKNOWN}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Specifies the state of the inventory session flag (i.e., A or B), specified by session, for tags that will have the operation applied to them. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A class that specifies the tag group that will have a subsequent tag-protocol operation applied to it. This parameter must not be NULL. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v TagGroup\:CSLibrary::Structures::TagGroup}
{\xe \v CSLibrary::Structures::TagGroup\:TagGroup}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CSLibrary.Structures.TagGroup.TagGroup ()}}
\par
{\bkmkstart AAAAAAAEGP}
{\bkmkend AAAAAAAEGP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v TagGroup\:CSLibrary::Structures::TagGroup}
{\xe \v CSLibrary::Structures::TagGroup\:TagGroup}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CSLibrary.Structures.TagGroup.TagGroup ({\b Selected}  {\i selected}, {\b Session}  {\i session}, {\b SessionTarget}  {\i target})}}
\par
{\bkmkstart AAAAAAAEGQ}
{\bkmkend AAAAAAAEGQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i selected} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i session} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i target} \cell }{\cell }
{\row }
}
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v selected\:CSLibrary::Structures::TagGroup}
{\xe \v CSLibrary::Structures::TagGroup\:selected}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Selected} CSLibrary.Structures.TagGroup.selected = {\b Selected.UNKNOWN}}}
\par
{\bkmkstart AAAAAAAEGR}
{\bkmkend AAAAAAAEGR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Specifies the state of the selected (SL) flag for tags that will have the operation applied to them. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v session\:CSLibrary::Structures::TagGroup}
{\xe \v CSLibrary::Structures::TagGroup\:session}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Session} CSLibrary.Structures.TagGroup.session = {\b Session.UNKNOWN}}}
\par
{\bkmkstart AAAAAAAEGS}
{\bkmkend AAAAAAAEGS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Specifies which inventory session flag (i.e., S0, S1, S2, or S3) will be matched against the inventory state specified by target. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v target\:CSLibrary::Structures::TagGroup}
{\xe \v CSLibrary::Structures::TagGroup\:target}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b SessionTarget} CSLibrary.Structures.TagGroup.target = {\b SessionTarget.UNKNOWN}}}
\par
{\bkmkstart AAAAAAAEGT}
{\bkmkend AAAAAAAEGT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Specifies the state of the inventory session flag (i.e., A or B), specified by session, for tags that will have the operation applied to them. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
CSLibrary/RFIDReader/Structures/{\b Intel.Structures.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary.Structures.TagInventoryParms Class Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary.Structures.TagInventoryParms}
{\xe \v CSLibrary.Structures.TagInventoryParms}
{\bkmkstart AAAAAAAEGU}
{\bkmkend AAAAAAAEGU}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The ISO 18000-6C tag-inventory operation parameters }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SelectFlags} {\b flags} = {\b SelectFlags.UNKNOWN}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Flag - Zero or combination of Select or Post-Match }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ushort {\b tagStopCount} = 0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint {\b multibanks}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
number of bank to read after inventory }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b MemoryBank} {\b bank1}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Memory bank 1 }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt16 {\b offset1}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The offset, in the memory bank, of the first 16-bit word to read. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt16 {\b count1}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The number of 16-bit words that will be read. This field must be between 1 and 31, inclusive. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b MemoryBank} {\b bank2}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Memory bank 2 }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt16 {\b offset2}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The offset, in the memory bank, of the first 16-bit word to read. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt16 {\b count2}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The number of 16-bit words that will be read. This field must be between 1 and 31, inclusive. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt32 {\b accessPassword}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The access password for the tags. A value of zero indicates no access password. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The ISO 18000-6C tag-inventory operation parameters \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v accessPassword\:CSLibrary::Structures::TagInventoryParms}
{\xe \v CSLibrary::Structures::TagInventoryParms\:accessPassword}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt32 CSLibrary.Structures.TagInventoryParms.accessPassword}}
\par
{\bkmkstart AAAAAAAEGV}
{\bkmkend AAAAAAAEGV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The access password for the tags. A value of zero indicates no access password. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v bank1\:CSLibrary::Structures::TagInventoryParms}
{\xe \v CSLibrary::Structures::TagInventoryParms\:bank1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b MemoryBank} CSLibrary.Structures.TagInventoryParms.bank1}}
\par
{\bkmkstart AAAAAAAEGW}
{\bkmkend AAAAAAAEGW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Memory bank 1 }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v bank2\:CSLibrary::Structures::TagInventoryParms}
{\xe \v CSLibrary::Structures::TagInventoryParms\:bank2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b MemoryBank} CSLibrary.Structures.TagInventoryParms.bank2}}
\par
{\bkmkstart AAAAAAAEGX}
{\bkmkend AAAAAAAEGX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Memory bank 2 }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v count1\:CSLibrary::Structures::TagInventoryParms}
{\xe \v CSLibrary::Structures::TagInventoryParms\:count1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt16 CSLibrary.Structures.TagInventoryParms.count1}}
\par
{\bkmkstart AAAAAAAEGY}
{\bkmkend AAAAAAAEGY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The number of 16-bit words that will be read. This field must be between 1 and 31, inclusive. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v count2\:CSLibrary::Structures::TagInventoryParms}
{\xe \v CSLibrary::Structures::TagInventoryParms\:count2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt16 CSLibrary.Structures.TagInventoryParms.count2}}
\par
{\bkmkstart AAAAAAAEGZ}
{\bkmkend AAAAAAAEGZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The number of 16-bit words that will be read. This field must be between 1 and 31, inclusive. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v flags\:CSLibrary::Structures::TagInventoryParms}
{\xe \v CSLibrary::Structures::TagInventoryParms\:flags}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b SelectFlags} CSLibrary.Structures.TagInventoryParms.flags = {\b SelectFlags.UNKNOWN}}}
\par
{\bkmkstart AAAAAAAEHA}
{\bkmkend AAAAAAAEHA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Flag - Zero or combination of Select or Post-Match }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v multibanks\:CSLibrary::Structures::TagInventoryParms}
{\xe \v CSLibrary::Structures::TagInventoryParms\:multibanks}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint CSLibrary.Structures.TagInventoryParms.multibanks}}
\par
{\bkmkstart AAAAAAAEHB}
{\bkmkend AAAAAAAEHB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
number of bank to read after inventory }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v offset1\:CSLibrary::Structures::TagInventoryParms}
{\xe \v CSLibrary::Structures::TagInventoryParms\:offset1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt16 CSLibrary.Structures.TagInventoryParms.offset1}}
\par
{\bkmkstart AAAAAAAEHC}
{\bkmkend AAAAAAAEHC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The offset, in the memory bank, of the first 16-bit word to read. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v offset2\:CSLibrary::Structures::TagInventoryParms}
{\xe \v CSLibrary::Structures::TagInventoryParms\:offset2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt16 CSLibrary.Structures.TagInventoryParms.offset2}}
\par
{\bkmkstart AAAAAAAEHD}
{\bkmkend AAAAAAAEHD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The offset, in the memory bank, of the first 16-bit word to read. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v tagStopCount\:CSLibrary::Structures::TagInventoryParms}
{\xe \v CSLibrary::Structures::TagInventoryParms\:tagStopCount}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ushort CSLibrary.Structures.TagInventoryParms.tagStopCount = 0}}
\par
{\bkmkstart AAAAAAAEHE}
{\bkmkend AAAAAAAEHE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
}}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The maximum number of tags to which the tag-protocol operation will be \par
applied. If this number is zero, then the operation is applied to all \par
tags that match the selection, and optionally post-singulation, match \par
criteria. If this number is non-zero, the antenna-port dwell-time and \par
inventory-round-count constraints still apply, however the operation \par
will be prematurely terminated if the maximum number of tags have the \par
tag-protocol operation applied to them. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
CSLibrary/RFIDReader/Structures/{\b CSLibrary.Structures.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary.Structures.TagKillParms Class Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary.Structures.TagKillParms}
{\xe \v CSLibrary.Structures.TagKillParms}
{\bkmkstart AAAAAAAEHF}
{\bkmkend AAAAAAAEHF}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tag Kill structure, configure this before do tag kill }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TagKillParms} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
constructor }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt32 {\b accessPassword}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The access password for the tags. A value of zero indicates no access password. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt32 {\b killPassword}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The kill password for the tags. A value of zero indicates no kill password. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt32 {\b retryCount}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Number of retries attemp to read. This field must be between 0 and 15, inclusive. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SelectFlags} {\b flags} = {\b SelectFlags.UNKNOWN}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Flag - Zero or combination of Select or Post-Match }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ExtendedKillCommand} {\b extCommand} = ExtendedKillCommand.NORMAL\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Extended Kill command }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tag Kill structure, configure this before do tag kill \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v TagKillParms\:CSLibrary::Structures::TagKillParms}
{\xe \v CSLibrary::Structures::TagKillParms\:TagKillParms}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CSLibrary.Structures.TagKillParms.TagKillParms ()}}
\par
{\bkmkstart AAAAAAAEHG}
{\bkmkend AAAAAAAEHG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
constructor }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v accessPassword\:CSLibrary::Structures::TagKillParms}
{\xe \v CSLibrary::Structures::TagKillParms\:accessPassword}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt32 CSLibrary.Structures.TagKillParms.accessPassword}}
\par
{\bkmkstart AAAAAAAEHH}
{\bkmkend AAAAAAAEHH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The access password for the tags. A value of zero indicates no access password. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v extCommand\:CSLibrary::Structures::TagKillParms}
{\xe \v CSLibrary::Structures::TagKillParms\:extCommand}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b ExtendedKillCommand} CSLibrary.Structures.TagKillParms.extCommand = ExtendedKillCommand.NORMAL}}
\par
{\bkmkstart AAAAAAAEHI}
{\bkmkend AAAAAAAEHI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Extended Kill command }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v flags\:CSLibrary::Structures::TagKillParms}
{\xe \v CSLibrary::Structures::TagKillParms\:flags}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b SelectFlags} CSLibrary.Structures.TagKillParms.flags = {\b SelectFlags.UNKNOWN}}}
\par
{\bkmkstart AAAAAAAEHJ}
{\bkmkend AAAAAAAEHJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Flag - Zero or combination of Select or Post-Match }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v killPassword\:CSLibrary::Structures::TagKillParms}
{\xe \v CSLibrary::Structures::TagKillParms\:killPassword}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt32 CSLibrary.Structures.TagKillParms.killPassword}}
\par
{\bkmkstart AAAAAAAEHK}
{\bkmkend AAAAAAAEHK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The kill password for the tags. A value of zero indicates no kill password. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v retryCount\:CSLibrary::Structures::TagKillParms}
{\xe \v CSLibrary::Structures::TagKillParms\:retryCount}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt32 CSLibrary.Structures.TagKillParms.retryCount}}
\par
{\bkmkstart AAAAAAAEHL}
{\bkmkend AAAAAAAEHL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Number of retries attemp to read. This field must be between 0 and 15, inclusive. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
CSLibrary/RFIDReader/Structures/{\b CSLibrary.Structures.TagKill.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary.Structures.TagLockParms Class Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary.Structures.TagLockParms}
{\xe \v CSLibrary.Structures.TagLockParms}
{\bkmkstart AAAAAAAEHM}
{\bkmkend AAAAAAAEHM}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tag lock structure, configure this before do tag lock }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TagLockParms} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
constructor }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt32 {\b accessPassword}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The access password for the tags. A value of zero indicates no access password. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt32 {\b retryCount}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Number of retries attemp to read. This field must be between 0 and 15, inclusive. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Permission} {\b killPasswordPermissions} = Permission.UNCHANGED\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The access permissions for the tag's kill password. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Permission} {\b accessPasswordPermissions} = Permission.UNCHANGED\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The access permissions for the tag's access password. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Permission} {\b epcMemoryBankPermissions} = Permission.UNCHANGED\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The access permissions for the tag's EPC memory bank. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Permission} {\b tidMemoryBankPermissions} = Permission.UNCHANGED\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The access permissions for the tag's TID memory bank. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Permission} {\b userMemoryBankPermissions} = Permission.UNCHANGED\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The access permissions for the tag's user memory bank. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SelectFlags} {\b flags} = {\b SelectFlags.UNKNOWN}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Flag - Zero or combination of Select or Post-Match }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
readonly UInt32 {\b length} = (UInt32)(16 + 20)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure size }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tag lock structure, configure this before do tag lock \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v TagLockParms\:CSLibrary::Structures::TagLockParms}
{\xe \v CSLibrary::Structures::TagLockParms\:TagLockParms}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CSLibrary.Structures.TagLockParms.TagLockParms ()}}
\par
{\bkmkstart AAAAAAAEHN}
{\bkmkend AAAAAAAEHN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
constructor }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v accessPassword\:CSLibrary::Structures::TagLockParms}
{\xe \v CSLibrary::Structures::TagLockParms\:accessPassword}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt32 CSLibrary.Structures.TagLockParms.accessPassword}}
\par
{\bkmkstart AAAAAAAEHO}
{\bkmkend AAAAAAAEHO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The access password for the tags. A value of zero indicates no access password. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v accessPasswordPermissions\:CSLibrary::Structures::TagLockParms}
{\xe \v CSLibrary::Structures::TagLockParms\:accessPasswordPermissions}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Permission} CSLibrary.Structures.TagLockParms.accessPasswordPermissions = Permission.UNCHANGED}}
\par
{\bkmkstart AAAAAAAEHP}
{\bkmkend AAAAAAAEHP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The access permissions for the tag's access password. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v epcMemoryBankPermissions\:CSLibrary::Structures::TagLockParms}
{\xe \v CSLibrary::Structures::TagLockParms\:epcMemoryBankPermissions}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Permission} CSLibrary.Structures.TagLockParms.epcMemoryBankPermissions = Permission.UNCHANGED}}
\par
{\bkmkstart AAAAAAAEHQ}
{\bkmkend AAAAAAAEHQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The access permissions for the tag's EPC memory bank. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v flags\:CSLibrary::Structures::TagLockParms}
{\xe \v CSLibrary::Structures::TagLockParms\:flags}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b SelectFlags} CSLibrary.Structures.TagLockParms.flags = {\b SelectFlags.UNKNOWN}}}
\par
{\bkmkstart AAAAAAAEHR}
{\bkmkend AAAAAAAEHR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Flag - Zero or combination of Select or Post-Match }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v killPasswordPermissions\:CSLibrary::Structures::TagLockParms}
{\xe \v CSLibrary::Structures::TagLockParms\:killPasswordPermissions}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Permission} CSLibrary.Structures.TagLockParms.killPasswordPermissions = Permission.UNCHANGED}}
\par
{\bkmkstart AAAAAAAEHS}
{\bkmkend AAAAAAAEHS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The access permissions for the tag's kill password. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v length\:CSLibrary::Structures::TagLockParms}
{\xe \v CSLibrary::Structures::TagLockParms\:length}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly UInt32 CSLibrary.Structures.TagLockParms.length = (UInt32)(16 + 20){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEHT}
{\bkmkend AAAAAAAEHT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure size }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v retryCount\:CSLibrary::Structures::TagLockParms}
{\xe \v CSLibrary::Structures::TagLockParms\:retryCount}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt32 CSLibrary.Structures.TagLockParms.retryCount}}
\par
{\bkmkstart AAAAAAAEHU}
{\bkmkend AAAAAAAEHU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Number of retries attemp to read. This field must be between 0 and 15, inclusive. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v tidMemoryBankPermissions\:CSLibrary::Structures::TagLockParms}
{\xe \v CSLibrary::Structures::TagLockParms\:tidMemoryBankPermissions}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Permission} CSLibrary.Structures.TagLockParms.tidMemoryBankPermissions = Permission.UNCHANGED}}
\par
{\bkmkstart AAAAAAAEHV}
{\bkmkend AAAAAAAEHV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The access permissions for the tag's TID memory bank. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v userMemoryBankPermissions\:CSLibrary::Structures::TagLockParms}
{\xe \v CSLibrary::Structures::TagLockParms\:userMemoryBankPermissions}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Permission} CSLibrary.Structures.TagLockParms.userMemoryBankPermissions = Permission.UNCHANGED}}
\par
{\bkmkstart AAAAAAAEHW}
{\bkmkend AAAAAAAEHW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The access permissions for the tag's user memory bank. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
CSLibrary/RFIDReader/Structures/{\b CSLibrary.Structures.TagLock.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary.Structures.TagPerm Struct Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary.Structures.TagPerm}
{\xe \v CSLibrary.Structures.TagPerm}
{\bkmkstart AAAAAAAEHX}
{\bkmkend AAAAAAAEHX}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A structure that contains the access permissions to be set for the tag. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Permission} {\b killPasswordPermissions}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The access permissions for the tag's kill password. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Permission} {\b accessPasswordPermissions}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The access permissions for the tag's access password. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Permission} {\b epcMemoryBankPermissions}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The access permissions for the tag's EPC memory bank. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Permission} {\b tidMemoryBankPermissions}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The access permissions for the tag's TID memory bank. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Permission} {\b userMemoryBankPermissions}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The access permissions for the tag's user memory bank. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A structure that contains the access permissions to be set for the tag. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v accessPasswordPermissions\:CSLibrary::Structures::TagPerm}
{\xe \v CSLibrary::Structures::TagPerm\:accessPasswordPermissions}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Permission} CSLibrary.Structures.TagPerm.accessPasswordPermissions}}
\par
{\bkmkstart AAAAAAAEHY}
{\bkmkend AAAAAAAEHY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The access permissions for the tag's access password. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v epcMemoryBankPermissions\:CSLibrary::Structures::TagPerm}
{\xe \v CSLibrary::Structures::TagPerm\:epcMemoryBankPermissions}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Permission} CSLibrary.Structures.TagPerm.epcMemoryBankPermissions}}
\par
{\bkmkstart AAAAAAAEHZ}
{\bkmkend AAAAAAAEHZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The access permissions for the tag's EPC memory bank. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v killPasswordPermissions\:CSLibrary::Structures::TagPerm}
{\xe \v CSLibrary::Structures::TagPerm\:killPasswordPermissions}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Permission} CSLibrary.Structures.TagPerm.killPasswordPermissions}}
\par
{\bkmkstart AAAAAAAEIA}
{\bkmkend AAAAAAAEIA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The access permissions for the tag's kill password. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v tidMemoryBankPermissions\:CSLibrary::Structures::TagPerm}
{\xe \v CSLibrary::Structures::TagPerm\:tidMemoryBankPermissions}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Permission} CSLibrary.Structures.TagPerm.tidMemoryBankPermissions}}
\par
{\bkmkstart AAAAAAAEIB}
{\bkmkend AAAAAAAEIB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The access permissions for the tag's TID memory bank. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v userMemoryBankPermissions\:CSLibrary::Structures::TagPerm}
{\xe \v CSLibrary::Structures::TagPerm\:userMemoryBankPermissions}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Permission} CSLibrary.Structures.TagPerm.userMemoryBankPermissions}}
\par
{\bkmkstart AAAAAAAEIC}
{\bkmkend AAAAAAAEIC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The access permissions for the tag's user memory bank. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
CSLibrary/RFIDReader/Structures/{\b Intel.Structures.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary.Structures.TagPostMachParms Class Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary.Structures.TagPostMachParms}
{\xe \v CSLibrary.Structures.TagPostMachParms}
{\bkmkstart AAAAAAAEID}
{\bkmkend AAAAAAAEID}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Post match tag parameters, configure this before any specific tag operation }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TagPostMachParms} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
constructor }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Boolean {\b toggleTarget} = false\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A flag that indicates if, after performing the inventory cycle for the specified target (i.e., A or B), if the target should be toggled (i.e., A to B or B to A) and another inventory cycle run. A non- zero value indicates that the target should be toggled. A zero value indicates that the target should not be toggled. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint {\b offset} = 0\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The offset in bits, from the start of the Electronic Product Code (EPC), of the first bit that will be matched against the mask. If offset falls beyond the end of EPC, the tag is considered non-matching. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint {\b count} = 0\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The number of bits in the mask. A length of zero will cause all tags to match. If (offset+count) falls beyond the end of the EPC, the tag is considered non-matching. Valid values are 0 to 496, inclusive. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Byte [] {\b mask} = new byte[62]\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A buffer that contains a left-justified bit array that represents that bit pattern to match \'96 i.e., the most significant bit of the bit array appears in the most-significant bit (i.e., bit 7) of the first byte of the buffer (i.e., mask[0]). All bits beyond count are ignored. For example, if the application wished to find tags with the following 16 bits 1011.1111.1010.0101, starting at offset 20 in the Electronic Product Code, then the fields would be set as follows: offset = 20 count = 16 mask[0] = 0xBF (1011.1111) mask[1] = 0xA5 (1010.0101) }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Post match tag parameters, configure this before any specific tag operation \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v TagPostMachParms\:CSLibrary::Structures::TagPostMachParms}
{\xe \v CSLibrary::Structures::TagPostMachParms\:TagPostMachParms}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CSLibrary.Structures.TagPostMachParms.TagPostMachParms ()}}
\par
{\bkmkstart AAAAAAAEIE}
{\bkmkend AAAAAAAEIE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
constructor }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v count\:CSLibrary::Structures::TagPostMachParms}
{\xe \v CSLibrary::Structures::TagPostMachParms\:count}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint CSLibrary.Structures.TagPostMachParms.count = 0}}
\par
{\bkmkstart AAAAAAAEIF}
{\bkmkend AAAAAAAEIF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The number of bits in the mask. A length of zero will cause all tags to match. If (offset+count) falls beyond the end of the EPC, the tag is considered non-matching. Valid values are 0 to 496, inclusive. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v mask\:CSLibrary::Structures::TagPostMachParms}
{\xe \v CSLibrary::Structures::TagPostMachParms\:mask}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Byte [] CSLibrary.Structures.TagPostMachParms.mask = new byte[62]}}
\par
{\bkmkstart AAAAAAAEIG}
{\bkmkend AAAAAAAEIG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A buffer that contains a left-justified bit array that represents that bit pattern to match \'96 i.e., the most significant bit of the bit array appears in the most-significant bit (i.e., bit 7) of the first byte of the buffer (i.e., mask[0]). All bits beyond count are ignored. For example, if the application wished to find tags with the following 16 bits 1011.1111.1010.0101, starting at offset 20 in the Electronic Product Code, then the fields would be set as follows: offset = 20 count = 16 mask[0] = 0xBF (1011.1111) mask[1] = 0xA5 (1010.0101) }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v offset\:CSLibrary::Structures::TagPostMachParms}
{\xe \v CSLibrary::Structures::TagPostMachParms\:offset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint CSLibrary.Structures.TagPostMachParms.offset = 0}}
\par
{\bkmkstart AAAAAAAEIH}
{\bkmkend AAAAAAAEIH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The offset in bits, from the start of the Electronic Product Code (EPC), of the first bit that will be matched against the mask. If offset falls beyond the end of EPC, the tag is considered non-matching. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v toggleTarget\:CSLibrary::Structures::TagPostMachParms}
{\xe \v CSLibrary::Structures::TagPostMachParms\:toggleTarget}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Boolean CSLibrary.Structures.TagPostMachParms.toggleTarget = false}}
\par
{\bkmkstart AAAAAAAEII}
{\bkmkend AAAAAAAEII}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A flag that indicates if, after performing the inventory cycle for the specified target (i.e., A or B), if the target should be toggled (i.e., A to B or B to A) and another inventory cycle run. A non- zero value indicates that the target should be toggled. A zero value indicates that the target should not be toggled. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
CSLibrary/RFIDReader/Structures/{\b Intel.Structures.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary.Structures.TagRangingParms Class Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary.Structures.TagRangingParms}
{\xe \v CSLibrary.Structures.TagRangingParms}
{\bkmkstart AAAAAAAEIJ}
{\bkmkend AAAAAAAEIJ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
this parms is same as inventory parms }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TagRangingParms} {\b Clone} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SelectFlags} {\b flags} = {\b SelectFlags.UNKNOWN}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Flag - Zero or combination of Select or Post-Match }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ushort {\b tagStopCount} = 0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint {\b multibanks}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
number of bank to read after inventory }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b MemoryBank} {\b bank1}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Memory bank 1 }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt16 {\b offset1}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The offset, in the memory bank, of the first 16-bit word to read. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt16 {\b count1}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The number of 16-bit words that will be read. This field must be between 1 and 31, inclusive. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b MemoryBank} {\b bank2}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Memory bank 2 }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt16 {\b offset2}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The offset, in the memory bank, of the first 16-bit word to read. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt16 {\b count2}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The number of 16-bit words that will be read. This field must be between 1 and 31, inclusive. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt32 {\b accessPassword}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The access password for the tags. A value of zero indicates no access password. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b QTMode} = false\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inventory Tag on QT Mode }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b compactmode} = false\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
compact inventory mode. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
this parms is same as inventory parms \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Clone\:CSLibrary::Structures::TagRangingParms}
{\xe \v CSLibrary::Structures::TagRangingParms\:Clone}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b TagRangingParms} CSLibrary.Structures.TagRangingParms.Clone ()}}
\par
{\bkmkstart AAAAAAAEIK}
{\bkmkend AAAAAAAEIK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v accessPassword\:CSLibrary::Structures::TagRangingParms}
{\xe \v CSLibrary::Structures::TagRangingParms\:accessPassword}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt32 CSLibrary.Structures.TagRangingParms.accessPassword}}
\par
{\bkmkstart AAAAAAAEIL}
{\bkmkend AAAAAAAEIL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The access password for the tags. A value of zero indicates no access password. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v bank1\:CSLibrary::Structures::TagRangingParms}
{\xe \v CSLibrary::Structures::TagRangingParms\:bank1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b MemoryBank} CSLibrary.Structures.TagRangingParms.bank1}}
\par
{\bkmkstart AAAAAAAEIM}
{\bkmkend AAAAAAAEIM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Memory bank 1 }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v bank2\:CSLibrary::Structures::TagRangingParms}
{\xe \v CSLibrary::Structures::TagRangingParms\:bank2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b MemoryBank} CSLibrary.Structures.TagRangingParms.bank2}}
\par
{\bkmkstart AAAAAAAEIN}
{\bkmkend AAAAAAAEIN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Memory bank 2 }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v compactmode\:CSLibrary::Structures::TagRangingParms}
{\xe \v CSLibrary::Structures::TagRangingParms\:compactmode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool CSLibrary.Structures.TagRangingParms.compactmode = false}}
\par
{\bkmkstart AAAAAAAEIO}
{\bkmkend AAAAAAAEIO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
compact inventory mode. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v count1\:CSLibrary::Structures::TagRangingParms}
{\xe \v CSLibrary::Structures::TagRangingParms\:count1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt16 CSLibrary.Structures.TagRangingParms.count1}}
\par
{\bkmkstart AAAAAAAEIP}
{\bkmkend AAAAAAAEIP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The number of 16-bit words that will be read. This field must be between 1 and 31, inclusive. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v count2\:CSLibrary::Structures::TagRangingParms}
{\xe \v CSLibrary::Structures::TagRangingParms\:count2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt16 CSLibrary.Structures.TagRangingParms.count2}}
\par
{\bkmkstart AAAAAAAEIQ}
{\bkmkend AAAAAAAEIQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The number of 16-bit words that will be read. This field must be between 1 and 31, inclusive. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v flags\:CSLibrary::Structures::TagRangingParms}
{\xe \v CSLibrary::Structures::TagRangingParms\:flags}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b SelectFlags} CSLibrary.Structures.TagRangingParms.flags = {\b SelectFlags.UNKNOWN}}}
\par
{\bkmkstart AAAAAAAEIR}
{\bkmkend AAAAAAAEIR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Flag - Zero or combination of Select or Post-Match }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v multibanks\:CSLibrary::Structures::TagRangingParms}
{\xe \v CSLibrary::Structures::TagRangingParms\:multibanks}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint CSLibrary.Structures.TagRangingParms.multibanks}}
\par
{\bkmkstart AAAAAAAEIS}
{\bkmkend AAAAAAAEIS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
number of bank to read after inventory }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v offset1\:CSLibrary::Structures::TagRangingParms}
{\xe \v CSLibrary::Structures::TagRangingParms\:offset1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt16 CSLibrary.Structures.TagRangingParms.offset1}}
\par
{\bkmkstart AAAAAAAEIT}
{\bkmkend AAAAAAAEIT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The offset, in the memory bank, of the first 16-bit word to read. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v offset2\:CSLibrary::Structures::TagRangingParms}
{\xe \v CSLibrary::Structures::TagRangingParms\:offset2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt16 CSLibrary.Structures.TagRangingParms.offset2}}
\par
{\bkmkstart AAAAAAAEIU}
{\bkmkend AAAAAAAEIU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The offset, in the memory bank, of the first 16-bit word to read. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v QTMode\:CSLibrary::Structures::TagRangingParms}
{\xe \v CSLibrary::Structures::TagRangingParms\:QTMode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool CSLibrary.Structures.TagRangingParms.QTMode = false}}
\par
{\bkmkstart AAAAAAAEIV}
{\bkmkend AAAAAAAEIV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inventory Tag on QT Mode }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v tagStopCount\:CSLibrary::Structures::TagRangingParms}
{\xe \v CSLibrary::Structures::TagRangingParms\:tagStopCount}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ushort CSLibrary.Structures.TagRangingParms.tagStopCount = 0}}
\par
{\bkmkstart AAAAAAAEIW}
{\bkmkend AAAAAAAEIW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
}}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The maximum number of tags to which the tag-protocol operation will be \par
applied. If this number is zero, then the operation is applied to all \par
tags that match the selection, and optionally post-singulation, match \par
criteria. If this number is non-zero, the antenna-port dwell-time and \par
inventory-round-count constraints still apply, however the operation \par
will be prematurely terminated if the maximum number of tags have the \par
tag-protocol operation applied to them. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
CSLibrary/RFIDReader/Structures/{\b CSLibrary.Structures.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary.Structures.TagReadEpcParms Class Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary.Structures.TagReadEpcParms}
{\xe \v CSLibrary.Structures.TagReadEpcParms}
{\bkmkstart AAAAAAAEIX}
{\bkmkend AAAAAAAEIX}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Read EPC structures, configure this before read current EPC }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TagReadEpcParms} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt32 {\b accessPassword}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The access password for the tags. A value of zero indicates no access password. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt16 {\b offset}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The offset, in the memory bank, of the first 16-bit word to read. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt16 {\b count}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The number of 16-bit words that will be read. This field must be between 1 and 31, inclusive. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt16 [] {\b m_epc} = new ushort[31]\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
An EPC to the 16-bit values to write to the tag's memory bank. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Properties\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b S_EPC} {\b epc}{\f2  [get]}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
An EPC to the 16-bit values to write to the tag's memory bank. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Read EPC structures, configure this before read current EPC \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v TagReadEpcParms\:CSLibrary::Structures::TagReadEpcParms}
{\xe \v CSLibrary::Structures::TagReadEpcParms\:TagReadEpcParms}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CSLibrary.Structures.TagReadEpcParms.TagReadEpcParms ()}}
\par
{\bkmkstart AAAAAAAEIY}
{\bkmkend AAAAAAAEIY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
}}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v accessPassword\:CSLibrary::Structures::TagReadEpcParms}
{\xe \v CSLibrary::Structures::TagReadEpcParms\:accessPassword}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt32 CSLibrary.Structures.TagReadEpcParms.accessPassword}}
\par
{\bkmkstart AAAAAAAEIZ}
{\bkmkend AAAAAAAEIZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The access password for the tags. A value of zero indicates no access password. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v count\:CSLibrary::Structures::TagReadEpcParms}
{\xe \v CSLibrary::Structures::TagReadEpcParms\:count}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt16 CSLibrary.Structures.TagReadEpcParms.count}}
\par
{\bkmkstart AAAAAAAEJA}
{\bkmkend AAAAAAAEJA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The number of 16-bit words that will be read. This field must be between 1 and 31, inclusive. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v m_epc\:CSLibrary::Structures::TagReadEpcParms}
{\xe \v CSLibrary::Structures::TagReadEpcParms\:m_epc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt16 [] CSLibrary.Structures.TagReadEpcParms.m_epc = new ushort[31]}}
\par
{\bkmkstart AAAAAAAEJB}
{\bkmkend AAAAAAAEJB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
An EPC to the 16-bit values to write to the tag's memory bank. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v offset\:CSLibrary::Structures::TagReadEpcParms}
{\xe \v CSLibrary::Structures::TagReadEpcParms\:offset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt16 CSLibrary.Structures.TagReadEpcParms.offset}}
\par
{\bkmkstart AAAAAAAEJC}
{\bkmkend AAAAAAAEJC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The offset, in the memory bank, of the first 16-bit word to read. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Property Documentation\par
\pard\plain 
{\xe \v epc\:CSLibrary::Structures::TagReadEpcParms}
{\xe \v CSLibrary::Structures::TagReadEpcParms\:epc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b S_EPC} CSLibrary.Structures.TagReadEpcParms.epc{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAEJD}
{\bkmkend AAAAAAAEJD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
An EPC to the 16-bit values to write to the tag's memory bank. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
CSLibrary/RFIDReader/Structures/{\b CSLibrary.Structures.TagRead.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary.Structures.TagReadPcParms Class Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary.Structures.TagReadPcParms}
{\xe \v CSLibrary.Structures.TagReadPcParms}
{\bkmkstart AAAAAAAEJE}
{\bkmkend AAAAAAAEJE}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Read PC structures, configure this before read current PC }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TagReadPcParms} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt32 {\b accessPassword}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The access password for the tags. A value of zero indicates no access password. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ushort {\b m_pc} = 0\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A PC to the 16-bit values to read from the tag's memory bank. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Properties\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b S_PC} {\b pc}{\f2  [get]}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A PC to the 16-bit values to read from the tag's memory bank. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Read PC structures, configure this before read current PC \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v TagReadPcParms\:CSLibrary::Structures::TagReadPcParms}
{\xe \v CSLibrary::Structures::TagReadPcParms\:TagReadPcParms}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CSLibrary.Structures.TagReadPcParms.TagReadPcParms ()}}
\par
{\bkmkstart AAAAAAAEJF}
{\bkmkend AAAAAAAEJF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
}}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v accessPassword\:CSLibrary::Structures::TagReadPcParms}
{\xe \v CSLibrary::Structures::TagReadPcParms\:accessPassword}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt32 CSLibrary.Structures.TagReadPcParms.accessPassword}}
\par
{\bkmkstart AAAAAAAEJG}
{\bkmkend AAAAAAAEJG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The access password for the tags. A value of zero indicates no access password. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v m_pc\:CSLibrary::Structures::TagReadPcParms}
{\xe \v CSLibrary::Structures::TagReadPcParms\:m_pc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ushort CSLibrary.Structures.TagReadPcParms.m_pc = 0}}
\par
{\bkmkstart AAAAAAAEJH}
{\bkmkend AAAAAAAEJH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A PC to the 16-bit values to read from the tag's memory bank. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Property Documentation\par
\pard\plain 
{\xe \v pc\:CSLibrary::Structures::TagReadPcParms}
{\xe \v CSLibrary::Structures::TagReadPcParms\:pc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b S_PC} CSLibrary.Structures.TagReadPcParms.pc{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAEJI}
{\bkmkend AAAAAAAEJI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A PC to the 16-bit values to read from the tag's memory bank. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
CSLibrary/RFIDReader/Structures/{\b CSLibrary.Structures.TagRead.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary.Structures.TagReadProtectParms Class Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary.Structures.TagReadProtectParms}
{\xe \v CSLibrary.Structures.TagReadProtectParms}
{\bkmkstart AAAAAAAEJJ}
{\bkmkend AAAAAAAEJJ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b TagReadProtectParms} }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SelectFlags} {\b flags} = {\b SelectFlags.UNKNOWN}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Flag - Zero or combination of Select or Post-Match }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt32 {\b accessPassword}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The access password for the tags. A value of zero indicates no access password. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt32 {\b retryCount}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Max retry count can't excess 15 }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b TagReadProtectParms} \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v accessPassword\:CSLibrary::Structures::TagReadProtectParms}
{\xe \v CSLibrary::Structures::TagReadProtectParms\:accessPassword}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt32 CSLibrary.Structures.TagReadProtectParms.accessPassword}}
\par
{\bkmkstart AAAAAAAEJK}
{\bkmkend AAAAAAAEJK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The access password for the tags. A value of zero indicates no access password. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v flags\:CSLibrary::Structures::TagReadProtectParms}
{\xe \v CSLibrary::Structures::TagReadProtectParms\:flags}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b SelectFlags} CSLibrary.Structures.TagReadProtectParms.flags = {\b SelectFlags.UNKNOWN}}}
\par
{\bkmkstart AAAAAAAEJL}
{\bkmkend AAAAAAAEJL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Flag - Zero or combination of Select or Post-Match }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v retryCount\:CSLibrary::Structures::TagReadProtectParms}
{\xe \v CSLibrary::Structures::TagReadProtectParms\:retryCount}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt32 CSLibrary.Structures.TagReadProtectParms.retryCount}}
\par
{\bkmkstart AAAAAAAEJM}
{\bkmkend AAAAAAAEJM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Max retry count can't excess 15 }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
CSLibrary/RFIDReader/Structures/{\b Intel.Structures.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary.Structures.TagReadPwdParms Class Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary.Structures.TagReadPwdParms}
{\xe \v CSLibrary.Structures.TagReadPwdParms}
{\bkmkstart AAAAAAAEJN}
{\bkmkend AAAAAAAEJN}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Read password structures, configure this before read current password }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TagReadPwdParms} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt32 {\b accessPassword}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The access password for the tags. A value of zero indicates no access password. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt32 {\b m_password} = 0\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A password to the 32-bit values to read from the tag's memory bank. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Properties\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b S_PWD} {\b password}{\f2  [get]}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A password to the 32-bit values to read from the tag's memory bank. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Read password structures, configure this before read current password \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v TagReadPwdParms\:CSLibrary::Structures::TagReadPwdParms}
{\xe \v CSLibrary::Structures::TagReadPwdParms\:TagReadPwdParms}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CSLibrary.Structures.TagReadPwdParms.TagReadPwdParms ()}}
\par
{\bkmkstart AAAAAAAEJO}
{\bkmkend AAAAAAAEJO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
}}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v accessPassword\:CSLibrary::Structures::TagReadPwdParms}
{\xe \v CSLibrary::Structures::TagReadPwdParms\:accessPassword}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt32 CSLibrary.Structures.TagReadPwdParms.accessPassword}}
\par
{\bkmkstart AAAAAAAEJP}
{\bkmkend AAAAAAAEJP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The access password for the tags. A value of zero indicates no access password. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v m_password\:CSLibrary::Structures::TagReadPwdParms}
{\xe \v CSLibrary::Structures::TagReadPwdParms\:m_password}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt32 CSLibrary.Structures.TagReadPwdParms.m_password = 0}}
\par
{\bkmkstart AAAAAAAEJQ}
{\bkmkend AAAAAAAEJQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A password to the 32-bit values to read from the tag's memory bank. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Property Documentation\par
\pard\plain 
{\xe \v password\:CSLibrary::Structures::TagReadPwdParms}
{\xe \v CSLibrary::Structures::TagReadPwdParms\:password}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b S_PWD} CSLibrary.Structures.TagReadPwdParms.password{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAEJR}
{\bkmkend AAAAAAAEJR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A password to the 32-bit values to read from the tag's memory bank. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
CSLibrary/RFIDReader/Structures/{\b CSLibrary.Structures.TagRead.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary.Structures.TagReadTidParms Class Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary.Structures.TagReadTidParms}
{\xe \v CSLibrary.Structures.TagReadTidParms}
{\bkmkstart AAAAAAAEJS}
{\bkmkend AAAAAAAEJS}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Read TID structures, configure this before read current TID }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TagReadTidParms} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt32 {\b accessPassword}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The access password for the tags. A value of zero indicates no access password. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt16 {\b offset} = 0\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The offset, in the memory bank, of the first 16-bit word to read. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt16 {\b count} = 0\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The number of 16-bit words that will be read. This field must be between 1 and 31, inclusive. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt16 [] {\b pData} = new UInt16[31]\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A pointer to the 16-bit values to read from the tag's memory bank. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Properties\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b S_TID} {\b tid}{\f2  [get]}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
An array to the 16-bit values to read from tag's memory bank. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Read TID structures, configure this before read current TID \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v TagReadTidParms\:CSLibrary::Structures::TagReadTidParms}
{\xe \v CSLibrary::Structures::TagReadTidParms\:TagReadTidParms}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CSLibrary.Structures.TagReadTidParms.TagReadTidParms ()}}
\par
{\bkmkstart AAAAAAAEJT}
{\bkmkend AAAAAAAEJT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
}}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v accessPassword\:CSLibrary::Structures::TagReadTidParms}
{\xe \v CSLibrary::Structures::TagReadTidParms\:accessPassword}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt32 CSLibrary.Structures.TagReadTidParms.accessPassword}}
\par
{\bkmkstart AAAAAAAEJU}
{\bkmkend AAAAAAAEJU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The access password for the tags. A value of zero indicates no access password. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v count\:CSLibrary::Structures::TagReadTidParms}
{\xe \v CSLibrary::Structures::TagReadTidParms\:count}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt16 CSLibrary.Structures.TagReadTidParms.count = 0}}
\par
{\bkmkstart AAAAAAAEJV}
{\bkmkend AAAAAAAEJV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The number of 16-bit words that will be read. This field must be between 1 and 31, inclusive. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v offset\:CSLibrary::Structures::TagReadTidParms}
{\xe \v CSLibrary::Structures::TagReadTidParms\:offset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt16 CSLibrary.Structures.TagReadTidParms.offset = 0}}
\par
{\bkmkstart AAAAAAAEJW}
{\bkmkend AAAAAAAEJW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The offset, in the memory bank, of the first 16-bit word to read. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v pData\:CSLibrary::Structures::TagReadTidParms}
{\xe \v CSLibrary::Structures::TagReadTidParms\:pData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt16 [] CSLibrary.Structures.TagReadTidParms.pData = new UInt16[31]}}
\par
{\bkmkstart AAAAAAAEJX}
{\bkmkend AAAAAAAEJX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A pointer to the 16-bit values to read from the tag's memory bank. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Property Documentation\par
\pard\plain 
{\xe \v tid\:CSLibrary::Structures::TagReadTidParms}
{\xe \v CSLibrary::Structures::TagReadTidParms\:tid}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b S_TID} CSLibrary.Structures.TagReadTidParms.tid{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAEJY}
{\bkmkend AAAAAAAEJY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
An array to the 16-bit values to read from tag's memory bank. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
CSLibrary/RFIDReader/Structures/{\b CSLibrary.Structures.TagRead.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary.Structures.TagReadUserParms Class Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary.Structures.TagReadUserParms}
{\xe \v CSLibrary.Structures.TagReadUserParms}
{\bkmkstart AAAAAAAEJZ}
{\bkmkend AAAAAAAEJZ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Read User memory structures, configure this before read current User memory }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TagReadUserParms} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
constructor }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt32 {\b accessPassword}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The access password for the tags. A value of zero indicates no access password. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt16 {\b offset}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The offset, in the memory bank, of the first 16-bit word to read. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt16 {\b count}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The number of 16-bit words that will be read. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt16 [] {\b m_pData} = new ushort[0]\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
An array to the 16-bit values to read from the tag's memory bank. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Properties\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b S_DATA} {\b pData}{\f2  [get, set]}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
An array to the 16-bit values to read from the tag's memory bank. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Read User memory structures, configure this before read current User memory \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v TagReadUserParms\:CSLibrary::Structures::TagReadUserParms}
{\xe \v CSLibrary::Structures::TagReadUserParms\:TagReadUserParms}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CSLibrary.Structures.TagReadUserParms.TagReadUserParms ()}}
\par
{\bkmkstart AAAAAAAEKA}
{\bkmkend AAAAAAAEKA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
constructor }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v accessPassword\:CSLibrary::Structures::TagReadUserParms}
{\xe \v CSLibrary::Structures::TagReadUserParms\:accessPassword}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt32 CSLibrary.Structures.TagReadUserParms.accessPassword}}
\par
{\bkmkstart AAAAAAAEKB}
{\bkmkend AAAAAAAEKB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The access password for the tags. A value of zero indicates no access password. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v count\:CSLibrary::Structures::TagReadUserParms}
{\xe \v CSLibrary::Structures::TagReadUserParms\:count}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt16 CSLibrary.Structures.TagReadUserParms.count}}
\par
{\bkmkstart AAAAAAAEKC}
{\bkmkend AAAAAAAEKC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The number of 16-bit words that will be read. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v m_pData\:CSLibrary::Structures::TagReadUserParms}
{\xe \v CSLibrary::Structures::TagReadUserParms\:m_pData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt16 [] CSLibrary.Structures.TagReadUserParms.m_pData = new ushort[0]}}
\par
{\bkmkstart AAAAAAAEKD}
{\bkmkend AAAAAAAEKD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
An array to the 16-bit values to read from the tag's memory bank. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v offset\:CSLibrary::Structures::TagReadUserParms}
{\xe \v CSLibrary::Structures::TagReadUserParms\:offset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt16 CSLibrary.Structures.TagReadUserParms.offset}}
\par
{\bkmkstart AAAAAAAEKE}
{\bkmkend AAAAAAAEKE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The offset, in the memory bank, of the first 16-bit word to read. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Property Documentation\par
\pard\plain 
{\xe \v pData\:CSLibrary::Structures::TagReadUserParms}
{\xe \v CSLibrary::Structures::TagReadUserParms\:pData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b S_DATA} CSLibrary.Structures.TagReadUserParms.pData{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAAEKF}
{\bkmkend AAAAAAAEKF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
An array to the 16-bit values to read from the tag's memory bank. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
CSLibrary/RFIDReader/Structures/{\b CSLibrary.Structures.TagRead.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary.Structures.TagSearchingParms Class Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary.Structures.TagSearchingParms}
{\xe \v CSLibrary.Structures.TagSearchingParms}
{\bkmkstart AAAAAAAEKG}
{\bkmkend AAAAAAAEKG}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
search one tag parms }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b avgRssi} = true\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
averaging the RSSI value during search }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
search one tag parms \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v avgRssi\:CSLibrary::Structures::TagSearchingParms}
{\xe \v CSLibrary::Structures::TagSearchingParms\:avgRssi}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool CSLibrary.Structures.TagSearchingParms.avgRssi = true}}
\par
{\bkmkstart AAAAAAAEKH}
{\bkmkend AAAAAAAEKH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
averaging the RSSI value during search }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
CSLibrary/RFIDReader/Structures/{\b CSLibrary.Structures.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary.Structures.TagSelectedParms Class Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary.Structures.TagSelectedParms}
{\xe \v CSLibrary.Structures.TagSelectedParms}
{\bkmkstart AAAAAAAEKI}
{\bkmkend AAAAAAAEKI}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Selected tag parameters, configure this before any specific tag operation }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TagSelectedParms} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
constructor }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
object {\b Clone} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SelectMaskFlags} {\b flags} = SelectMaskFlags.DISABLE_ALL\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A mask that indicates current parameters enalbe or not. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b MemoryBank} {\b bank} = MemoryBank.EPC\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
memory bank }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b S_MASK} {\b epcMask} = new {\b S_MASK}()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A buffer that contains a left-justified bit array that represents that bit pattern to match \'96 i.e., the most significant bit of the bit array appears in the most-significant bit (i.e., bit 7) of the first byte of the buffer (i.e., mask[0]). All bits beyond count are ignored. For example, if the application wished to find tags with the following 16 bits 1011.1111.1010.0101, starting at offset 20 in the Electronic Product Code, then the fields would be set as follows: offset = 20 count = 16 mask[0] = 0xBF (1011.1111) mask[1] = 0xA5 (1010.0101) }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt32 {\b epcMaskLength} = 0\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
epc mask length in bit, e.g. epc = 0x3000, length = 4 * 8 = 32 bits, epc = 0x300, length = 3 * 8 = 24 bits }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt32 {\b epcMaskOffset} = 0\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
epc mask offset in bit, note : if enable PC mask, this parameter is ignored. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte [] {\b Mask}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A buffer that contains a left-justified bit array that represents that bit pattern to match (use epcMask, if you select EPC) }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt32 {\b MaskLength} = 0\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
epc mask length in bit (use epcMaskLength, if you select EPC) }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt32 {\b MaskOffset} = 0\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
epc mask offset in bit (use epcMaskOffset, if you select EPC) }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt32 {\b Qvalue} = 0\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Qvalue }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b ParallelEncoding} = false\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
UCODE 7 Parallel Encoding }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Selected tag parameters, configure this before any specific tag operation \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v TagSelectedParms\:CSLibrary::Structures::TagSelectedParms}
{\xe \v CSLibrary::Structures::TagSelectedParms\:TagSelectedParms}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CSLibrary.Structures.TagSelectedParms.TagSelectedParms ()}}
\par
{\bkmkstart AAAAAAAEKJ}
{\bkmkend AAAAAAAEKJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
constructor }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Clone\:CSLibrary::Structures::TagSelectedParms}
{\xe \v CSLibrary::Structures::TagSelectedParms\:Clone}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
object CSLibrary.Structures.TagSelectedParms.Clone ()}}
\par
{\bkmkstart AAAAAAAEKK}
{\bkmkend AAAAAAAEKK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v bank\:CSLibrary::Structures::TagSelectedParms}
{\xe \v CSLibrary::Structures::TagSelectedParms\:bank}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b MemoryBank} CSLibrary.Structures.TagSelectedParms.bank = MemoryBank.EPC}}
\par
{\bkmkstart AAAAAAAEKL}
{\bkmkend AAAAAAAEKL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
memory bank }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v epcMask\:CSLibrary::Structures::TagSelectedParms}
{\xe \v CSLibrary::Structures::TagSelectedParms\:epcMask}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b S_MASK} CSLibrary.Structures.TagSelectedParms.epcMask = new {\b S_MASK}()}}
\par
{\bkmkstart AAAAAAAEKM}
{\bkmkend AAAAAAAEKM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A buffer that contains a left-justified bit array that represents that bit pattern to match \'96 i.e., the most significant bit of the bit array appears in the most-significant bit (i.e., bit 7) of the first byte of the buffer (i.e., mask[0]). All bits beyond count are ignored. For example, if the application wished to find tags with the following 16 bits 1011.1111.1010.0101, starting at offset 20 in the Electronic Product Code, then the fields would be set as follows: offset = 20 count = 16 mask[0] = 0xBF (1011.1111) mask[1] = 0xA5 (1010.0101) }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v epcMaskLength\:CSLibrary::Structures::TagSelectedParms}
{\xe \v CSLibrary::Structures::TagSelectedParms\:epcMaskLength}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt32 CSLibrary.Structures.TagSelectedParms.epcMaskLength = 0}}
\par
{\bkmkstart AAAAAAAEKN}
{\bkmkend AAAAAAAEKN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
epc mask length in bit, e.g. epc = 0x3000, length = 4 * 8 = 32 bits, epc = 0x300, length = 3 * 8 = 24 bits }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v epcMaskOffset\:CSLibrary::Structures::TagSelectedParms}
{\xe \v CSLibrary::Structures::TagSelectedParms\:epcMaskOffset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt32 CSLibrary.Structures.TagSelectedParms.epcMaskOffset = 0}}
\par
{\bkmkstart AAAAAAAEKO}
{\bkmkend AAAAAAAEKO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
epc mask offset in bit, note : if enable PC mask, this parameter is ignored. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v flags\:CSLibrary::Structures::TagSelectedParms}
{\xe \v CSLibrary::Structures::TagSelectedParms\:flags}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b SelectMaskFlags} CSLibrary.Structures.TagSelectedParms.flags = SelectMaskFlags.DISABLE_ALL}}
\par
{\bkmkstart AAAAAAAEKP}
{\bkmkend AAAAAAAEKP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A mask that indicates current parameters enalbe or not. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Mask\:CSLibrary::Structures::TagSelectedParms}
{\xe \v CSLibrary::Structures::TagSelectedParms\:Mask}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte [] CSLibrary.Structures.TagSelectedParms.Mask}}
\par
{\bkmkstart AAAAAAAEKQ}
{\bkmkend AAAAAAAEKQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A buffer that contains a left-justified bit array that represents that bit pattern to match (use epcMask, if you select EPC) }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v MaskLength\:CSLibrary::Structures::TagSelectedParms}
{\xe \v CSLibrary::Structures::TagSelectedParms\:MaskLength}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt32 CSLibrary.Structures.TagSelectedParms.MaskLength = 0}}
\par
{\bkmkstart AAAAAAAEKR}
{\bkmkend AAAAAAAEKR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
epc mask length in bit (use epcMaskLength, if you select EPC) }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v MaskOffset\:CSLibrary::Structures::TagSelectedParms}
{\xe \v CSLibrary::Structures::TagSelectedParms\:MaskOffset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt32 CSLibrary.Structures.TagSelectedParms.MaskOffset = 0}}
\par
{\bkmkstart AAAAAAAEKS}
{\bkmkend AAAAAAAEKS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
epc mask offset in bit (use epcMaskOffset, if you select EPC) }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v ParallelEncoding\:CSLibrary::Structures::TagSelectedParms}
{\xe \v CSLibrary::Structures::TagSelectedParms\:ParallelEncoding}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool CSLibrary.Structures.TagSelectedParms.ParallelEncoding = false}}
\par
{\bkmkstart AAAAAAAEKT}
{\bkmkend AAAAAAAEKT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
UCODE 7 Parallel Encoding }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v Qvalue\:CSLibrary::Structures::TagSelectedParms}
{\xe \v CSLibrary::Structures::TagSelectedParms\:Qvalue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt32 CSLibrary.Structures.TagSelectedParms.Qvalue = 0}}
\par
{\bkmkstart AAAAAAAEKU}
{\bkmkend AAAAAAAEKU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Qvalue }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
CSLibrary/RFIDReader/Structures/{\b Intel.Structures.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary.Structures.TagWriteEpcParms Class Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary.Structures.TagWriteEpcParms}
{\xe \v CSLibrary.Structures.TagWriteEpcParms}
{\bkmkstart AAAAAAAEKV}
{\bkmkend AAAAAAAEKV}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Write EPC structures, configure this before write new EPC value }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TagWriteEpcParms} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt32 {\b accessPassword}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The access password for the tags. A value of zero indicates no access password. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt16 {\b offset}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The offset, in the memory bank, of the first 16-bit word to write. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt16 {\b count}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The number of 16-bit words that will be written. This field must be between 1 and 31, inclusive. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b S_EPC} {\b epc}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A new epc to the 16-bit values to write to the tag's memory bank. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Write EPC structures, configure this before write new EPC value \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v TagWriteEpcParms\:CSLibrary::Structures::TagWriteEpcParms}
{\xe \v CSLibrary::Structures::TagWriteEpcParms\:TagWriteEpcParms}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CSLibrary.Structures.TagWriteEpcParms.TagWriteEpcParms ()}}
\par
{\bkmkstart AAAAAAAEKW}
{\bkmkend AAAAAAAEKW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
}}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v accessPassword\:CSLibrary::Structures::TagWriteEpcParms}
{\xe \v CSLibrary::Structures::TagWriteEpcParms\:accessPassword}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt32 CSLibrary.Structures.TagWriteEpcParms.accessPassword}}
\par
{\bkmkstart AAAAAAAEKX}
{\bkmkend AAAAAAAEKX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The access password for the tags. A value of zero indicates no access password. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v count\:CSLibrary::Structures::TagWriteEpcParms}
{\xe \v CSLibrary::Structures::TagWriteEpcParms\:count}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt16 CSLibrary.Structures.TagWriteEpcParms.count}}
\par
{\bkmkstart AAAAAAAEKY}
{\bkmkend AAAAAAAEKY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The number of 16-bit words that will be written. This field must be between 1 and 31, inclusive. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v epc\:CSLibrary::Structures::TagWriteEpcParms}
{\xe \v CSLibrary::Structures::TagWriteEpcParms\:epc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b S_EPC} CSLibrary.Structures.TagWriteEpcParms.epc}}
\par
{\bkmkstart AAAAAAAEKZ}
{\bkmkend AAAAAAAEKZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A new epc to the 16-bit values to write to the tag's memory bank. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v offset\:CSLibrary::Structures::TagWriteEpcParms}
{\xe \v CSLibrary::Structures::TagWriteEpcParms\:offset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt16 CSLibrary.Structures.TagWriteEpcParms.offset}}
\par
{\bkmkstart AAAAAAAELA}
{\bkmkend AAAAAAAELA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The offset, in the memory bank, of the first 16-bit word to write. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
CSLibrary/RFIDReader/Structures/{\b CSLibrary.Structures.TagWrite.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary.Structures.TagWritePcParms Class Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary.Structures.TagWritePcParms}
{\xe \v CSLibrary.Structures.TagWritePcParms}
{\bkmkstart AAAAAAAELB}
{\bkmkend AAAAAAAELB}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Write PC structures, configure this before write new PC value }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt32 {\b accessPassword}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The access password for the tags. A value of zero indicates no access password. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt16 {\b pc}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A new pc to the 16-bit values to write to the tag's memory bank. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SelectFlags} {\b flags} = SelectFlags.SELECT\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Flag - Normal or combination of Select or Post-Match }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Write PC structures, configure this before write new PC value \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v accessPassword\:CSLibrary::Structures::TagWritePcParms}
{\xe \v CSLibrary::Structures::TagWritePcParms\:accessPassword}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt32 CSLibrary.Structures.TagWritePcParms.accessPassword}}
\par
{\bkmkstart AAAAAAAELC}
{\bkmkend AAAAAAAELC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The access password for the tags. A value of zero indicates no access password. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v flags\:CSLibrary::Structures::TagWritePcParms}
{\xe \v CSLibrary::Structures::TagWritePcParms\:flags}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b SelectFlags} CSLibrary.Structures.TagWritePcParms.flags = SelectFlags.SELECT}}
\par
{\bkmkstart AAAAAAAELD}
{\bkmkend AAAAAAAELD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Flag - Normal or combination of Select or Post-Match }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v pc\:CSLibrary::Structures::TagWritePcParms}
{\xe \v CSLibrary::Structures::TagWritePcParms\:pc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt16 CSLibrary.Structures.TagWritePcParms.pc}}
\par
{\bkmkstart AAAAAAAELE}
{\bkmkend AAAAAAAELE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A new pc to the 16-bit values to write to the tag's memory bank. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
CSLibrary/RFIDReader/Structures/{\b CSLibrary.Structures.TagWrite.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary.Structures.TagWritePwdParms Class Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary.Structures.TagWritePwdParms}
{\xe \v CSLibrary.Structures.TagWritePwdParms}
{\bkmkstart AAAAAAAELF}
{\bkmkend AAAAAAAELF}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Write password structures, configure this before write new password value }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt32 {\b accessPassword}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The access password for the tags. A value of zero indicates no access password. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt32 {\b password}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A new password to the 32-bit values to write to the tag's memory bank. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SelectFlags} {\b flags} = SelectFlags.SELECT\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Flag - Normal or combination of Select or Post-Match }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Write password structures, configure this before write new password value \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v accessPassword\:CSLibrary::Structures::TagWritePwdParms}
{\xe \v CSLibrary::Structures::TagWritePwdParms\:accessPassword}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt32 CSLibrary.Structures.TagWritePwdParms.accessPassword}}
\par
{\bkmkstart AAAAAAAELG}
{\bkmkend AAAAAAAELG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The access password for the tags. A value of zero indicates no access password. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v flags\:CSLibrary::Structures::TagWritePwdParms}
{\xe \v CSLibrary::Structures::TagWritePwdParms\:flags}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b SelectFlags} CSLibrary.Structures.TagWritePwdParms.flags = SelectFlags.SELECT}}
\par
{\bkmkstart AAAAAAAELH}
{\bkmkend AAAAAAAELH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Flag - Normal or combination of Select or Post-Match }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v password\:CSLibrary::Structures::TagWritePwdParms}
{\xe \v CSLibrary::Structures::TagWritePwdParms\:password}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt32 CSLibrary.Structures.TagWritePwdParms.password}}
\par
{\bkmkstart AAAAAAAELI}
{\bkmkend AAAAAAAELI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A new password to the 32-bit values to write to the tag's memory bank. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
CSLibrary/RFIDReader/Structures/{\b CSLibrary.Structures.TagWrite.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary.Structures.TagWriteUserParms Class Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary.Structures.TagWriteUserParms}
{\xe \v CSLibrary.Structures.TagWriteUserParms}
{\bkmkstart AAAAAAAELJ}
{\bkmkend AAAAAAAELJ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Write User structures, configure this before write new user data }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt32 {\b accessPassword}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The access password for the tags. A value of zero indicates no access password. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt16 {\b offset}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The offset, in the memory bank, of the first 16-bit word to write. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt16 {\b count}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The number of 16-bit words that will be written. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt16 [] {\b pData} = new UInt16[0]\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A array to the 16-bit values to write to the tag's memory bank. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SelectFlags} {\b flags} = SelectFlags.SELECT\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Flag - Normal or combination of Select or Post-Match }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Write User structures, configure this before write new user data \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v accessPassword\:CSLibrary::Structures::TagWriteUserParms}
{\xe \v CSLibrary::Structures::TagWriteUserParms\:accessPassword}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt32 CSLibrary.Structures.TagWriteUserParms.accessPassword}}
\par
{\bkmkstart AAAAAAAELK}
{\bkmkend AAAAAAAELK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The access password for the tags. A value of zero indicates no access password. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v count\:CSLibrary::Structures::TagWriteUserParms}
{\xe \v CSLibrary::Structures::TagWriteUserParms\:count}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt16 CSLibrary.Structures.TagWriteUserParms.count}}
\par
{\bkmkstart AAAAAAAELL}
{\bkmkend AAAAAAAELL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The number of 16-bit words that will be written. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v flags\:CSLibrary::Structures::TagWriteUserParms}
{\xe \v CSLibrary::Structures::TagWriteUserParms\:flags}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b SelectFlags} CSLibrary.Structures.TagWriteUserParms.flags = SelectFlags.SELECT}}
\par
{\bkmkstart AAAAAAAELM}
{\bkmkend AAAAAAAELM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Flag - Normal or combination of Select or Post-Match }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v offset\:CSLibrary::Structures::TagWriteUserParms}
{\xe \v CSLibrary::Structures::TagWriteUserParms\:offset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt16 CSLibrary.Structures.TagWriteUserParms.offset}}
\par
{\bkmkstart AAAAAAAELN}
{\bkmkend AAAAAAAELN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The offset, in the memory bank, of the first 16-bit word to write. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v pData\:CSLibrary::Structures::TagWriteUserParms}
{\xe \v CSLibrary::Structures::TagWriteUserParms\:pData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt16 [] CSLibrary.Structures.TagWriteUserParms.pData = new UInt16[0]}}
\par
{\bkmkstart AAAAAAAELO}
{\bkmkend AAAAAAAELO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A array to the 16-bit values to write to the tag's memory bank. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
CSLibrary/RFIDReader/Structures/{\b CSLibrary.Structures.TagWrite.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary.Structures.TemperatureParms Struct Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary.Structures.TemperatureParms}
{\xe \v CSLibrary.Structures.TemperatureParms}
{\bkmkstart AAAAAAAELP}
{\bkmkend AAAAAAAELP}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Temperature Parms }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint {\b amb}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ambient Temperature }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint {\b xcvr}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Transciever Temperature }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint {\b pwramp}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Power Amp Temperature }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Temperature Parms \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v amb\:CSLibrary::Structures::TemperatureParms}
{\xe \v CSLibrary::Structures::TemperatureParms\:amb}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint CSLibrary.Structures.TemperatureParms.amb}}
\par
{\bkmkstart AAAAAAAELQ}
{\bkmkend AAAAAAAELQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ambient Temperature }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v pwramp\:CSLibrary::Structures::TemperatureParms}
{\xe \v CSLibrary::Structures::TemperatureParms\:pwramp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint CSLibrary.Structures.TemperatureParms.pwramp}}
\par
{\bkmkstart AAAAAAAELR}
{\bkmkend AAAAAAAELR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Power Amp Temperature }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v xcvr\:CSLibrary::Structures::TemperatureParms}
{\xe \v CSLibrary::Structures::TemperatureParms\:xcvr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint CSLibrary.Structures.TemperatureParms.xcvr}}
\par
{\bkmkstart AAAAAAAELS}
{\bkmkend AAAAAAAELS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Transciever Temperature }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
CSLibrary/RFIDReader/Structures/{\b CSLibrary.Structures.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary.Structures.TextMessage Class Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary.Structures.TextMessage}
{\xe \v CSLibrary.Structures.TextMessage}
{\bkmkstart AAAAAAAELT}
{\bkmkend AAAAAAAELT}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Text} message type }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt16 [] {\b tcTextMsg} = new UInt16[{\b Constants.Constants.MAX_MESAGE_LENGTH}]\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Text} message with 4096 maximum length }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt32 {\b nLength}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Message length }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt32 {\b dwStructSize} = 8200\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure size }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Text} message type \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v dwStructSize\:CSLibrary::Barcode::Structures::TextMessage}
{\xe \v CSLibrary::Barcode::Structures::TextMessage\:dwStructSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt32 CSLibrary.Structures.TextMessage.dwStructSize = 8200{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAELU}
{\bkmkend AAAAAAAELU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure size }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v nLength\:CSLibrary::Barcode::Structures::TextMessage}
{\xe \v CSLibrary::Barcode::Structures::TextMessage\:nLength}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt32 CSLibrary.Structures.TextMessage.nLength}}
\par
{\bkmkstart AAAAAAAELV}
{\bkmkend AAAAAAAELV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Message length }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v tcTextMsg\:CSLibrary::Barcode::Structures::TextMessage}
{\xe \v CSLibrary::Barcode::Structures::TextMessage\:tcTextMsg}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt16 [] CSLibrary.Structures.TextMessage.tcTextMsg = new UInt16[{\b Constants.Constants.MAX_MESAGE_LENGTH}]}}
\par
{\bkmkstart AAAAAAAELW}
{\bkmkend AAAAAAAELW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Text} message with 4096 maximum length }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
CSLibrary/BarcodeReader/Structures/{\b CSLibrary.Barcode.Structures.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary.Structures.ThresholdTemperatureParms Struct Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary.Structures.ThresholdTemperatureParms}
{\xe \v CSLibrary.Structures.ThresholdTemperatureParms}
{\bkmkstart AAAAAAAELX}
{\bkmkend AAAAAAAELX}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b ThresholdTemperatureParms} }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint {\b amb}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ambient Temperature }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint {\b xcvr}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Transciever Temperature }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint {\b pwramp}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Power Amp Temperature }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint {\b delta}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
pa-delta }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b ThresholdTemperatureParms} \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v amb\:CSLibrary::Structures::ThresholdTemperatureParms}
{\xe \v CSLibrary::Structures::ThresholdTemperatureParms\:amb}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint CSLibrary.Structures.ThresholdTemperatureParms.amb}}
\par
{\bkmkstart AAAAAAAELY}
{\bkmkend AAAAAAAELY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ambient Temperature }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v delta\:CSLibrary::Structures::ThresholdTemperatureParms}
{\xe \v CSLibrary::Structures::ThresholdTemperatureParms\:delta}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint CSLibrary.Structures.ThresholdTemperatureParms.delta}}
\par
{\bkmkstart AAAAAAAELZ}
{\bkmkend AAAAAAAELZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
pa-delta }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v pwramp\:CSLibrary::Structures::ThresholdTemperatureParms}
{\xe \v CSLibrary::Structures::ThresholdTemperatureParms\:pwramp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint CSLibrary.Structures.ThresholdTemperatureParms.pwramp}}
\par
{\bkmkstart AAAAAAAEMA}
{\bkmkend AAAAAAAEMA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Power Amp Temperature }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v xcvr\:CSLibrary::Structures::ThresholdTemperatureParms}
{\xe \v CSLibrary::Structures::ThresholdTemperatureParms\:xcvr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint CSLibrary.Structures.ThresholdTemperatureParms.xcvr}}
\par
{\bkmkstart AAAAAAAEMB}
{\bkmkend AAAAAAAEMB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Transciever Temperature }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
CSLibrary/RFIDReader/Structures/{\b CSLibrary.Structures.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary.Structures.TriggerParms Class Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary.Structures.TriggerParms}
{\xe \v CSLibrary.Structures.TriggerParms}
{\bkmkstart AAAAAAAEMC}
{\bkmkend AAAAAAAEMC}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Triggering control }}\par
Inheritance diagram for CSLibrary.Structures.TriggerParms:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_c_s_library_1_1_barcode_1_1_structures_1_1_trigger_parms.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TriggerParms} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TriggerMask} {\b dwMask} = TriggerMask.ALL\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mask of active items. Notes: You can use OR to enable multiple items }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TriggerMode} {\b TriggerMode}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Trigger Mode }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint {\b dwTriggerTimeout}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
0->300000 (milliseconds) }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Triggering control \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v TriggerParms\:CSLibrary::Barcode::Structures::TriggerParms}
{\xe \v CSLibrary::Barcode::Structures::TriggerParms\:TriggerParms}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CSLibrary.Structures.TriggerParms.TriggerParms ()}}
\par
{\bkmkstart AAAAAAAEMD}
{\bkmkend AAAAAAAEMD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v dwMask\:CSLibrary::Barcode::Structures::TriggerParms}
{\xe \v CSLibrary::Barcode::Structures::TriggerParms\:dwMask}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b TriggerMask} CSLibrary.Structures.TriggerParms.dwMask = TriggerMask.ALL}}
\par
{\bkmkstart AAAAAAAEME}
{\bkmkend AAAAAAAEME}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mask of active items. Notes: You can use OR to enable multiple items }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v dwTriggerTimeout\:CSLibrary::Barcode::Structures::TriggerParms}
{\xe \v CSLibrary::Barcode::Structures::TriggerParms\:dwTriggerTimeout}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint CSLibrary.Structures.TriggerParms.dwTriggerTimeout}}
\par
{\bkmkstart AAAAAAAEMF}
{\bkmkend AAAAAAAEMF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
0->300000 (milliseconds) }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v TriggerMode\:CSLibrary::Barcode::Structures::TriggerParms}
{\xe \v CSLibrary::Barcode::Structures::TriggerParms\:TriggerMode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b TriggerMode} CSLibrary.Structures.TriggerParms.TriggerMode}}
\par
{\bkmkstart AAAAAAAEMG}
{\bkmkend AAAAAAAEMG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Trigger Mode }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
CSLibrary/BarcodeReader/Structures/{\b CSLibrary.Barcode.Structures.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary.HighLevelInterface.UPLINKCMD Class Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary.HighLevelInterface.UPLINKCMD}
{\xe \v CSLibrary.HighLevelInterface.UPLINKCMD}
{\bkmkstart AAAAAAAAIP}
{\bkmkend AAAAAAAAIP}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static readonly byte [] {\b RFIDDATA} = \{ 0x81, 0x00 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static readonly byte [] {\b BARCODEDATA} = \{ 0x90, 0x00 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static readonly byte [] {\b BARCODEVALID} = \{ 0x90, 0x01 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static readonly byte [] {\b BATTERYFAILED} = \{ 0xA1, 0x00 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static readonly byte [] {\b ERRORCODE} = \{ 0xA1, 0x01 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static readonly byte [] {\b TRIGGERPUSHED} = \{ 0xA1, 0x02 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static readonly byte [] {\b TRIGGERRELEASED} = \{ 0xA1, 0x03 \}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v BARCODEDATA\:CSLibrary::HighLevelInterface::UPLINKCMD}
{\xe \v CSLibrary::HighLevelInterface::UPLINKCMD\:BARCODEDATA}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly byte [] CSLibrary.HighLevelInterface.UPLINKCMD.BARCODEDATA = \{ 0x90, 0x00 \}{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAIQ}
{\bkmkend AAAAAAAAIQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v BARCODEVALID\:CSLibrary::HighLevelInterface::UPLINKCMD}
{\xe \v CSLibrary::HighLevelInterface::UPLINKCMD\:BARCODEVALID}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly byte [] CSLibrary.HighLevelInterface.UPLINKCMD.BARCODEVALID = \{ 0x90, 0x01 \}{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAIR}
{\bkmkend AAAAAAAAIR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v BATTERYFAILED\:CSLibrary::HighLevelInterface::UPLINKCMD}
{\xe \v CSLibrary::HighLevelInterface::UPLINKCMD\:BATTERYFAILED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly byte [] CSLibrary.HighLevelInterface.UPLINKCMD.BATTERYFAILED = \{ 0xA1, 0x00 \}{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAIS}
{\bkmkend AAAAAAAAIS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ERRORCODE\:CSLibrary::HighLevelInterface::UPLINKCMD}
{\xe \v CSLibrary::HighLevelInterface::UPLINKCMD\:ERRORCODE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly byte [] CSLibrary.HighLevelInterface.UPLINKCMD.ERRORCODE = \{ 0xA1, 0x01 \}{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAIT}
{\bkmkend AAAAAAAAIT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v RFIDDATA\:CSLibrary::HighLevelInterface::UPLINKCMD}
{\xe \v CSLibrary::HighLevelInterface::UPLINKCMD\:RFIDDATA}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly byte [] CSLibrary.HighLevelInterface.UPLINKCMD.RFIDDATA = \{ 0x81, 0x00 \}{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAIU}
{\bkmkend AAAAAAAAIU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v TRIGGERPUSHED\:CSLibrary::HighLevelInterface::UPLINKCMD}
{\xe \v CSLibrary::HighLevelInterface::UPLINKCMD\:TRIGGERPUSHED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly byte [] CSLibrary.HighLevelInterface.UPLINKCMD.TRIGGERPUSHED = \{ 0xA1, 0x02 \}{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAIV}
{\bkmkend AAAAAAAAIV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v TRIGGERRELEASED\:CSLibrary::HighLevelInterface::UPLINKCMD}
{\xe \v CSLibrary::HighLevelInterface::UPLINKCMD\:TRIGGERRELEASED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly byte [] CSLibrary.HighLevelInterface.UPLINKCMD.TRIGGERRELEASED = \{ 0xA1, 0x03 \}{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAIW}
{\bkmkend AAAAAAAAIW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
CSLibrary/{\b CSLibrary.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary.Structures.Version Class Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary.Structures.Version}
{\xe \v CSLibrary.Structures.Version}
{\bkmkstart AAAAAAAEMH}
{\bkmkend AAAAAAAEMH}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Version} Structure }}\par
Inheritance diagram for CSLibrary.Structures.Version:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_c_s_library_1_1_structures_1_1_version.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Version} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override string {\b ToString} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert {\b Version} to string }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt32 {\b major} = 0\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Major }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt32 {\b minor} = 0\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Minor }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UInt32 {\b patch} = 0\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Patch }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Version} Structure \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v Version\:CSLibrary::Structures::Version}
{\xe \v CSLibrary::Structures::Version\:Version}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CSLibrary.Structures.Version.Version ()}}
\par
{\bkmkstart AAAAAAAEMI}
{\bkmkend AAAAAAAEMI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v ToString\:CSLibrary::Structures::Version}
{\xe \v CSLibrary::Structures::Version\:ToString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override string CSLibrary.Structures.Version.ToString ()}}
\par
{\bkmkstart AAAAAAAEMJ}
{\bkmkend AAAAAAAEMJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert {\b Version} to string }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v major\:CSLibrary::Structures::Version}
{\xe \v CSLibrary::Structures::Version\:major}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt32 CSLibrary.Structures.Version.major = 0}}
\par
{\bkmkstart AAAAAAAEMK}
{\bkmkend AAAAAAAEMK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Major }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v minor\:CSLibrary::Structures::Version}
{\xe \v CSLibrary::Structures::Version\:minor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt32 CSLibrary.Structures.Version.minor = 0}}
\par
{\bkmkstart AAAAAAAEML}
{\bkmkend AAAAAAAEML}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Minor }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v patch\:CSLibrary::Structures::Version}
{\xe \v CSLibrary::Structures::Version\:patch}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UInt32 CSLibrary.Structures.Version.patch = 0}}
\par
{\bkmkstart AAAAAAAEMM}
{\bkmkend AAAAAAAEMM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Patch }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
CSLibrary/RFIDReader/Structures/{\b Intel.Structures.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary.Structures.VersionParms Class Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary.Structures.VersionParms}
{\xe \v CSLibrary.Structures.VersionParms}
{\bkmkstart AAAAAAAEMN}
{\bkmkend AAAAAAAEMN}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Revision information }}\par
Inheritance diagram for CSLibrary.Structures.VersionParms:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_c_s_library_1_1_barcode_1_1_structures_1_1_version_parms.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b VersionParms} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b VersionMask} {\b dwMask} = VersionMask.ALL\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mask of active items. Notes: You can use OR to enable multiple items }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
String {\b tcAPIRev}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SDK API version string }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
String {\b tcFirmwareRev}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Imager firmware version }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
String {\b tcFirmwarePartNumber}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Engine PartNumber. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
String {\b tcBootCodeRev}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Imager boot code version. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
String {\b tcDeviceType}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Imager device string. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
String {\b tcManufacturersId}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Engine Report string. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
String {\b tcDecoderRev}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Decoder Revision }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
String {\b tcScanDriverRev}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Scan Driver Revision }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Revision information \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v VersionParms\:CSLibrary::Barcode::Structures::VersionParms}
{\xe \v CSLibrary::Barcode::Structures::VersionParms\:VersionParms}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CSLibrary.Structures.VersionParms.VersionParms ()}}
\par
{\bkmkstart AAAAAAAEMO}
{\bkmkend AAAAAAAEMO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v dwMask\:CSLibrary::Barcode::Structures::VersionParms}
{\xe \v CSLibrary::Barcode::Structures::VersionParms\:dwMask}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b VersionMask} CSLibrary.Structures.VersionParms.dwMask = VersionMask.ALL}}
\par
{\bkmkstart AAAAAAAEMP}
{\bkmkend AAAAAAAEMP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mask of active items. Notes: You can use OR to enable multiple items }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v tcAPIRev\:CSLibrary::Barcode::Structures::VersionParms}
{\xe \v CSLibrary::Barcode::Structures::VersionParms\:tcAPIRev}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
String CSLibrary.Structures.VersionParms.tcAPIRev}}
\par
{\bkmkstart AAAAAAAEMQ}
{\bkmkend AAAAAAAEMQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SDK API version string }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v tcBootCodeRev\:CSLibrary::Barcode::Structures::VersionParms}
{\xe \v CSLibrary::Barcode::Structures::VersionParms\:tcBootCodeRev}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
String CSLibrary.Structures.VersionParms.tcBootCodeRev}}
\par
{\bkmkstart AAAAAAAEMR}
{\bkmkend AAAAAAAEMR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Imager boot code version. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v tcDecoderRev\:CSLibrary::Barcode::Structures::VersionParms}
{\xe \v CSLibrary::Barcode::Structures::VersionParms\:tcDecoderRev}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
String CSLibrary.Structures.VersionParms.tcDecoderRev}}
\par
{\bkmkstart AAAAAAAEMS}
{\bkmkend AAAAAAAEMS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Decoder Revision }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v tcDeviceType\:CSLibrary::Barcode::Structures::VersionParms}
{\xe \v CSLibrary::Barcode::Structures::VersionParms\:tcDeviceType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
String CSLibrary.Structures.VersionParms.tcDeviceType}}
\par
{\bkmkstart AAAAAAAEMT}
{\bkmkend AAAAAAAEMT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Imager device string. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v tcFirmwarePartNumber\:CSLibrary::Barcode::Structures::VersionParms}
{\xe \v CSLibrary::Barcode::Structures::VersionParms\:tcFirmwarePartNumber}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
String CSLibrary.Structures.VersionParms.tcFirmwarePartNumber}}
\par
{\bkmkstart AAAAAAAEMU}
{\bkmkend AAAAAAAEMU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Engine PartNumber. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v tcFirmwareRev\:CSLibrary::Barcode::Structures::VersionParms}
{\xe \v CSLibrary::Barcode::Structures::VersionParms\:tcFirmwareRev}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
String CSLibrary.Structures.VersionParms.tcFirmwareRev}}
\par
{\bkmkstart AAAAAAAEMV}
{\bkmkend AAAAAAAEMV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Imager firmware version }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v tcManufacturersId\:CSLibrary::Barcode::Structures::VersionParms}
{\xe \v CSLibrary::Barcode::Structures::VersionParms\:tcManufacturersId}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
String CSLibrary.Structures.VersionParms.tcManufacturersId}}
\par
{\bkmkstart AAAAAAAEMW}
{\bkmkend AAAAAAAEMW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Engine Report string. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v tcScanDriverRev\:CSLibrary::Barcode::Structures::VersionParms}
{\xe \v CSLibrary::Barcode::Structures::VersionParms\:tcScanDriverRev}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
String CSLibrary.Structures.VersionParms.tcScanDriverRev}}
\par
{\bkmkstart AAAAAAAEMX}
{\bkmkend AAAAAAAEMX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Scan Driver Revision }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
CSLibrary/BarcodeReader/Structures/{\b CSLibrary.Barcode.Structures.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary.Notification.VoltageEventArgs Class Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary.Notification.VoltageEventArgs}
{\xe \v CSLibrary.Notification.VoltageEventArgs}
{\bkmkstart AAAAAAAAJQ}
{\bkmkend AAAAAAAAJQ}
Inheritance diagram for CSLibrary.Notification.VoltageEventArgs:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_c_s_library_1_1_notification_1_1_voltage_event_args.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b VoltageEventArgs} (uint voltage)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Properties\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint {\b Voltage}{\f2  [get]}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint {\b m_Voltage} = 0\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v VoltageEventArgs\:CSLibrary::Notification::VoltageEventArgs}
{\xe \v CSLibrary::Notification::VoltageEventArgs\:VoltageEventArgs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CSLibrary.Notification.VoltageEventArgs.VoltageEventArgs (uint  {\i voltage})}}
\par
{\bkmkstart AAAAAAAAJR}
{\bkmkend AAAAAAAAJR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v m_Voltage\:CSLibrary::Notification::VoltageEventArgs}
{\xe \v CSLibrary::Notification::VoltageEventArgs\:m_Voltage}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint CSLibrary.Notification.VoltageEventArgs.m_Voltage = 0{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAJS}
{\bkmkend AAAAAAAAJS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Property Documentation\par
\pard\plain 
{\xe \v Voltage\:CSLibrary::Notification::VoltageEventArgs}
{\xe \v CSLibrary::Notification::VoltageEventArgs\:Voltage}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint CSLibrary.Notification.VoltageEventArgs.Voltage{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAJT}
{\bkmkend AAAAAAAAJT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
CSLibrary/Notification/{\b ClassNotification.cs}\par
}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
File Documentation{\tc \v File Documentation}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary/BarcodeReader/ClassBarCode.cs File Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary/BarcodeReader/ClassBarCode.cs}
{\xe \v CSLibrary/BarcodeReader/ClassBarCode.cs}
{\bkmkstart AAAAAAAAAA}
{\bkmkend AAAAAAAAAA}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CSLibrary.BarcodeReader}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CSLibrary.BarcodeReader.DOWNLINKCMD}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b CSLibrary}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary/BarcodeReader/Constants/CSLibrary.Barcode.Constants.cs File Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary/BarcodeReader/Constants/CSLibrary.Barcode.Constants.cs}
{\xe \v CSLibrary/BarcodeReader/Constants/CSLibrary.Barcode.Constants.cs}
{\bkmkstart AAAAAAAAAB}
{\bkmkend AAAAAAAAAB}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CSLibrary.Barcode.Constants.Constants}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constant value }}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b CSLibrary.Barcode.Constants}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumerations\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b CSLibrary.Barcode.Constants.MessageType} \{ {\b CSLibrary.Barcode.Constants.MessageType.DEC_MSG}, 
{\b CSLibrary.Barcode.Constants.MessageType.ERR_MSG}
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Message type }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b CSLibrary.Barcode.Constants.BarcodeState} \{ {\b CSLibrary.Barcode.Constants.BarcodeState.IDLE}, 
{\b CSLibrary.Barcode.Constants.BarcodeState.BUSY}, 
{\b CSLibrary.Barcode.Constants.BarcodeState.STOPPING}
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Barcode operation mode }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b CSLibrary.Barcode.Constants.Result} \{ {\b CSLibrary.Barcode.Constants.Result.INITIALIZE} = -1, 
{\b CSLibrary.Barcode.Constants.Result.SUCCESS} = 0, 
{\b CSLibrary.Barcode.Constants.Result.ERR_BADFILENAME}, 
{\b CSLibrary.Barcode.Constants.Result.ERR_BADPORT}, 
{\b CSLibrary.Barcode.Constants.Result.ERR_BADREGION}, 
{\b CSLibrary.Barcode.Constants.Result.ERR_DRIVER}, 
{\b CSLibrary.Barcode.Constants.Result.ERR_ENGINEBUSY}, 
{\b CSLibrary.Barcode.Constants.Result.ERR_FILE}, 
{\b CSLibrary.Barcode.Constants.Result.ERR_FILEINCOMPATIBLE}, 
{\b CSLibrary.Barcode.Constants.Result.ERR_FILEINVALID}, 
{\b CSLibrary.Barcode.Constants.Result.ERR_MEMORY}, 
{\b CSLibrary.Barcode.Constants.Result.ERR_NODECODE}, 
{\b CSLibrary.Barcode.Constants.Result.ERR_NODRIVER}, 
{\b CSLibrary.Barcode.Constants.Result.ERR_NOIMAGE}, 
{\b CSLibrary.Barcode.Constants.Result.ERR_NORESPONSE}, 
{\b CSLibrary.Barcode.Constants.Result.ERR_NOTCONNECTED}, 
{\b CSLibrary.Barcode.Constants.Result.ERR_PARAMETER}, 
{\b CSLibrary.Barcode.Constants.Result.ERR_UNSUPPORTED}, 
{\b CSLibrary.Barcode.Constants.Result.ERR_UPGRADE}, 
{\b CSLibrary.Barcode.Constants.Result.ERR_MENUDECODE}, 
{\b CSLibrary.Barcode.Constants.Result.ERR_REFLASH}, 
{\b CSLibrary.Barcode.Constants.Result.ERR_NOTRIGGER}, 
{\b CSLibrary.Barcode.Constants.Result.ERR_BADSMARTIMAGE}, 
{\b CSLibrary.Barcode.Constants.Result.ERR_SMARTIMAGETOOLARGE}, 
{\b CSLibrary.Barcode.Constants.Result.ERR_BUFFER_TOO_SMALL}, 
{\b CSLibrary.Barcode.Constants.Result.EOT} = 256, 
{\b CSLibrary.Barcode.Constants.Result.ERR_READTHREAD_START}, 
{\b CSLibrary.Barcode.Constants.Result.ERR_READTHREAD_STOP}, 
{\b CSLibrary.Barcode.Constants.Result.ERR_POLLEVENT}, 
{\b CSLibrary.Barcode.Constants.Result.ERR_WRONGRESULTSTRUCT}, 
{\b CSLibrary.Barcode.Constants.Result.ERR_USER_CANCEL}, 
{\b CSLibrary.Barcode.Constants.Result.ERR_NAK}, 
{\b CSLibrary.Barcode.Constants.Result.ERR_COMPRESSION_FAILED}, 
{\b CSLibrary.Barcode.Constants.Result.ERR_DECOMPRESSION_FAILED}, 
{\b CSLibrary.Barcode.Constants.Result.ERR_CAPTURE_IMAGE_FAILED}, 
{\b CSLibrary.Barcode.Constants.Result.ERR_SHIP_IMAGE_FAILED}, 
{\b CSLibrary.Barcode.Constants.Result.ERR_CONNECT_BOOT_CODE}, 
{\b CSLibrary.Barcode.Constants.Result.ERR_BAUD_TO_HIGH}, 
{\b CSLibrary.Barcode.Constants.Result.ERR_INVALID_COMM_PARAMS}, 
{\b CSLibrary.Barcode.Constants.Result.ERR_UNICODE_UNSUPPORTED}, 
{\b CSLibrary.Barcode.Constants.Result.ERR_INTERNAL_ERROR}, 
{\b CSLibrary.Barcode.Constants.Result.ERR_NOINTELBARCODE}, 
{\b CSLibrary.Barcode.Constants.Result.ERR_BADINTELIMAGE}, 
{\b CSLibrary.Barcode.Constants.Result.ERR_NOINTELIMAGE}, 
{\b CSLibrary.Barcode.Constants.Result.ERR_DLL_FILE}, 
{\b CSLibrary.Barcode.Constants.Result.ERR_DECODER_INIT_FAILED}, 
{\b CSLibrary.Barcode.Constants.Result.ERR_IMAGE_PROCESSING_FAILED}, 
{\b CSLibrary.Barcode.Constants.Result.ERR_UNSUPPORTED_ENGINE}, 
{\b CSLibrary.Barcode.Constants.Result.ERR_SYMBOLOGY_HAS_NO_RANGE}, 
{\b CSLibrary.Barcode.Constants.Result.ERR_COMMUNICATIONS_ERROR}, 
{\b CSLibrary.Barcode.Constants.Result.ERR_INVALID_PARAMETER}
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
These are the possible return values for all API functions They indicate either success, or the type of error encountered. }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b CSLibrary.Barcode.Constants.SetupType} \{ {\b CSLibrary.Barcode.Constants.SetupType.DEFAULT} = 0, 
{\b CSLibrary.Barcode.Constants.SetupType.CURRENT}
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Setup type }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b CSLibrary.Barcode.Constants.BaudRate} \{ {\b CSLibrary.Barcode.Constants.BaudRate.SERIAL_BAUD_300} = 300, 
{\b CSLibrary.Barcode.Constants.BaudRate.SERIAL_BAUD_600} = 600, 
{\b CSLibrary.Barcode.Constants.BaudRate.SERIAL_BAUD_1200} = 1200, 
{\b CSLibrary.Barcode.Constants.BaudRate.SERIAL_BAUD_2400} = 2400, 
{\b CSLibrary.Barcode.Constants.BaudRate.SERIAL_BAUD_4800} = 4800, 
{\b CSLibrary.Barcode.Constants.BaudRate.SERIAL_BAUD_9600} = 9600, 
{\b CSLibrary.Barcode.Constants.BaudRate.SERIAL_BAUD_19200} = 19200, 
{\b CSLibrary.Barcode.Constants.BaudRate.SERIAL_BAUD_38400} = 38400, 
{\b CSLibrary.Barcode.Constants.BaudRate.SERIAL_BAUD_57600} = 57600, 
{\b CSLibrary.Barcode.Constants.BaudRate.SERIAL_BAUD_115200} = 115200, 
{\b CSLibrary.Barcode.Constants.BaudRate.SERIAL_BAUD_230400} = 230400, 
{\b CSLibrary.Barcode.Constants.BaudRate.SERIAL_BAUD_460800} = 460800, 
{\b CSLibrary.Barcode.Constants.BaudRate.SERIAL_BAUD_921600} = 921600
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Serial port baud rates }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b CSLibrary.Barcode.Constants.DataBit} \{ {\b CSLibrary.Barcode.Constants.DataBit.BITS_7} = 7, 
{\b CSLibrary.Barcode.Constants.DataBit.BITS_8}
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Data bit }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b CSLibrary.Barcode.Constants.Parity} \{ {\b CSLibrary.Barcode.Constants.Parity.NONE} = 'N', 
{\b CSLibrary.Barcode.Constants.Parity.ODD} = 'O', 
{\b CSLibrary.Barcode.Constants.Parity.EVEN} = 'E', 
{\b CSLibrary.Barcode.Constants.Parity.MARK} = 'M', 
{\b CSLibrary.Barcode.Constants.Parity.SPACE} = 'S'
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Parity }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b CSLibrary.Barcode.Constants.StopBit} \{ {\b CSLibrary.Barcode.Constants.StopBit.ONE} = 1, 
{\b CSLibrary.Barcode.Constants.StopBit.TWO}
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Stop bits. }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b CSLibrary.Barcode.Constants.DecoderType} \{ {\b CSLibrary.Barcode.Constants.DecoderType.SDK_1D_CODES_ONLY} =0, 
{\b CSLibrary.Barcode.Constants.DecoderType.SDK_1D_AND_PDF_CODES}, 
{\b CSLibrary.Barcode.Constants.DecoderType.SDK_1D_AND_2D_CODES}
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Decoder Symbology Support }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b CSLibrary.Barcode.Constants.ImagerType} \{ {\b CSLibrary.Barcode.Constants.ImagerType.UNKNOWN_IMAGER} = 0, 
{\b CSLibrary.Barcode.Constants.ImagerType.DECODED_IMAGER_4080} = (EngineType.IT4000 * 10), 
{\b CSLibrary.Barcode.Constants.ImagerType.DECODED_IMAGER_4080_USB} = (ImagerType.DECODED_IMAGER_4080 + 1), 
{\b CSLibrary.Barcode.Constants.ImagerType.NON_DECODED_IMAGER_4000} = (ImagerType.DECODED_IMAGER_4080 + 2), 
{\b CSLibrary.Barcode.Constants.ImagerType.DECODED_IMAGER_5080VGA} = (EngineType.IT5X00VGA * 10), 
{\b CSLibrary.Barcode.Constants.ImagerType.DECODED_IMAGER_5080VGA_USB} = (ImagerType.DECODED_IMAGER_5080VGA + 1), 
{\b CSLibrary.Barcode.Constants.ImagerType.NON_DECODED_IMAGER_5000VGA} = (ImagerType.DECODED_IMAGER_5080VGA + 2), 
{\b CSLibrary.Barcode.Constants.ImagerType.DECODED_IMAGER_5080VGA_PSOC} = (EngineType.IT5X00VGA_PSOC * 10), 
{\b CSLibrary.Barcode.Constants.ImagerType.DECODED_IMAGER_5080VGA_PSOC_USB} = (ImagerType.DECODED_IMAGER_5080VGA_PSOC + 1), 
{\b CSLibrary.Barcode.Constants.ImagerType.NON_DECODED_IMAGER_5000VGA_PSOC} = (ImagerType.DECODED_IMAGER_5080VGA_PSOC + 2), 
{\b CSLibrary.Barcode.Constants.ImagerType.DECODED_IMAGER_5080} = (EngineType.IT5X00 * 10), 
{\b CSLibrary.Barcode.Constants.ImagerType.DECODED_IMAGER_5080_USB} = (ImagerType.DECODED_IMAGER_5080 + 1), 
{\b CSLibrary.Barcode.Constants.ImagerType.NON_DECODED_IMAGER_5000} = (ImagerType.DECODED_IMAGER_5080 + 2), 
{\b CSLibrary.Barcode.Constants.ImagerType.DECODED_IMAGER_5080_PSOC} = (EngineType.IT5X00_PSOC * 10), 
{\b CSLibrary.Barcode.Constants.ImagerType.DECODED_IMAGER_5080_PSOC_USB} = (ImagerType.DECODED_IMAGER_5080_PSOC + 1), 
{\b CSLibrary.Barcode.Constants.ImagerType.NON_DECODED_IMAGER_5000_PSOC} = (ImagerType.DECODED_IMAGER_5080_PSOC + 2)
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Imager Type (Decoded Out or Non Decoded Out) }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b CSLibrary.Barcode.Constants.EventType} \{ {\b CSLibrary.Barcode.Constants.EventType.BARCODE_EVENT} =0, 
{\b CSLibrary.Barcode.Constants.EventType.IMAGE_EVENT}, 
{\b CSLibrary.Barcode.Constants.EventType.TEXT_MSG_EVENT}, 
{\b CSLibrary.Barcode.Constants.EventType.INTELIMG_BARCODE_EVENT}, 
{\b CSLibrary.Barcode.Constants.EventType.INTELIMG_IMAGE_EVENT}, 
{\b CSLibrary.Barcode.Constants.EventType.TRIGGER_EVENT}
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Event type enum }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b CSLibrary.Barcode.Constants.ComPort} \{ {\b CSLibrary.Barcode.Constants.ComPort.COM1} =0, 
{\b CSLibrary.Barcode.Constants.ComPort.COM2}, 
{\b CSLibrary.Barcode.Constants.ComPort.COM3}, 
{\b CSLibrary.Barcode.Constants.ComPort.COM4}, 
{\b CSLibrary.Barcode.Constants.ComPort.COM5}, 
{\b CSLibrary.Barcode.Constants.ComPort.COM6}, 
{\b CSLibrary.Barcode.Constants.ComPort.COM7}, 
{\b CSLibrary.Barcode.Constants.ComPort.COM8}, 
{\b CSLibrary.Barcode.Constants.ComPort.COM9}, 
{\b CSLibrary.Barcode.Constants.ComPort.COM10}, 
{\b CSLibrary.Barcode.Constants.ComPort.COM11}, 
{\b CSLibrary.Barcode.Constants.ComPort.COM12}, 
{\b CSLibrary.Barcode.Constants.ComPort.COM13}, 
{\b CSLibrary.Barcode.Constants.ComPort.COM14}, 
{\b CSLibrary.Barcode.Constants.ComPort.COM15}, 
{\b CSLibrary.Barcode.Constants.ComPort.COM16}, 
{\b CSLibrary.Barcode.Constants.ComPort.COM17}, 
{\b CSLibrary.Barcode.Constants.ComPort.COM18}, 
{\b CSLibrary.Barcode.Constants.ComPort.COM19}, 
{\b CSLibrary.Barcode.Constants.ComPort.LAST_COMM_PORT} = 255
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Connection types }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b CSLibrary.Barcode.Constants.Action} \{ {\b CSLibrary.Barcode.Constants.Action.AIMER_CMD} = 0, 
{\b CSLibrary.Barcode.Constants.Action.ILLUMINATION_CMD}, 
{\b CSLibrary.Barcode.Constants.Action.BEEP_CMD}
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Action Commands }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b CSLibrary.Barcode.Constants.OnOff} \{ {\b CSLibrary.Barcode.Constants.OnOff.OFF} =0, 
{\b CSLibrary.Barcode.Constants.OnOff.ON} =1
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
On/Off enum }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b CSLibrary.Barcode.Constants.Led} \{ {\b CSLibrary.Barcode.Constants.Led.OFF} = 0, 
{\b CSLibrary.Barcode.Constants.Led.ON} = 1
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Control of Led on/off }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b CSLibrary.Barcode.Constants.Beep} \{ {\b CSLibrary.Barcode.Constants.Beep.SINGLE_BEEP} = 0, 
{\b CSLibrary.Barcode.Constants.Beep.DOUBLE_BEEP} = 1
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Beep Execute enum }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b CSLibrary.Barcode.Constants.PlugAndPlay} \{ {\b CSLibrary.Barcode.Constants.PlugAndPlay.PNP_OCR_PASSPORT} =0
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Plug and Play Command Enum }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b CSLibrary.Barcode.Constants.ImgFormat} \{ {\b CSLibrary.Barcode.Constants.ImgFormat.FF_RAW_BINARY} = 0, 
{\b CSLibrary.Barcode.Constants.ImgFormat.FF_RAW_GRAY}, 
{\b CSLibrary.Barcode.Constants.ImgFormat.FF_TIFF_BINARY}, 
{\b CSLibrary.Barcode.Constants.ImgFormat.FF_TIFF_BINARY_PACKBITS}, 
{\b CSLibrary.Barcode.Constants.ImgFormat.FF_TIFF_GRAY}, 
{\b CSLibrary.Barcode.Constants.ImgFormat.FF_JPEG_GRAY}, 
{\b CSLibrary.Barcode.Constants.ImgFormat.FF_BMP_GRAY}
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Image formats /summary> }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b CSLibrary.Barcode.Constants.Compression} \{ {\b CSLibrary.Barcode.Constants.Compression.NONE} = 0, 
{\b CSLibrary.Barcode.Constants.Compression.LOSSLESS}, 
{\b CSLibrary.Barcode.Constants.Compression.LOSSY}
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compression mode formats /summary> }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b CSLibrary.Barcode.Constants.DutyCycle} \{ {\b CSLibrary.Barcode.Constants.DutyCycle.DUTY_CYCLE_OFF} = 0, 
{\b CSLibrary.Barcode.Constants.DutyCycle.DUTY_CYCLE_ON}
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Capture Illumination Duty Cycle /summary> }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b CSLibrary.Barcode.Constants.AutoExposure} \{ {\b CSLibrary.Barcode.Constants.AutoExposure.BARCODE} = 0, 
{\b CSLibrary.Barcode.Constants.AutoExposure.PHOTO}, 
{\b CSLibrary.Barcode.Constants.AutoExposure.MANUAL}
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Auto Exposure type /summary> }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b CSLibrary.Barcode.Constants.Gain} \{ {\b CSLibrary.Barcode.Constants.Gain.GAIN_1x} = 1, 
{\b CSLibrary.Barcode.Constants.Gain.GAIN_2x}, 
{\b CSLibrary.Barcode.Constants.Gain.GAIN_4x} = 4
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Min and Max manual exposure Gain Values /summary> }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b CSLibrary.Barcode.Constants.FrameRate} \{ {\b CSLibrary.Barcode.Constants.FrameRate.R_1_FRAMES_PER_SEC} = 1, 
{\b CSLibrary.Barcode.Constants.FrameRate.R_2_FRAMES_PER_SEC}, 
{\b CSLibrary.Barcode.Constants.FrameRate.R_3_FRAMES_PER_SEC}, 
{\b CSLibrary.Barcode.Constants.FrameRate.R_4_FRAMES_PER_SEC}, 
{\b CSLibrary.Barcode.Constants.FrameRate.R_5_FRAMES_PER_SEC}, 
{\b CSLibrary.Barcode.Constants.FrameRate.R_6_FRAMES_PER_SEC}, 
{\b CSLibrary.Barcode.Constants.FrameRate.R_10_FRAMES_PER_SEC} = 10, 
{\b CSLibrary.Barcode.Constants.FrameRate.R_12_FRAMES_PER_SEC} = 12, 
{\b CSLibrary.Barcode.Constants.FrameRate.R_15_FRAMES_PER_SEC} = 15, 
{\b CSLibrary.Barcode.Constants.FrameRate.R_20_FRAMES_PER_SEC} = 20, 
{\b CSLibrary.Barcode.Constants.FrameRate.R_30_FRAMES_PER_SEC} = 30
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Frame rate enum /summary> }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b CSLibrary.Barcode.Constants.BeeperVolume} \{ {\b CSLibrary.Barcode.Constants.BeeperVolume.OFF} = 0, 
{\b CSLibrary.Barcode.Constants.BeeperVolume.LOW} = 1, 
{\b CSLibrary.Barcode.Constants.BeeperVolume.MEDIUM} = 2, 
{\b CSLibrary.Barcode.Constants.BeeperVolume.HIGH} = 3
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Beeper Volume enum /summary> }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b CSLibrary.Barcode.Constants.TriggerMode} \{ {\b CSLibrary.Barcode.Constants.TriggerMode.MANUAL_SERIAL} = 0, 
{\b CSLibrary.Barcode.Constants.TriggerMode.UNUSED}, 
{\b CSLibrary.Barcode.Constants.TriggerMode.MANUAL_LOW_POWER}, 
{\b CSLibrary.Barcode.Constants.TriggerMode.PRESENTATION}, 
{\b CSLibrary.Barcode.Constants.TriggerMode.SCANSTAND}, 
{\b CSLibrary.Barcode.Constants.TriggerMode.HOST_NOTIFY}, 
{\b CSLibrary.Barcode.Constants.TriggerMode.SNAP_AND_SHIP}
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Trigger Modes type /summary> }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b CSLibrary.Barcode.Constants.SequenceMode} \{ {\b CSLibrary.Barcode.Constants.SequenceMode.DISABLED} = 0, 
{\b CSLibrary.Barcode.Constants.SequenceMode.ENABLED}, 
{\b CSLibrary.Barcode.Constants.SequenceMode.REQUIRED}
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sequence Modes type /summary> }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b CSLibrary.Barcode.Constants.DecoderMode} \{ {\b CSLibrary.Barcode.Constants.DecoderMode.STANDARD} = 0, 
{\b CSLibrary.Barcode.Constants.DecoderMode.QUICK_OMNI}, 
{\b CSLibrary.Barcode.Constants.DecoderMode.NONOMNI_ALD}, 
{\b CSLibrary.Barcode.Constants.DecoderMode.OMNI_LINEAR}
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Decoder mode enum /summary> }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b CSLibrary.Barcode.Constants.IllumLedColor} \{ {\b CSLibrary.Barcode.Constants.IllumLedColor.SECONDARY_LEDS} = 0, 
{\b CSLibrary.Barcode.Constants.IllumLedColor.PRIMARY_LEDS}
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Led Color /summary> }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b CSLibrary.Barcode.Constants.AimerModes} \{ {\b CSLibrary.Barcode.Constants.AimerModes.ALWAYS_OFF} = 0, 
{\b CSLibrary.Barcode.Constants.AimerModes.ILLUM_AND_AIM}, 
{\b CSLibrary.Barcode.Constants.AimerModes.ALWAYS_ON}
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Aimer Modes /summary> }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b CSLibrary.Barcode.Constants.SystemSpeed} \{ {\b CSLibrary.Barcode.Constants.SystemSpeed.SPEED_96MHZ} = 0, 
{\b CSLibrary.Barcode.Constants.SystemSpeed.SPEED_48MHZ} = 1, 
{\b CSLibrary.Barcode.Constants.SystemSpeed.SPEED_32MHZ} = 2
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
System (MPU) clock speeds enum /summary> }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b CSLibrary.Barcode.Constants.EngineType} \{ {\b CSLibrary.Barcode.Constants.EngineType.NONE} = 0, 
{\b CSLibrary.Barcode.Constants.EngineType.IT4200} = 1, 
{\b CSLibrary.Barcode.Constants.EngineType.IT4000} = 5, 
{\b CSLibrary.Barcode.Constants.EngineType.IT4100} = 6, 
{\b CSLibrary.Barcode.Constants.EngineType.IT4300} = 7, 
{\b CSLibrary.Barcode.Constants.EngineType.IT5X00VGA} = 10, 
{\b CSLibrary.Barcode.Constants.EngineType.IT5X00VGA_PSOC} = 11, 
{\b CSLibrary.Barcode.Constants.EngineType.IT5X00} = 12, 
{\b CSLibrary.Barcode.Constants.EngineType.IT5X00_PSOC} = 13
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Engine Id values from imager. /summary> }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b CSLibrary.Barcode.Constants.ConfigItems} \{ {\b CSLibrary.Barcode.Constants.ConfigItems.BEEPER_CONFIG} = 0, 
{\b CSLibrary.Barcode.Constants.ConfigItems.TRIGGER_CONFIG}, 
{\b CSLibrary.Barcode.Constants.ConfigItems.DECODER_CONFIG}, 
{\b CSLibrary.Barcode.Constants.ConfigItems.POWER_CONFIG}, 
{\b CSLibrary.Barcode.Constants.ConfigItems.VERSION_INFO}, 
{\b CSLibrary.Barcode.Constants.ConfigItems.SYMBOLOGY_CONFIG}, 
{\b CSLibrary.Barcode.Constants.ConfigItems.SERIAL_PORT_CONFIG}, 
{\b CSLibrary.Barcode.Constants.ConfigItems.IMAGE_ACQUISITION}, 
{\b CSLibrary.Barcode.Constants.ConfigItems.IMAGE_TRANSFER}, 
{\b CSLibrary.Barcode.Constants.ConfigItems.SEQUENCE_CONFIG}, 
{\b CSLibrary.Barcode.Constants.ConfigItems.ALL_CONFIG}
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CONFIG Read configuration item settings /summary> }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b CSLibrary.Barcode.Constants.CodePage} : uint \{ {\b CSLibrary.Barcode.Constants.CodePage.CP_ACP} = 0, 
{\b CSLibrary.Barcode.Constants.CodePage.CP_OEMCP} = 1, 
{\b CSLibrary.Barcode.Constants.CodePage.CP_MACCP} = 2, 
{\b CSLibrary.Barcode.Constants.CodePage.CP_THREAD_ACP} = 3, 
{\b CSLibrary.Barcode.Constants.CodePage.CP_SYMBOL} = 42, 
{\b CSLibrary.Barcode.Constants.CodePage.CP_UTF7} = 65000, 
{\b CSLibrary.Barcode.Constants.CodePage.CP_UTF8} = 65001
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CodePage for BarcodeData }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b CSLibrary.Barcode.Constants.Symbol} \{ {\b CSLibrary.Barcode.Constants.Symbol.AZTEC} = 0, 
{\b CSLibrary.Barcode.Constants.Symbol.MESA}, 
{\b CSLibrary.Barcode.Constants.Symbol.CODABAR}, 
{\b CSLibrary.Barcode.Constants.Symbol.CODE11}, 
{\b CSLibrary.Barcode.Constants.Symbol.CODE128}, 
{\b CSLibrary.Barcode.Constants.Symbol.CODE39}, 
{\b CSLibrary.Barcode.Constants.Symbol.CODE49}, 
{\b CSLibrary.Barcode.Constants.Symbol.CODE93}, 
{\b CSLibrary.Barcode.Constants.Symbol.COMPOSITE}, 
{\b CSLibrary.Barcode.Constants.Symbol.DATAMATRIX}, 
{\b CSLibrary.Barcode.Constants.Symbol.EAN8}, 
{\b CSLibrary.Barcode.Constants.Symbol.EAN13}, 
{\b CSLibrary.Barcode.Constants.Symbol.INT25}, 
{\b CSLibrary.Barcode.Constants.Symbol.MAXICODE}, 
{\b CSLibrary.Barcode.Constants.Symbol.MICROPDF}, 
{\b CSLibrary.Barcode.Constants.Symbol.OCR}, 
{\b CSLibrary.Barcode.Constants.Symbol.PDF417}, 
{\b CSLibrary.Barcode.Constants.Symbol.POSTNET}, 
{\b CSLibrary.Barcode.Constants.Symbol.QR}, 
{\b CSLibrary.Barcode.Constants.Symbol.RSS}, 
{\b CSLibrary.Barcode.Constants.Symbol.UPCA}, 
{\b CSLibrary.Barcode.Constants.Symbol.UPCE0}, 
{\b CSLibrary.Barcode.Constants.Symbol.UPCE1}, 
{\b CSLibrary.Barcode.Constants.Symbol.ISBT}, 
{\b CSLibrary.Barcode.Constants.Symbol.BPO}, 
{\b CSLibrary.Barcode.Constants.Symbol.CANPOST}, 
{\b CSLibrary.Barcode.Constants.Symbol.AUSPOST}, 
{\b CSLibrary.Barcode.Constants.Symbol.IATA25}, 
{\b CSLibrary.Barcode.Constants.Symbol.CODABLOCK}, 
{\b CSLibrary.Barcode.Constants.Symbol.JAPOST}, 
{\b CSLibrary.Barcode.Constants.Symbol.PLANET}, 
{\b CSLibrary.Barcode.Constants.Symbol.DUTCHPOST}, 
{\b CSLibrary.Barcode.Constants.Symbol.MSI}, 
{\b CSLibrary.Barcode.Constants.Symbol.TLCODE39}, 
{\b CSLibrary.Barcode.Constants.Symbol.MATRIX25}, 
{\b CSLibrary.Barcode.Constants.Symbol.KORPOST}, 
{\b CSLibrary.Barcode.Constants.Symbol.TRIOPTIC}, 
{\b CSLibrary.Barcode.Constants.Symbol.CODE32}, 
{\b CSLibrary.Barcode.Constants.Symbol.STRT25}, 
{\b CSLibrary.Barcode.Constants.Symbol.PLESSEY}, 
{\b CSLibrary.Barcode.Constants.Symbol.CHINAPOST}, 
{\b CSLibrary.Barcode.Constants.Symbol.TELEPEN}, 
{\b CSLibrary.Barcode.Constants.Symbol.CODE16K}, 
{\b CSLibrary.Barcode.Constants.Symbol.POSICODE}, 
{\b CSLibrary.Barcode.Constants.Symbol.COUPONCODE}, 
{\b CSLibrary.Barcode.Constants.Symbol.UPUIDTAG}, 
{\b CSLibrary.Barcode.Constants.Symbol.CODE4CB}, 
{\b CSLibrary.Barcode.Constants.Symbol.NUM_SYMBOLOGIES}, 
{\b CSLibrary.Barcode.Constants.Symbol.ALL} = 100
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Symbology selection constants }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b CSLibrary.Barcode.Constants.OCR} \{ {\b CSLibrary.Barcode.Constants.OCR.DISABLED} = 0, 
{\b CSLibrary.Barcode.Constants.OCR.A}, 
{\b CSLibrary.Barcode.Constants.OCR.B}, 
{\b CSLibrary.Barcode.Constants.OCR.MONEY}, 
{\b CSLibrary.Barcode.Constants.OCR.MICR_UNSUPPORTED}
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Supported OCR Fonts }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b CSLibrary.Barcode.Constants.OCRDirection} \{ {\b CSLibrary.Barcode.Constants.OCRDirection.LeftToRight} = 0, 
{\b CSLibrary.Barcode.Constants.OCRDirection.TopToBottom}, 
{\b CSLibrary.Barcode.Constants.OCRDirection.RightToLeft}, 
{\b CSLibrary.Barcode.Constants.OCRDirection.BottomToTop}
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OCR directions }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b CSLibrary.Barcode.Constants.ImgTransferMask} : uint \{ {\b CSLibrary.Barcode.Constants.ImgTransferMask.BITS_PER_PIXEL_MASK} = 0x00001, 
{\b CSLibrary.Barcode.Constants.ImgTransferMask.SUBSAMPLE_VALUE_MASK} = 0x00002, 
{\b CSLibrary.Barcode.Constants.ImgTransferMask.BOUNDING_RECTANGLE_MASK} = 0x00004, 
{\b CSLibrary.Barcode.Constants.ImgTransferMask.COMPRESSION_MODE_MASK} = 0x00008, 
{\b CSLibrary.Barcode.Constants.ImgTransferMask.HISTOGRAM_STRETCH_MASK} = 0x00010, 
{\b CSLibrary.Barcode.Constants.ImgTransferMask.COMPRESSION_FACTOR_MASK} = 0x00020, 
{\b CSLibrary.Barcode.Constants.ImgTransferMask.EDGE_ENHANCEMENT_MASK} = 0x00100, 
{\b CSLibrary.Barcode.Constants.ImgTransferMask.GAMMA_CORRECTION_MASK} = 0x00200, 
{\b CSLibrary.Barcode.Constants.ImgTransferMask.TEXT_ENHANCEMENT_MASK} = 0x00400, 
{\b CSLibrary.Barcode.Constants.ImgTransferMask.INFINITY_FILTER_MASK} = 0x00800, 
{\b CSLibrary.Barcode.Constants.ImgTransferMask.FLIP_IMAGE_MASK} = 0x01000, 
{\b CSLibrary.Barcode.Constants.ImgTransferMask.NOISE_FILTER_MASK} = 0x02000, 
{\b CSLibrary.Barcode.Constants.ImgTransferMask.TRANSFER_UPDATE_HWND} = 0x00040, 
{\b CSLibrary.Barcode.Constants.ImgTransferMask.TRANSFER_UPDATE_DWORD} = 0x00080, 
{\b CSLibrary.Barcode.Constants.ImgTransferMask.TRANSFER_MASK_ALL} = 0x03fff, 
{\b CSLibrary.Barcode.Constants.ImgTransferMask.TRANSFER_MASK_ALL_NO_NOTIFY} = 0x03f3f
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Image Transfer bit masks }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b CSLibrary.Barcode.Constants.ImgAcquisitionMask} : uint \{ {\b CSLibrary.Barcode.Constants.ImgAcquisitionMask.WHITE_VALUE_MASK} = 0x00001, 
{\b CSLibrary.Barcode.Constants.ImgAcquisitionMask.WHITE_WINDOW_MASK} = 0x00002, 
{\b CSLibrary.Barcode.Constants.ImgAcquisitionMask.MAX_CAPTURE_RETRIES_MASK} = 0x00004, 
{\b CSLibrary.Barcode.Constants.ImgAcquisitionMask.ILLUMINATION_DUTY_CYCLE_MASK} = 0x00008, 
{\b CSLibrary.Barcode.Constants.ImgAcquisitionMask.LIGHTS_DUTY_CYCLE_MASK} = 0x00008, 
{\b CSLibrary.Barcode.Constants.ImgAcquisitionMask.AIMER_DUTY_CYCLE_MASK} = 0x00010, 
{\b CSLibrary.Barcode.Constants.ImgAcquisitionMask.FIXED_GAIN_MASK} = 0x00020, 
{\b CSLibrary.Barcode.Constants.ImgAcquisitionMask.FIXED_EXPOSURE_MASK} = 0x00040, 
{\b CSLibrary.Barcode.Constants.ImgAcquisitionMask.FRAME_RATE_MASK} = 0x00080, 
{\b CSLibrary.Barcode.Constants.ImgAcquisitionMask.AUTOEXPOSURE_MODE_MASK} = 0x00100, 
{\b CSLibrary.Barcode.Constants.ImgAcquisitionMask.IMAGE_CAPTURE_MODE_MASK} = 0x00100, 
{\b CSLibrary.Barcode.Constants.ImgAcquisitionMask.WAIT_FOR_TRIGGER_MASK} = 0x00200, 
{\b CSLibrary.Barcode.Constants.ImgAcquisitionMask.PREVIEW_MODE_IMAGE_MASK} = 0x00400, 
{\b CSLibrary.Barcode.Constants.ImgAcquisitionMask.VGA_COMPATIBLE_IMAGE_MASK} = 0x00800, 
{\b CSLibrary.Barcode.Constants.ImgAcquisitionMask.CAPTURE_MASK_CONFIG_ALL} = 0x009ff, 
{\b CSLibrary.Barcode.Constants.ImgAcquisitionMask.CAPTURE_MASK_FIXED_AGC} = 0x00980, 
{\b CSLibrary.Barcode.Constants.ImgAcquisitionMask.CAPTURE_MASK_ALL} = 0x00fff
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Image Acquisition bit masks }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b CSLibrary.Barcode.Constants.BeeperMask} : uint \{ {\b CSLibrary.Barcode.Constants.BeeperMask.ON_DECODE} = 0x00001, 
{\b CSLibrary.Barcode.Constants.BeeperMask.SHORT_BEEP} = 0x00002, 
{\b CSLibrary.Barcode.Constants.BeeperMask.MENU_CMD_BEEP} = 0x00004, 
{\b CSLibrary.Barcode.Constants.BeeperMask.BEEP_VOLUME} = 0x00008, 
{\b CSLibrary.Barcode.Constants.BeeperMask.ALL} = 0x0000f
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Beeper bit masks }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b CSLibrary.Barcode.Constants.TriggerMask} : uint \{ {\b CSLibrary.Barcode.Constants.TriggerMask.TRIG_MODE} = 0x00001, 
{\b CSLibrary.Barcode.Constants.TriggerMask.TIMEOUT} = 0x00002, 
{\b CSLibrary.Barcode.Constants.TriggerMask.ALL} = 0x00003
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Trigger bit masks }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b CSLibrary.Barcode.Constants.SequenceMask} : uint \{ {\b CSLibrary.Barcode.Constants.SequenceMask.MODE} = 0x00001, 
{\b CSLibrary.Barcode.Constants.SequenceMask.BARCODES} = 0x00002, 
{\b CSLibrary.Barcode.Constants.SequenceMask.ALL} = 0x00003
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sequence bit masks }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b CSLibrary.Barcode.Constants.DecoderMask} : uint \{ {\b CSLibrary.Barcode.Constants.DecoderMask.MAX_MESSAGE_LENGTH} = 0x00001, 
{\b CSLibrary.Barcode.Constants.DecoderMask.DECODE_MULTIPLE} = 0x00002, 
{\b CSLibrary.Barcode.Constants.DecoderMask.USE_AIMERS} = 0x00004, 
{\b CSLibrary.Barcode.Constants.DecoderMask.PRINT_WEIGHT} = 0x00008, 
{\b CSLibrary.Barcode.Constants.DecoderMask.DECODE_METHOD} = 0x00010, 
{\b CSLibrary.Barcode.Constants.DecoderMask.CENTER_ENABLE} = 0x00020, 
{\b CSLibrary.Barcode.Constants.DecoderMask.CENTER_WINDOW} = 0x00040, 
{\b CSLibrary.Barcode.Constants.DecoderMask.ILLUMINAT_LED_COLOR} = 0x00080, 
{\b CSLibrary.Barcode.Constants.DecoderMask.UPC_ADDENDA_DELAY} = 0x00100, 
{\b CSLibrary.Barcode.Constants.DecoderMask.COMPOSITE_DELAY} = 0x00200, 
{\b CSLibrary.Barcode.Constants.DecoderMask.CONCATENATE_DELAY} = 0x00400, 
{\b CSLibrary.Barcode.Constants.DecoderMask.ALL} = 0x007ff
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Decoder bit masks }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b CSLibrary.Barcode.Constants.PowerMask} : uint \{ {\b CSLibrary.Barcode.Constants.PowerMask.TRIGGER_MODE} = 0x00001, 
{\b CSLibrary.Barcode.Constants.PowerMask.SERIAL_TRIGGER_TIMEOUT} = 0x00002, 
{\b CSLibrary.Barcode.Constants.PowerMask.STOP_MODE_TIMEOUT} = 0x00004, 
{\b CSLibrary.Barcode.Constants.PowerMask.ILLUM_LED_INTENSITY} = 0x00008, 
{\b CSLibrary.Barcode.Constants.PowerMask.SYS_SPEED} = 0x00010, 
{\b CSLibrary.Barcode.Constants.PowerMask.AIMER_MODE} = 0x00020, 
{\b CSLibrary.Barcode.Constants.PowerMask.AIMER_DURATION} = 0x00040, 
{\b CSLibrary.Barcode.Constants.PowerMask.AIMER_DELAY} = 0x00080, 
{\b CSLibrary.Barcode.Constants.PowerMask.IMAGER_IDLE_TIMEOUT} = 0x00100, 
{\b CSLibrary.Barcode.Constants.PowerMask.SLEEP_MODE_TIMEOUT} = 0x00200, 
{\b CSLibrary.Barcode.Constants.PowerMask.POWER_OFF_HANDLE} = 0x00400, 
{\b CSLibrary.Barcode.Constants.PowerMask.POWER_OFF_HWND} = 0x00800, 
{\b CSLibrary.Barcode.Constants.PowerMask.AUTO_AIMER_TIMEOUT} = 0x01000, 
{\b CSLibrary.Barcode.Constants.PowerMask.ALL} = 0x01FFF
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Power setting bit masks }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b CSLibrary.Barcode.Constants.VersionMask} : uint \{ {\b CSLibrary.Barcode.Constants.VersionMask.SDK_API} = 0x00001, 
{\b CSLibrary.Barcode.Constants.VersionMask.IMAGER_FIRMWARE} = 0x00002, 
{\b CSLibrary.Barcode.Constants.VersionMask.IMAGER_PART_NUM} = 0x00004, 
{\b CSLibrary.Barcode.Constants.VersionMask.IMAGER_BOOT_CODE} = 0x00008, 
{\b CSLibrary.Barcode.Constants.VersionMask.IMAGER_DEVICE_TYPE} = 0x00010, 
{\b CSLibrary.Barcode.Constants.VersionMask.MANUFACTURERS_ID} = 0x00020, 
{\b CSLibrary.Barcode.Constants.VersionMask.DECODER_REV} = 0x00040, 
{\b CSLibrary.Barcode.Constants.VersionMask.SCAN_DRIVER_REV} = 0x00080, 
{\b CSLibrary.Barcode.Constants.VersionMask.ALL} = 0x000ff
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Version information bit masks }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b CSLibrary.Barcode.Constants.SymbolMask} : uint \{ {\b CSLibrary.Barcode.Constants.SymbolMask.FLAGS} = 0x00000001, 
{\b CSLibrary.Barcode.Constants.SymbolMask.MIN_LEN} = 0x00000002, 
{\b CSLibrary.Barcode.Constants.SymbolMask.MAX_LEN} = 0x00000004, 
{\b CSLibrary.Barcode.Constants.SymbolMask.OCR_MODE} = 0x00000008, 
{\b CSLibrary.Barcode.Constants.SymbolMask.DIRECTION} = 0x00000010, 
{\b CSLibrary.Barcode.Constants.SymbolMask.TEMPLATE} = 0x00000020, 
{\b CSLibrary.Barcode.Constants.SymbolMask.GROUP_H} = 0x00000040, 
{\b CSLibrary.Barcode.Constants.SymbolMask.GROUP_G} = 0x00000080, 
{\b CSLibrary.Barcode.Constants.SymbolMask.CHECK_CHAR} = 0x00000100, 
{\b CSLibrary.Barcode.Constants.SymbolMask.ALL} = 0xffffffff
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Symbology bit masks }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b CSLibrary.Barcode.Constants.AimID} : ushort \{ {\b CSLibrary.Barcode.Constants.AimID.AZTEC} = (ushort)'z', 
{\b CSLibrary.Barcode.Constants.AimID.MESA} = (ushort)'z', 
{\b CSLibrary.Barcode.Constants.AimID.CODABAR} = (ushort)'F', 
{\b CSLibrary.Barcode.Constants.AimID.CODE11} = (ushort)'H', 
{\b CSLibrary.Barcode.Constants.AimID.CODE128} = (ushort)'C', 
{\b CSLibrary.Barcode.Constants.AimID.CODE39} = (ushort)'A', 
{\b CSLibrary.Barcode.Constants.AimID.CODE49} = (ushort)'T', 
{\b CSLibrary.Barcode.Constants.AimID.CODE93} = (ushort)'G', 
{\b CSLibrary.Barcode.Constants.AimID.COMPOSITE} = (ushort)'e', 
{\b CSLibrary.Barcode.Constants.AimID.DATAMATRIX} = (ushort)'d', 
{\b CSLibrary.Barcode.Constants.AimID.EAN} = (ushort)'E', 
{\b CSLibrary.Barcode.Constants.AimID.INT25} = (ushort)'I', 
{\b CSLibrary.Barcode.Constants.AimID.MAXICODE} = (ushort)'U', 
{\b CSLibrary.Barcode.Constants.AimID.MICROPDF} = (ushort)'L', 
{\b CSLibrary.Barcode.Constants.AimID.PDF417} = (ushort)'L', 
{\b CSLibrary.Barcode.Constants.AimID.OCR} = (ushort)'o', 
{\b CSLibrary.Barcode.Constants.AimID.QR} = (ushort)'Q', 
{\b CSLibrary.Barcode.Constants.AimID.RSS} = (ushort)'e', 
{\b CSLibrary.Barcode.Constants.AimID.UPC} = (ushort)'E', 
{\b CSLibrary.Barcode.Constants.AimID.POSTNET} = (ushort)'X', 
{\b CSLibrary.Barcode.Constants.AimID.ISBT} = (ushort)'C', 
{\b CSLibrary.Barcode.Constants.AimID.BPO} = (ushort)'X', 
{\b CSLibrary.Barcode.Constants.AimID.CANPOST} = (ushort)'X', 
{\b CSLibrary.Barcode.Constants.AimID.AUSPOST} = (ushort)'X', 
{\b CSLibrary.Barcode.Constants.AimID.IATA25} = (ushort)'R', 
{\b CSLibrary.Barcode.Constants.AimID.CODABLOCK} = (ushort)'O', 
{\b CSLibrary.Barcode.Constants.AimID.JAPOST} = (ushort)'X', 
{\b CSLibrary.Barcode.Constants.AimID.PLANET} = (ushort)'X', 
{\b CSLibrary.Barcode.Constants.AimID.DUTCHPOST} = (ushort)'X', 
{\b CSLibrary.Barcode.Constants.AimID.MSI} = (ushort)'M', 
{\b CSLibrary.Barcode.Constants.AimID.TLC39} = (ushort)'L', 
{\b CSLibrary.Barcode.Constants.AimID.MATRIX25} = (ushort)'X', 
{\b CSLibrary.Barcode.Constants.AimID.KORPOST} = (ushort)'X', 
{\b CSLibrary.Barcode.Constants.AimID.TRIOPTIC} = (ushort)'X', 
{\b CSLibrary.Barcode.Constants.AimID.CODE32} = (ushort)'X', 
{\b CSLibrary.Barcode.Constants.AimID.STRT25} = (ushort)'S', 
{\b CSLibrary.Barcode.Constants.AimID.PLESSEY} = (ushort)'P', 
{\b CSLibrary.Barcode.Constants.AimID.CHINAPOST} = (ushort)'X', 
{\b CSLibrary.Barcode.Constants.AimID.TELEPEN} = (ushort)'B', 
{\b CSLibrary.Barcode.Constants.AimID.CODE16K} = (ushort)'K', 
{\b CSLibrary.Barcode.Constants.AimID.POSICODE} = (ushort)'p', 
{\b CSLibrary.Barcode.Constants.AimID.COUPONCODE} = (ushort)'E', 
{\b CSLibrary.Barcode.Constants.AimID.UPUIDTAG} = (ushort)'X', 
{\b CSLibrary.Barcode.Constants.AimID.CODE4CB} = (ushort)'X'
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
AIM Symbology ID characters }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b CSLibrary.Barcode.Constants.SymID} : ushort \{ {\b CSLibrary.Barcode.Constants.SymID.AZTEC} = (ushort)'z', 
{\b CSLibrary.Barcode.Constants.SymID.MESA} = (ushort)'z', 
{\b CSLibrary.Barcode.Constants.SymID.CODABAR} = (ushort)'a', 
{\b CSLibrary.Barcode.Constants.SymID.CODE11} = (ushort)'h', 
{\b CSLibrary.Barcode.Constants.SymID.CODE128} = (ushort)'j', 
{\b CSLibrary.Barcode.Constants.SymID.CODE39} = (ushort)'b', 
{\b CSLibrary.Barcode.Constants.SymID.CODE49} = (ushort)'l', 
{\b CSLibrary.Barcode.Constants.SymID.CODE93} = (ushort)'i', 
{\b CSLibrary.Barcode.Constants.SymID.COMPOSITE} = (ushort)'y', 
{\b CSLibrary.Barcode.Constants.SymID.DATAMATRIX} = (ushort)'w', 
{\b CSLibrary.Barcode.Constants.SymID.EAN} = (ushort)'d', 
{\b CSLibrary.Barcode.Constants.SymID.INT25} = (ushort)'e', 
{\b CSLibrary.Barcode.Constants.SymID.MAXICODE} = (ushort)'x', 
{\b CSLibrary.Barcode.Constants.SymID.MICROPDF} = (ushort)'R', 
{\b CSLibrary.Barcode.Constants.SymID.PDF417} = (ushort)'r', 
{\b CSLibrary.Barcode.Constants.SymID.POSTNET} = (ushort)'P', 
{\b CSLibrary.Barcode.Constants.SymID.OCR} = (ushort)'O', 
{\b CSLibrary.Barcode.Constants.SymID.QR} = (ushort)'s', 
{\b CSLibrary.Barcode.Constants.SymID.RSS} = (ushort)'y', 
{\b CSLibrary.Barcode.Constants.SymID.UPC} = (ushort)'c', 
{\b CSLibrary.Barcode.Constants.SymID.ISBT} = (ushort)'j', 
{\b CSLibrary.Barcode.Constants.SymID.BPO} = (ushort)'B', 
{\b CSLibrary.Barcode.Constants.SymID.CANPOST} = (ushort)'C', 
{\b CSLibrary.Barcode.Constants.SymID.AUSPOST} = (ushort)'A', 
{\b CSLibrary.Barcode.Constants.SymID.IATA25} = (ushort)'f', 
{\b CSLibrary.Barcode.Constants.SymID.CODABLOCK} = (ushort)'q', 
{\b CSLibrary.Barcode.Constants.SymID.JAPOST} = (ushort)'J', 
{\b CSLibrary.Barcode.Constants.SymID.PLANET} = (ushort)'L', 
{\b CSLibrary.Barcode.Constants.SymID.DUTCHPOST} = (ushort)'K', 
{\b CSLibrary.Barcode.Constants.SymID.MSI} = (ushort)'g', 
{\b CSLibrary.Barcode.Constants.SymID.TLC39} = (ushort)'T', 
{\b CSLibrary.Barcode.Constants.SymID.MATRIX25} = (ushort)'m', 
{\b CSLibrary.Barcode.Constants.SymID.KORPOST} = (ushort)'?', 
{\b CSLibrary.Barcode.Constants.SymID.TRIOPTIC} = (ushort)'=', 
{\b CSLibrary.Barcode.Constants.SymID.CODE32} = (ushort)'<', 
{\b CSLibrary.Barcode.Constants.SymID.STRT25} = (ushort)'f', 
{\b CSLibrary.Barcode.Constants.SymID.PLESSEY} = (ushort)'n', 
{\b CSLibrary.Barcode.Constants.SymID.CHINAPOST} = (ushort)'Q', 
{\b CSLibrary.Barcode.Constants.SymID.TELEPEN} = (ushort)'t', 
{\b CSLibrary.Barcode.Constants.SymID.CODE16K} = (ushort)'o', 
{\b CSLibrary.Barcode.Constants.SymID.POSICODE} = (ushort)'W', 
{\b CSLibrary.Barcode.Constants.SymID.COUPONCODE} = (ushort)'c', 
{\b CSLibrary.Barcode.Constants.SymID.UPUIDTAG} = (ushort)'N', 
{\b CSLibrary.Barcode.Constants.SymID.CODE4CB} = (ushort)'M'
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
HHP Symbology ID characters }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b CSLibrary.Barcode.Constants.SymbolFlags} \{ {\b CSLibrary.Barcode.Constants.SymbolFlags.ENABLE} = 0x00000001, 
{\b CSLibrary.Barcode.Constants.SymbolFlags.CHECK_ENABLE} = 0x00000002, 
{\b CSLibrary.Barcode.Constants.SymbolFlags.CHECK_TRANSMIT} = 0x00000004, 
{\b CSLibrary.Barcode.Constants.SymbolFlags.START_STOP_XMIT} = 0x00000008, 
{\b CSLibrary.Barcode.Constants.SymbolFlags.ENABLE_APPEND_MODE} = 0x00000010, 
{\b CSLibrary.Barcode.Constants.SymbolFlags.ENABLE_FULLASCII} = 0x00000020, 
{\b CSLibrary.Barcode.Constants.SymbolFlags.NUM_SYS_TRANSMIT} = 0x00000040, 
{\b CSLibrary.Barcode.Constants.SymbolFlags.EN_2_DIGIT_ADDENDA} = 0x00000080, 
{\b CSLibrary.Barcode.Constants.SymbolFlags.EN_5_DIGIT_ADDENDA} = 0x00000100, 
{\b CSLibrary.Barcode.Constants.SymbolFlags.ADDENDA_REQUIRED} = 0x00000200, 
{\b CSLibrary.Barcode.Constants.SymbolFlags.ADDENDA_SEPARATOR} = 0x00000400, 
{\b CSLibrary.Barcode.Constants.SymbolFlags.EXPANDED_UPCE} = 0x00000800, 
{\b CSLibrary.Barcode.Constants.SymbolFlags.UPCE1_ENABLE} = 0x00001000, 
{\b CSLibrary.Barcode.Constants.SymbolFlags.COMPOSITE_UPC} = 0x00002000, 
{\b CSLibrary.Barcode.Constants.SymbolFlags.AZTEC_RUNE} = 0x00004000, 
{\b CSLibrary.Barcode.Constants.SymbolFlags.AUSTRALIAN_BAR_WIDTH} = 0x00010000, 
{\b CSLibrary.Barcode.Constants.SymbolFlags.AUS_CUST_FIELD_NUM} = 0x00020000, 
{\b CSLibrary.Barcode.Constants.SymbolFlags.AUS_CUST_FIELD_AlPHA} = 0x00040000, 
{\b CSLibrary.Barcode.Constants.SymbolFlags.ENABLE_MESA_IMS} = 0x00020000, 
{\b CSLibrary.Barcode.Constants.SymbolFlags.ENABLE_MESA_1MS} = 0x00040000, 
{\b CSLibrary.Barcode.Constants.SymbolFlags.ENABLE_MESA_3MS} = 0x00080000, 
{\b CSLibrary.Barcode.Constants.SymbolFlags.ENABLE_MESA_9MS} = 0x00100000, 
{\b CSLibrary.Barcode.Constants.SymbolFlags.ENABLE_MESA_UMS} = 0x00200000, 
{\b CSLibrary.Barcode.Constants.SymbolFlags.ENABLE_MESA_EMS} = 0x00400000, 
{\b CSLibrary.Barcode.Constants.SymbolFlags.ENABLE_MESA_MASK} = 0x007E0000, 
{\b CSLibrary.Barcode.Constants.SymbolFlags.RSE_ENABLE} = 0x00800000, 
{\b CSLibrary.Barcode.Constants.SymbolFlags.RSL_ENABLE} = 0x01000000, 
{\b CSLibrary.Barcode.Constants.SymbolFlags.RSS_ENABLE} = 0x02000000, 
{\b CSLibrary.Barcode.Constants.SymbolFlags.RSX_ENABLE_MASK} = 0x03800000, 
{\b CSLibrary.Barcode.Constants.SymbolFlags.TELEPEN_OLD_STYLE} = 0x04000000, 
{\b CSLibrary.Barcode.Constants.SymbolFlags.POSICODE_LIMITED_1} = 0x08000000, 
{\b CSLibrary.Barcode.Constants.SymbolFlags.POSICODE_LIMITED_2} = 0x10000000, 
{\b CSLibrary.Barcode.Constants.SymbolFlags.CODABAR_CONCATENATE} = 0x20000000
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Symbology flag }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b CSLibrary.Barcode.Constants.WM_ID} \{ {\b CSLibrary.Barcode.Constants.WM_ID.WM_USER} = 0x0400, 
{\b CSLibrary.Barcode.Constants.WM_ID.WM_SDK_EVENT_HWND_MSG} = (WM_USER + 14534), 
{\b CSLibrary.Barcode.Constants.WM_ID.WM_SDK_PROGRESS_HWND_MSG} = (WM_USER + 14535), 
{\b CSLibrary.Barcode.Constants.WM_ID.WM_SDK_IMAGER_FLASHING} = (WM_USER + 14536), 
{\b CSLibrary.Barcode.Constants.WM_ID.WM_SDK_POWER_EVENT} = (WM_USER + 14537), 
{\b CSLibrary.Barcode.Constants.WM_ID.WM_SDK_SEQ_BARCODE_READ} = (WM_USER + 14538)
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Windows message IDs }}}
\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary/BarcodeReader/CSLibrary.Barcode.Linkage.cs File Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary/BarcodeReader/CSLibrary.Barcode.Linkage.cs}
{\xe \v CSLibrary/BarcodeReader/CSLibrary.Barcode.Linkage.cs}
{\bkmkstart AAAAAAAAAC}
{\bkmkend AAAAAAAAAC}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CSLibrary.Barcode}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Barcode} library }}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b CSLibrary}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary/BarcodeReader/Events/CSLibrary.Barcode.EventArgs.cs File Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary/BarcodeReader/Events/CSLibrary.Barcode.EventArgs.cs}
{\xe \v CSLibrary/BarcodeReader/Events/CSLibrary.Barcode.EventArgs.cs}
{\bkmkstart AAAAAAAAAD}
{\bkmkend AAAAAAAAAD}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CSLibrary.Barcode.BarcodeEventArgs}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Barcode} Event Argument }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CSLibrary.Barcode.BarcodeStateEventArgs}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b CSLibrary.Barcode}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary/BarcodeReader/Structures/CSLibrary.Barcode.Structures.cs File Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary/BarcodeReader/Structures/CSLibrary.Barcode.Structures.cs}
{\xe \v CSLibrary/BarcodeReader/Structures/CSLibrary.Barcode.Structures.cs}
{\bkmkstart AAAAAAAAAE}
{\bkmkend AAAAAAAAAE}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b CSLibrary.Structures.SIZE}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Image Size }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b CSLibrary.Structures.RECT}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Image Size }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CSLibrary.Structures.ImageMessage}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Image information structure /summary> }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CSLibrary.Structures.ErrorMessage}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
error message structure }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CSLibrary.Structures.DecodeMessage}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
decode structure }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CSLibrary.Structures.RawDecodeMessage}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Raw decode structure }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CSLibrary.Structures.MessageBase}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Barcode} Message base class }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CSLibrary.Structures.TextMessage}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Text} message type }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CSLibrary.Structures.IntelligentImage}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Intelligent Image Capture }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CSLibrary.Structures.ImagerCapabilitiesParms}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Imager capabilities structure }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CSLibrary.Structures.ImageAcquisitionParms}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Image Acquisition structure /summary> }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CSLibrary.Structures.ImageTransferParms}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Image Transfer structure /summary> }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CSLibrary.Structures.BeeperParms}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Beeper structure /summary> }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CSLibrary.Structures.TriggerParms}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Triggering control }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CSLibrary.Structures.SequenceBarcodeParms}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sequence mode barcode descriptor }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CSLibrary.Structures.SequenceModeParms}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sequence Mode control }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CSLibrary.Structures.DecoderParms}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Decoder functionality settings. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CSLibrary.Structures.PowerParms}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Matrix Products Power management structure }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CSLibrary.Structures.VersionParms}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Revision information }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CSLibrary.Structures.EngineInfoParms}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Engine Information Structure (5000K engine with PSOC only) }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CSLibrary.Structures.AllConfigParms}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Big mother of them all configuration structure. /summary> }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CSLibrary.Structures.ConfigBase}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Configuration base class }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CSLibrary.Structures.SymFlagsOnly}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure for symbologies with no specified min or max length. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CSLibrary.Structures.SymFlagsRange}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure for symbologies with min or max length. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CSLibrary.Structures.SymCodeOCR}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure for unusual OCR }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CSLibrary.Structures.SymbologyParms}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure of structures, one for each symbology. /summary> }}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b CSLibrary.Barcode.Structures}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedefs\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
using {\b CSLibrary.Barcode.Structures.OCR_T} = SymCodeOCR\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
using {\b CSLibrary.Barcode.Structures.AZTEC_T} = SymFlagsRange\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
using {\b CSLibrary.Barcode.Structures.CODABAR_T} = SymFlagsRange\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
using {\b CSLibrary.Barcode.Structures.CODE11_T} = SymFlagsRange\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
using {\b CSLibrary.Barcode.Structures.CODE128_T} = SymFlagsRange\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
using {\b CSLibrary.Barcode.Structures.CODE39_T} = SymFlagsRange\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
using {\b CSLibrary.Barcode.Structures.CODE49_T} = SymFlagsRange\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
using {\b CSLibrary.Barcode.Structures.CODE93_T} = SymFlagsRange\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
using {\b CSLibrary.Barcode.Structures.COMPOSITE_T} = SymFlagsRange\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
using {\b CSLibrary.Barcode.Structures.DATAMATRIX_T} = SymFlagsRange\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
using {\b CSLibrary.Barcode.Structures.INT25_T} = SymFlagsRange\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
using {\b CSLibrary.Barcode.Structures.MAXICODE_T} = SymFlagsRange\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
using {\b CSLibrary.Barcode.Structures.MICROPDF_T} = SymFlagsRange\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
using {\b CSLibrary.Barcode.Structures.PDF417_T} = SymFlagsRange\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
using {\b CSLibrary.Barcode.Structures.QR_T} = SymFlagsRange\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
using {\b CSLibrary.Barcode.Structures.RSS_T} = SymFlagsRange\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
using {\b CSLibrary.Barcode.Structures.IATA25_T} = SymFlagsRange\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
using {\b CSLibrary.Barcode.Structures.CODABLOCK_T} = SymFlagsRange\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
using {\b CSLibrary.Barcode.Structures.MSI_T} = SymFlagsRange\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
using {\b CSLibrary.Barcode.Structures.MATRIX25_T} = SymFlagsRange\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
using {\b CSLibrary.Barcode.Structures.KORPOST_T} = SymFlagsRange\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
using {\b CSLibrary.Barcode.Structures.CODE25_T} = SymFlagsRange\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
using {\b CSLibrary.Barcode.Structures.PLESSEY_T} = SymFlagsRange\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
using {\b CSLibrary.Barcode.Structures.CHINAPOST_T} = SymFlagsRange\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
using {\b CSLibrary.Barcode.Structures.TELEPEN_T} = SymFlagsRange\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
using {\b CSLibrary.Barcode.Structures.CODE16K_T} = SymFlagsRange\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
using {\b CSLibrary.Barcode.Structures.POSICODE_T} = SymFlagsRange\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
using {\b CSLibrary.Barcode.Structures.MESA_T} = SymFlagsOnly\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
using {\b CSLibrary.Barcode.Structures.EAN8_T} = SymFlagsOnly\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
using {\b CSLibrary.Barcode.Structures.EAN13_T} = SymFlagsOnly\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
using {\b CSLibrary.Barcode.Structures.POSTNET_T} = SymFlagsOnly\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
using {\b CSLibrary.Barcode.Structures.UPCA_T} = SymFlagsOnly\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
using {\b CSLibrary.Barcode.Structures.UPCE_T} = SymFlagsOnly\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
using {\b CSLibrary.Barcode.Structures.ISBT_T} = SymFlagsOnly\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
using {\b CSLibrary.Barcode.Structures.BPO_T} = SymFlagsOnly\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
using {\b CSLibrary.Barcode.Structures.CANPOST_T} = SymFlagsOnly\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
using {\b CSLibrary.Barcode.Structures.AUSPOST_T} = SymFlagsOnly\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
using {\b CSLibrary.Barcode.Structures.JAPOST_T} = SymFlagsOnly\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
using {\b CSLibrary.Barcode.Structures.PLANET_T} = SymFlagsOnly\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
using {\b CSLibrary.Barcode.Structures.DUTCHPOST_T} = SymFlagsOnly\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
using {\b CSLibrary.Barcode.Structures.TLCODE39_T} = SymFlagsOnly\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
using {\b CSLibrary.Barcode.Structures.TRIOPTIC_T} = SymFlagsOnly\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
using {\b CSLibrary.Barcode.Structures.CODE32_T} = SymFlagsOnly\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
using {\b CSLibrary.Barcode.Structures.COUPONCODE_T} = SymFlagsOnly\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
using {\b CSLibrary.Barcode.Structures.UPUIDTAG_T} = SymFlagsOnly\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
using {\b CSLibrary.Barcode.Structures.CODE4CB_T} = SymFlagsOnly\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary/BluetoothIC/ClassBluetoothIC.cs File Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary/BluetoothIC/ClassBluetoothIC.cs}
{\xe \v CSLibrary/BluetoothIC/ClassBluetoothIC.cs}
{\bkmkstart AAAAAAAAAF}
{\bkmkend AAAAAAAAAF}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CSLibrary.BluetoothIC}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CSLibrary.BluetoothIC.DOWNLINKCMD}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b CSLibrary}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary/BTConnect.cs File Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary/BTConnect.cs}
{\xe \v CSLibrary/BTConnect.cs}
{\bkmkstart AAAAAAAAAG}
{\bkmkend AAAAAAAAAG}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CSLibrary.GATT}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b CSLibrary}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary/BTReceive.cs File Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary/BTReceive.cs}
{\xe \v CSLibrary/BTReceive.cs}
{\bkmkstart AAAAAAAAAH}
{\bkmkend AAAAAAAAAH}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CSLibrary.HighLevelInterface}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b CSLibrary}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary/BTSend.cs File Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary/BTSend.cs}
{\xe \v CSLibrary/BTSend.cs}
{\bkmkstart AAAAAAAAAI}
{\bkmkend AAAAAAAAAI}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CSLibrary.HighLevelInterface}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CSLibrary.HighLevelInterface.SENDBUFFER}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b CSLibrary}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary/ClassNetfinder.cs File Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary/ClassNetfinder.cs}
{\xe \v CSLibrary/ClassNetfinder.cs}
{\bkmkstart AAAAAAAAAJ}
{\bkmkend AAAAAAAAAJ}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CSLibrary.Net.NetFinder}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CSLibrary.Net.NetFinder.DeviceInfomation}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Netfinder information return from device }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CSLibrary.Net.NetFinder.DeviceFinderArgs}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
DeviceFinder Argument }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CSLibrary.Net.NetFinder.ResultArgs}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Result Argument }}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b CSLibrary.Net}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary/CSLibrary.cs File Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary/CSLibrary.cs}
{\xe \v CSLibrary/CSLibrary.cs}
{\bkmkstart AAAAAAAAAK}
{\bkmkend AAAAAAAAAK}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CSLibrary.HighLevelInterface}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CSLibrary.HighLevelInterface.DOWNLINKCMD}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CSLibrary.HighLevelInterface.UPLINKCMD}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b CSLibrary}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary/CSLibrary.Private.cs File Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary/CSLibrary.Private.cs}
{\xe \v CSLibrary/CSLibrary.Private.cs}
{\bkmkstart AAAAAAAAAL}
{\bkmkend AAAAAAAAAL}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CSLibrary.HighLevelInterface}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b CSLibrary}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary/CSLibrary.Text.cs File Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary/CSLibrary.Text.cs}
{\xe \v CSLibrary/CSLibrary.Text.cs}
{\bkmkstart AAAAAAAAAM}
{\bkmkend AAAAAAAAAM}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CSLibrary.Text.oldHex}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Summary description for {\b HexEncoding}. }}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b CSLibrary.Text}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary/HexEncoding.cs File Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary/HexEncoding.cs}
{\xe \v CSLibrary/HexEncoding.cs}
{\bkmkstart AAAAAAAAAN}
{\bkmkend AAAAAAAAAN}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CSLibrary.Text.Hex}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
For Backward Compatibility }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CSLibrary.Text.HexEncoding}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Summary description for {\b HexEncoding}. }}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b CSLibrary.Text}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary/Tools/HexEncoding.cs File Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary/Tools/HexEncoding.cs}
{\xe \v CSLibrary/Tools/HexEncoding.cs}
{\bkmkstart AAAAAAAAAO}
{\bkmkend AAAAAAAAAO}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CSLibrary.Tools.Hex}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
For Backward Compatibility }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CSLibrary.Tools.HexEncoding}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Summary description for {\b HexEncoding}. }}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b CSLibrary.Tools}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary/Notification/ClassNotification.cs File Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary/Notification/ClassNotification.cs}
{\xe \v CSLibrary/Notification/ClassNotification.cs}
{\bkmkstart AAAAAAAAAP}
{\bkmkend AAAAAAAAAP}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CSLibrary.Notification}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CSLibrary.Notification.DOWNLINKCMD}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CSLibrary.Notification.HotKeyEventArgs}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
HotKey Event Argument }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CSLibrary.Notification.VoltageEventArgs}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b CSLibrary}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary/RFIDReader/backup/ClassRFID.cs File Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary/RFIDReader/backup/ClassRFID.cs}
{\xe \v CSLibrary/RFIDReader/backup/ClassRFID.cs}
{\bkmkstart AAAAAAAAAQ}
{\bkmkend AAAAAAAAAQ}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CSLibrary.RFIDReader}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b CSLibrary}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary/RFIDReader/ClassRFID.cs File Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary/RFIDReader/ClassRFID.cs}
{\xe \v CSLibrary/RFIDReader/ClassRFID.cs}
{\bkmkstart AAAAAAAAAR}
{\bkmkend AAAAAAAAAR}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CSLibrary.RFIDReader}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b CSLibrary}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary/RFIDReader/backup/CSLibrary.HighLevelInterface.Private.cs File Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary/RFIDReader/backup/CSLibrary.HighLevelInterface.Private.cs}
{\xe \v CSLibrary/RFIDReader/backup/CSLibrary.HighLevelInterface.Private.cs}
{\bkmkstart AAAAAAAAAS}
{\bkmkend AAAAAAAAAS}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CSLibrary.RFIDReader}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CSLibrary.RFIDReader.DOWNLINKCMD}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b CSLibrary}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary/RFIDReader/ClassRFID.Private.Country.cs File Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary/RFIDReader/ClassRFID.Private.Country.cs}
{\xe \v CSLibrary/RFIDReader/ClassRFID.Private.Country.cs}
{\bkmkstart AAAAAAAAAT}
{\bkmkend AAAAAAAAAT}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CSLibrary.RFIDReader}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b CSLibrary}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary/RFIDReader/ClassRFID.Private.Country1.cs File Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary/RFIDReader/ClassRFID.Private.Country1.cs}
{\xe \v CSLibrary/RFIDReader/ClassRFID.Private.Country1.cs}
{\bkmkstart AAAAAAAAAU}
{\bkmkend AAAAAAAAAU}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CSLibrary.RFIDReader}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b CSLibrary}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary/RFIDReader/ClassRFID.Private.cs File Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary/RFIDReader/ClassRFID.Private.cs}
{\xe \v CSLibrary/RFIDReader/ClassRFID.Private.cs}
{\bkmkstart AAAAAAAAAV}
{\bkmkend AAAAAAAAAV}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CSLibrary.RFIDReader}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CSLibrary.RFIDReader.DOWNLINKCMD}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b CSLibrary}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary/RFIDReader/ClassRFID.Private.FrequencyChannel.cs File Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary/RFIDReader/ClassRFID.Private.FrequencyChannel.cs}
{\xe \v CSLibrary/RFIDReader/ClassRFID.Private.FrequencyChannel.cs}
{\bkmkstart AAAAAAAAAW}
{\bkmkend AAAAAAAAAW}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CSLibrary.RFIDReader}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b CSLibrary}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary/RFIDReader/ClassRFID.Private.FrequencyChannel1.cs File Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary/RFIDReader/ClassRFID.Private.FrequencyChannel1.cs}
{\xe \v CSLibrary/RFIDReader/ClassRFID.Private.FrequencyChannel1.cs}
{\bkmkstart AAAAAAAAAX}
{\bkmkend AAAAAAAAAX}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CSLibrary.RFIDReader}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b CSLibrary}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary/RFIDReader/ClassRFID.Private.Inventory.cs File Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary/RFIDReader/ClassRFID.Private.Inventory.cs}
{\xe \v CSLibrary/RFIDReader/ClassRFID.Private.Inventory.cs}
{\bkmkstart AAAAAAAAAY}
{\bkmkend AAAAAAAAAY}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CSLibrary.RFIDReader}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b CSLibrary}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary/RFIDReader/ClassRFID.Private.OEM.cs File Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary/RFIDReader/ClassRFID.Private.OEM.cs}
{\xe \v CSLibrary/RFIDReader/ClassRFID.Private.OEM.cs}
{\bkmkstart AAAAAAAAAZ}
{\bkmkend AAAAAAAAAZ}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CSLibrary.RFIDReader}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b CSLibrary}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary/RFIDReader/ClassRFID.Private.Read.cs File Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary/RFIDReader/ClassRFID.Private.Read.cs}
{\xe \v CSLibrary/RFIDReader/ClassRFID.Private.Read.cs}
{\bkmkstart AAAAAAAABA}
{\bkmkend AAAAAAAABA}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CSLibrary.RFIDReader}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b CSLibrary}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary/RFIDReader/ClassRFID.Private.Select.cs File Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary/RFIDReader/ClassRFID.Private.Select.cs}
{\xe \v CSLibrary/RFIDReader/ClassRFID.Private.Select.cs}
{\bkmkstart AAAAAAAABB}
{\bkmkend AAAAAAAABB}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CSLibrary.RFIDReader}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b CSLibrary}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary/RFIDReader/ClassRFID.Private.Write.cs File Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary/RFIDReader/ClassRFID.Private.Write.cs}
{\xe \v CSLibrary/RFIDReader/ClassRFID.Private.Write.cs}
{\bkmkstart AAAAAAAABC}
{\bkmkend AAAAAAAABC}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CSLibrary.RFIDReader}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b CSLibrary}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary/RFIDReader/ClassRFID.Public.Algorithm.cs File Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary/RFIDReader/ClassRFID.Public.Algorithm.cs}
{\xe \v CSLibrary/RFIDReader/ClassRFID.Public.Algorithm.cs}
{\bkmkstart AAAAAAAABD}
{\bkmkend AAAAAAAABD}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CSLibrary.RFIDReader}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b CSLibrary}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary/RFIDReader/ClassRFID.Public.Country.cs File Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary/RFIDReader/ClassRFID.Public.Country.cs}
{\xe \v CSLibrary/RFIDReader/ClassRFID.Public.Country.cs}
{\bkmkstart AAAAAAAABE}
{\bkmkend AAAAAAAABE}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CSLibrary.RFIDReader}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b CSLibrary}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary/RFIDReader/ClassRFID.Public.FrequencyChannel.cs File Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary/RFIDReader/ClassRFID.Public.FrequencyChannel.cs}
{\xe \v CSLibrary/RFIDReader/ClassRFID.Public.FrequencyChannel.cs}
{\bkmkstart AAAAAAAABF}
{\bkmkend AAAAAAAABF}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CSLibrary.RFIDReader}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b CSLibrary}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary/RFIDReader/ClassRFID.Public.Operation.cs File Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary/RFIDReader/ClassRFID.Public.Operation.cs}
{\xe \v CSLibrary/RFIDReader/ClassRFID.Public.Operation.cs}
{\bkmkstart AAAAAAAABG}
{\bkmkend AAAAAAAABG}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CSLibrary.RFIDReader}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b CSLibrary}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary/RFIDReader/ClassRFID.Public.Power.cs File Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary/RFIDReader/ClassRFID.Public.Power.cs}
{\xe \v CSLibrary/RFIDReader/ClassRFID.Public.Power.cs}
{\bkmkstart AAAAAAAABH}
{\bkmkend AAAAAAAABH}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CSLibrary.RFIDReader}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b CSLibrary}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary/RFIDReader/ClassRFID.Public.Profile.cs File Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary/RFIDReader/ClassRFID.Public.Profile.cs}
{\xe \v CSLibrary/RFIDReader/ClassRFID.Public.Profile.cs}
{\bkmkstart AAAAAAAABI}
{\bkmkend AAAAAAAABI}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CSLibrary.RFIDReader}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b CSLibrary}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary/RFIDReader/Constants/CSLibrary.Constants.cs File Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary/RFIDReader/Constants/CSLibrary.Constants.cs}
{\xe \v CSLibrary/RFIDReader/Constants/CSLibrary.Constants.cs}
{\bkmkstart AAAAAAAABJ}
{\bkmkend AAAAAAAABJ}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b CSLibrary.Constants}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumerations\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b CSLibrary.Constants.ReaderCallbackType} \{ {\b CSLibrary.Constants.ReaderCallbackType.CONNECT_SUCESS}, 
{\b CSLibrary.Constants.ReaderCallbackType.COMMUNICATION_ERROR}, 
{\b CSLibrary.Constants.ReaderCallbackType.CONNECTION_LOST}, 
{\b CSLibrary.Constants.ReaderCallbackType.UNKNOWN}
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
reader Callback Type }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b CSLibrary.Constants.CallbackType} \{ {\b CSLibrary.Constants.CallbackType.TAG_INVENTORY}, 
{\b CSLibrary.Constants.CallbackType.TAG_SEARCHING}, 
{\b CSLibrary.Constants.CallbackType.TAG_RANGING}, 
{\b CSLibrary.Constants.CallbackType.UNKNOWN}, 
{\b CSLibrary.Constants.CallbackType.TAG_INVENTORY}, 
{\b CSLibrary.Constants.CallbackType.TAG_SEARCHING}, 
{\b CSLibrary.Constants.CallbackType.TAG_RANGING}, 
{\b CSLibrary.Constants.CallbackType.UNKNOWN}
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Callback Type }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b CSLibrary.Constants.RFState} \{ {\b CSLibrary.Constants.RFState.IDLE}, 
{\b CSLibrary.Constants.RFState.BUSY}, 
{\b CSLibrary.Constants.RFState.ABORT}, 
{\b CSLibrary.Constants.RFState.RESET}, 
{\b CSLibrary.Constants.RFState.SHUTDOWN}, 
{\b CSLibrary.Constants.RFState.ERROR}, 
{\b CSLibrary.Constants.RFState.ANT_CYCLE_END}, 
{\b CSLibrary.Constants.RFState.CH_BUSY}, 
{\b CSLibrary.Constants.RFState.CH_CLEAR}, 
{\b CSLibrary.Constants.RFState.EAS_ALARM}, 
{\b CSLibrary.Constants.RFState.BUFFER_FULL}, 
{\b CSLibrary.Constants.RFState.INVENTORY_MAC_ERROR}, 
{\b CSLibrary.Constants.RFState.CARRIER_INFO}, 
{\b CSLibrary.Constants.RFState.INVENTORY_CYCLE_BEGIN}, 
{\b CSLibrary.Constants.RFState.INITIALIZATION_COMPLETE}, 
{\b CSLibrary.Constants.RFState.UNKNOWN}, 
{\b CSLibrary.Constants.RFState.IDLE}, 
{\b CSLibrary.Constants.RFState.BUSY}, 
{\b CSLibrary.Constants.RFState.ABORT}, 
{\b CSLibrary.Constants.RFState.RESET}, 
{\b CSLibrary.Constants.RFState.SHUTDOWN}, 
{\b CSLibrary.Constants.RFState.ERROR}, 
{\b CSLibrary.Constants.RFState.ANT_CYCLE_END}, 
{\b CSLibrary.Constants.RFState.CH_BUSY}, 
{\b CSLibrary.Constants.RFState.CH_CLEAR}, 
{\b CSLibrary.Constants.RFState.EAS_ALARM}, 
{\b CSLibrary.Constants.RFState.BUFFER_FULL}, 
{\b CSLibrary.Constants.RFState.INVENTORY_MAC_ERROR}, 
{\b CSLibrary.Constants.RFState.CARRIER_INFO}, 
{\b CSLibrary.Constants.RFState.INVENTORY_CYCLE_BEGIN}, 
{\b CSLibrary.Constants.RFState.UNKNOWN}
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RFID device status }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b CSLibrary.Constants.ErrorType} : int \{ {\b CSLibrary.Constants.ErrorType.UNKNOWN} = -1, 
{\b CSLibrary.Constants.ErrorType.COMMON} = 0, 
{\b CSLibrary.Constants.ErrorType.INVENTORY}, 
{\b CSLibrary.Constants.ErrorType.WRITE}, 
{\b CSLibrary.Constants.ErrorType.READ}, 
{\b CSLibrary.Constants.ErrorType.LOCK}, 
{\b CSLibrary.Constants.ErrorType.KILL}, 
{\b CSLibrary.Constants.ErrorType.MAC}, 
{\b CSLibrary.Constants.ErrorType.UNKNOWN} = -1, 
{\b CSLibrary.Constants.ErrorType.COMMON} = 0, 
{\b CSLibrary.Constants.ErrorType.INVENTORY}, 
{\b CSLibrary.Constants.ErrorType.WRITE}, 
{\b CSLibrary.Constants.ErrorType.READ}, 
{\b CSLibrary.Constants.ErrorType.LOCK}, 
{\b CSLibrary.Constants.ErrorType.KILL}, 
{\b CSLibrary.Constants.ErrorType.MAC}
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Error Type }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b CSLibrary.Constants.ErrorCode} : int \{ {\b CSLibrary.Constants.ErrorCode.UNKNOWN} = -1, 
{\b CSLibrary.Constants.ErrorCode.MAC_ERROR} = 0, 
{\b CSLibrary.Constants.ErrorCode.MAX_RETRY_OVER}, 
{\b CSLibrary.Constants.ErrorCode.WRITTEN_DATA_INVALID}, 
{\b CSLibrary.Constants.ErrorCode.FUNC_RETURN_FAILED}, 
{\b CSLibrary.Constants.ErrorCode.CRC_INVALID}, 
{\b CSLibrary.Constants.ErrorCode.PARSE_PKT_ERROR}, 
{\b CSLibrary.Constants.ErrorCode.SYSTEM_ERROR}, 
{\b CSLibrary.Constants.ErrorCode.INVALID_TAG}, 
{\b CSLibrary.Constants.ErrorCode.TAG_NOT_FOUND}, 
{\b CSLibrary.Constants.ErrorCode.UNKNOWN} = -1, 
{\b CSLibrary.Constants.ErrorCode.MAC_ERROR} = 0, 
{\b CSLibrary.Constants.ErrorCode.MAX_RETRY_OVER}, 
{\b CSLibrary.Constants.ErrorCode.WRITTEN_DATA_INVALID}, 
{\b CSLibrary.Constants.ErrorCode.FUNC_RETURN_FAILED}, 
{\b CSLibrary.Constants.ErrorCode.CRC_INVALID}, 
{\b CSLibrary.Constants.ErrorCode.PARSE_PKT_ERROR}, 
{\b CSLibrary.Constants.ErrorCode.SYSTEM_ERROR}, 
{\b CSLibrary.Constants.ErrorCode.INVALID_TAG}, 
{\b CSLibrary.Constants.ErrorCode.TAG_NOT_FOUND}
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Operation Error Code }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b CSLibrary.Constants.ExtendedKillCommand} \{ {\b CSLibrary.Constants.ExtendedKillCommand.NORMAL} = 0, 
{\b CSLibrary.Constants.ExtendedKillCommand.DISABLE_PERMALOCK} = 1, 
{\b CSLibrary.Constants.ExtendedKillCommand.DISABLE_USER_MEMORY} = 2, 
{\b CSLibrary.Constants.ExtendedKillCommand.UNLOCK_ALL_BANKS} = 4, 
{\b CSLibrary.Constants.ExtendedKillCommand.UNKNOWN} = 0xff, 
{\b CSLibrary.Constants.ExtendedKillCommand.NORMAL} = 0, 
{\b CSLibrary.Constants.ExtendedKillCommand.DISABLE_PERMALOCK} = 1, 
{\b CSLibrary.Constants.ExtendedKillCommand.DISABLE_USER_MEMORY} = 2, 
{\b CSLibrary.Constants.ExtendedKillCommand.UNLOCK_ALL_BANKS} = 4, 
{\b CSLibrary.Constants.ExtendedKillCommand.UNKNOWN} = 0xff
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Extended Kill command for UHF class 1 gen-2 version 1.2 }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b CSLibrary.Constants.BandState} \{ {\b CSLibrary.Constants.BandState.DISABLE} = 0, 
{\b CSLibrary.Constants.BandState.ENABLE} = 1, 
{\b CSLibrary.Constants.BandState.UNKNOWN} = 2, 
{\b CSLibrary.Constants.BandState.DISABLE} = 0, 
{\b CSLibrary.Constants.BandState.ENABLE} = 1, 
{\b CSLibrary.Constants.BandState.UNKNOWN} = 2
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Frequency Band State }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b CSLibrary.Constants.LBT} : uint \{ {\b CSLibrary.Constants.LBT.OFF} = 0, 
{\b CSLibrary.Constants.LBT.ON} = 1, 
{\b CSLibrary.Constants.LBT.SCAN} = 3, 
{\b CSLibrary.Constants.LBT.OFF} = 0, 
{\b CSLibrary.Constants.LBT.ON} = 1, 
{\b CSLibrary.Constants.LBT.SCAN} = 3
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
LBT Config }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b CSLibrary.Constants.RegionCode} \{ {\b CSLibrary.Constants.RegionCode.FCC} = 1, 
{\b CSLibrary.Constants.RegionCode.ETSI}, 
{\b CSLibrary.Constants.RegionCode.CN}, 
{\b CSLibrary.Constants.RegionCode.TW}, 
{\b CSLibrary.Constants.RegionCode.KR}, 
{\b CSLibrary.Constants.RegionCode.HK}, 
{\b CSLibrary.Constants.RegionCode.JP}, 
{\b CSLibrary.Constants.RegionCode.AU}, 
{\b CSLibrary.Constants.RegionCode.MY}, 
{\b CSLibrary.Constants.RegionCode.SG}, 
{\b CSLibrary.Constants.RegionCode.IN}, 
{\b CSLibrary.Constants.RegionCode.G800}, 
{\b CSLibrary.Constants.RegionCode.ZA}, 
{\b CSLibrary.Constants.RegionCode.BR1}, 
{\b CSLibrary.Constants.RegionCode.BR2}, 
{\b CSLibrary.Constants.RegionCode.BR3}, 
{\b CSLibrary.Constants.RegionCode.BR4}, 
{\b CSLibrary.Constants.RegionCode.BR5}, 
{\b CSLibrary.Constants.RegionCode.ID}, 
{\b CSLibrary.Constants.RegionCode.TH}, 
{\b CSLibrary.Constants.RegionCode.JE}, 
{\b CSLibrary.Constants.RegionCode.PH}, 
{\b CSLibrary.Constants.RegionCode.ETSIUPPERBAND}, 
{\b CSLibrary.Constants.RegionCode.NZ}, 
{\b CSLibrary.Constants.RegionCode.UH1}, 
{\b CSLibrary.Constants.RegionCode.UH2}, 
{\b CSLibrary.Constants.RegionCode.LH}, 
{\b CSLibrary.Constants.RegionCode.LH1}, 
{\b CSLibrary.Constants.RegionCode.LH2}, 
{\b CSLibrary.Constants.RegionCode.VE}, 
{\b CSLibrary.Constants.RegionCode.AR}, 
{\b CSLibrary.Constants.RegionCode.CL}, 
{\b CSLibrary.Constants.RegionCode.CO}, 
{\b CSLibrary.Constants.RegionCode.CR}, 
{\b CSLibrary.Constants.RegionCode.DO}, 
{\b CSLibrary.Constants.RegionCode.PA}, 
{\b CSLibrary.Constants.RegionCode.PE}, 
{\b CSLibrary.Constants.RegionCode.UY}, 
{\b CSLibrary.Constants.RegionCode.UNKNOWN} = 0, 
{\b CSLibrary.Constants.RegionCode.CURRENT} = -1, 
{\b CSLibrary.Constants.RegionCode.FCC} = 1, 
{\b CSLibrary.Constants.RegionCode.ETSI}, 
{\b CSLibrary.Constants.RegionCode.CN}, 
{\b CSLibrary.Constants.RegionCode.CN1}, 
{\b CSLibrary.Constants.RegionCode.CN2}, 
{\b CSLibrary.Constants.RegionCode.CN3}, 
{\b CSLibrary.Constants.RegionCode.CN4}, 
{\b CSLibrary.Constants.RegionCode.CN5}, 
{\b CSLibrary.Constants.RegionCode.CN6}, 
{\b CSLibrary.Constants.RegionCode.CN7}, 
{\b CSLibrary.Constants.RegionCode.CN8}, 
{\b CSLibrary.Constants.RegionCode.CN9}, 
{\b CSLibrary.Constants.RegionCode.CN10}, 
{\b CSLibrary.Constants.RegionCode.CN11}, 
{\b CSLibrary.Constants.RegionCode.CN12}, 
{\b CSLibrary.Constants.RegionCode.TW}, 
{\b CSLibrary.Constants.RegionCode.KR}, 
{\b CSLibrary.Constants.RegionCode.HK}, 
{\b CSLibrary.Constants.RegionCode.JP}, 
{\b CSLibrary.Constants.RegionCode.AU}, 
{\b CSLibrary.Constants.RegionCode.MY}, 
{\b CSLibrary.Constants.RegionCode.SG}, 
{\b CSLibrary.Constants.RegionCode.IN}, 
{\b CSLibrary.Constants.RegionCode.G800}, 
{\b CSLibrary.Constants.RegionCode.ZA}, 
{\b CSLibrary.Constants.RegionCode.BR1}, 
{\b CSLibrary.Constants.RegionCode.BR2}, 
{\b CSLibrary.Constants.RegionCode.ID}, 
{\b CSLibrary.Constants.RegionCode.TH}, 
{\b CSLibrary.Constants.RegionCode.JP2012}, 
{\b CSLibrary.Constants.RegionCode.UH1}, 
{\b CSLibrary.Constants.RegionCode.UH2}, 
{\b CSLibrary.Constants.RegionCode.LH}, 
{\b CSLibrary.Constants.RegionCode.JE}, 
{\b CSLibrary.Constants.RegionCode.PH}, 
{\b CSLibrary.Constants.RegionCode.UNKNOWN} = 0
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Region Profile }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b CSLibrary.Constants.ACID} \{ {\b CSLibrary.Constants.ACID.APACS} = 0xE0, 
{\b CSLibrary.Constants.ACID.NEN} = 0xE1, 
{\b CSLibrary.Constants.ACID.GS1} = 0xE2, 
{\b CSLibrary.Constants.ACID.APACSX} = 0xE3, 
{\b CSLibrary.Constants.ACID.UNKNOWN} = 0xFF, 
{\b CSLibrary.Constants.ACID.APACS} = 0xE0, 
{\b CSLibrary.Constants.ACID.NEN} = 0xE1, 
{\b CSLibrary.Constants.ACID.GS1} = 0xE2, 
{\b CSLibrary.Constants.ACID.APACSX} = 0xE3, 
{\b CSLibrary.Constants.ACID.UNKNOWN} = 0xFF
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Allocation Class Identifier }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b CSLibrary.Constants.EpcMDID} \{ {\b CSLibrary.Constants.EpcMDID.Impinj} = 0x1, 
{\b CSLibrary.Constants.EpcMDID.Texas_Instruments} = 0x2, 
{\b CSLibrary.Constants.EpcMDID.Alien_Technology} = 0x3, 
{\b CSLibrary.Constants.EpcMDID.Intelleflex} = 0x4, 
{\b CSLibrary.Constants.EpcMDID.Atmel} = 0x5, 
{\b CSLibrary.Constants.EpcMDID.NXP} = 0x6, 
{\b CSLibrary.Constants.EpcMDID.ST_Microelectronics} = 0x7, 
{\b CSLibrary.Constants.EpcMDID.EP_Microelectronics} = 0x8, 
{\b CSLibrary.Constants.EpcMDID.Motorola} = 0x9, 
{\b CSLibrary.Constants.EpcMDID.Sentech_Snd_Bhd} = 0xA, 
{\b CSLibrary.Constants.EpcMDID.EM_Microelectronics} = 0xB, 
{\b CSLibrary.Constants.EpcMDID.Renesas_Technology_Corp} = 0xC, 
{\b CSLibrary.Constants.EpcMDID.Mstar} = 0xD, 
{\b CSLibrary.Constants.EpcMDID.Tyco_International} = 0xE, 
{\b CSLibrary.Constants.EpcMDID.Quanray_Electronics} = 0xF, 
{\b CSLibrary.Constants.EpcMDID.Fujitsu} = 0x10, 
{\b CSLibrary.Constants.EpcMDID.LSIS} = 0x11, 
{\b CSLibrary.Constants.EpcMDID.CAEN_RFID_srl} = 0x12, 
{\b CSLibrary.Constants.EpcMDID.CAEN_Productivity_Engineering_Gesellschaft_fuer_IC_Design_mbH} = 0x13, 
{\b CSLibrary.Constants.EpcMDID.Impinj_with_xTid} = 0x801, 
{\b CSLibrary.Constants.EpcMDID.Texas_Instruments_with_xTid} = 0x802, 
{\b CSLibrary.Constants.EpcMDID.Alien_Technology_with_xTid} = 0x803, 
{\b CSLibrary.Constants.EpcMDID.Intelleflex_with_xTid} = 0x804, 
{\b CSLibrary.Constants.EpcMDID.Atmel_with_xTid} = 0x805, 
{\b CSLibrary.Constants.EpcMDID.NXP_with_xTid} = 0x806, 
{\b CSLibrary.Constants.EpcMDID.ST_Microelectronics_with_xTid} = 0x807, 
{\b CSLibrary.Constants.EpcMDID.EP_Microelectronics_with_xTid} = 0x808, 
{\b CSLibrary.Constants.EpcMDID.Motorola_with_xTid} = 0x809, 
{\b CSLibrary.Constants.EpcMDID.Sentech_Snd_Bhd_with_xTid} = 0x80A, 
{\b CSLibrary.Constants.EpcMDID.EM_Microelectronics_with_xTid} = 0x80B, 
{\b CSLibrary.Constants.EpcMDID.Renesas_Technology_Corp_with_xTid} = 0x80C, 
{\b CSLibrary.Constants.EpcMDID.Mstar_with_xTid} = 0x80D, 
{\b CSLibrary.Constants.EpcMDID.Tyco_International_with_xTid} = 0x80E, 
{\b CSLibrary.Constants.EpcMDID.Quanray_Electronics_with_xTid} = 0x80F, 
{\b CSLibrary.Constants.EpcMDID.Fujitsu_with_xTid} = 0x810, 
{\b CSLibrary.Constants.EpcMDID.LSIS_with_xTid} = 0x811, 
{\b CSLibrary.Constants.EpcMDID.CAEN_RFID_srl_with_xTid} = 0x812, 
{\b CSLibrary.Constants.EpcMDID.CAEN_Productivity_Engineering_Gesellschaft_fuer_IC_Design_mbH_with_xTid} = 0x813, 
{\b CSLibrary.Constants.EpcMDID.UNKNOWN} = 0xFFFF, 
{\b CSLibrary.Constants.EpcMDID.Impinj} = 0x1, 
{\b CSLibrary.Constants.EpcMDID.Texas_Instruments} = 0x2, 
{\b CSLibrary.Constants.EpcMDID.Alien_Technology} = 0x3, 
{\b CSLibrary.Constants.EpcMDID.Intelleflex} = 0x4, 
{\b CSLibrary.Constants.EpcMDID.Atmel} = 0x5, 
{\b CSLibrary.Constants.EpcMDID.NXP} = 0x6, 
{\b CSLibrary.Constants.EpcMDID.ST_Microelectronics} = 0x7, 
{\b CSLibrary.Constants.EpcMDID.EP_Microelectronics} = 0x8, 
{\b CSLibrary.Constants.EpcMDID.Motorola} = 0x9, 
{\b CSLibrary.Constants.EpcMDID.Sentech_Snd_Bhd} = 0xA, 
{\b CSLibrary.Constants.EpcMDID.EM_Microelectronics} = 0xB, 
{\b CSLibrary.Constants.EpcMDID.Renesas_Technology_Corp} = 0xC, 
{\b CSLibrary.Constants.EpcMDID.Mstar} = 0xD, 
{\b CSLibrary.Constants.EpcMDID.Tyco_International} = 0xE, 
{\b CSLibrary.Constants.EpcMDID.Quanray_Electronics} = 0xF, 
{\b CSLibrary.Constants.EpcMDID.Fujitsu} = 0x10, 
{\b CSLibrary.Constants.EpcMDID.LSIS} = 0x11, 
{\b CSLibrary.Constants.EpcMDID.CAEN_RFID_srl} = 0x12, 
{\b CSLibrary.Constants.EpcMDID.CAEN_Productivity_Engineering_Gesellschaft_fuer_IC_Design_mbH} = 0x13, 
{\b CSLibrary.Constants.EpcMDID.Impinj_with_xTid} = 0x801, 
{\b CSLibrary.Constants.EpcMDID.Texas_Instruments_with_xTid} = 0x802, 
{\b CSLibrary.Constants.EpcMDID.Alien_Technology_with_xTid} = 0x803, 
{\b CSLibrary.Constants.EpcMDID.Intelleflex_with_xTid} = 0x804, 
{\b CSLibrary.Constants.EpcMDID.Atmel_with_xTid} = 0x805, 
{\b CSLibrary.Constants.EpcMDID.NXP_with_xTid} = 0x806, 
{\b CSLibrary.Constants.EpcMDID.ST_Microelectronics_with_xTid} = 0x807, 
{\b CSLibrary.Constants.EpcMDID.EP_Microelectronics_with_xTid} = 0x808, 
{\b CSLibrary.Constants.EpcMDID.Motorola_with_xTid} = 0x809, 
{\b CSLibrary.Constants.EpcMDID.Sentech_Snd_Bhd_with_xTid} = 0x80A, 
{\b CSLibrary.Constants.EpcMDID.EM_Microelectronics_with_xTid} = 0x80B, 
{\b CSLibrary.Constants.EpcMDID.Renesas_Technology_Corp_with_xTid} = 0x80C, 
{\b CSLibrary.Constants.EpcMDID.Mstar_with_xTid} = 0x80D, 
{\b CSLibrary.Constants.EpcMDID.Tyco_International_with_xTid} = 0x80E, 
{\b CSLibrary.Constants.EpcMDID.Quanray_Electronics_with_xTid} = 0x80F, 
{\b CSLibrary.Constants.EpcMDID.Fujitsu_with_xTid} = 0x810, 
{\b CSLibrary.Constants.EpcMDID.LSIS_with_xTid} = 0x811, 
{\b CSLibrary.Constants.EpcMDID.CAEN_RFID_srl_with_xTid} = 0x812, 
{\b CSLibrary.Constants.EpcMDID.CAEN_Productivity_Engineering_Gesellschaft_fuer_IC_Design_mbH_with_xTid} = 0x813, 
{\b CSLibrary.Constants.EpcMDID.UNKNOWN} = 0xFFFF
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EPCglobal Tag Mask Designer Identifier }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b CSLibrary.Constants.IsoMDID} \{ {\b CSLibrary.Constants.IsoMDID.Motorola} = 0x1, 
{\b CSLibrary.Constants.IsoMDID.STM}, 
{\b CSLibrary.Constants.IsoMDID.Hitachi}, 
{\b CSLibrary.Constants.IsoMDID.Philips}, 
{\b CSLibrary.Constants.IsoMDID.Infineon}, 
{\b CSLibrary.Constants.IsoMDID.Cylink}, 
{\b CSLibrary.Constants.IsoMDID.Texas}, 
{\b CSLibrary.Constants.IsoMDID.Fujitsu}, 
{\b CSLibrary.Constants.IsoMDID.Matsushita}, 
{\b CSLibrary.Constants.IsoMDID.NEC}, 
{\b CSLibrary.Constants.IsoMDID.Oki}, 
{\b CSLibrary.Constants.IsoMDID.Toshiba}, 
{\b CSLibrary.Constants.IsoMDID.Mitsubishi}, 
{\b CSLibrary.Constants.IsoMDID.Samsung}, 
{\b CSLibrary.Constants.IsoMDID.Hynix}, 
{\b CSLibrary.Constants.IsoMDID.LG}, 
{\b CSLibrary.Constants.IsoMDID.EmosynEM}, 
{\b CSLibrary.Constants.IsoMDID.INSIDE}, 
{\b CSLibrary.Constants.IsoMDID.ORGA}, 
{\b CSLibrary.Constants.IsoMDID.SHARP}, 
{\b CSLibrary.Constants.IsoMDID.ATMEL}, 
{\b CSLibrary.Constants.IsoMDID.EM}, 
{\b CSLibrary.Constants.IsoMDID.KSW}, 
{\b CSLibrary.Constants.IsoMDID.ZMD}, 
{\b CSLibrary.Constants.IsoMDID.XICOR}, 
{\b CSLibrary.Constants.IsoMDID.Sony}, 
{\b CSLibrary.Constants.IsoMDID.Malaysia}, 
{\b CSLibrary.Constants.IsoMDID.Emosyn}, 
{\b CSLibrary.Constants.IsoMDID.Fudan}, 
{\b CSLibrary.Constants.IsoMDID.Magellan}, 
{\b CSLibrary.Constants.IsoMDID.Melexis}, 
{\b CSLibrary.Constants.IsoMDID.Renesas}, 
{\b CSLibrary.Constants.IsoMDID.TAGSYS}, 
{\b CSLibrary.Constants.IsoMDID.Transcore}, 
{\b CSLibrary.Constants.IsoMDID.Belling}, 
{\b CSLibrary.Constants.IsoMDID.Masktech}, 
{\b CSLibrary.Constants.IsoMDID.Innovision}, 
{\b CSLibrary.Constants.IsoMDID.HitachiULSI}, 
{\b CSLibrary.Constants.IsoMDID.Cypak}, 
{\b CSLibrary.Constants.IsoMDID.Ricoh}, 
{\b CSLibrary.Constants.IsoMDID.ASK}, 
{\b CSLibrary.Constants.IsoMDID.Unicore}, 
{\b CSLibrary.Constants.IsoMDID.Dallas}, 
{\b CSLibrary.Constants.IsoMDID.Impinj}, 
{\b CSLibrary.Constants.IsoMDID.Alliance}, 
{\b CSLibrary.Constants.IsoMDID.Broadcom}, 
{\b CSLibrary.Constants.IsoMDID.MStar}, 
{\b CSLibrary.Constants.IsoMDID.eeDar}, 
{\b CSLibrary.Constants.IsoMDID.RFIDsec}, 
{\b CSLibrary.Constants.IsoMDID.Schweizer}, 
{\b CSLibrary.Constants.IsoMDID.AMIC}, 
{\b CSLibrary.Constants.IsoMDID.UNKNOWN} = 0xFFFF, 
{\b CSLibrary.Constants.IsoMDID.Motorola} = 0x1, 
{\b CSLibrary.Constants.IsoMDID.STM}, 
{\b CSLibrary.Constants.IsoMDID.Hitachi}, 
{\b CSLibrary.Constants.IsoMDID.Philips}, 
{\b CSLibrary.Constants.IsoMDID.Infineon}, 
{\b CSLibrary.Constants.IsoMDID.Cylink}, 
{\b CSLibrary.Constants.IsoMDID.Texas}, 
{\b CSLibrary.Constants.IsoMDID.Fujitsu}, 
{\b CSLibrary.Constants.IsoMDID.Matsushita}, 
{\b CSLibrary.Constants.IsoMDID.NEC}, 
{\b CSLibrary.Constants.IsoMDID.Oki}, 
{\b CSLibrary.Constants.IsoMDID.Toshiba}, 
{\b CSLibrary.Constants.IsoMDID.Mitsubishi}, 
{\b CSLibrary.Constants.IsoMDID.Samsung}, 
{\b CSLibrary.Constants.IsoMDID.Hynix}, 
{\b CSLibrary.Constants.IsoMDID.LG}, 
{\b CSLibrary.Constants.IsoMDID.EmosynEM}, 
{\b CSLibrary.Constants.IsoMDID.INSIDE}, 
{\b CSLibrary.Constants.IsoMDID.ORGA}, 
{\b CSLibrary.Constants.IsoMDID.SHARP}, 
{\b CSLibrary.Constants.IsoMDID.ATMEL}, 
{\b CSLibrary.Constants.IsoMDID.EM}, 
{\b CSLibrary.Constants.IsoMDID.KSW}, 
{\b CSLibrary.Constants.IsoMDID.ZMD}, 
{\b CSLibrary.Constants.IsoMDID.XICOR}, 
{\b CSLibrary.Constants.IsoMDID.Sony}, 
{\b CSLibrary.Constants.IsoMDID.Malaysia}, 
{\b CSLibrary.Constants.IsoMDID.Emosyn}, 
{\b CSLibrary.Constants.IsoMDID.Fudan}, 
{\b CSLibrary.Constants.IsoMDID.Magellan}, 
{\b CSLibrary.Constants.IsoMDID.Melexis}, 
{\b CSLibrary.Constants.IsoMDID.Renesas}, 
{\b CSLibrary.Constants.IsoMDID.TAGSYS}, 
{\b CSLibrary.Constants.IsoMDID.Transcore}, 
{\b CSLibrary.Constants.IsoMDID.Belling}, 
{\b CSLibrary.Constants.IsoMDID.Masktech}, 
{\b CSLibrary.Constants.IsoMDID.Innovision}, 
{\b CSLibrary.Constants.IsoMDID.HitachiULSI}, 
{\b CSLibrary.Constants.IsoMDID.Cypak}, 
{\b CSLibrary.Constants.IsoMDID.Ricoh}, 
{\b CSLibrary.Constants.IsoMDID.ASK}, 
{\b CSLibrary.Constants.IsoMDID.Unicore}, 
{\b CSLibrary.Constants.IsoMDID.Dallas}, 
{\b CSLibrary.Constants.IsoMDID.Impinj}, 
{\b CSLibrary.Constants.IsoMDID.Alliance}, 
{\b CSLibrary.Constants.IsoMDID.Broadcom}, 
{\b CSLibrary.Constants.IsoMDID.MStar}, 
{\b CSLibrary.Constants.IsoMDID.eeDar}, 
{\b CSLibrary.Constants.IsoMDID.RFIDsec}, 
{\b CSLibrary.Constants.IsoMDID.Schweizer}, 
{\b CSLibrary.Constants.IsoMDID.AMIC}, 
{\b CSLibrary.Constants.IsoMDID.UNKNOWN} = 0xFFFF
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ISO/IEC 7816-6 registration authority }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b CSLibrary.Constants.Operation} : int \{ {\b CSLibrary.Constants.Operation.UNKNOWN} = -1, 
{\b CSLibrary.Constants.Operation.TAG_BLOCK_PERMALOCK}, 
{\b CSLibrary.Constants.Operation.TAG_LOCK}, 
{\b CSLibrary.Constants.Operation.TAG_KILL}, 
{\b CSLibrary.Constants.Operation.TAG_READ_KILL_PWD}, 
{\b CSLibrary.Constants.Operation.TAG_READ_ACC_PWD}, 
{\b CSLibrary.Constants.Operation.TAG_READ_PC}, 
{\b CSLibrary.Constants.Operation.TAG_READ_EPC}, 
{\b CSLibrary.Constants.Operation.TAG_READ_TID}, 
{\b CSLibrary.Constants.Operation.TAG_READ_USER}, 
{\b CSLibrary.Constants.Operation.TAG_WRITE_KILL_PWD}, 
{\b CSLibrary.Constants.Operation.TAG_WRITE_ACC_PWD}, 
{\b CSLibrary.Constants.Operation.TAG_WRITE_PC}, 
{\b CSLibrary.Constants.Operation.TAG_WRITE_EPC}, 
{\b CSLibrary.Constants.Operation.TAG_WRITE_USER}, 
{\b CSLibrary.Constants.Operation.TAG_INVENTORY}, 
{\b CSLibrary.Constants.Operation.TAG_RANGING}, 
{\b CSLibrary.Constants.Operation.TAG_PRERANGING}, 
{\b CSLibrary.Constants.Operation.TAG_EXERANGING}, 
{\b CSLibrary.Constants.Operation.TAG_SEARCHING}, 
{\b CSLibrary.Constants.Operation.TAG_SELECTED}, 
{\b CSLibrary.Constants.Operation.TAG_READ_PROTECT}, 
{\b CSLibrary.Constants.Operation.TAG_RESET_READ_PROTECT}, 
{\b CSLibrary.Constants.Operation.EAS_CONFIG}, 
{\b CSLibrary.Constants.Operation.EAS_ALARM}, 
{\b CSLibrary.Constants.Operation.CL_SET_PASSWORD}, 
{\b CSLibrary.Constants.Operation.CL_SET_LOG_MODE}, 
{\b CSLibrary.Constants.Operation.CL_SET_LOG_LIMITS}, 
{\b CSLibrary.Constants.Operation.CL_GET_MEASUREMENT_SETUP}, 
{\b CSLibrary.Constants.Operation.CL_SET_SFE_PARA}, 
{\b CSLibrary.Constants.Operation.CL_SET_CAL_DATA}, 
{\b CSLibrary.Constants.Operation.CL_END_LOG}, 
{\b CSLibrary.Constants.Operation.CL_START_LOG}, 
{\b CSLibrary.Constants.Operation.CL_GET_LOG_STATE}, 
{\b CSLibrary.Constants.Operation.CL_GET_CAL_DATA}, 
{\b CSLibrary.Constants.Operation.CL_GET_BAT_LV}, 
{\b CSLibrary.Constants.Operation.CL_SET_SHELF_LIFE}, 
{\b CSLibrary.Constants.Operation.CL_INIT}, 
{\b CSLibrary.Constants.Operation.CL_GET_SENSOR_VALUE}, 
{\b CSLibrary.Constants.Operation.CL_OPEN_AREA}, 
{\b CSLibrary.Constants.Operation.CL_ACCESS_FIFO}, 
{\b CSLibrary.Constants.Operation.G2_READ_PROTECT}, 
{\b CSLibrary.Constants.Operation.G2_RESET_READ_PROTECT}, 
{\b CSLibrary.Constants.Operation.G2_CHANGE_EAS}, 
{\b CSLibrary.Constants.Operation.G2_EAS_ALARM}, 
{\b CSLibrary.Constants.Operation.G2_CHANGE_CONFIG}, 
{\b CSLibrary.Constants.Operation.QT_COMMAND}, 
{\b CSLibrary.Constants.Operation.EM4324_GetUid}, 
{\b CSLibrary.Constants.Operation.EM4325_GetUid}, 
{\b CSLibrary.Constants.Operation.EM_GetSensorData}, 
{\b CSLibrary.Constants.Operation.EM_ResetAlarms}, 
{\b CSLibrary.Constants.Operation.EM_SPI}, 
{\b CSLibrary.Constants.Operation.EM_SPIRequestStatus}, 
{\b CSLibrary.Constants.Operation.EM_SPIBoot}, 
{\b CSLibrary.Constants.Operation.EM_SPITransponder}, 
{\b CSLibrary.Constants.Operation.EM_SPIGetSensorData}, 
{\b CSLibrary.Constants.Operation.EM_SPISetFlags}, 
{\b CSLibrary.Constants.Operation.EM_SPIReadWord}, 
{\b CSLibrary.Constants.Operation.EM_SPIWriteWord}, 
{\b CSLibrary.Constants.Operation.EM_SPIReadPage}, 
{\b CSLibrary.Constants.Operation.EM_SPIWritePage}, 
{\b CSLibrary.Constants.Operation.EM_SPISetClock}, 
{\b CSLibrary.Constants.Operation.EM_SPIAlarm}, 
{\b CSLibrary.Constants.Operation.EM_SPIReadRegisterFileWord}, 
{\b CSLibrary.Constants.Operation.EM_SPIWriteRegisterFileWord}, 
{\b CSLibrary.Constants.Operation.EM_SPIReqRN}, 
{\b CSLibrary.Constants.Operation.TAG_GENERALSELECTED}, 
{\b CSLibrary.Constants.Operation.TAG_PREFILTER}, 
{\b CSLibrary.Constants.Operation.UNKNOWN} = -1, 
{\b CSLibrary.Constants.Operation.TAG_BLOCK_PERMALOCK}, 
{\b CSLibrary.Constants.Operation.TAG_LOCK}, 
{\b CSLibrary.Constants.Operation.TAG_KILL}, 
{\b CSLibrary.Constants.Operation.TAG_READ_KILL_PWD}, 
{\b CSLibrary.Constants.Operation.TAG_READ_ACC_PWD}, 
{\b CSLibrary.Constants.Operation.TAG_READ_PC}, 
{\b CSLibrary.Constants.Operation.TAG_READ_EPC}, 
{\b CSLibrary.Constants.Operation.TAG_READ_TID}, 
{\b CSLibrary.Constants.Operation.TAG_READ_USER}, 
{\b CSLibrary.Constants.Operation.TAG_WRITE_KILL_PWD}, 
{\b CSLibrary.Constants.Operation.TAG_WRITE_ACC_PWD}, 
{\b CSLibrary.Constants.Operation.TAG_WRITE_PC}, 
{\b CSLibrary.Constants.Operation.TAG_WRITE_EPC}, 
{\b CSLibrary.Constants.Operation.TAG_WRITE_USER}, 
{\b CSLibrary.Constants.Operation.TAG_INVENTORY}, 
{\b CSLibrary.Constants.Operation.TAG_RANGING}, 
{\b CSLibrary.Constants.Operation.TAG_SEARCHING}, 
{\b CSLibrary.Constants.Operation.TAG_SELECTED}, 
{\b CSLibrary.Constants.Operation.TAG_READ_PROTECT}, 
{\b CSLibrary.Constants.Operation.TAG_RESET_READ_PROTECT}, 
{\b CSLibrary.Constants.Operation.EAS_CONFIG}, 
{\b CSLibrary.Constants.Operation.EAS_ALARM}, 
{\b CSLibrary.Constants.Operation.CL_SET_PASSWORD}, 
{\b CSLibrary.Constants.Operation.CL_SET_LOG_MODE}, 
{\b CSLibrary.Constants.Operation.CL_SET_LOG_LIMITS}, 
{\b CSLibrary.Constants.Operation.CL_GET_MEASUREMENT_SETUP}, 
{\b CSLibrary.Constants.Operation.CL_SET_SFE_PARA}, 
{\b CSLibrary.Constants.Operation.CL_SET_CAL_DATA}, 
{\b CSLibrary.Constants.Operation.CL_END_LOG}, 
{\b CSLibrary.Constants.Operation.CL_START_LOG}, 
{\b CSLibrary.Constants.Operation.CL_GET_LOG_STATE}, 
{\b CSLibrary.Constants.Operation.CL_GET_CAL_DATA}, 
{\b CSLibrary.Constants.Operation.CL_GET_BAT_LV}, 
{\b CSLibrary.Constants.Operation.CL_SET_SHELF_LIFE}, 
{\b CSLibrary.Constants.Operation.CL_INIT}, 
{\b CSLibrary.Constants.Operation.CL_GET_SENSOR_VALUE}, 
{\b CSLibrary.Constants.Operation.CL_OPEN_AREA}, 
{\b CSLibrary.Constants.Operation.CL_ACCESS_FIFO}, 
{\b CSLibrary.Constants.Operation.G2_READ_PROTECT}, 
{\b CSLibrary.Constants.Operation.G2_RESET_READ_PROTECT}, 
{\b CSLibrary.Constants.Operation.G2_CHANGE_EAS}, 
{\b CSLibrary.Constants.Operation.G2_EAS_ALARM}, 
{\b CSLibrary.Constants.Operation.G2_CHANGE_CONFIG}, 
{\b CSLibrary.Constants.Operation.QT_COMMAND}, 
{\b CSLibrary.Constants.Operation.EM4324_GetUid}, 
{\b CSLibrary.Constants.Operation.EM4325_GetUid}, 
{\b CSLibrary.Constants.Operation.EM_GetSensorData}, 
{\b CSLibrary.Constants.Operation.EM_ResetAlarms}, 
{\b CSLibrary.Constants.Operation.EM_SPI}, 
{\b CSLibrary.Constants.Operation.EM_SPIRequestStatus}, 
{\b CSLibrary.Constants.Operation.EM_SPIBoot}, 
{\b CSLibrary.Constants.Operation.EM_SPITransponder}, 
{\b CSLibrary.Constants.Operation.EM_SPIGetSensorData}, 
{\b CSLibrary.Constants.Operation.EM_SPISetFlags}, 
{\b CSLibrary.Constants.Operation.EM_SPIReadWord}, 
{\b CSLibrary.Constants.Operation.EM_SPIWriteWord}, 
{\b CSLibrary.Constants.Operation.EM_SPIReadPage}, 
{\b CSLibrary.Constants.Operation.EM_SPIWritePage}, 
{\b CSLibrary.Constants.Operation.EM_SPISetClock}, 
{\b CSLibrary.Constants.Operation.EM_SPIAlarm}, 
{\b CSLibrary.Constants.Operation.EM_SPIReadRegisterFileWord}, 
{\b CSLibrary.Constants.Operation.EM_SPIWriteRegisterFileWord}, 
{\b CSLibrary.Constants.Operation.EM_SPIReqRN}, 
{\b CSLibrary.Constants.Operation.TAG_GENERALSELECTED}
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RFID Operation Mode }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b CSLibrary.Constants.Bank} \{ {\b CSLibrary.Constants.Bank.ACC_PWD}, 
{\b CSLibrary.Constants.Bank.KILL_PWD}, 
{\b CSLibrary.Constants.Bank.PC}, 
{\b CSLibrary.Constants.Bank.EPC}, 
{\b CSLibrary.Constants.Bank.TID}, 
{\b CSLibrary.Constants.Bank.USER}, 
{\b CSLibrary.Constants.Bank.UNKNOWN}, 
{\b CSLibrary.Constants.Bank.ACC_PWD}, 
{\b CSLibrary.Constants.Bank.KILL_PWD}, 
{\b CSLibrary.Constants.Bank.PC}, 
{\b CSLibrary.Constants.Bank.EPC}, 
{\b CSLibrary.Constants.Bank.TID}, 
{\b CSLibrary.Constants.Bank.USER}, 
{\b CSLibrary.Constants.Bank.UNKNOWN}
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Memory bank }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b CSLibrary.Constants.TagAccess} : byte \{ {\b CSLibrary.Constants.TagAccess.READ} = 0xC2, 
{\b CSLibrary.Constants.TagAccess.WRITE} = 0xC3, 
{\b CSLibrary.Constants.TagAccess.KILL} = 0xC4, 
{\b CSLibrary.Constants.TagAccess.LOCK} = 0xC5, 
{\b CSLibrary.Constants.TagAccess.ERASE} = 0xC6, 
{\b CSLibrary.Constants.TagAccess.UNKNOWN} = 0xff, 
{\b CSLibrary.Constants.TagAccess.READ} = 0xC2, 
{\b CSLibrary.Constants.TagAccess.WRITE} = 0xC3, 
{\b CSLibrary.Constants.TagAccess.KILL} = 0xC4, 
{\b CSLibrary.Constants.TagAccess.LOCK} = 0xC5, 
{\b CSLibrary.Constants.TagAccess.ERASE} = 0xC6, 
{\b CSLibrary.Constants.TagAccess.UNKNOWN} = 0xff
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The values that can be found in the command field for tag access packets }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b CSLibrary.Constants.Machine} \{ {\b CSLibrary.Constants.Machine.CS101} = 0, 
{\b CSLibrary.Constants.Machine.CS203}, 
{\b CSLibrary.Constants.Machine.CS333}, 
{\b CSLibrary.Constants.Machine.CS468}, 
{\b CSLibrary.Constants.Machine.CS206}, 
{\b CSLibrary.Constants.Machine.CS468INT}, 
{\b CSLibrary.Constants.Machine.CS463}, 
{\b CSLibrary.Constants.Machine.CS469}, 
{\b CSLibrary.Constants.Machine.CS208}, 
{\b CSLibrary.Constants.Machine.CS209}, 
{\b CSLibrary.Constants.Machine.CS103}, 
{\b CSLibrary.Constants.Machine.CS108}, 
{\b CSLibrary.Constants.Machine.MACHINE_CODE_END}, 
{\b CSLibrary.Constants.Machine.UNKNOWN} = 0xff, 
{\b CSLibrary.Constants.Machine.CS101} = 0, 
{\b CSLibrary.Constants.Machine.CS203}, 
{\b CSLibrary.Constants.Machine.CS333}, 
{\b CSLibrary.Constants.Machine.CS468}, 
{\b CSLibrary.Constants.Machine.CS206}, 
{\b CSLibrary.Constants.Machine.CS468INT}, 
{\b CSLibrary.Constants.Machine.CS463}, 
{\b CSLibrary.Constants.Machine.CS469}, 
{\b CSLibrary.Constants.Machine.CS208}, 
{\b CSLibrary.Constants.Machine.CS209}, 
{\b CSLibrary.Constants.Machine.CS103}, 
{\b CSLibrary.Constants.Machine.CS108}, 
{\b CSLibrary.Constants.Machine.MACHINE_CODE_END}, 
{\b CSLibrary.Constants.Machine.UNKNOWN} = 0xff
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Machine Type }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b CSLibrary.Constants.ChipSetID} \{ {\b CSLibrary.Constants.ChipSetID.R1000} = 0, 
{\b CSLibrary.Constants.ChipSetID.R2000}, 
{\b CSLibrary.Constants.ChipSetID.UNKNOWN} = 0xff
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b CSLibrary.Constants.ApiMode} \{ {\b CSLibrary.Constants.ApiMode.HIGHLEVEL}, 
{\b CSLibrary.Constants.ApiMode.LOWLEVEL}, 
{\b CSLibrary.Constants.ApiMode.UNKNOWN}, 
{\b CSLibrary.Constants.ApiMode.HIGHLEVEL}, 
{\b CSLibrary.Constants.ApiMode.LOWLEVEL}, 
{\b CSLibrary.Constants.ApiMode.UNKNOWN}
 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary/RFIDReader/Constants/CSLibrary.Constants.Packet.cs File Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary/RFIDReader/Constants/CSLibrary.Constants.Packet.cs}
{\xe \v CSLibrary/RFIDReader/Constants/CSLibrary.Constants.Packet.cs}
{\bkmkstart AAAAAAAABK}
{\bkmkend AAAAAAAABK}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b CSLibrary.Constants}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumerations\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b CSLibrary.Constants.TAG_BACKSCATTERED_ERROR} : byte \{ {\b CSLibrary.Constants.TAG_BACKSCATTERED_ERROR.OTHER_ERROR}, 
{\b CSLibrary.Constants.TAG_BACKSCATTERED_ERROR.MEMORY_OVERRUN} = 0x3, 
{\b CSLibrary.Constants.TAG_BACKSCATTERED_ERROR.MEMORY_LOCKED} = 0x4, 
{\b CSLibrary.Constants.TAG_BACKSCATTERED_ERROR.INSUFFICIENT_POWER} = 0xB, 
{\b CSLibrary.Constants.TAG_BACKSCATTERED_ERROR.NON_SPECIFIC_ERROR} = 0xF
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
If a Tag encounters an error when executing an access command that reads from or writes to memory, and if the command is a handle-based command(i.e. Read, Write, Kill, Lock, BlockWrite, BlockErase, or BlockPermalock), then the Tag shall backscatter an error code. }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b CSLibrary.Constants.RFID_PACKET_TYPE} : ushort \{ {\b CSLibrary.Constants.RFID_PACKET_TYPE.COMMAND_BEGIN} = 0, 
{\b CSLibrary.Constants.RFID_PACKET_TYPE.COMMAND_END}, 
{\b CSLibrary.Constants.RFID_PACKET_TYPE.ANTENNA_CYCLE_BEGIN}, 
{\b CSLibrary.Constants.RFID_PACKET_TYPE.ANTENNA_BEGIN}, 
{\b CSLibrary.Constants.RFID_PACKET_TYPE.ISO18K6C_INVENTORY_ROUND_BEGIN}, 
{\b CSLibrary.Constants.RFID_PACKET_TYPE.ISO18K6C_INVENTORY}, 
{\b CSLibrary.Constants.RFID_PACKET_TYPE.ISO18K6C_TAG_ACCESS}, 
{\b CSLibrary.Constants.RFID_PACKET_TYPE.ANTENNA_CYCLE_END}, 
{\b CSLibrary.Constants.RFID_PACKET_TYPE.ANTENNA_END}, 
{\b CSLibrary.Constants.RFID_PACKET_TYPE.ISO18K6C_INVENTORY_ROUND_END}, 
{\b CSLibrary.Constants.RFID_PACKET_TYPE.INVENTORY_CYCLE_BEGIN}, 
{\b CSLibrary.Constants.RFID_PACKET_TYPE.INVENTORY_CYCLE_END}, 
{\b CSLibrary.Constants.RFID_PACKET_TYPE.CARRIER_INFO}, 
{\b CSLibrary.Constants.RFID_PACKET_TYPE.CYCCFG_EVT}, 
{\b CSLibrary.Constants.RFID_PACKET_TYPE.RES0} = 4096, 
{\b CSLibrary.Constants.RFID_PACKET_TYPE.RES1}, 
{\b CSLibrary.Constants.RFID_PACKET_TYPE.RES2}, 
{\b CSLibrary.Constants.RFID_PACKET_TYPE.RES3}, 
{\b CSLibrary.Constants.RFID_PACKET_TYPE.ISO18K6C_INVENTORY_ROUND_BEGIN_DIAGS}, 
{\b CSLibrary.Constants.RFID_PACKET_TYPE.ISO18K6C_INVENTORY_ROUND_END_DIAGS}, 
{\b CSLibrary.Constants.RFID_PACKET_TYPE.ISO18K6C_INVENTORY_DIAGS}, 
{\b CSLibrary.Constants.RFID_PACKET_TYPE.RES4}, 
{\b CSLibrary.Constants.RFID_PACKET_TYPE.INVENTORY_CYCLE_END_DIAGS}, 
{\b CSLibrary.Constants.RFID_PACKET_TYPE.NONCRITICAL_FAULT} = 8192
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The 16-bit packet types that will be found in the common packet header pkt_type field. }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b CSLibrary.Constants.RFID_COMMAND_TYPE_18K6C} : uint \{ {\b CSLibrary.Constants.RFID_COMMAND_TYPE_18K6C.INVENTORY} = 0x0000000F, 
{\b CSLibrary.Constants.RFID_COMMAND_TYPE_18K6C.READ} = 0x00000010, 
{\b CSLibrary.Constants.RFID_COMMAND_TYPE_18K6C.WRITE} = 0x00000011, 
{\b CSLibrary.Constants.RFID_COMMAND_TYPE_18K6C.LOCK} = 0x00000012, 
{\b CSLibrary.Constants.RFID_COMMAND_TYPE_18K6C.KILL} = 0x00000013
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constants for the command begin's cmd field }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b CSLibrary.Constants.RFID_18K6C} : byte \{ {\b CSLibrary.Constants.RFID_18K6C.QUERYREP} = 0x00, 
{\b CSLibrary.Constants.RFID_18K6C.ACK} = 0x01, 
{\b CSLibrary.Constants.RFID_18K6C.QUERY} = 0x08, 
{\b CSLibrary.Constants.RFID_18K6C.QUERYADJ} = 0x09, 
{\b CSLibrary.Constants.RFID_18K6C.SELECT} = 0x0A, 
{\b CSLibrary.Constants.RFID_18K6C.NAK} = 0xC0, 
{\b CSLibrary.Constants.RFID_18K6C.REQRN} = 0xC1, 
{\b CSLibrary.Constants.RFID_18K6C.READ} = 0xC2, 
{\b CSLibrary.Constants.RFID_18K6C.WRITE} = 0xC3, 
{\b CSLibrary.Constants.RFID_18K6C.KILL} = 0xC4, 
{\b CSLibrary.Constants.RFID_18K6C.LOCK} = 0xC5, 
{\b CSLibrary.Constants.RFID_18K6C.ACCESS} = 0xC6, 
{\b CSLibrary.Constants.RFID_18K6C.BLOCKWRITE} = 0xC7, 
{\b CSLibrary.Constants.RFID_18K6C.BLOCKERASE} = 0xC8, 
{\b CSLibrary.Constants.RFID_18K6C.QT} = 0xE0, 
{\b CSLibrary.Constants.RFID_18K6C.UNKNOWN} = 0xff
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The values that can be found in the command field for tag access packets }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b CSLibrary.Constants.RFID_ACCESS} : byte \{ {\b CSLibrary.Constants.RFID_ACCESS.GENERAL_ERR} = 0x00, 
{\b CSLibrary.Constants.RFID_ACCESS.MEMORY_LOCATION_NOT_EXIST} = 0x03, 
{\b CSLibrary.Constants.RFID_ACCESS.PERMISSION_DENIED} = 0x04, 
{\b CSLibrary.Constants.RFID_ACCESS.INSUFFICIENT_POWER_TO_WRITE} = 0x0B, 
{\b CSLibrary.Constants.RFID_ACCESS.NOT_SUPPORTED} = 0x0F, 
{\b CSLibrary.Constants.RFID_ACCESS.ACK_TIMEOUT} = 0x10, 
{\b CSLibrary.Constants.RFID_ACCESS.CRC_INVALID}, 
{\b CSLibrary.Constants.RFID_ACCESS.WRITE_VERIFY_FAILED} = 0xD1, 
{\b CSLibrary.Constants.RFID_ACCESS.PROBLEM_TRANSMITTING_TAG_CMD} = 0xD2, 
{\b CSLibrary.Constants.RFID_ACCESS.CRC_INVALID_ON_WRITE} = 0xD3, 
{\b CSLibrary.Constants.RFID_ACCESS.CRC_INVALID_ON_READ} = 0xD4, 
{\b CSLibrary.Constants.RFID_ACCESS.WRITE_RETRY_EXCEEDED} = 0xD5, 
{\b CSLibrary.Constants.RFID_ACCESS.READ_TIMEOUT} = 0xD6, 
{\b CSLibrary.Constants.RFID_ACCESS.REQ_TAG_HANDLE_FAILED} = 0xD7, 
{\b CSLibrary.Constants.RFID_ACCESS.RESP_TIMEOUT} = 0xDA, 
{\b CSLibrary.Constants.RFID_ACCESS.CRC_INVALID_ON_KILL} = 0xDB, 
{\b CSLibrary.Constants.RFID_ACCESS.PROBLEM_TRANSMITTING_KILL_CMD} = 0xDC, 
{\b CSLibrary.Constants.RFID_ACCESS.INVALID_HANDLE_ON_KILL_CMD} = 0xDD, 
{\b CSLibrary.Constants.RFID_ACCESS.UNKNOWN}, 
{\b CSLibrary.Constants.RFID_ACCESS.SUCCESS} = 0x1
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tag access enum Result }}}
\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary/RFIDReader/Constants/CSLibrary.ConstantsNew.cs File Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary/RFIDReader/Constants/CSLibrary.ConstantsNew.cs}
{\xe \v CSLibrary/RFIDReader/Constants/CSLibrary.ConstantsNew.cs}
{\bkmkstart AAAAAAAABL}
{\bkmkend AAAAAAAABL}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b CSLibrary.Constants}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumerations\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b CSLibrary.Constants.CallbackType} \{ {\b CSLibrary.Constants.CallbackType.TAG_INVENTORY}, 
{\b CSLibrary.Constants.CallbackType.TAG_SEARCHING}, 
{\b CSLibrary.Constants.CallbackType.TAG_RANGING}, 
{\b CSLibrary.Constants.CallbackType.UNKNOWN}, 
{\b CSLibrary.Constants.CallbackType.TAG_INVENTORY}, 
{\b CSLibrary.Constants.CallbackType.TAG_SEARCHING}, 
{\b CSLibrary.Constants.CallbackType.TAG_RANGING}, 
{\b CSLibrary.Constants.CallbackType.UNKNOWN}
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Callback Type }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b CSLibrary.Constants.RFState} \{ {\b CSLibrary.Constants.RFState.IDLE}, 
{\b CSLibrary.Constants.RFState.BUSY}, 
{\b CSLibrary.Constants.RFState.ABORT}, 
{\b CSLibrary.Constants.RFState.RESET}, 
{\b CSLibrary.Constants.RFState.SHUTDOWN}, 
{\b CSLibrary.Constants.RFState.ERROR}, 
{\b CSLibrary.Constants.RFState.ANT_CYCLE_END}, 
{\b CSLibrary.Constants.RFState.CH_BUSY}, 
{\b CSLibrary.Constants.RFState.CH_CLEAR}, 
{\b CSLibrary.Constants.RFState.EAS_ALARM}, 
{\b CSLibrary.Constants.RFState.BUFFER_FULL}, 
{\b CSLibrary.Constants.RFState.INVENTORY_MAC_ERROR}, 
{\b CSLibrary.Constants.RFState.CARRIER_INFO}, 
{\b CSLibrary.Constants.RFState.INVENTORY_CYCLE_BEGIN}, 
{\b CSLibrary.Constants.RFState.INITIALIZATION_COMPLETE}, 
{\b CSLibrary.Constants.RFState.UNKNOWN}, 
{\b CSLibrary.Constants.RFState.IDLE}, 
{\b CSLibrary.Constants.RFState.BUSY}, 
{\b CSLibrary.Constants.RFState.ABORT}, 
{\b CSLibrary.Constants.RFState.RESET}, 
{\b CSLibrary.Constants.RFState.SHUTDOWN}, 
{\b CSLibrary.Constants.RFState.ERROR}, 
{\b CSLibrary.Constants.RFState.ANT_CYCLE_END}, 
{\b CSLibrary.Constants.RFState.CH_BUSY}, 
{\b CSLibrary.Constants.RFState.CH_CLEAR}, 
{\b CSLibrary.Constants.RFState.EAS_ALARM}, 
{\b CSLibrary.Constants.RFState.BUFFER_FULL}, 
{\b CSLibrary.Constants.RFState.INVENTORY_MAC_ERROR}, 
{\b CSLibrary.Constants.RFState.CARRIER_INFO}, 
{\b CSLibrary.Constants.RFState.INVENTORY_CYCLE_BEGIN}, 
{\b CSLibrary.Constants.RFState.UNKNOWN}
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reader Operation State }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b CSLibrary.Constants.ErrorType} : int \{ {\b CSLibrary.Constants.ErrorType.UNKNOWN} = -1, 
{\b CSLibrary.Constants.ErrorType.COMMON} = 0, 
{\b CSLibrary.Constants.ErrorType.INVENTORY}, 
{\b CSLibrary.Constants.ErrorType.WRITE}, 
{\b CSLibrary.Constants.ErrorType.READ}, 
{\b CSLibrary.Constants.ErrorType.LOCK}, 
{\b CSLibrary.Constants.ErrorType.KILL}, 
{\b CSLibrary.Constants.ErrorType.MAC}, 
{\b CSLibrary.Constants.ErrorType.UNKNOWN} = -1, 
{\b CSLibrary.Constants.ErrorType.COMMON} = 0, 
{\b CSLibrary.Constants.ErrorType.INVENTORY}, 
{\b CSLibrary.Constants.ErrorType.WRITE}, 
{\b CSLibrary.Constants.ErrorType.READ}, 
{\b CSLibrary.Constants.ErrorType.LOCK}, 
{\b CSLibrary.Constants.ErrorType.KILL}, 
{\b CSLibrary.Constants.ErrorType.MAC}
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Error Type }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b CSLibrary.Constants.ErrorCode} : int \{ {\b CSLibrary.Constants.ErrorCode.UNKNOWN} = -1, 
{\b CSLibrary.Constants.ErrorCode.MAC_ERROR} = 0, 
{\b CSLibrary.Constants.ErrorCode.MAX_RETRY_OVER}, 
{\b CSLibrary.Constants.ErrorCode.WRITTEN_DATA_INVALID}, 
{\b CSLibrary.Constants.ErrorCode.FUNC_RETURN_FAILED}, 
{\b CSLibrary.Constants.ErrorCode.CRC_INVALID}, 
{\b CSLibrary.Constants.ErrorCode.PARSE_PKT_ERROR}, 
{\b CSLibrary.Constants.ErrorCode.SYSTEM_ERROR}, 
{\b CSLibrary.Constants.ErrorCode.INVALID_TAG}, 
{\b CSLibrary.Constants.ErrorCode.TAG_NOT_FOUND}, 
{\b CSLibrary.Constants.ErrorCode.UNKNOWN} = -1, 
{\b CSLibrary.Constants.ErrorCode.MAC_ERROR} = 0, 
{\b CSLibrary.Constants.ErrorCode.MAX_RETRY_OVER}, 
{\b CSLibrary.Constants.ErrorCode.WRITTEN_DATA_INVALID}, 
{\b CSLibrary.Constants.ErrorCode.FUNC_RETURN_FAILED}, 
{\b CSLibrary.Constants.ErrorCode.CRC_INVALID}, 
{\b CSLibrary.Constants.ErrorCode.PARSE_PKT_ERROR}, 
{\b CSLibrary.Constants.ErrorCode.SYSTEM_ERROR}, 
{\b CSLibrary.Constants.ErrorCode.INVALID_TAG}, 
{\b CSLibrary.Constants.ErrorCode.TAG_NOT_FOUND}
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Operation Error Code }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b CSLibrary.Constants.ExtendedKillCommand} \{ {\b CSLibrary.Constants.ExtendedKillCommand.NORMAL} = 0, 
{\b CSLibrary.Constants.ExtendedKillCommand.DISABLE_PERMALOCK} = 1, 
{\b CSLibrary.Constants.ExtendedKillCommand.DISABLE_USER_MEMORY} = 2, 
{\b CSLibrary.Constants.ExtendedKillCommand.UNLOCK_ALL_BANKS} = 4, 
{\b CSLibrary.Constants.ExtendedKillCommand.UNKNOWN} = 0xff, 
{\b CSLibrary.Constants.ExtendedKillCommand.NORMAL} = 0, 
{\b CSLibrary.Constants.ExtendedKillCommand.DISABLE_PERMALOCK} = 1, 
{\b CSLibrary.Constants.ExtendedKillCommand.DISABLE_USER_MEMORY} = 2, 
{\b CSLibrary.Constants.ExtendedKillCommand.UNLOCK_ALL_BANKS} = 4, 
{\b CSLibrary.Constants.ExtendedKillCommand.UNKNOWN} = 0xff
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Extended Kill command for UHF class 1 gen-2 version 1.2 }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b CSLibrary.Constants.BandState} \{ {\b CSLibrary.Constants.BandState.DISABLE} = 0, 
{\b CSLibrary.Constants.BandState.ENABLE} = 1, 
{\b CSLibrary.Constants.BandState.UNKNOWN} = 2, 
{\b CSLibrary.Constants.BandState.DISABLE} = 0, 
{\b CSLibrary.Constants.BandState.ENABLE} = 1, 
{\b CSLibrary.Constants.BandState.UNKNOWN} = 2
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Frequency Band State }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b CSLibrary.Constants.LBT} : uint \{ {\b CSLibrary.Constants.LBT.OFF} = 0, 
{\b CSLibrary.Constants.LBT.ON} = 1, 
{\b CSLibrary.Constants.LBT.SCAN} = 3, 
{\b CSLibrary.Constants.LBT.OFF} = 0, 
{\b CSLibrary.Constants.LBT.ON} = 1, 
{\b CSLibrary.Constants.LBT.SCAN} = 3
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
LBT Config }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b CSLibrary.Constants.RegionCode} \{ {\b CSLibrary.Constants.RegionCode.FCC} = 1, 
{\b CSLibrary.Constants.RegionCode.ETSI}, 
{\b CSLibrary.Constants.RegionCode.CN}, 
{\b CSLibrary.Constants.RegionCode.TW}, 
{\b CSLibrary.Constants.RegionCode.KR}, 
{\b CSLibrary.Constants.RegionCode.HK}, 
{\b CSLibrary.Constants.RegionCode.JP}, 
{\b CSLibrary.Constants.RegionCode.AU}, 
{\b CSLibrary.Constants.RegionCode.MY}, 
{\b CSLibrary.Constants.RegionCode.SG}, 
{\b CSLibrary.Constants.RegionCode.IN}, 
{\b CSLibrary.Constants.RegionCode.G800}, 
{\b CSLibrary.Constants.RegionCode.ZA}, 
{\b CSLibrary.Constants.RegionCode.BR1}, 
{\b CSLibrary.Constants.RegionCode.BR2}, 
{\b CSLibrary.Constants.RegionCode.BR3}, 
{\b CSLibrary.Constants.RegionCode.BR4}, 
{\b CSLibrary.Constants.RegionCode.BR5}, 
{\b CSLibrary.Constants.RegionCode.ID}, 
{\b CSLibrary.Constants.RegionCode.TH}, 
{\b CSLibrary.Constants.RegionCode.JE}, 
{\b CSLibrary.Constants.RegionCode.PH}, 
{\b CSLibrary.Constants.RegionCode.ETSIUPPERBAND}, 
{\b CSLibrary.Constants.RegionCode.NZ}, 
{\b CSLibrary.Constants.RegionCode.UH1}, 
{\b CSLibrary.Constants.RegionCode.UH2}, 
{\b CSLibrary.Constants.RegionCode.LH}, 
{\b CSLibrary.Constants.RegionCode.LH1}, 
{\b CSLibrary.Constants.RegionCode.LH2}, 
{\b CSLibrary.Constants.RegionCode.VE}, 
{\b CSLibrary.Constants.RegionCode.AR}, 
{\b CSLibrary.Constants.RegionCode.CL}, 
{\b CSLibrary.Constants.RegionCode.CO}, 
{\b CSLibrary.Constants.RegionCode.CR}, 
{\b CSLibrary.Constants.RegionCode.DO}, 
{\b CSLibrary.Constants.RegionCode.PA}, 
{\b CSLibrary.Constants.RegionCode.PE}, 
{\b CSLibrary.Constants.RegionCode.UY}, 
{\b CSLibrary.Constants.RegionCode.UNKNOWN} = 0, 
{\b CSLibrary.Constants.RegionCode.CURRENT} = -1, 
{\b CSLibrary.Constants.RegionCode.FCC} = 1, 
{\b CSLibrary.Constants.RegionCode.ETSI}, 
{\b CSLibrary.Constants.RegionCode.CN}, 
{\b CSLibrary.Constants.RegionCode.CN1}, 
{\b CSLibrary.Constants.RegionCode.CN2}, 
{\b CSLibrary.Constants.RegionCode.CN3}, 
{\b CSLibrary.Constants.RegionCode.CN4}, 
{\b CSLibrary.Constants.RegionCode.CN5}, 
{\b CSLibrary.Constants.RegionCode.CN6}, 
{\b CSLibrary.Constants.RegionCode.CN7}, 
{\b CSLibrary.Constants.RegionCode.CN8}, 
{\b CSLibrary.Constants.RegionCode.CN9}, 
{\b CSLibrary.Constants.RegionCode.CN10}, 
{\b CSLibrary.Constants.RegionCode.CN11}, 
{\b CSLibrary.Constants.RegionCode.CN12}, 
{\b CSLibrary.Constants.RegionCode.TW}, 
{\b CSLibrary.Constants.RegionCode.KR}, 
{\b CSLibrary.Constants.RegionCode.HK}, 
{\b CSLibrary.Constants.RegionCode.JP}, 
{\b CSLibrary.Constants.RegionCode.AU}, 
{\b CSLibrary.Constants.RegionCode.MY}, 
{\b CSLibrary.Constants.RegionCode.SG}, 
{\b CSLibrary.Constants.RegionCode.IN}, 
{\b CSLibrary.Constants.RegionCode.G800}, 
{\b CSLibrary.Constants.RegionCode.ZA}, 
{\b CSLibrary.Constants.RegionCode.BR1}, 
{\b CSLibrary.Constants.RegionCode.BR2}, 
{\b CSLibrary.Constants.RegionCode.ID}, 
{\b CSLibrary.Constants.RegionCode.TH}, 
{\b CSLibrary.Constants.RegionCode.JP2012}, 
{\b CSLibrary.Constants.RegionCode.UH1}, 
{\b CSLibrary.Constants.RegionCode.UH2}, 
{\b CSLibrary.Constants.RegionCode.LH}, 
{\b CSLibrary.Constants.RegionCode.JE}, 
{\b CSLibrary.Constants.RegionCode.PH}, 
{\b CSLibrary.Constants.RegionCode.UNKNOWN} = 0
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Region Profile }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b CSLibrary.Constants.ACID} \{ {\b CSLibrary.Constants.ACID.APACS} = 0xE0, 
{\b CSLibrary.Constants.ACID.NEN} = 0xE1, 
{\b CSLibrary.Constants.ACID.GS1} = 0xE2, 
{\b CSLibrary.Constants.ACID.APACSX} = 0xE3, 
{\b CSLibrary.Constants.ACID.UNKNOWN} = 0xFF, 
{\b CSLibrary.Constants.ACID.APACS} = 0xE0, 
{\b CSLibrary.Constants.ACID.NEN} = 0xE1, 
{\b CSLibrary.Constants.ACID.GS1} = 0xE2, 
{\b CSLibrary.Constants.ACID.APACSX} = 0xE3, 
{\b CSLibrary.Constants.ACID.UNKNOWN} = 0xFF
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Allocation Class Identifier }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b CSLibrary.Constants.EpcMDID} \{ {\b CSLibrary.Constants.EpcMDID.Impinj} = 0x1, 
{\b CSLibrary.Constants.EpcMDID.Texas_Instruments} = 0x2, 
{\b CSLibrary.Constants.EpcMDID.Alien_Technology} = 0x3, 
{\b CSLibrary.Constants.EpcMDID.Intelleflex} = 0x4, 
{\b CSLibrary.Constants.EpcMDID.Atmel} = 0x5, 
{\b CSLibrary.Constants.EpcMDID.NXP} = 0x6, 
{\b CSLibrary.Constants.EpcMDID.ST_Microelectronics} = 0x7, 
{\b CSLibrary.Constants.EpcMDID.EP_Microelectronics} = 0x8, 
{\b CSLibrary.Constants.EpcMDID.Motorola} = 0x9, 
{\b CSLibrary.Constants.EpcMDID.Sentech_Snd_Bhd} = 0xA, 
{\b CSLibrary.Constants.EpcMDID.EM_Microelectronics} = 0xB, 
{\b CSLibrary.Constants.EpcMDID.Renesas_Technology_Corp} = 0xC, 
{\b CSLibrary.Constants.EpcMDID.Mstar} = 0xD, 
{\b CSLibrary.Constants.EpcMDID.Tyco_International} = 0xE, 
{\b CSLibrary.Constants.EpcMDID.Quanray_Electronics} = 0xF, 
{\b CSLibrary.Constants.EpcMDID.Fujitsu} = 0x10, 
{\b CSLibrary.Constants.EpcMDID.LSIS} = 0x11, 
{\b CSLibrary.Constants.EpcMDID.CAEN_RFID_srl} = 0x12, 
{\b CSLibrary.Constants.EpcMDID.CAEN_Productivity_Engineering_Gesellschaft_fuer_IC_Design_mbH} = 0x13, 
{\b CSLibrary.Constants.EpcMDID.Impinj_with_xTid} = 0x801, 
{\b CSLibrary.Constants.EpcMDID.Texas_Instruments_with_xTid} = 0x802, 
{\b CSLibrary.Constants.EpcMDID.Alien_Technology_with_xTid} = 0x803, 
{\b CSLibrary.Constants.EpcMDID.Intelleflex_with_xTid} = 0x804, 
{\b CSLibrary.Constants.EpcMDID.Atmel_with_xTid} = 0x805, 
{\b CSLibrary.Constants.EpcMDID.NXP_with_xTid} = 0x806, 
{\b CSLibrary.Constants.EpcMDID.ST_Microelectronics_with_xTid} = 0x807, 
{\b CSLibrary.Constants.EpcMDID.EP_Microelectronics_with_xTid} = 0x808, 
{\b CSLibrary.Constants.EpcMDID.Motorola_with_xTid} = 0x809, 
{\b CSLibrary.Constants.EpcMDID.Sentech_Snd_Bhd_with_xTid} = 0x80A, 
{\b CSLibrary.Constants.EpcMDID.EM_Microelectronics_with_xTid} = 0x80B, 
{\b CSLibrary.Constants.EpcMDID.Renesas_Technology_Corp_with_xTid} = 0x80C, 
{\b CSLibrary.Constants.EpcMDID.Mstar_with_xTid} = 0x80D, 
{\b CSLibrary.Constants.EpcMDID.Tyco_International_with_xTid} = 0x80E, 
{\b CSLibrary.Constants.EpcMDID.Quanray_Electronics_with_xTid} = 0x80F, 
{\b CSLibrary.Constants.EpcMDID.Fujitsu_with_xTid} = 0x810, 
{\b CSLibrary.Constants.EpcMDID.LSIS_with_xTid} = 0x811, 
{\b CSLibrary.Constants.EpcMDID.CAEN_RFID_srl_with_xTid} = 0x812, 
{\b CSLibrary.Constants.EpcMDID.CAEN_Productivity_Engineering_Gesellschaft_fuer_IC_Design_mbH_with_xTid} = 0x813, 
{\b CSLibrary.Constants.EpcMDID.UNKNOWN} = 0xFFFF, 
{\b CSLibrary.Constants.EpcMDID.Impinj} = 0x1, 
{\b CSLibrary.Constants.EpcMDID.Texas_Instruments} = 0x2, 
{\b CSLibrary.Constants.EpcMDID.Alien_Technology} = 0x3, 
{\b CSLibrary.Constants.EpcMDID.Intelleflex} = 0x4, 
{\b CSLibrary.Constants.EpcMDID.Atmel} = 0x5, 
{\b CSLibrary.Constants.EpcMDID.NXP} = 0x6, 
{\b CSLibrary.Constants.EpcMDID.ST_Microelectronics} = 0x7, 
{\b CSLibrary.Constants.EpcMDID.EP_Microelectronics} = 0x8, 
{\b CSLibrary.Constants.EpcMDID.Motorola} = 0x9, 
{\b CSLibrary.Constants.EpcMDID.Sentech_Snd_Bhd} = 0xA, 
{\b CSLibrary.Constants.EpcMDID.EM_Microelectronics} = 0xB, 
{\b CSLibrary.Constants.EpcMDID.Renesas_Technology_Corp} = 0xC, 
{\b CSLibrary.Constants.EpcMDID.Mstar} = 0xD, 
{\b CSLibrary.Constants.EpcMDID.Tyco_International} = 0xE, 
{\b CSLibrary.Constants.EpcMDID.Quanray_Electronics} = 0xF, 
{\b CSLibrary.Constants.EpcMDID.Fujitsu} = 0x10, 
{\b CSLibrary.Constants.EpcMDID.LSIS} = 0x11, 
{\b CSLibrary.Constants.EpcMDID.CAEN_RFID_srl} = 0x12, 
{\b CSLibrary.Constants.EpcMDID.CAEN_Productivity_Engineering_Gesellschaft_fuer_IC_Design_mbH} = 0x13, 
{\b CSLibrary.Constants.EpcMDID.Impinj_with_xTid} = 0x801, 
{\b CSLibrary.Constants.EpcMDID.Texas_Instruments_with_xTid} = 0x802, 
{\b CSLibrary.Constants.EpcMDID.Alien_Technology_with_xTid} = 0x803, 
{\b CSLibrary.Constants.EpcMDID.Intelleflex_with_xTid} = 0x804, 
{\b CSLibrary.Constants.EpcMDID.Atmel_with_xTid} = 0x805, 
{\b CSLibrary.Constants.EpcMDID.NXP_with_xTid} = 0x806, 
{\b CSLibrary.Constants.EpcMDID.ST_Microelectronics_with_xTid} = 0x807, 
{\b CSLibrary.Constants.EpcMDID.EP_Microelectronics_with_xTid} = 0x808, 
{\b CSLibrary.Constants.EpcMDID.Motorola_with_xTid} = 0x809, 
{\b CSLibrary.Constants.EpcMDID.Sentech_Snd_Bhd_with_xTid} = 0x80A, 
{\b CSLibrary.Constants.EpcMDID.EM_Microelectronics_with_xTid} = 0x80B, 
{\b CSLibrary.Constants.EpcMDID.Renesas_Technology_Corp_with_xTid} = 0x80C, 
{\b CSLibrary.Constants.EpcMDID.Mstar_with_xTid} = 0x80D, 
{\b CSLibrary.Constants.EpcMDID.Tyco_International_with_xTid} = 0x80E, 
{\b CSLibrary.Constants.EpcMDID.Quanray_Electronics_with_xTid} = 0x80F, 
{\b CSLibrary.Constants.EpcMDID.Fujitsu_with_xTid} = 0x810, 
{\b CSLibrary.Constants.EpcMDID.LSIS_with_xTid} = 0x811, 
{\b CSLibrary.Constants.EpcMDID.CAEN_RFID_srl_with_xTid} = 0x812, 
{\b CSLibrary.Constants.EpcMDID.CAEN_Productivity_Engineering_Gesellschaft_fuer_IC_Design_mbH_with_xTid} = 0x813, 
{\b CSLibrary.Constants.EpcMDID.UNKNOWN} = 0xFFFF
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EPCglobal Tag Mask Designer Identifier }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b CSLibrary.Constants.IsoMDID} \{ {\b CSLibrary.Constants.IsoMDID.Motorola} = 0x1, 
{\b CSLibrary.Constants.IsoMDID.STM}, 
{\b CSLibrary.Constants.IsoMDID.Hitachi}, 
{\b CSLibrary.Constants.IsoMDID.Philips}, 
{\b CSLibrary.Constants.IsoMDID.Infineon}, 
{\b CSLibrary.Constants.IsoMDID.Cylink}, 
{\b CSLibrary.Constants.IsoMDID.Texas}, 
{\b CSLibrary.Constants.IsoMDID.Fujitsu}, 
{\b CSLibrary.Constants.IsoMDID.Matsushita}, 
{\b CSLibrary.Constants.IsoMDID.NEC}, 
{\b CSLibrary.Constants.IsoMDID.Oki}, 
{\b CSLibrary.Constants.IsoMDID.Toshiba}, 
{\b CSLibrary.Constants.IsoMDID.Mitsubishi}, 
{\b CSLibrary.Constants.IsoMDID.Samsung}, 
{\b CSLibrary.Constants.IsoMDID.Hynix}, 
{\b CSLibrary.Constants.IsoMDID.LG}, 
{\b CSLibrary.Constants.IsoMDID.EmosynEM}, 
{\b CSLibrary.Constants.IsoMDID.INSIDE}, 
{\b CSLibrary.Constants.IsoMDID.ORGA}, 
{\b CSLibrary.Constants.IsoMDID.SHARP}, 
{\b CSLibrary.Constants.IsoMDID.ATMEL}, 
{\b CSLibrary.Constants.IsoMDID.EM}, 
{\b CSLibrary.Constants.IsoMDID.KSW}, 
{\b CSLibrary.Constants.IsoMDID.ZMD}, 
{\b CSLibrary.Constants.IsoMDID.XICOR}, 
{\b CSLibrary.Constants.IsoMDID.Sony}, 
{\b CSLibrary.Constants.IsoMDID.Malaysia}, 
{\b CSLibrary.Constants.IsoMDID.Emosyn}, 
{\b CSLibrary.Constants.IsoMDID.Fudan}, 
{\b CSLibrary.Constants.IsoMDID.Magellan}, 
{\b CSLibrary.Constants.IsoMDID.Melexis}, 
{\b CSLibrary.Constants.IsoMDID.Renesas}, 
{\b CSLibrary.Constants.IsoMDID.TAGSYS}, 
{\b CSLibrary.Constants.IsoMDID.Transcore}, 
{\b CSLibrary.Constants.IsoMDID.Belling}, 
{\b CSLibrary.Constants.IsoMDID.Masktech}, 
{\b CSLibrary.Constants.IsoMDID.Innovision}, 
{\b CSLibrary.Constants.IsoMDID.HitachiULSI}, 
{\b CSLibrary.Constants.IsoMDID.Cypak}, 
{\b CSLibrary.Constants.IsoMDID.Ricoh}, 
{\b CSLibrary.Constants.IsoMDID.ASK}, 
{\b CSLibrary.Constants.IsoMDID.Unicore}, 
{\b CSLibrary.Constants.IsoMDID.Dallas}, 
{\b CSLibrary.Constants.IsoMDID.Impinj}, 
{\b CSLibrary.Constants.IsoMDID.Alliance}, 
{\b CSLibrary.Constants.IsoMDID.Broadcom}, 
{\b CSLibrary.Constants.IsoMDID.MStar}, 
{\b CSLibrary.Constants.IsoMDID.eeDar}, 
{\b CSLibrary.Constants.IsoMDID.RFIDsec}, 
{\b CSLibrary.Constants.IsoMDID.Schweizer}, 
{\b CSLibrary.Constants.IsoMDID.AMIC}, 
{\b CSLibrary.Constants.IsoMDID.UNKNOWN} = 0xFFFF, 
{\b CSLibrary.Constants.IsoMDID.Motorola} = 0x1, 
{\b CSLibrary.Constants.IsoMDID.STM}, 
{\b CSLibrary.Constants.IsoMDID.Hitachi}, 
{\b CSLibrary.Constants.IsoMDID.Philips}, 
{\b CSLibrary.Constants.IsoMDID.Infineon}, 
{\b CSLibrary.Constants.IsoMDID.Cylink}, 
{\b CSLibrary.Constants.IsoMDID.Texas}, 
{\b CSLibrary.Constants.IsoMDID.Fujitsu}, 
{\b CSLibrary.Constants.IsoMDID.Matsushita}, 
{\b CSLibrary.Constants.IsoMDID.NEC}, 
{\b CSLibrary.Constants.IsoMDID.Oki}, 
{\b CSLibrary.Constants.IsoMDID.Toshiba}, 
{\b CSLibrary.Constants.IsoMDID.Mitsubishi}, 
{\b CSLibrary.Constants.IsoMDID.Samsung}, 
{\b CSLibrary.Constants.IsoMDID.Hynix}, 
{\b CSLibrary.Constants.IsoMDID.LG}, 
{\b CSLibrary.Constants.IsoMDID.EmosynEM}, 
{\b CSLibrary.Constants.IsoMDID.INSIDE}, 
{\b CSLibrary.Constants.IsoMDID.ORGA}, 
{\b CSLibrary.Constants.IsoMDID.SHARP}, 
{\b CSLibrary.Constants.IsoMDID.ATMEL}, 
{\b CSLibrary.Constants.IsoMDID.EM}, 
{\b CSLibrary.Constants.IsoMDID.KSW}, 
{\b CSLibrary.Constants.IsoMDID.ZMD}, 
{\b CSLibrary.Constants.IsoMDID.XICOR}, 
{\b CSLibrary.Constants.IsoMDID.Sony}, 
{\b CSLibrary.Constants.IsoMDID.Malaysia}, 
{\b CSLibrary.Constants.IsoMDID.Emosyn}, 
{\b CSLibrary.Constants.IsoMDID.Fudan}, 
{\b CSLibrary.Constants.IsoMDID.Magellan}, 
{\b CSLibrary.Constants.IsoMDID.Melexis}, 
{\b CSLibrary.Constants.IsoMDID.Renesas}, 
{\b CSLibrary.Constants.IsoMDID.TAGSYS}, 
{\b CSLibrary.Constants.IsoMDID.Transcore}, 
{\b CSLibrary.Constants.IsoMDID.Belling}, 
{\b CSLibrary.Constants.IsoMDID.Masktech}, 
{\b CSLibrary.Constants.IsoMDID.Innovision}, 
{\b CSLibrary.Constants.IsoMDID.HitachiULSI}, 
{\b CSLibrary.Constants.IsoMDID.Cypak}, 
{\b CSLibrary.Constants.IsoMDID.Ricoh}, 
{\b CSLibrary.Constants.IsoMDID.ASK}, 
{\b CSLibrary.Constants.IsoMDID.Unicore}, 
{\b CSLibrary.Constants.IsoMDID.Dallas}, 
{\b CSLibrary.Constants.IsoMDID.Impinj}, 
{\b CSLibrary.Constants.IsoMDID.Alliance}, 
{\b CSLibrary.Constants.IsoMDID.Broadcom}, 
{\b CSLibrary.Constants.IsoMDID.MStar}, 
{\b CSLibrary.Constants.IsoMDID.eeDar}, 
{\b CSLibrary.Constants.IsoMDID.RFIDsec}, 
{\b CSLibrary.Constants.IsoMDID.Schweizer}, 
{\b CSLibrary.Constants.IsoMDID.AMIC}, 
{\b CSLibrary.Constants.IsoMDID.UNKNOWN} = 0xFFFF
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ISO/IEC 7816-6 registration authority }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b CSLibrary.Constants.Operation} : int \{ {\b CSLibrary.Constants.Operation.UNKNOWN} = -1, 
{\b CSLibrary.Constants.Operation.TAG_BLOCK_PERMALOCK}, 
{\b CSLibrary.Constants.Operation.TAG_LOCK}, 
{\b CSLibrary.Constants.Operation.TAG_KILL}, 
{\b CSLibrary.Constants.Operation.TAG_READ_KILL_PWD}, 
{\b CSLibrary.Constants.Operation.TAG_READ_ACC_PWD}, 
{\b CSLibrary.Constants.Operation.TAG_READ_PC}, 
{\b CSLibrary.Constants.Operation.TAG_READ_EPC}, 
{\b CSLibrary.Constants.Operation.TAG_READ_TID}, 
{\b CSLibrary.Constants.Operation.TAG_READ_USER}, 
{\b CSLibrary.Constants.Operation.TAG_WRITE_KILL_PWD}, 
{\b CSLibrary.Constants.Operation.TAG_WRITE_ACC_PWD}, 
{\b CSLibrary.Constants.Operation.TAG_WRITE_PC}, 
{\b CSLibrary.Constants.Operation.TAG_WRITE_EPC}, 
{\b CSLibrary.Constants.Operation.TAG_WRITE_USER}, 
{\b CSLibrary.Constants.Operation.TAG_INVENTORY}, 
{\b CSLibrary.Constants.Operation.TAG_RANGING}, 
{\b CSLibrary.Constants.Operation.TAG_PRERANGING}, 
{\b CSLibrary.Constants.Operation.TAG_EXERANGING}, 
{\b CSLibrary.Constants.Operation.TAG_SEARCHING}, 
{\b CSLibrary.Constants.Operation.TAG_SELECTED}, 
{\b CSLibrary.Constants.Operation.TAG_READ_PROTECT}, 
{\b CSLibrary.Constants.Operation.TAG_RESET_READ_PROTECT}, 
{\b CSLibrary.Constants.Operation.EAS_CONFIG}, 
{\b CSLibrary.Constants.Operation.EAS_ALARM}, 
{\b CSLibrary.Constants.Operation.CL_SET_PASSWORD}, 
{\b CSLibrary.Constants.Operation.CL_SET_LOG_MODE}, 
{\b CSLibrary.Constants.Operation.CL_SET_LOG_LIMITS}, 
{\b CSLibrary.Constants.Operation.CL_GET_MEASUREMENT_SETUP}, 
{\b CSLibrary.Constants.Operation.CL_SET_SFE_PARA}, 
{\b CSLibrary.Constants.Operation.CL_SET_CAL_DATA}, 
{\b CSLibrary.Constants.Operation.CL_END_LOG}, 
{\b CSLibrary.Constants.Operation.CL_START_LOG}, 
{\b CSLibrary.Constants.Operation.CL_GET_LOG_STATE}, 
{\b CSLibrary.Constants.Operation.CL_GET_CAL_DATA}, 
{\b CSLibrary.Constants.Operation.CL_GET_BAT_LV}, 
{\b CSLibrary.Constants.Operation.CL_SET_SHELF_LIFE}, 
{\b CSLibrary.Constants.Operation.CL_INIT}, 
{\b CSLibrary.Constants.Operation.CL_GET_SENSOR_VALUE}, 
{\b CSLibrary.Constants.Operation.CL_OPEN_AREA}, 
{\b CSLibrary.Constants.Operation.CL_ACCESS_FIFO}, 
{\b CSLibrary.Constants.Operation.G2_READ_PROTECT}, 
{\b CSLibrary.Constants.Operation.G2_RESET_READ_PROTECT}, 
{\b CSLibrary.Constants.Operation.G2_CHANGE_EAS}, 
{\b CSLibrary.Constants.Operation.G2_EAS_ALARM}, 
{\b CSLibrary.Constants.Operation.G2_CHANGE_CONFIG}, 
{\b CSLibrary.Constants.Operation.QT_COMMAND}, 
{\b CSLibrary.Constants.Operation.EM4324_GetUid}, 
{\b CSLibrary.Constants.Operation.EM4325_GetUid}, 
{\b CSLibrary.Constants.Operation.EM_GetSensorData}, 
{\b CSLibrary.Constants.Operation.EM_ResetAlarms}, 
{\b CSLibrary.Constants.Operation.EM_SPI}, 
{\b CSLibrary.Constants.Operation.EM_SPIRequestStatus}, 
{\b CSLibrary.Constants.Operation.EM_SPIBoot}, 
{\b CSLibrary.Constants.Operation.EM_SPITransponder}, 
{\b CSLibrary.Constants.Operation.EM_SPIGetSensorData}, 
{\b CSLibrary.Constants.Operation.EM_SPISetFlags}, 
{\b CSLibrary.Constants.Operation.EM_SPIReadWord}, 
{\b CSLibrary.Constants.Operation.EM_SPIWriteWord}, 
{\b CSLibrary.Constants.Operation.EM_SPIReadPage}, 
{\b CSLibrary.Constants.Operation.EM_SPIWritePage}, 
{\b CSLibrary.Constants.Operation.EM_SPISetClock}, 
{\b CSLibrary.Constants.Operation.EM_SPIAlarm}, 
{\b CSLibrary.Constants.Operation.EM_SPIReadRegisterFileWord}, 
{\b CSLibrary.Constants.Operation.EM_SPIWriteRegisterFileWord}, 
{\b CSLibrary.Constants.Operation.EM_SPIReqRN}, 
{\b CSLibrary.Constants.Operation.TAG_GENERALSELECTED}, 
{\b CSLibrary.Constants.Operation.TAG_PREFILTER}, 
{\b CSLibrary.Constants.Operation.UNKNOWN} = -1, 
{\b CSLibrary.Constants.Operation.TAG_BLOCK_PERMALOCK}, 
{\b CSLibrary.Constants.Operation.TAG_LOCK}, 
{\b CSLibrary.Constants.Operation.TAG_KILL}, 
{\b CSLibrary.Constants.Operation.TAG_READ_KILL_PWD}, 
{\b CSLibrary.Constants.Operation.TAG_READ_ACC_PWD}, 
{\b CSLibrary.Constants.Operation.TAG_READ_PC}, 
{\b CSLibrary.Constants.Operation.TAG_READ_EPC}, 
{\b CSLibrary.Constants.Operation.TAG_READ_TID}, 
{\b CSLibrary.Constants.Operation.TAG_READ_USER}, 
{\b CSLibrary.Constants.Operation.TAG_WRITE_KILL_PWD}, 
{\b CSLibrary.Constants.Operation.TAG_WRITE_ACC_PWD}, 
{\b CSLibrary.Constants.Operation.TAG_WRITE_PC}, 
{\b CSLibrary.Constants.Operation.TAG_WRITE_EPC}, 
{\b CSLibrary.Constants.Operation.TAG_WRITE_USER}, 
{\b CSLibrary.Constants.Operation.TAG_INVENTORY}, 
{\b CSLibrary.Constants.Operation.TAG_RANGING}, 
{\b CSLibrary.Constants.Operation.TAG_SEARCHING}, 
{\b CSLibrary.Constants.Operation.TAG_SELECTED}, 
{\b CSLibrary.Constants.Operation.TAG_READ_PROTECT}, 
{\b CSLibrary.Constants.Operation.TAG_RESET_READ_PROTECT}, 
{\b CSLibrary.Constants.Operation.EAS_CONFIG}, 
{\b CSLibrary.Constants.Operation.EAS_ALARM}, 
{\b CSLibrary.Constants.Operation.CL_SET_PASSWORD}, 
{\b CSLibrary.Constants.Operation.CL_SET_LOG_MODE}, 
{\b CSLibrary.Constants.Operation.CL_SET_LOG_LIMITS}, 
{\b CSLibrary.Constants.Operation.CL_GET_MEASUREMENT_SETUP}, 
{\b CSLibrary.Constants.Operation.CL_SET_SFE_PARA}, 
{\b CSLibrary.Constants.Operation.CL_SET_CAL_DATA}, 
{\b CSLibrary.Constants.Operation.CL_END_LOG}, 
{\b CSLibrary.Constants.Operation.CL_START_LOG}, 
{\b CSLibrary.Constants.Operation.CL_GET_LOG_STATE}, 
{\b CSLibrary.Constants.Operation.CL_GET_CAL_DATA}, 
{\b CSLibrary.Constants.Operation.CL_GET_BAT_LV}, 
{\b CSLibrary.Constants.Operation.CL_SET_SHELF_LIFE}, 
{\b CSLibrary.Constants.Operation.CL_INIT}, 
{\b CSLibrary.Constants.Operation.CL_GET_SENSOR_VALUE}, 
{\b CSLibrary.Constants.Operation.CL_OPEN_AREA}, 
{\b CSLibrary.Constants.Operation.CL_ACCESS_FIFO}, 
{\b CSLibrary.Constants.Operation.G2_READ_PROTECT}, 
{\b CSLibrary.Constants.Operation.G2_RESET_READ_PROTECT}, 
{\b CSLibrary.Constants.Operation.G2_CHANGE_EAS}, 
{\b CSLibrary.Constants.Operation.G2_EAS_ALARM}, 
{\b CSLibrary.Constants.Operation.G2_CHANGE_CONFIG}, 
{\b CSLibrary.Constants.Operation.QT_COMMAND}, 
{\b CSLibrary.Constants.Operation.EM4324_GetUid}, 
{\b CSLibrary.Constants.Operation.EM4325_GetUid}, 
{\b CSLibrary.Constants.Operation.EM_GetSensorData}, 
{\b CSLibrary.Constants.Operation.EM_ResetAlarms}, 
{\b CSLibrary.Constants.Operation.EM_SPI}, 
{\b CSLibrary.Constants.Operation.EM_SPIRequestStatus}, 
{\b CSLibrary.Constants.Operation.EM_SPIBoot}, 
{\b CSLibrary.Constants.Operation.EM_SPITransponder}, 
{\b CSLibrary.Constants.Operation.EM_SPIGetSensorData}, 
{\b CSLibrary.Constants.Operation.EM_SPISetFlags}, 
{\b CSLibrary.Constants.Operation.EM_SPIReadWord}, 
{\b CSLibrary.Constants.Operation.EM_SPIWriteWord}, 
{\b CSLibrary.Constants.Operation.EM_SPIReadPage}, 
{\b CSLibrary.Constants.Operation.EM_SPIWritePage}, 
{\b CSLibrary.Constants.Operation.EM_SPISetClock}, 
{\b CSLibrary.Constants.Operation.EM_SPIAlarm}, 
{\b CSLibrary.Constants.Operation.EM_SPIReadRegisterFileWord}, 
{\b CSLibrary.Constants.Operation.EM_SPIWriteRegisterFileWord}, 
{\b CSLibrary.Constants.Operation.EM_SPIReqRN}, 
{\b CSLibrary.Constants.Operation.TAG_GENERALSELECTED}
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RFID Operation Mode }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b CSLibrary.Constants.Bank} \{ {\b CSLibrary.Constants.Bank.ACC_PWD}, 
{\b CSLibrary.Constants.Bank.KILL_PWD}, 
{\b CSLibrary.Constants.Bank.PC}, 
{\b CSLibrary.Constants.Bank.EPC}, 
{\b CSLibrary.Constants.Bank.TID}, 
{\b CSLibrary.Constants.Bank.USER}, 
{\b CSLibrary.Constants.Bank.UNKNOWN}, 
{\b CSLibrary.Constants.Bank.ACC_PWD}, 
{\b CSLibrary.Constants.Bank.KILL_PWD}, 
{\b CSLibrary.Constants.Bank.PC}, 
{\b CSLibrary.Constants.Bank.EPC}, 
{\b CSLibrary.Constants.Bank.TID}, 
{\b CSLibrary.Constants.Bank.USER}, 
{\b CSLibrary.Constants.Bank.UNKNOWN}
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Memory bank }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b CSLibrary.Constants.TagAccess} : byte \{ {\b CSLibrary.Constants.TagAccess.READ} = 0xC2, 
{\b CSLibrary.Constants.TagAccess.WRITE} = 0xC3, 
{\b CSLibrary.Constants.TagAccess.KILL} = 0xC4, 
{\b CSLibrary.Constants.TagAccess.LOCK} = 0xC5, 
{\b CSLibrary.Constants.TagAccess.ERASE} = 0xC6, 
{\b CSLibrary.Constants.TagAccess.UNKNOWN} = 0xff, 
{\b CSLibrary.Constants.TagAccess.READ} = 0xC2, 
{\b CSLibrary.Constants.TagAccess.WRITE} = 0xC3, 
{\b CSLibrary.Constants.TagAccess.KILL} = 0xC4, 
{\b CSLibrary.Constants.TagAccess.LOCK} = 0xC5, 
{\b CSLibrary.Constants.TagAccess.ERASE} = 0xC6, 
{\b CSLibrary.Constants.TagAccess.UNKNOWN} = 0xff
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The values that can be found in the command field for tag access packets }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b CSLibrary.Constants.Machine} \{ {\b CSLibrary.Constants.Machine.CS101} = 0, 
{\b CSLibrary.Constants.Machine.CS203}, 
{\b CSLibrary.Constants.Machine.CS333}, 
{\b CSLibrary.Constants.Machine.CS468}, 
{\b CSLibrary.Constants.Machine.CS206}, 
{\b CSLibrary.Constants.Machine.CS468INT}, 
{\b CSLibrary.Constants.Machine.CS463}, 
{\b CSLibrary.Constants.Machine.CS469}, 
{\b CSLibrary.Constants.Machine.CS208}, 
{\b CSLibrary.Constants.Machine.CS209}, 
{\b CSLibrary.Constants.Machine.CS103}, 
{\b CSLibrary.Constants.Machine.CS108}, 
{\b CSLibrary.Constants.Machine.MACHINE_CODE_END}, 
{\b CSLibrary.Constants.Machine.UNKNOWN} = 0xff, 
{\b CSLibrary.Constants.Machine.CS101} = 0, 
{\b CSLibrary.Constants.Machine.CS203}, 
{\b CSLibrary.Constants.Machine.CS333}, 
{\b CSLibrary.Constants.Machine.CS468}, 
{\b CSLibrary.Constants.Machine.CS206}, 
{\b CSLibrary.Constants.Machine.CS468INT}, 
{\b CSLibrary.Constants.Machine.CS463}, 
{\b CSLibrary.Constants.Machine.CS469}, 
{\b CSLibrary.Constants.Machine.CS208}, 
{\b CSLibrary.Constants.Machine.CS209}, 
{\b CSLibrary.Constants.Machine.CS103}, 
{\b CSLibrary.Constants.Machine.CS108}, 
{\b CSLibrary.Constants.Machine.MACHINE_CODE_END}, 
{\b CSLibrary.Constants.Machine.UNKNOWN} = 0xff
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Machine Type }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b CSLibrary.Constants.ApiMode} \{ {\b CSLibrary.Constants.ApiMode.HIGHLEVEL}, 
{\b CSLibrary.Constants.ApiMode.LOWLEVEL}, 
{\b CSLibrary.Constants.ApiMode.UNKNOWN}, 
{\b CSLibrary.Constants.ApiMode.HIGHLEVEL}, 
{\b CSLibrary.Constants.ApiMode.LOWLEVEL}, 
{\b CSLibrary.Constants.ApiMode.UNKNOWN}
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b CSLibrary.Constants.SelectFlags} \{ {\b CSLibrary.Constants.SelectFlags.ZERO} = 0x0000000, 
{\b CSLibrary.Constants.SelectFlags.SELECT} = 0x00000001, 
{\b CSLibrary.Constants.SelectFlags.POSTMATCH} = 0x00000002, 
{\b CSLibrary.Constants.SelectFlags.POST_MATCH} = 0x2, 
{\b CSLibrary.Constants.SelectFlags.DISABLE_INVENTORY} = 0x00000004, 
{\b CSLibrary.Constants.SelectFlags.READ1BANK} = 0x00000008, 
{\b CSLibrary.Constants.SelectFlags.READ2BANK} = 0x00000010, 
{\b CSLibrary.Constants.SelectFlags.UNKNOWN} = 0xffff, 
{\b CSLibrary.Constants.SelectFlags.ZERO} = 0x0000000, 
{\b CSLibrary.Constants.SelectFlags.SELECT} = 0x00000001, 
{\b CSLibrary.Constants.SelectFlags.POSTMATCH} = 0x00000002, 
{\b CSLibrary.Constants.SelectFlags.POST_MATCH} = 0x2, 
{\b CSLibrary.Constants.SelectFlags.DISABLE_INVENTORY} = 0x00000004, 
{\b CSLibrary.Constants.SelectFlags.READ1BANK} = 0x00000008, 
{\b CSLibrary.Constants.SelectFlags.READ2BANK} = 0x00000010, 
{\b CSLibrary.Constants.SelectFlags.UNKNOWN} = 0xffff
 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary/RFIDReader/Constants/Intel.Constants.cs File Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary/RFIDReader/Constants/Intel.Constants.cs}
{\xe \v CSLibrary/RFIDReader/Constants/Intel.Constants.cs}
{\bkmkstart AAAAAAAABM}
{\bkmkend AAAAAAAABM}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b CSLibrary}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b CSLibrary.Constants}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumerations\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b CSLibrary.Constants.RadioOperationMode} : uint \{ {\b CSLibrary.Constants.RadioOperationMode.CONTINUOUS}, 
{\b CSLibrary.Constants.RadioOperationMode.NONCONTINUOUS}, 
{\b CSLibrary.Constants.RadioOperationMode.UNKNOWN} = 0xFFFF
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A radio module may operate either in continuous or non-continuous mode. In continuous mode, when a tag-protocol-operation cycle (i.e., one iteration through all enabled antenna ports) has completed, the radio module will begin a new tag- protocol-operation cycle with the first enabled antenna port and will continue to do so until the operation is explicitly cancelled by the application. In non- continuous mode, only a single tag-protocol-operation cycle is executed upon the radio module. }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b CSLibrary.Constants.RadioPowerState} : uint \{ {\b CSLibrary.Constants.RadioPowerState.FULL}, 
{\b CSLibrary.Constants.RadioPowerState.STANDBY}, 
{\b CSLibrary.Constants.RadioPowerState.UNKNOWN} = 0xFFFF
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Based upon the usage scenario, an application is given the flexibility to place the radio module into specific power states. A radio module that is in the low-power state will remain so until either a tag-protocol operation (e.g., TagInventory, etc.) is executed on the radio module or until it is explicitly instructed to leave low-power state. Note that if an RFID radio module is brought out of low-power state by the execution of a tag-protocol operation, it will not automatically return to low-power state. Note that the radio-module power state should not be confused with the per- antenna RF power-level }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b CSLibrary.Constants.AntennaPortState} : uint \{ {\b CSLibrary.Constants.AntennaPortState.DISABLED}, 
{\b CSLibrary.Constants.AntennaPortState.ENABLED}, 
{\b CSLibrary.Constants.AntennaPortState.UNKNOWN} = 0xFFFF
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Indicates the state of the logical antenna port. }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b CSLibrary.Constants.ModulationType} : uint \{ {\b CSLibrary.Constants.ModulationType.DSB_ASK}, 
{\b CSLibrary.Constants.ModulationType.SSB_ASK}, 
{\b CSLibrary.Constants.ModulationType.PR_ASK}, 
{\b CSLibrary.Constants.ModulationType.UNKNOWN} = 0xFFFF
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The modulation type that is used by the profile. }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b CSLibrary.Constants.DataDifference} : uint \{ {\b CSLibrary.Constants.DataDifference.HALF_TARI}, 
{\b CSLibrary.Constants.DataDifference.ONE_TARI}, 
{\b CSLibrary.Constants.DataDifference.UNKNOWN} = 0xFFFF
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The difference, in Tari, between an data zero and a data one. }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b CSLibrary.Constants.DivideRatio} : uint \{ {\b CSLibrary.Constants.DivideRatio.RATIO_8}, 
{\b CSLibrary.Constants.DivideRatio.RATIO_64DIV3}, 
{\b CSLibrary.Constants.DivideRatio.UNKNOWN} = 0xFFFF
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The tag-to-interrogator divide ratio that is sent as part of the Query command. }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b CSLibrary.Constants.MillerNumber} : uint \{ {\b CSLibrary.Constants.MillerNumber.NUMBER_FM0}, 
{\b CSLibrary.Constants.MillerNumber.NUMBER_2}, 
{\b CSLibrary.Constants.MillerNumber.NUMBER_4}, 
{\b CSLibrary.Constants.MillerNumber.NUMBER_8}, 
{\b CSLibrary.Constants.MillerNumber.UNKNOWN} = 0xFFFF
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The miller number (i.e., cycles per symbol) that is sent as part of the Query command. }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b CSLibrary.Constants.RadioProtocol} : uint \{ {\b CSLibrary.Constants.RadioProtocol.ISO18K6C}, 
{\b CSLibrary.Constants.RadioProtocol.UNKNOWN} = 0xFFFF
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The tag protocol for which this link profile has been configured. The value of this field determines which of the structures within the profileConfig contains the link profile configuration information. }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b CSLibrary.Constants.MemoryBank} : uint \{ {\b CSLibrary.Constants.MemoryBank.RESERVED}, 
{\b CSLibrary.Constants.MemoryBank.EPC}, 
{\b CSLibrary.Constants.MemoryBank.TID}, 
{\b CSLibrary.Constants.MemoryBank.USER}, 
{\b CSLibrary.Constants.MemoryBank.BANK0} = 0x00, 
{\b CSLibrary.Constants.MemoryBank.BANK1} = 0x01, 
{\b CSLibrary.Constants.MemoryBank.BANK2} = 0x02, 
{\b CSLibrary.Constants.MemoryBank.BANK3} = 0x03, 
{\b CSLibrary.Constants.MemoryBank.UNKNOWN} = 0xFFFF
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tag's memory bank }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b CSLibrary.Constants.Target} : uint \{ {\b CSLibrary.Constants.Target.S0}, 
{\b CSLibrary.Constants.Target.S1}, 
{\b CSLibrary.Constants.Target.S2}, 
{\b CSLibrary.Constants.Target.S3}, 
{\b CSLibrary.Constants.Target.SELECTED}, 
{\b CSLibrary.Constants.Target.UNKNOWN} = 0xFFFF
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Specifies what flag, selected (i.e., SL) or one of the four inventory flags (i.e., S0, S1, S2, or S3), will be modified by the action. }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b CSLibrary.Constants.Action} : uint \{ {\b CSLibrary.Constants.Action.ASLINVA_DSLINVB}, 
{\b CSLibrary.Constants.Action.ASLINVA_NOTHING}, 
{\b CSLibrary.Constants.Action.NOTHING_DSLINVB}, 
{\b CSLibrary.Constants.Action.NSLINVS_NOTHING}, 
{\b CSLibrary.Constants.Action.DSLINVB_ASLINVA}, 
{\b CSLibrary.Constants.Action.DSLINVB_NOTHING}, 
{\b CSLibrary.Constants.Action.NOTHING_ASLINVA}, 
{\b CSLibrary.Constants.Action.NOTHING_NSLINVS}, 
{\b CSLibrary.Constants.Action.UNKNOWN} = 0xFFFF
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Specifies the action that will be applied to the tag populations (i.e, the }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b CSLibrary.Constants.Selected} : uint \{ {\b CSLibrary.Constants.Selected.ALL} = 0, 
{\b CSLibrary.Constants.Selected.DEASSERTED} = 2, 
{\b CSLibrary.Constants.Selected.ASSERTED} = 3, 
{\b CSLibrary.Constants.Selected.UNKNOWN} = 0xFFFF
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Specifies the state of the selected (SL) flag for tags that will have the operation applied to them. }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b CSLibrary.Constants.Session} : uint \{ {\b CSLibrary.Constants.Session.S0}, 
{\b CSLibrary.Constants.Session.S1}, 
{\b CSLibrary.Constants.Session.S2}, 
{\b CSLibrary.Constants.Session.S3}, 
{\b CSLibrary.Constants.Session.UNKNOWN} = 0xFFFF
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Specifies which inventory session flag (i.e., S0, S1, S2, or S3) will be matched against the inventory state specified by target. }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b CSLibrary.Constants.SessionTarget} : uint \{ {\b CSLibrary.Constants.SessionTarget.A}, 
{\b CSLibrary.Constants.SessionTarget.B}, 
{\b CSLibrary.Constants.SessionTarget.UNKNOWN} = 0xFFFF
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Specifies the state of the inventory session flag (i.e., A or B), specified by session, for tags that will have the operation applied to them. }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b CSLibrary.Constants.SingulationAlgorithm} : uint \{ {\b CSLibrary.Constants.SingulationAlgorithm.FIXEDQ} = 0, 
{\b CSLibrary.Constants.SingulationAlgorithm.DYNAMICQ} = 3, 
{\b CSLibrary.Constants.SingulationAlgorithm.UNKNOWN} = 0xFFFF
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Based upon usage scenarios, different singulation algorithms (i.e., Q-adjustment, etc.) may be desired. This document simply documents the mechanisms by which an application can choose and configure singulation algorithms. This document does not provide specific information about the singulation algorithms. }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b CSLibrary.Constants.WriteType} : uint \{ {\b CSLibrary.Constants.WriteType.SEQUENTIAL}, 
{\b CSLibrary.Constants.WriteType.RANDOM}, 
{\b CSLibrary.Constants.WriteType.UNKNOWN} = 0xFFFF
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The type of write that will be performed \'96 i.e., sequential or random. The value of this field determines which of the structures within parameters contains the write parameters. }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b CSLibrary.Constants.Permission} : uint \{ {\b CSLibrary.Constants.Permission.UNLOCK} = 0x0, 
{\b CSLibrary.Constants.Permission.PERM_UNLOCK} = 0x1, 
{\b CSLibrary.Constants.Permission.LOCK} = 0x2, 
{\b CSLibrary.Constants.Permission.PERM_LOCK} = 0x3, 
{\b CSLibrary.Constants.Permission.UNCHANGED} = 0x4, 
{\b CSLibrary.Constants.Permission.UNKNOWN} = 0xFFFF
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A tag-permission command (aka, tag lock) allows the application to set the access permissions of a tag. These include the following: \'95 Set whether or not an access password is required to write to the EPC, TID, or user memory banks. \'95 Set whether or not the above memory-write permission is permanently set. Once the memory-write permission has been permanently set, attempts to change the permission or turn off the permanent setting will fail. \'95 Set a memory bank to be read-only. \'95 Set whether or not the individual passwords (i.e., access and kill) may be accessed (i.e., read and written) and, if they are accessible, whether or not an access password is required to read the individual passwords (i.e., access and kill). \'95 Set whether or not the above password-access permission is permanently set. Once the password-access permission has been permanently set, attempts to change the permission or turn off the permanent setting will fail. \'95 Set the individual passwords to be inaccessible (i.e., unable to be read or written). }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b CSLibrary.Constants.OptType} : uint \{ {\b CSLibrary.Constants.OptType.OPT_NONE}, 
{\b CSLibrary.Constants.OptType.OPT_READ}, 
{\b CSLibrary.Constants.OptType.OPT_WRITE_TYPE_SEQUENTIAL}, 
{\b CSLibrary.Constants.OptType.OPT_WRITE_TYPE_RANDOM}, 
{\b CSLibrary.Constants.OptType.UNKNOWN} = 0xFFFF
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b CSLibrary.Constants.QTCtrlType} : uint \{ {\b CSLibrary.Constants.QTCtrlType.READ}, 
{\b CSLibrary.Constants.QTCtrlType.WRITE}, 
{\b CSLibrary.Constants.QTCtrlType.UNKNOWN} = 0xFFFF
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b CSLibrary.Constants.QTPersistenceType} : uint \{ {\b CSLibrary.Constants.QTPersistenceType.TEMPORARY}, 
{\b CSLibrary.Constants.QTPersistenceType.PERMANENT}, 
{\b CSLibrary.Constants.QTPersistenceType.UNKNOWN} = 0xFFFF
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b CSLibrary.Constants.QTShortRangeType} : uint \{ {\b CSLibrary.Constants.QTShortRangeType.DISABLE}, 
{\b CSLibrary.Constants.QTShortRangeType.ENABLE}, 
{\b CSLibrary.Constants.QTShortRangeType.UNKNOWN} = 0xFFFF
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b CSLibrary.Constants.QTMemMapType} : uint \{ {\b CSLibrary.Constants.QTMemMapType.PRIVATE}, 
{\b CSLibrary.Constants.QTMemMapType.PUBLIC}, 
{\b CSLibrary.Constants.QTMemMapType.UNKNOWN} = 0xFFFF
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b CSLibrary.Constants.ResponseType} : uint \{ {\b CSLibrary.Constants.ResponseType.DATA} = 0xFFFFFFFF, 
{\b CSLibrary.Constants.ResponseType.UNKNOWN} = 0xFFFF
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The type of data that will have its mode set to the mode specified by responseMode. For version 1.1 of the RFID Reader Library, the only valid value is RFID_RESPONSE_TYPE_DATA. }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b CSLibrary.Constants.ResponseMode} : uint \{ {\b CSLibrary.Constants.ResponseMode.COMPACT} = 0x00000001, 
{\b CSLibrary.Constants.ResponseMode.NORMAL} = 0x00000003, 
{\b CSLibrary.Constants.ResponseMode.EXTENDED} = 0x00000007, 
{\b CSLibrary.Constants.ResponseMode.UNKNOWN} = 0xFFFF
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The requested data-reporting mode for the data type specified by responseType. }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b CSLibrary.Constants.MacResetType} : uint \{ {\b CSLibrary.Constants.MacResetType.SOFT}, 
{\b CSLibrary.Constants.MacResetType.UNKNOWN} = 0xFFFF
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The type of reset that the MAC should perform. }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b CSLibrary.Constants.MacRegion} : uint \{ {\b CSLibrary.Constants.MacRegion.FCC_GENERIC}, 
{\b CSLibrary.Constants.MacRegion.ETSI_GENERIC}, 
{\b CSLibrary.Constants.MacRegion.NEWETSI_GENERIC}, 
{\b CSLibrary.Constants.MacRegion.JAPAN_GENERIC}, 
{\b CSLibrary.Constants.MacRegion.KOREA_LBT}, 
{\b CSLibrary.Constants.MacRegion.KOREA_FHSS}, 
{\b CSLibrary.Constants.MacRegion.UNKNOWN} = 0xFFFF
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The new region of operation for the radio module. }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b CSLibrary.Constants.GpioPin} : uint \{ {\b CSLibrary.Constants.GpioPin.PIN_0} = ( uint ) 0x1 << 0, 
{\b CSLibrary.Constants.GpioPin.PIN_1} = ( uint ) 0x1 << 1, 
{\b CSLibrary.Constants.GpioPin.PIN_2} = ( uint ) 0x1 << 2, 
{\b CSLibrary.Constants.GpioPin.PIN_3} = ( uint ) 0x1 << 3
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b CSLibrary.Constants.Result} : int \{ {\b CSLibrary.Constants.Result.OK} = 0, 
{\b CSLibrary.Constants.Result.ALREADY_OPEN} = -9999, 
{\b CSLibrary.Constants.Result.BUFFER_TOO_SMALL}, 
{\b CSLibrary.Constants.Result.FAILURE}, 
{\b CSLibrary.Constants.Result.DRIVER_LOAD}, 
{\b CSLibrary.Constants.Result.DRIVER_MISMATCH}, 
{\b CSLibrary.Constants.Result.EMULATION_MODE}, 
{\b CSLibrary.Constants.Result.INVALID_ANTENNA}, 
{\b CSLibrary.Constants.Result.INVALID_HANDLE}, 
{\b CSLibrary.Constants.Result.INVALID_PARAMETER}, 
{\b CSLibrary.Constants.Result.NO_SUCH_RADIO}, 
{\b CSLibrary.Constants.Result.NOT_INITIALIZED}, 
{\b CSLibrary.Constants.Result.NOT_SUPPORTED}, 
{\b CSLibrary.Constants.Result.OPERATION_CANCELLED}, 
{\b CSLibrary.Constants.Result.OUT_OF_MEMORY}, 
{\b CSLibrary.Constants.Result.RADIO_BUSY}, 
{\b CSLibrary.Constants.Result.RADIO_FAILURE}, 
{\b CSLibrary.Constants.Result.RADIO_NOT_PRESENT}, 
{\b CSLibrary.Constants.Result.CURRENTLY_NOT_ALLOWED}, 
{\b CSLibrary.Constants.Result.RADIO_NOT_RESPONDING}, 
{\b CSLibrary.Constants.Result.NONVOLATILE_INIT_FAILED}, 
{\b CSLibrary.Constants.Result.NONVOLATILE_OUT_OF_BOUNDS}, 
{\b CSLibrary.Constants.Result.NONVOLATILE_WRITE_FAILED}, 
{\b CSLibrary.Constants.Result.RECEIVE_OVERFLOW}, 
{\b CSLibrary.Constants.Result.SYSTEM_CATCH_EXCEPTION}, 
{\b CSLibrary.Constants.Result.NO_TAG_FOUND}, 
{\b CSLibrary.Constants.Result.MAX_RETRY_EXIT}, 
{\b CSLibrary.Constants.Result.UNKNOWN_OPERATION}, 
{\b CSLibrary.Constants.Result.PREALLOCATED_BUFFER_FULL}, 
{\b CSLibrary.Constants.Result.POWER_UP_FAIL}, 
{\b CSLibrary.Constants.Result.POWER_DOWN_FAIL}, 
{\b CSLibrary.Constants.Result.NETWORK_RESET}, 
{\b CSLibrary.Constants.Result.NETWORK_LOST}, 
{\b CSLibrary.Constants.Result.INVALID_OEM_COUNTRY_CODE}, 
{\b CSLibrary.Constants.Result.DEVICE_NOT_SUPPORT}, 
{\b CSLibrary.Constants.Result.DEVICE_CONNECTED}, 
{\b CSLibrary.Constants.Result.THREAD_ERROR}, 
{\b CSLibrary.Constants.Result.MAC_ERROR}
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
function Result value definitions }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b CSLibrary.Constants.SelectMaskFlags} \{ {\b CSLibrary.Constants.SelectMaskFlags.DISABLE_ALL} = 0, 
{\b CSLibrary.Constants.SelectMaskFlags.ENABLE_TOGGLE} = 1, 
{\b CSLibrary.Constants.SelectMaskFlags.ENABLE_PC_MASK} = 2, 
{\b CSLibrary.Constants.SelectMaskFlags.ENABLE_NON_MATCH} = 4, 
{\b CSLibrary.Constants.SelectMaskFlags.ENABLE_ALL} = ENABLE_TOGGLE | ENABLE_PC_MASK | ENABLE_NON_MATCH
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tag Parameters Selected flags }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b CSLibrary.Constants.FwUpdateFlags} \{ {\b CSLibrary.Constants.FwUpdateFlags.NVMEM_UPDATE} = 0x00000000, 
{\b CSLibrary.Constants.FwUpdateFlags.NVMEM_UPDATE_TEST}, 
{\b CSLibrary.Constants.FwUpdateFlags.NVMEM_UPDATE_BL}, 
{\b CSLibrary.Constants.FwUpdateFlags.NVMEM_UPDATE_BL_TEST}, 
{\b CSLibrary.Constants.FwUpdateFlags.NVMEM_UPDATE_APP}, 
{\b CSLibrary.Constants.FwUpdateFlags.NVMEM_UPDATE_APP_TEST}
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Firmware Update flags }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b CSLibrary.Constants.GPIOTrigger} : byte \{ {\b CSLibrary.Constants.GPIOTrigger.OFF}, 
{\b CSLibrary.Constants.GPIOTrigger.RAISING_EDGE}, 
{\b CSLibrary.Constants.GPIOTrigger.FALLING_EDGE}, 
{\b CSLibrary.Constants.GPIOTrigger.ANY_TRIGGER}
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
GPIO Trigger flags }}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b CSLibrary.Constants.PermalockFlags} : int \{ {\b CSLibrary.Constants.PermalockFlags.SET_VALUE} = 1, 
{\b CSLibrary.Constants.PermalockFlags.GET_VALUE} = 0
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Permalock access flags }}}
\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary/RFIDReader/Constants/SelectFlags.cs File Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary/RFIDReader/Constants/SelectFlags.cs}
{\xe \v CSLibrary/RFIDReader/Constants/SelectFlags.cs}
{\bkmkstart AAAAAAAABN}
{\bkmkend AAAAAAAABN}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b CSLibrary.Constants}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumerations\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b CSLibrary.Constants.SelectFlags} \{ {\b CSLibrary.Constants.SelectFlags.ZERO} = 0x0000000, 
{\b CSLibrary.Constants.SelectFlags.SELECT} = 0x00000001, 
{\b CSLibrary.Constants.SelectFlags.POSTMATCH} = 0x00000002, 
{\b CSLibrary.Constants.SelectFlags.POST_MATCH} = 0x2, 
{\b CSLibrary.Constants.SelectFlags.DISABLE_INVENTORY} = 0x00000004, 
{\b CSLibrary.Constants.SelectFlags.READ1BANK} = 0x00000008, 
{\b CSLibrary.Constants.SelectFlags.READ2BANK} = 0x00000010, 
{\b CSLibrary.Constants.SelectFlags.UNKNOWN} = 0xffff, 
{\b CSLibrary.Constants.SelectFlags.ZERO} = 0x0000000, 
{\b CSLibrary.Constants.SelectFlags.SELECT} = 0x00000001, 
{\b CSLibrary.Constants.SelectFlags.POSTMATCH} = 0x00000002, 
{\b CSLibrary.Constants.SelectFlags.POST_MATCH} = 0x2, 
{\b CSLibrary.Constants.SelectFlags.DISABLE_INVENTORY} = 0x00000004, 
{\b CSLibrary.Constants.SelectFlags.READ1BANK} = 0x00000008, 
{\b CSLibrary.Constants.SelectFlags.READ2BANK} = 0x00000010, 
{\b CSLibrary.Constants.SelectFlags.UNKNOWN} = 0xffff
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Select Flags }}}
\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary/RFIDReader/Events/CSLibrary.Events.cs File Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary/RFIDReader/Events/CSLibrary.Events.cs}
{\xe \v CSLibrary/RFIDReader/Events/CSLibrary.Events.cs}
{\bkmkstart AAAAAAAABO}
{\bkmkend AAAAAAAABO}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CSLibrary.Events.OnReaderStateChangedEventArgs}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reader status callback event argument }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CSLibrary.Events.OnAsyncCallbackEventArgs}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inventory or tag search callback event argument }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CSLibrary.Events.OnAccessCompletedEventArgs}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tag Access Completed Argument }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CSLibrary.Events.OnStateChangedEventArgs}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reader Operation changed EventArgs }}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b CSLibrary.Events}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumerations\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b CSLibrary.Events.AntennaSequenceMode} \{ {\b CSLibrary.Events.AntennaSequenceMode.NORMAL}, 
{\b CSLibrary.Events.AntennaSequenceMode.SEQUENCE}, 
{\b CSLibrary.Events.AntennaSequenceMode.SMART_CHECK}, 
{\b CSLibrary.Events.AntennaSequenceMode.SEQUENCE_SMART_CHECK}, 
{\b CSLibrary.Events.AntennaSequenceMode.UNKNOWN} = 0x4
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
AntennaSequenceMode }}}
\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary/RFIDReader/Structures/CSLibrary.Structures.cs File Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary/RFIDReader/Structures/CSLibrary.Structures.cs}
{\xe \v CSLibrary/RFIDReader/Structures/CSLibrary.Structures.cs}
{\bkmkstart AAAAAAAABP}
{\bkmkend AAAAAAAABP}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b CSLibrary.Structures.TAG_ACCESS_PKT}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tag Access Packet }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b CSLibrary.Structures.INVENTORY_PKT}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tag Access Packet }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CSLibrary.Structures.TagCallbackInfo}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tag Callback Information }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CSLibrary.Structures.S_EPC}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Electronic Product Code }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CSLibrary.Structures.S_PC}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Protocol Control(must be 2 Bytes) }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CSLibrary.Structures.S_XPC_W1}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
X Protocol Control W1 (must be 2 Bytes) }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CSLibrary.Structures.S_XPC_W2}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
X Protocol Control W2 (must be 2 Bytes) }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CSLibrary.Structures.S_TID}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
TID }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CSLibrary.Structures.S_PWD}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Custom Password Structure }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CSLibrary.Structures.S_DATA}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Custom Data Structure }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
interface {\b CSLibrary.Structures.IBANK}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b CSLibrary.Structures.S_MASK}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Custom Data Structure }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CSLibrary.Structures.TagInventoryParms}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The ISO 18000-6C tag-inventory operation parameters }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CSLibrary.Structures.TagRangingParms}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
this parms is same as inventory parms }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CSLibrary.Structures.TagSearchingParms}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
search one tag parms }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CSLibrary.Structures.CarrierWaveParms}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Carrier wave parms }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CSLibrary.Structures.CSLibraryOperationParms}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Operation Paramemter }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b CSLibrary.Structures.FrequencyBandParms}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Frequency Band Parms }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b CSLibrary.Structures.TemperatureParms}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Temperature Parms }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b CSLibrary.Structures.ThresholdTemperatureParms}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b ThresholdTemperatureParms} }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b CSLibrary.Structures.DEVICE_STATUS}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RFID Device Status {\b Structures} }}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b CSLibrary.Structures}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumerations\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b CSLibrary.Structures.QTMode} \{ {\b CSLibrary.Structures.QTMode.PermPublic}, 
{\b CSLibrary.Structures.QTMode.TempPublic}, 
{\b CSLibrary.Structures.QTMode.PermPrivate}, 
{\b CSLibrary.Structures.QTMode.TempPrivate}
 \}{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
QT Mode }}}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
delegate bool {\b CSLibrary.Structures.GPI_INTERRUPT_CALLBACK} (String ip, int GPI0, int GPI1)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
GPI Interrupt callback }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
delegate bool {\b CSLibrary.Structures.TagAccessCallbackDelegate} (TAG_ACCESS_PKT pkt)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tag access callback }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
delegate bool {\b CSLibrary.Structures.InventoryCallbackDelegate} (INVENTORY_PKT pkt)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tag access callback }{
}\par
}}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary/RFIDReader/Structures/CSLibrary.Structures.TagKill.cs File Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary/RFIDReader/Structures/CSLibrary.Structures.TagKill.cs}
{\xe \v CSLibrary/RFIDReader/Structures/CSLibrary.Structures.TagKill.cs}
{\bkmkstart AAAAAAAABQ}
{\bkmkend AAAAAAAABQ}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CSLibrary.Structures.TagKillParms}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tag Kill structure, configure this before do tag kill }}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b CSLibrary.Structures}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary/RFIDReader/Structures/CSLibrary.Structures.TagLock.cs File Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary/RFIDReader/Structures/CSLibrary.Structures.TagLock.cs}
{\xe \v CSLibrary/RFIDReader/Structures/CSLibrary.Structures.TagLock.cs}
{\bkmkstart AAAAAAAABR}
{\bkmkend AAAAAAAABR}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CSLibrary.Structures.TagLockParms}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tag lock structure, configure this before do tag lock }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CSLibrary.Structures.TagBlockPermalockParms}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
block lock structure, configure this before do block lock }}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b CSLibrary.Structures}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary/RFIDReader/Structures/CSLibrary.Structures.TagRead.cs File Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary/RFIDReader/Structures/CSLibrary.Structures.TagRead.cs}
{\xe \v CSLibrary/RFIDReader/Structures/CSLibrary.Structures.TagRead.cs}
{\bkmkstart AAAAAAAABS}
{\bkmkend AAAAAAAABS}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CSLibrary.Structures.TagReadEpcParms}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Read EPC structures, configure this before read current EPC }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CSLibrary.Structures.TagReadPcParms}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Read PC structures, configure this before read current PC }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CSLibrary.Structures.TagReadTidParms}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Read TID structures, configure this before read current TID }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CSLibrary.Structures.TagReadPwdParms}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Read password structures, configure this before read current password }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CSLibrary.Structures.TagReadUserParms}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Read User memory structures, configure this before read current User memory }}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b CSLibrary.Structures}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary/RFIDReader/Structures/CSLibrary.Structures.TagWrite.cs File Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary/RFIDReader/Structures/CSLibrary.Structures.TagWrite.cs}
{\xe \v CSLibrary/RFIDReader/Structures/CSLibrary.Structures.TagWrite.cs}
{\bkmkstart AAAAAAAABT}
{\bkmkend AAAAAAAABT}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CSLibrary.Structures.TagWritePcParms}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Write PC structures, configure this before write new PC value }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CSLibrary.Structures.TagWriteEpcParms}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Write EPC structures, configure this before write new EPC value }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CSLibrary.Structures.TagWritePwdParms}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Write password structures, configure this before write new password value }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CSLibrary.Structures.TagWriteUserParms}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Write User structures, configure this before write new user data }}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b CSLibrary.Structures}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary/RFIDReader/Structures/Intel.Structures.cs File Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary/RFIDReader/Structures/Intel.Structures.cs}
{\xe \v CSLibrary/RFIDReader/Structures/Intel.Structures.cs}
{\bkmkstart AAAAAAAABU}
{\bkmkend AAAAAAAABU}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CSLibrary.Structures.Version}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Version} Structure }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CSLibrary.Structures.LibraryVersion}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Library {\b Version} Structure }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CSLibrary.Structures.DriverVersion}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Driver {\b Version} Structure }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CSLibrary.Structures.MacVersion}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mac {\b Version} Structure }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CSLibrary.Structures.RadioInformation}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
When detecting the attached RFID radio modules, the structures for retrieving the information for the attached RFID radio modules are as follows: }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CSLibrary.Structures.ProfileConfig}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Link Profile Configuration Structure }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CSLibrary.Structures.RadioLinkProfileConfig}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CSLibrary.Structures.RadioLinkProfile}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b RadioLinkProfile} Structure }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CSLibrary.Structures.AntennaPortStatus}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The structure used to retrieve the status for a logical antenna port is defined as follows: }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CSLibrary.Structures.AntennaPortConfig}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
When configuring or retrieving the configuration for logical antenna ports, an application has several parameters that it can set/retrieve. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CSLibrary.Structures.SelectMask}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The tag mask is used to specify a bit pattern that is used to match against one of a tag's memory banks to determine if it is matching or non-matching. A mask is a combination of a memory bank and a sequence of bits that will be matched at the specified offset within the chosen memory bank. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CSLibrary.Structures.SelectAction}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The partitioning of tags into disjoint groups is accomplished by applying actions to the tags that match and/or do not match the specified mask. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CSLibrary.Structures.SelectCriterion}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Together, the selection mask and selection action form a single selection criterion. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CSLibrary.Structures.SelectCriteria}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tag-selection criteria }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CSLibrary.Structures.SingulationMask}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The post-singulation match mask is used to specify a bit pattern of up to 496 bits that is used to match against the EPC backscattered by a tag during singulation to determine if a tag is matching or non-matching. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CSLibrary.Structures.SingulationCriterion}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Together, the selection mask and an indication if the application is interested in matching or non-matching tags form a single post-singulation match criterion. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CSLibrary.Structures.SingulationCriteria}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Post-singulation match criteria can be grouped together using the following: }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CSLibrary.Structures.TagGroup}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A class that specifies the tag group that will have a subsequent tag-protocol operation applied to it. This parameter must not be NULL. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CSLibrary.Structures.SingulationAlgorithmParms}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b SingulationAlgorithmParms} }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CSLibrary.Structures.FixedQParms}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The parameters for the fixed-Q algorithm, MAC singulation algorithm 0, (i.e., RFID_18K6C_SINGULATION_ALGORITHM_FIXEDQ) }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CSLibrary.Structures.DynamicQParms}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The parameters for the dynamic-Q algorithm, MAC singulation algorithm 3, (i.e., RFID_18K6C_SINGULATION_ALGORITHM_DYNAMICQ) }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CSLibrary.Structures.QueryParms}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Once the tag population has been partitioned into disjoint groups, a subsequent tag-protocol operation (i.e., an inventory operation or access command) is then applied to one of the tag groups. A tag group is specified using the following: }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b CSLibrary.Structures.CommonParms}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
All tag-protocol operation functions share a common set of parameters. These parameters are gathered in one place for convenience. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b CSLibrary.Structures.TagPerm}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A structure that contains the access permissions to be set for the tag. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CSLibrary.Structures.NonVolatileMemoryBlock}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The ISO 18000-6C tag-lock operation lock specific command parameters. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CSLibrary.Structures.InternalTagInventoryParms}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CSLibrary.Structures.InternalTagSearchOneParms}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CSLibrary.Structures.InternalTagRangingParms}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CSLibrary.Structures.InternalTagReadProtectParms}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CSLibrary.Structures.InternalCustCmdTagReadProtectParms}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CSLibrary.Structures.TagSelectedParms}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Selected tag parameters, configure this before any specific tag operation }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CSLibrary.Structures.TagGeneralSelectedParms}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Selected tag parameters, configure this before any specific tag operation }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CSLibrary.Structures.TagPostMachParms}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Post match tag parameters, configure this before any specific tag operation }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CSLibrary.Structures.TagReadProtectParms}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b TagReadProtectParms} }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CSLibrary.Structures.InternalCustCmdEASParms}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b CSLibrary}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b CSLibrary.Structures}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary/SiliconLabIC/ClassEvent.cs File Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary/SiliconLabIC/ClassEvent.cs}
{\xe \v CSLibrary/SiliconLabIC/ClassEvent.cs}
{\bkmkstart AAAAAAAABV}
{\bkmkend AAAAAAAABV}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CSLibrary.SiliconLabIC}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CSLibrary.SiliconLabIC.Constants}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CSLibrary.SiliconLabIC.Events}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CSLibrary.SiliconLabIC.Events.OnAccessCompletedEventArgs}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b CSLibrary}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary/SiliconLabIC/ClassSiliconLabIC.cs File Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary/SiliconLabIC/ClassSiliconLabIC.cs}
{\xe \v CSLibrary/SiliconLabIC/ClassSiliconLabIC.cs}
{\bkmkstart AAAAAAAABW}
{\bkmkend AAAAAAAABW}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CSLibrary.SiliconLabIC}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CSLibrary.SiliconLabIC.DOWNLINKCMD}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b CSLibrary}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary/Tools/ClassCRC16.cs File Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary/Tools/ClassCRC16.cs}
{\xe \v CSLibrary/Tools/ClassCRC16.cs}
{\bkmkstart AAAAAAAABX}
{\bkmkend AAAAAAAABX}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CSLibrary.Tools.Crc}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b CSLibrary.Tools}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary/Tools/ClassFIFIQueue.cs File Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary/Tools/ClassFIFIQueue.cs}
{\xe \v CSLibrary/Tools/ClassFIFIQueue.cs}
{\bkmkstart AAAAAAAABY}
{\bkmkend AAAAAAAABY}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CSLibrary.Tools.Queue}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b CSLibrary.Tools}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary/Tools/ClassHex.cs File Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary/Tools/ClassHex.cs}
{\xe \v CSLibrary/Tools/ClassHex.cs}
{\bkmkstart AAAAAAAABZ}
{\bkmkend AAAAAAAABZ}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CSLibrary.Tools.Hex}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
For Backward Compatibility }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CSLibrary.Tools.HexEncoding}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Summary description for {\b HexEncoding}. }}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b CSLibrary.Tools}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary/Tools/ClassTimer.cs File Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary/Tools/ClassTimer.cs}
{\xe \v CSLibrary/Tools/ClassTimer.cs}
{\bkmkstart AAAAAAAACA}
{\bkmkend AAAAAAAACA}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CSLibrary.Timer}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b CSLibrary}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSLibrary/Tools/ClassTrace.cs File Reference\par \pard\plain 
{\tc\tcl2 \v CSLibrary/Tools/ClassTrace.cs}
{\xe \v CSLibrary/Tools/ClassTrace.cs}
{\bkmkstart AAAAAAAACB}
{\bkmkend AAAAAAAACB}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid Index\par 
\pard\plain 
{\tc \v Index}
{\field\fldedit {\*\fldinst INDEX \\c2 \\*MERGEFORMAT}{\fldrslt INDEX}}
}